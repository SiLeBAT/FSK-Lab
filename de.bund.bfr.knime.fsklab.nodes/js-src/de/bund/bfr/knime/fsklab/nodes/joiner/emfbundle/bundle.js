function createEMFForm(){
	(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){
		require('babel-polyfill');
		var React = window.React,
		reactDomFactories = require('react-dom-factories'),
		jsonformreact = 		 require('@jsonforms/react'),
		react_redux = require('react-redux'),
		connect = react_redux.connect;
		DOM = reactDomFactories.DOM, div = reactDomFactories.div, button = reactDomFactories.button, ul = reactDomFactories.ul, li = reactDomFactories.li

		// This is just a simple example of a component that can be rendered on both
		// the server and browser
		var createReactClass = require('create-react-class'),
		 JsonForms= jsonformreact.JsonForms

		module.exports = createReactClass({
		  //
		  // We initialise its state by using the `props` that were passed in when it
		  // was first rendered. We also want the button to be disabled until the
		  // component has fully mounted on the DOM
		  //getInitialState: function() {
			//console.log('hiiii');
		    //return {items: this.props.items, disabled: true}
		  //},

		  // Once the component has been mounted, we can enable the button
		  //componentDidMount: function() {
		    //this.setState({disabled: false})
		  //},

		  // Then we just update the state whenever its clicked by adding a new item to
		  // the list - but you could imagine this being updated with the results of
		  // AJAX calls, etc
		  //handleClick: function() {
		   // this.setState({
		     // items: this.state.items.concat('Item ' + this.state.items.length)
		   // })
		  //},

		  // For ease of illustration, we just use the React JS methods directly
		  // (no JSX compilation needed)
		  // Note that we allow the button to be disabled initially, and then enable it
		  // when everything has loaded
		  render: function() {
			  var form = React.createFactory(JsonForms);
			  var x = div({className:'demoform'},form());
			  //connect(mapStateToProps, null)(app);
			  return x;
				    
		    /*return div(null,

		      button({onClick: this.handleClick, disabled: this.state.disabled}, 'Add Item'),

		      ul({children: this.state.items.map(function(item) {
		        return li(null, item)
		      })})

		    )*/
		  }
		})

		},{"@jsonforms/react":132,"babel-polyfill":179,"create-react-class":646,"react-dom-factories":967,"react-redux":991}],2:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "name": {
		      "type": "string"
		    },
		    "description": {
		      "type": "string"
		    },
		    "moisturePercentage": {
		      "type": "string"
		    },
		    "fatPercentage": {
		      "type": "string"
		    },
		    "detectionLimit": {
		      "type": "string"
		    },
		    "quantificationLimit": {
		      "type": "string"
		    },
		    "leftCensoredData": {
		      "type": "string"
		    },
		    "contaminationRange": {
		      "type": "string"
		    },
		    "uncertaintyValue": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],3:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Name",
		      "scope": "#/properties/name"
		    },
		    {
		      "type": "Control",
		      "label": "Description",
		      "scope": "#/properties/description"
		    },
		    {
		      "type": "Control",
		      "label": "Moisture Percentage",
		      "scope": "#/properties/moisturePercentage"
		    },
		    {
		      "type": "Control",
		      "label": "Fat Percentage",
		      "scope": "#/properties/fatPercentage"
		    },
		    {
		      "type": "Control",
		      "label": "Detection Limit",
		      "scope": "#/properties/detectionLimit"
		    },
		    {
		      "type": "Control",
		      "label": "Quantification Limit",
		      "scope": "#/properties/quantificationLimit"
		    },
		    {
		      "type": "Control",
		      "label": "Left Censored Data",
		      "scope": "#/properties/leftCensoredData"
		    },
		    {
		      "type": "Control",
		      "label": "Contamination Range",
		      "scope": "#/properties/contaminationRange"
		    },
		    {
		      "type": "Control",
		      "label": "Uncertainty Value",
		      "scope": "#/properties/uncertaintyValue"
		    }
		  ]
		}
		},{}],4:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "country": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],5:[function(require,module,exports){
		module.exports={
		  "type": "Control",
		  "label": "Country",
		  "scope": "#/properties/country"
		}
		},{}],6:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "Title": {
		      "type": "string"
		    },
		    "familyName": {
		      "type": "string"
		    },
		    "email": {
		      "type": "string"
		    },
		    "telephone": {
		      "type": "string"
		    },
		    "streetAddress": {
		      "type": "string"
		    },
		    "extendedAddress": {
		      "type": "string"
		    },
		    "country": {
		      "type": "string"
		    },
		    "city": {
		      "type": "string"
		    },
		    "ZIPCode": {
		      "type": "string"
		    },
		    "postOfficeBox": {
		      "type": "string"
		    },
		    "region": {
		      "type": "string"
		    },
		    "nickName": {
		      "type": "string"
		    },
		    "timeZone": {
		      "type": "string"
		    },
		    "gender": {
		      "type": "string"
		    },
		    "name": {
		      "type": "string"
		    },
		    "url": {
		      "type": "string"
		    },
		    "note": {
		      "type": "string"
		    },
		    "logo": {
		      "type": "string"
		    },
		    "organization": {
		      "type": "string"
		    },
		    "fn": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false,
		  "required": [
		    "email"
		  ]
		}
		},{}],7:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Title",
		      "scope": "#/properties/Title"
		    },
		    {
		      "type": "Control",
		      "label": "Family Name",
		      "scope": "#/properties/familyName"
		    },
		    {
		      "type": "Control",
		      "label": "Email",
		      "scope": "#/properties/email"
		    },
		    {
		      "type": "Control",
		      "label": "Telephone",
		      "scope": "#/properties/telephone"
		    },
		    {
		      "type": "Control",
		      "label": "Street Address",
		      "scope": "#/properties/streetAddress"
		    },
		    {
		      "type": "Control",
		      "label": "Extended Address",
		      "scope": "#/properties/extendedAddress"
		    },
		    {
		      "type": "Control",
		      "label": "Country",
		      "scope": "#/properties/country"
		    },
		    {
		      "type": "Control",
		      "label": "City",
		      "scope": "#/properties/city"
		    },
		    {
		      "type": "Control",
		      "label": "ZIP Code",
		      "scope": "#/properties/ZIPCode"
		    },
		    {
		      "type": "Control",
		      "label": "Post Office Box",
		      "scope": "#/properties/postOfficeBox"
		    },
		    {
		      "type": "Control",
		      "label": "Region",
		      "scope": "#/properties/region"
		    },
		    {
		      "type": "Control",
		      "label": "Nick Name",
		      "scope": "#/properties/nickName"
		    },
		    {
		      "type": "Control",
		      "label": "Time Zone",
		      "scope": "#/properties/timeZone"
		    },
		    {
		      "type": "Control",
		      "label": "Gender",
		      "scope": "#/properties/gender"
		    },
		    {
		      "type": "Control",
		      "label": "Name",
		      "scope": "#/properties/name"
		    },
		    {
		      "type": "Control",
		      "label": "Url",
		      "scope": "#/properties/url"
		    },
		    {
		      "type": "Control",
		      "label": "Note",
		      "scope": "#/properties/note"
		    },
		    {
		      "type": "Control",
		      "label": "Logo",
		      "scope": "#/properties/logo"
		    },
		    {
		      "type": "Control",
		      "label": "Organization",
		      "scope": "#/properties/organization"
		    },
		    {
		      "type": "Control",
		      "label": "Fn",
		      "scope": "#/properties/fn"
		    }
		  ]
		}
		},{}],8:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "study": {
		      "type": "object",
		      "properties": {
		        "title": {
		          "type": "string"
		        },
		        "description": {
		          "type": "string"
		        },
		        "designType": {
		          "type": "string"
		        },
		        "measurementType": {
		          "type": "string"
		        },
		        "technologyType": {
		          "type": "string"
		        },
		        "technologyPlatform": {
		          "type": "string"
		        },
		        "accreditationProcedure": {
		          "type": "string"
		        },
		        "protocolName": {
		          "type": "string"
		        },
		        "protocolType": {
		          "type": "string"
		        },
		        "protocolDescription": {
		          "type": "string"
		        },
		        "protocolUri": {
		          "type": "string"
		        },
		        "protocolVersion": {
		          "type": "string"
		        },
		        "parametersName": {
		          "type": "string"
		        },
		        "componentsName": {
		          "type": "string"
		        },
		        "componentsType": {
		          "type": "string"
		        }
		      },
		      "additionalProperties": false
		    },
		    "studysample": {
		      "type": "object",
		      "properties": {
		        "sample": {
		          "type": "string"
		        },
		        "collectionProtocol": {
		          "type": "string"
		        },
		        "samplingStrategy": {
		          "type": "string"
		        },
		        "samplingProgramType": {
		          "type": "string"
		        },
		        "samplingMethod": {
		          "type": "string"
		        },
		        "samplingPlan": {
		          "type": "string"
		        },
		        "samplingWeight": {
		          "type": "string"
		        },
		        "samplingSize": {
		          "type": "string"
		        },
		        "lotSizeUnit": {
		          "type": "string"
		        }
		      },
		      "additionalProperties": false
		    },
		    "dietaryassessmentmethod": {
		      "type": "object",
		      "properties": {
		        "collectionTool": {
		          "type": "string"
		        },
		        "numberOfNonConsecutiveOneDay": {
		          "type": "integer"
		        },
		        "softwareTool": {
		          "type": "string"
		        },
		        "numberOfFoodItems": {
		          "type": "string"
		        },
		        "recordTypes": {
		          "type": "string"
		        },
		        "foodDescriptors": {
		          "type": "string"
		        }
		      },
		      "additionalProperties": false
		    },
		    "laboratory": {
		      "type": "object",
		      "properties": {
		        "accreditation": {
		          "type": "string"
		        },
		        "name": {
		          "type": "string"
		        },
		        "country": {
		          "type": "string"
		        }
		      },
		      "additionalProperties": false
		    },
		    "assay": {
		      "type": "object",
		      "properties": {
		        "name": {
		          "type": "string"
		        },
		        "description": {
		          "type": "string"
		        },
		        "moisturePercentage": {
		          "type": "string"
		        },
		        "fatPercentage": {
		          "type": "string"
		        },
		        "detectionLimit": {
		          "type": "string"
		        },
		        "quantificationLimit": {
		          "type": "string"
		        },
		        "leftCensoredData": {
		          "type": "string"
		        },
		        "contaminationRange": {
		          "type": "string"
		        },
		        "uncertaintyValue": {
		          "type": "string"
		        }
		      },
		      "additionalProperties": false
		    }
		  },
		  "additionalProperties": false
		}
		},{}],9:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Study",
		      "scope": "#/properties/study"
		    },
		    {
		      "type": "Control",
		      "label": "Studysample",
		      "scope": "#/properties/studysample"
		    },
		    {
		      "type": "Control",
		      "label": "Dietaryassessmentmethod",
		      "scope": "#/properties/dietaryassessmentmethod"
		    },
		    {
		      "type": "Control",
		      "label": "Laboratory",
		      "scope": "#/properties/laboratory"
		    },
		    {
		      "type": "Control",
		      "label": "Assay",
		      "scope": "#/properties/assay"
		    }
		  ]
		}
		},{}],10:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "collectionTool": {
		      "type": "string"
		    },
		    "numberOfNonConsecutiveOneDay": {
		      "type": "integer"
		    },
		    "softwareTool": {
		      "type": "string"
		    },
		    "numberOfFoodItems": {
		      "type": "string"
		    },
		    "recordTypes": {
		      "type": "string"
		    },
		    "foodDescriptors": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],11:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Collection Tool",
		      "scope": "#/properties/collectionTool"
		    },
		    {
		      "type": "Control",
		      "label": "Number Of Non Consecutive One Day",
		      "scope": "#/properties/numberOfNonConsecutiveOneDay"
		    },
		    {
		      "type": "Control",
		      "label": "Software Tool",
		      "scope": "#/properties/softwareTool"
		    },
		    {
		      "type": "Control",
		      "label": "Number Of Food Items",
		      "scope": "#/properties/numberOfFoodItems"
		    },
		    {
		      "type": "Control",
		      "label": "Record Types",
		      "scope": "#/properties/recordTypes"
		    },
		    {
		      "type": "Control",
		      "label": "Food Descriptors",
		      "scope": "#/properties/foodDescriptors"
		    }
		  ]
		}
		},{}],12:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "event": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],13:[function(require,module,exports){
		module.exports={
		  "type": "Control",
		  "label": "Event",
		  "scope": "#/properties/event"
		}
		},{}],14:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "treatment": {
		      "type": "string"
		    },
		    "contaminationLevel": {
		      "type": "string"
		    },
		    "exposureType": {
		      "type": "string"
		    },
		    "scenario": {
		      "type": "string"
		    },
		    "uncertaintyEstimation": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],15:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Treatment",
		      "scope": "#/properties/treatment"
		    },
		    {
		      "type": "Control",
		      "label": "Contamination Level",
		      "scope": "#/properties/contaminationLevel"
		    },
		    {
		      "type": "Control",
		      "label": "Exposure Type",
		      "scope": "#/properties/exposureType"
		    },
		    {
		      "type": "Control",
		      "label": "Scenario",
		      "scope": "#/properties/scenario"
		    },
		    {
		      "type": "Control",
		      "label": "Uncertainty Estimation",
		      "scope": "#/properties/uncertaintyEstimation"
		    }
		  ]
		}
		},{}],16:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "name": {
		      "type": "string"
		    },
		    "source": {
		      "type": "string"
		    },
		    "identifier": {
		      "type": "string"
		    },
		    "creationDate": {
		      "type": "string",
		      "format": "date-time"
		    },
		    "rights": {
		      "type": "string"
		    },
		    "available": {
		      "type": "boolean"
		    },
		    "format": {
		      "type": "string"
		    },
		    "language": {
		      "type": "string"
		    },
		    "software": {
		      "type": "string"
		    },
		    "languageWrittenIn": {
		      "type": "string"
		    },
		    "status": {
		      "type": "string"
		    },
		    "objective": {
		      "type": "string"
		    },
		    "description": {
		      "type": "string"
		    },
		    "creators": {
		      "type": "array",
		      "items": {
		        "type": "object",
		        "properties": {
		          "Title": {
		            "type": "string"
		          },
		          "familyName": {
		            "type": "string"
		          },
		          "email": {
		            "type": "string"
		          },
		          "telephone": {
		            "type": "string"
		          },
		          "streetAddress": {
		            "type": "string"
		          },
		          "extendedAddress": {
		            "type": "string"
		          },
		          "country": {
		            "type": "string"
		          },
		          "city": {
		            "type": "string"
		          },
		          "ZIPCode": {
		            "type": "string"
		          },
		          "postOfficeBox": {
		            "type": "string"
		          },
		          "region": {
		            "type": "string"
		          },
		          "nickName": {
		            "type": "string"
		          },
		          "timeZone": {
		            "type": "string"
		          },
		          "gender": {
		            "type": "string"
		          },
		          "name": {
		            "type": "string"
		          },
		          "url": {
		            "type": "string"
		          },
		          "note": {
		            "type": "string"
		          },
		          "logo": {
		            "type": "string"
		          },
		          "organization": {
		            "type": "string"
		          },
		          "fn": {
		            "type": "string"
		          }
		        },
		        "additionalProperties": false,
		        "required": [
		          "email"
		        ]
		      }
		    },
		    "modelcategory": {
		      "type": "array",
		      "items": {
		        "type": "object",
		        "properties": {
		          "modelClass": {
		            "type": "string"
		          },
		          "modelSubClass": {
		            "type": "array",
		            "items": {
		              "type": "string"
		            }
		          },
		          "modelClassComment": {
		            "type": "string"
		          },
		          "basicProcess": {
		            "type": "string"
		          }
		        },
		        "additionalProperties": false,
		        "required": [
		          "modelClass"
		        ]
		      }
		    },
		    "modificationdate": {
		      "type": "array",
		      "items": {
		        "type": "object",
		        "properties": {
		          "modificationDate": {
		            "type": "string",
		            "format": "date-time"
		          }
		        },
		        "additionalProperties": false
		      }
		    }
		  },
		  "additionalProperties": false,
		  "required": [
		    "name",
		    "identifier",
		    "rights"
		  ]
		}
		},{}],17:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Name",
		      "scope": "#/properties/name"
		    },
		    {
		      "type": "Control",
		      "label": "Source",
		      "scope": "#/properties/source"
		    },
		    {
		      "type": "Control",
		      "label": "Identifier",
		      "scope": "#/properties/identifier"
		    },
		    {
		      "type": "Control",
		      "label": "Creation Date",
		      "scope": "#/properties/creationDate"
		    },
		    {
		      "type": "Control",
		      "label": "Rights",
		      "scope": "#/properties/rights"
		    },
		    {
		      "type": "Control",
		      "label": "Available",
		      "scope": "#/properties/available"
		    },
		    {
		      "type": "Control",
		      "label": "Format",
		      "scope": "#/properties/format"
		    },
		    {
		      "type": "Control",
		      "label": "Language",
		      "scope": "#/properties/language"
		    },
		    {
		      "type": "Control",
		      "label": "Software",
		      "scope": "#/properties/software"
		    },
		    {
		      "type": "Control",
		      "label": "Language Written In",
		      "scope": "#/properties/languageWrittenIn"
		    },
		    {
		      "type": "Control",
		      "label": "Status",
		      "scope": "#/properties/status"
		    },
		    {
		      "type": "Control",
		      "label": "Objective",
		      "scope": "#/properties/objective"
		    },
		    {
		      "type": "Control",
		      "label": "Description",
		      "scope": "#/properties/description"
		    },
		    {
		      "type": "Control",
		      "label": "Creators",
		      "scope": "#/properties/creators"
		    },
		    {
		      "type": "Control",
		      "label": "Modelcategory",
		      "scope": "#/properties/modelcategory"
		    },
		    {
		      "type": "Control",
		      "label": "Modificationdate",
		      "scope": "#/properties/modificationdate"
		    }
		  ]
		}
		},{}],18:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "hazardType": {
		      "type": "string"
		    },
		    "hazardName": {
		      "type": "string"
		    },
		    "hazardDescription": {
		      "type": "string"
		    },
		    "hazardUnit": {
		      "type": "string"
		    },
		    "adverseEffect": {
		      "type": "string"
		    },
		    "sourceOfContamination": {
		      "type": "string"
		    },
		    "bmd": {
		      "type": "string"
		    },
		    "mrl": {
		      "type": "string"
		    },
		    "noael": {
		      "type": "string"
		    },
		    "loael": {
		      "type": "string"
		    },
		    "aoel": {
		      "type": "string"
		    },
		    "ard": {
		      "type": "string"
		    },
		    "adi": {
		      "type": "string"
		    },
		    "hazardIndSum": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],19:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Hazard Type",
		      "scope": "#/properties/hazardType"
		    },
		    {
		      "type": "Control",
		      "label": "Hazard Name",
		      "scope": "#/properties/hazardName"
		    },
		    {
		      "type": "Control",
		      "label": "Hazard Description",
		      "scope": "#/properties/hazardDescription"
		    },
		    {
		      "type": "Control",
		      "label": "Hazard Unit",
		      "scope": "#/properties/hazardUnit"
		    },
		    {
		      "type": "Control",
		      "label": "Adverse Effect",
		      "scope": "#/properties/adverseEffect"
		    },
		    {
		      "type": "Control",
		      "label": "Source Of Contamination",
		      "scope": "#/properties/sourceOfContamination"
		    },
		    {
		      "type": "Control",
		      "label": "Bmd",
		      "scope": "#/properties/bmd"
		    },
		    {
		      "type": "Control",
		      "label": "Mrl",
		      "scope": "#/properties/mrl"
		    },
		    {
		      "type": "Control",
		      "label": "Noael",
		      "scope": "#/properties/noael"
		    },
		    {
		      "type": "Control",
		      "label": "Loael",
		      "scope": "#/properties/loael"
		    },
		    {
		      "type": "Control",
		      "label": "Aoel",
		      "scope": "#/properties/aoel"
		    },
		    {
		      "type": "Control",
		      "label": "Ard",
		      "scope": "#/properties/ard"
		    },
		    {
		      "type": "Control",
		      "label": "Adi",
		      "scope": "#/properties/adi"
		    },
		    {
		      "type": "Control",
		      "label": "Hazard Ind Sum",
		      "scope": "#/properties/hazardIndSum"
		    }
		  ]
		}
		},{}],20:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "accreditation": {
		      "type": "string"
		    },
		    "name": {
		      "type": "string"
		    },
		    "country": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],21:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Accreditation",
		      "scope": "#/properties/accreditation"
		    },
		    {
		      "type": "Control",
		      "label": "Name",
		      "scope": "#/properties/name"
		    },
		    {
		      "type": "Control",
		      "label": "Country",
		      "scope": "#/properties/country"
		    }
		  ]
		}
		},{}],22:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "modelClass": {
		      "type": "string"
		    },
		    "modelSubClass": {
		      "type": "array",
		      "items": {
		        "type": "string"
		      }
		    },
		    "modelClassComment": {
		      "type": "string"
		    },
		    "basicProcess": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false,
		  "required": [
		    "modelClass"
		  ]
		}
		},{}],23:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Model Class",
		      "scope": "#/properties/modelClass"
		    },
		    {
		      "type": "Control",
		      "label": "Model Sub Class",
		      "scope": "#/properties/modelSubClass"
		    },
		    {
		      "type": "Control",
		      "label": "Model Class Comment",
		      "scope": "#/properties/modelClassComment"
		    },
		    {
		      "type": "Control",
		      "label": "Basic Process",
		      "scope": "#/properties/basicProcess"
		    }
		  ]
		}
		},{}],24:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "equationName": {
		      "type": "string"
		    },
		    "equationClass": {
		      "type": "string"
		    },
		    "equation": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],25:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Equation Name",
		      "scope": "#/properties/equationName"
		    },
		    {
		      "type": "Control",
		      "label": "Equation Class",
		      "scope": "#/properties/equationClass"
		    },
		    {
		      "type": "Control",
		      "label": "Equation",
		      "scope": "#/properties/equation"
		    }
		  ]
		}
		},{}],26:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "parameter": {
		      "type": "array",
		      "items": {
		        "type": "object",
		        "properties": {
		          "id": {
		            "type": "string"
		          },
		          "name": {
		            "type": "string"
		          },
		          "description": {
		            "type": "string"
		          },
		          "type": {
		            "type": "string"
		          },
		          "unit": {
		            "type": "string"
		          },
		          "unitCategory": {
		            "type": "string"
		          },
		          "dataType": {
		            "type": "string"
		          },
		          "source": {
		            "type": "string"
		          },
		          "subject": {
		            "type": "string"
		          },
		          "distribution": {
		            "type": "string"
		          },
		          "value": {
		            "type": "string"
		          },
		          "minValue": {
		            "type": "string"
		          },
		          "maxValue": {
		            "type": "string"
		          },
		          "reference": {
		            "type": "string"
		          },
		          "variabilitySubject": {
		            "type": "string"
		          },
		          "rangeOfApplicability": {
		            "type": "string"
		          },
		          "error": {
		            "type": "number"
		          },
		          "modelapplicability": {
		            "type": "array",
		            "items": {
		              "type": "object",
		              "properties": {
		                "modelApplicability": {
		                  "type": "string"
		                }
		              },
		              "additionalProperties": false
		            }
		          },
		          "classification": {
		            "type": "string",
		            "enum": [
		              "constant",
		              "input",
		              "output"
		            ]
		          }
		        },
		        "additionalProperties": false
		      }
		    },
		    "sse": {
		      "type": "number"
		    },
		    "mse": {
		      "type": "number"
		    },
		    "rmse": {
		      "type": "number"
		    },
		    "rSquared": {
		      "type": "number"
		    },
		    "aic": {
		      "type": "number"
		    },
		    "bic": {
		      "type": "number"
		    },
		    "sensitivityAnalysis": {
		      "type": "string"
		    },
		    "fittingProcedure": {
		      "type": "string"
		    },
		    "modelequation": {
		      "type": "array",
		      "items": {
		        "type": "object",
		        "properties": {
		          "equationName": {
		            "type": "string"
		          },
		          "equationClass": {
		            "type": "string"
		          },
		          "equation": {
		            "type": "string"
		          }
		        },
		        "additionalProperties": false
		      }
		    },
		    "exposure": {
		      "type": "object",
		      "properties": {
		        "treatment": {
		          "type": "string"
		        },
		        "contaminationLevel": {
		          "type": "string"
		        },
		        "exposureType": {
		          "type": "string"
		        },
		        "scenario": {
		          "type": "string"
		        },
		        "uncertaintyEstimation": {
		          "type": "string"
		        }
		      },
		      "additionalProperties": false
		    },
		    "event": {
		      "type": "array",
		      "items": {
		        "type": "object",
		        "properties": {
		          "event": {
		            "type": "string"
		          }
		        },
		        "additionalProperties": false
		      }
		    }
		  },
		  "additionalProperties": false
		}
		},{}],27:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Parameter",
		      "scope": "#/properties/parameter"
		    },
		    {
		      "type": "Control",
		      "label": "Sse",
		      "scope": "#/properties/sse"
		    },
		    {
		      "type": "Control",
		      "label": "Mse",
		      "scope": "#/properties/mse"
		    },
		    {
		      "type": "Control",
		      "label": "Rmse",
		      "scope": "#/properties/rmse"
		    },
		    {
		      "type": "Control",
		      "label": "RSquared",
		      "scope": "#/properties/rSquared"
		    },
		    {
		      "type": "Control",
		      "label": "Aic",
		      "scope": "#/properties/aic"
		    },
		    {
		      "type": "Control",
		      "label": "Bic",
		      "scope": "#/properties/bic"
		    },
		    {
		      "type": "Control",
		      "label": "Sensitivity Analysis",
		      "scope": "#/properties/sensitivityAnalysis"
		    },
		    {
		      "type": "Control",
		      "label": "Fitting Procedure",
		      "scope": "#/properties/fittingProcedure"
		    },
		    {
		      "type": "Control",
		      "label": "Modelequation",
		      "scope": "#/properties/modelequation"
		    },
		    {
		      "type": "Control",
		      "label": "Exposure",
		      "scope": "#/properties/exposure"
		    },
		    {
		      "type": "Control",
		      "label": "Event",
		      "scope": "#/properties/event"
		    }
		  ]
		}
		},{}],28:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "modificationDate": {
		      "type": "string",
		      "format": "date-time"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],29:[function(require,module,exports){
		module.exports={
		  "type": "Control",
		  "label": "Modification Date",
		  "scope": "#/properties/modificationDate"
		}
		},{}],30:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "id": {
		      "type": "string"
		    },
		    "name": {
		      "type": "string"
		    },
		    "description": {
		      "type": "string"
		    },
		    "type": {
		      "type": "string"
		    },
		    "unit": {
		      "type": "string"
		    },
		    "unitCategory": {
		      "type": "string"
		    },
		    "dataType": {
		      "type": "string"
		    },
		    "source": {
		      "type": "string"
		    },
		    "subject": {
		      "type": "string"
		    },
		    "distribution": {
		      "type": "string"
		    },
		    "value": {
		      "type": "string"
		    },
		    "minValue": {
		      "type": "string"
		    },
		    "maxValue": {
		      "type": "string"
		    },
		    "reference": {
		      "type": "string"
		    },
		    "variabilitySubject": {
		      "type": "string"
		    },
		    "rangeOfApplicability": {
		      "type": "string"
		    },
		    "error": {
		      "type": "number"
		    },
		    "modelapplicability": {
		      "type": "array",
		      "items": {
		        "type": "object",
		        "properties": {
		          "modelApplicability": {
		            "type": "string"
		          }
		        },
		        "additionalProperties": false
		      }
		    },
		    "classification": {
		      "type": "string",
		      "enum": [
		        "constant",
		        "input",
		        "output"
		      ]
		    }
		  },
		  "additionalProperties": false
		}
		},{}],31:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Id",
		      "scope": "#/properties/id"
		    },
		    {
		      "type": "Control",
		      "label": "Name",
		      "scope": "#/properties/name"
		    },
		    {
		      "type": "Control",
		      "label": "Description",
		      "scope": "#/properties/description"
		    },
		    {
		      "type": "Control",
		      "label": "Type",
		      "scope": "#/properties/type"
		    },
		    {
		      "type": "Control",
		      "label": "Unit",
		      "scope": "#/properties/unit"
		    },
		    {
		      "type": "Control",
		      "label": "Unit Category",
		      "scope": "#/properties/unitCategory"
		    },
		    {
		      "type": "Control",
		      "label": "Data Type",
		      "scope": "#/properties/dataType"
		    },
		    {
		      "type": "Control",
		      "label": "Source",
		      "scope": "#/properties/source"
		    },
		    {
		      "type": "Control",
		      "label": "Subject",
		      "scope": "#/properties/subject"
		    },
		    {
		      "type": "Control",
		      "label": "Distribution",
		      "scope": "#/properties/distribution"
		    },
		    {
		      "type": "Control",
		      "label": "Value",
		      "scope": "#/properties/value"
		    },
		    {
		      "type": "Control",
		      "label": "Min Value",
		      "scope": "#/properties/minValue"
		    },
		    {
		      "type": "Control",
		      "label": "Max Value",
		      "scope": "#/properties/maxValue"
		    },
		    {
		      "type": "Control",
		      "label": "Reference",
		      "scope": "#/properties/reference"
		    },
		    {
		      "type": "Control",
		      "label": "Variability Subject",
		      "scope": "#/properties/variabilitySubject"
		    },
		    {
		      "type": "Control",
		      "label": "Range Of Applicability",
		      "scope": "#/properties/rangeOfApplicability"
		    },
		    {
		      "type": "Control",
		      "label": "Error",
		      "scope": "#/properties/error"
		    },
		    {
		      "type": "Control",
		      "label": "Modelapplicability",
		      "scope": "#/properties/modelapplicability"
		    },
		    {
		      "type": "Control",
		      "label": "Classification",
		      "scope": "#/properties/classification"
		    }
		  ]
		}
		},{}],32:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "populationName": {
		      "type": "string"
		    },
		    "targetPopulation": {
		      "type": "string"
		    },
		    "populationSpan": {
		      "type": "string"
		    },
		    "populationDescription": {
		      "type": "string"
		    },
		    "populationAge": {
		      "type": "string"
		    },
		    "populationGender": {
		      "type": "string"
		    },
		    "bmi": {
		      "type": "string"
		    },
		    "specialDietGroups": {
		      "type": "string"
		    },
		    "patternConsumption": {
		      "type": "string"
		    },
		    "region": {
		      "type": "string"
		    },
		    "country": {
		      "type": "string"
		    },
		    "populationRiskFactor": {
		      "type": "string"
		    },
		    "season": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],33:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Population Name",
		      "scope": "#/properties/populationName"
		    },
		    {
		      "type": "Control",
		      "label": "Target Population",
		      "scope": "#/properties/targetPopulation"
		    },
		    {
		      "type": "Control",
		      "label": "Population Span",
		      "scope": "#/properties/populationSpan"
		    },
		    {
		      "type": "Control",
		      "label": "Population Description",
		      "scope": "#/properties/populationDescription"
		    },
		    {
		      "type": "Control",
		      "label": "Population Age",
		      "scope": "#/properties/populationAge"
		    },
		    {
		      "type": "Control",
		      "label": "Population Gender",
		      "scope": "#/properties/populationGender"
		    },
		    {
		      "type": "Control",
		      "label": "Bmi",
		      "scope": "#/properties/bmi"
		    },
		    {
		      "type": "Control",
		      "label": "Special Diet Groups",
		      "scope": "#/properties/specialDietGroups"
		    },
		    {
		      "type": "Control",
		      "label": "Pattern Consumption",
		      "scope": "#/properties/patternConsumption"
		    },
		    {
		      "type": "Control",
		      "label": "Region",
		      "scope": "#/properties/region"
		    },
		    {
		      "type": "Control",
		      "label": "Country",
		      "scope": "#/properties/country"
		    },
		    {
		      "type": "Control",
		      "label": "Population Risk Factor",
		      "scope": "#/properties/populationRiskFactor"
		    },
		    {
		      "type": "Control",
		      "label": "Season",
		      "scope": "#/properties/season"
		    }
		  ]
		}
		},{}],34:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "environmentName": {
		      "type": "string"
		    },
		    "environmentDescription": {
		      "type": "string"
		    },
		    "environmentUnit": {
		      "type": "string"
		    },
		    "originCountry": {
		      "type": "string"
		    },
		    "fisheriesArea": {
		      "type": "string"
		    },
		    "productionDate": {
		      "type": "string",
		      "format": "date-time"
		    },
		    "expirationDate": {
		      "type": "string",
		      "format": "date-time"
		    },
		    "productionMethod": {
		      "type": "string"
		    },
		    "packaging": {
		      "type": "string"
		    },
		    "productTreatment": {
		      "type": "string"
		    },
		    "originArea": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],35:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Environment Name",
		      "scope": "#/properties/environmentName"
		    },
		    {
		      "type": "Control",
		      "label": "Environment Description",
		      "scope": "#/properties/environmentDescription"
		    },
		    {
		      "type": "Control",
		      "label": "Environment Unit",
		      "scope": "#/properties/environmentUnit"
		    },
		    {
		      "type": "Control",
		      "label": "Origin Country",
		      "scope": "#/properties/originCountry"
		    },
		    {
		      "type": "Control",
		      "label": "Fisheries Area",
		      "scope": "#/properties/fisheriesArea"
		    },
		    {
		      "type": "Control",
		      "label": "Production Date",
		      "scope": "#/properties/productionDate"
		    },
		    {
		      "type": "Control",
		      "label": "Expiration Date",
		      "scope": "#/properties/expirationDate"
		    },
		    {
		      "type": "Control",
		      "label": "Production Method",
		      "scope": "#/properties/productionMethod"
		    },
		    {
		      "type": "Control",
		      "label": "Packaging",
		      "scope": "#/properties/packaging"
		    },
		    {
		      "type": "Control",
		      "label": "Product Treatment",
		      "scope": "#/properties/productTreatment"
		    },
		    {
		      "type": "Control",
		      "label": "Origin Area",
		      "scope": "#/properties/originArea"
		    }
		  ]
		}
		},{}],36:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.Rating = undefined;

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _react = window.React;

		var React = _interopRequireWildcard(_react);

		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

		var Rating = exports.Rating = function (_React$Component) {
		  _inherits(Rating, _React$Component);

		  function Rating(props) {
		    _classCallCheck(this, Rating);

		    var _this = _possibleConstructorReturn(this, (Rating.__proto__ || Object.getPrototypeOf(Rating)).call(this, props));

		    _this.state = {
		      rating: props.value,
		      hoverAt: null
		    };
		    return _this;
		  }

		  _createClass(Rating, [{
		    key: 'handleMouseOver',
		    value: function handleMouseOver(idx) {
		      this.setState({
		        hoverAt: idx + 1
		      });
		    }
		  }, {
		    key: 'handleMouseOut',
		    value: function handleMouseOut() {
		      this.setState({
		        hoverAt: null
		      });
		    }
		  }, {
		    key: 'handleClick',
		    value: function handleClick(idx) {
		      this.setState({
		        rating: idx + 1
		      });
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this2 = this;

		      var _onClick = this.props.onClick;


		      return React.createElement(
		        'div',
		        null,
		        [0, 1, 2, 3, 4].map(function (i) {
		          var rating = _this2.state.hoverAt != null ? _this2.state.hoverAt : _this2.state.rating;

		          return React.createElement(
		            'span',
		            { onMouseOver: function onMouseOver() {
		                return _this2.handleMouseOver(i);
		              },
		              onMouseOut: function onMouseOut() {
		                return _this2.handleMouseOut();
		              },
		              onClick: function onClick() {
		                _this2.handleClick(i);
		                _onClick({ value: i + 1 });
		              },
		              key: _this2.props.id + '_' + i
		            },
		            i < rating ? '\u2605' : '\u2606'
		          );
		        })
		      );
		    }
		  }]);

		  return Rating;
		}(React.Component);
		},{}],37:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = window.React;

		var React = _interopRequireWildcard(_react);

		var _core = require('@jsonforms/core');

		var _reactRedux = require('react-redux');

		var _Rating = require('./Rating');

		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

		var RatingControl = function RatingControl(_ref) {
		  var data = _ref.data,
		      handleChange = _ref.handleChange,
		      path = _ref.path;
		  return React.createElement(_Rating.Rating, {
		    value: data,
		    onClick: function onClick(ev) {
		      return handleChange(path, Number(ev.value));
		    }
		  });
		};

		exports.default = (0, _reactRedux.connect)(_core.mapStateToControlProps, _core.mapDispatchToControlProps)(RatingControl);
		},{"./Rating":36,"@jsonforms/core":52,"react-redux":991}],38:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "region": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],39:[function(require,module,exports){
		module.exports={
		  "type": "Control",
		  "label": "Region",
		  "scope": "#/properties/region"
		}
		},{}],40:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "generalComment": {
		      "type": "string"
		    },
		    "temporalInformation": {
		      "type": "string"
		    },
		    "product": {
		      "type": "object",
		      "properties": {
		        "environmentName": {
		          "type": "string"
		        },
		        "environmentDescription": {
		          "type": "string"
		        },
		        "environmentUnit": {
		          "type": "string"
		        },
		        "originCountry": {
		          "type": "string"
		        },
		        "fisheriesArea": {
		          "type": "string"
		        },
		        "productionDate": {
		          "type": "string",
		          "format": "date-time"
		        },
		        "expirationDate": {
		          "type": "string",
		          "format": "date-time"
		        },
		        "productionMethod": {
		          "type": "string"
		        },
		        "packaging": {
		          "type": "string"
		        },
		        "productTreatment": {
		          "type": "string"
		        },
		        "originArea": {
		          "type": "string"
		        }
		      },
		      "additionalProperties": false
		    },
		    "hazard": {
		      "type": "object",
		      "properties": {
		        "hazardType": {
		          "type": "string"
		        },
		        "hazardName": {
		          "type": "string"
		        },
		        "hazardDescription": {
		          "type": "string"
		        },
		        "hazardUnit": {
		          "type": "string"
		        },
		        "adverseEffect": {
		          "type": "string"
		        },
		        "sourceOfContamination": {
		          "type": "string"
		        },
		        "bmd": {
		          "type": "string"
		        },
		        "mrl": {
		          "type": "string"
		        },
		        "noael": {
		          "type": "string"
		        },
		        "loael": {
		          "type": "string"
		        },
		        "aoel": {
		          "type": "string"
		        },
		        "ard": {
		          "type": "string"
		        },
		        "adi": {
		          "type": "string"
		        },
		        "hazardIndSum": {
		          "type": "string"
		        }
		      },
		      "additionalProperties": false
		    },
		    "populationgroup": {
		      "type": "object",
		      "properties": {
		        "populationName": {
		          "type": "string"
		        },
		        "targetPopulation": {
		          "type": "string"
		        },
		        "populationSpan": {
		          "type": "string"
		        },
		        "populationDescription": {
		          "type": "string"
		        },
		        "populationAge": {
		          "type": "string"
		        },
		        "populationGender": {
		          "type": "string"
		        },
		        "bmi": {
		          "type": "string"
		        },
		        "specialDietGroups": {
		          "type": "string"
		        },
		        "patternConsumption": {
		          "type": "string"
		        },
		        "region": {
		          "type": "string"
		        },
		        "country": {
		          "type": "string"
		        },
		        "populationRiskFactor": {
		          "type": "string"
		        },
		        "season": {
		          "type": "string"
		        }
		      },
		      "additionalProperties": false
		    },
		    "country": {
		      "type": "array",
		      "items": {
		        "type": "object",
		        "properties": {
		          "country": {
		            "type": "string"
		          }
		        },
		        "additionalProperties": false
		      }
		    },
		    "region": {
		      "type": "array",
		      "items": {
		        "type": "object",
		        "properties": {
		          "region": {
		            "type": "string"
		          }
		        },
		        "additionalProperties": false
		      }
		    }
		  },
		  "additionalProperties": false
		}
		},{}],41:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "General Comment",
		      "scope": "#/properties/generalComment"
		    },
		    {
		      "type": "Control",
		      "label": "Temporal Information",
		      "scope": "#/properties/temporalInformation"
		    },
		    {
		      "type": "Control",
		      "label": "Product",
		      "scope": "#/properties/product"
		    },
		    {
		      "type": "Control",
		      "label": "Hazard",
		      "scope": "#/properties/hazard"
		    },
		    {
		      "type": "Control",
		      "label": "Populationgroup",
		      "scope": "#/properties/populationgroup"
		    },
		    {
		      "type": "Control",
		      "label": "Country",
		      "scope": "#/properties/country"
		    },
		    {
		      "type": "Control",
		      "label": "Region",
		      "scope": "#/properties/region"
		    }
		  ]
		}
		},{}],42:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "title": {
		      "type": "string"
		    },
		    "description": {
		      "type": "string"
		    },
		    "designType": {
		      "type": "string"
		    },
		    "measurementType": {
		      "type": "string"
		    },
		    "technologyType": {
		      "type": "string"
		    },
		    "technologyPlatform": {
		      "type": "string"
		    },
		    "accreditationProcedure": {
		      "type": "string"
		    },
		    "protocolName": {
		      "type": "string"
		    },
		    "protocolType": {
		      "type": "string"
		    },
		    "protocolDescription": {
		      "type": "string"
		    },
		    "protocolUri": {
		      "type": "string"
		    },
		    "protocolVersion": {
		      "type": "string"
		    },
		    "parametersName": {
		      "type": "string"
		    },
		    "componentsName": {
		      "type": "string"
		    },
		    "componentsType": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],43:[function(require,module,exports){
		module.exports={
		  "type": "object",
		  "properties": {
		    "sample": {
		      "type": "string"
		    },
		    "collectionProtocol": {
		      "type": "string"
		    },
		    "samplingStrategy": {
		      "type": "string"
		    },
		    "samplingProgramType": {
		      "type": "string"
		    },
		    "samplingMethod": {
		      "type": "string"
		    },
		    "samplingPlan": {
		      "type": "string"
		    },
		    "samplingWeight": {
		      "type": "string"
		    },
		    "samplingSize": {
		      "type": "string"
		    },
		    "lotSizeUnit": {
		      "type": "string"
		    }
		  },
		  "additionalProperties": false
		}
		},{}],44:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Sample",
		      "scope": "#/properties/sample"
		    },
		    {
		      "type": "Control",
		      "label": "Collection Protocol",
		      "scope": "#/properties/collectionProtocol"
		    },
		    {
		      "type": "Control",
		      "label": "Sampling Strategy",
		      "scope": "#/properties/samplingStrategy"
		    },
		    {
		      "type": "Control",
		      "label": "Sampling Program Type",
		      "scope": "#/properties/samplingProgramType"
		    },
		    {
		      "type": "Control",
		      "label": "Sampling Method",
		      "scope": "#/properties/samplingMethod"
		    },
		    {
		      "type": "Control",
		      "label": "Sampling Plan",
		      "scope": "#/properties/samplingPlan"
		    },
		    {
		      "type": "Control",
		      "label": "Sampling Weight",
		      "scope": "#/properties/samplingWeight"
		    },
		    {
		      "type": "Control",
		      "label": "Sampling Size",
		      "scope": "#/properties/samplingSize"
		    },
		    {
		      "type": "Control",
		      "label": "Lot Size Unit",
		      "scope": "#/properties/lotSizeUnit"
		    }
		  ]
		}
		},{}],45:[function(require,module,exports){
		module.exports={
		  "type": "VerticalLayout",
		  "elements": [
		    {
		      "type": "Control",
		      "label": "Title",
		      "scope": "#/properties/title"
		    },
		    {
		      "type": "Control",
		      "label": "Description",
		      "scope": "#/properties/description"
		    },
		    {
		      "type": "Control",
		      "label": "Design Type",
		      "scope": "#/properties/designType"
		    },
		    {
		      "type": "Control",
		      "label": "Measurement Type",
		      "scope": "#/properties/measurementType"
		    },
		    {
		      "type": "Control",
		      "label": "Technology Type",
		      "scope": "#/properties/technologyType"
		    },
		    {
		      "type": "Control",
		      "label": "Technology Platform",
		      "scope": "#/properties/technologyPlatform"
		    },
		    {
		      "type": "Control",
		      "label": "Accreditation Procedure",
		      "scope": "#/properties/accreditationProcedure"
		    },
		    {
		      "type": "Control",
		      "label": "Protocol Name",
		      "scope": "#/properties/protocolName"
		    },
		    {
		      "type": "Control",
		      "label": "Protocol Type",
		      "scope": "#/properties/protocolType"
		    },
		    {
		      "type": "Control",
		      "label": "Protocol Description",
		      "scope": "#/properties/protocolDescription"
		    },
		    {
		      "type": "Control",
		      "label": "Protocol Uri",
		      "scope": "#/properties/protocolUri"
		    },
		    {
		      "type": "Control",
		      "label": "Protocol Version",
		      "scope": "#/properties/protocolVersion"
		    },
		    {
		      "type": "Control",
		      "label": "Parameters Name",
		      "scope": "#/properties/parametersName"
		    },
		    {
		      "type": "Control",
		      "label": "Components Name",
		      "scope": "#/properties/componentsName"
		    },
		    {
		      "type": "Control",
		      "label": "Components Type",
		      "scope": "#/properties/componentsType"
		    }
		  ]
		}
		},{}],46:[function(require,module,exports){
		var React = window.React,
			jsonformscore = require('@jsonforms/core'),
			material_renderers = require('@jsonforms/material-renderers'),
		    ReactDOM = require('react-dom/cjs/react-dom.production.min.js'), 
		    redux = require('redux'),
		    examples = require('@jsonforms/examples'),
		    react_redux = require('react-redux'),
		    $ = require("jquery"),
		   
		    ReactDOMServer = require('react-dom/cjs/react-dom-server.node.production.min.js'),
		    reactDomFactories = require('react-dom-factories'),
		    DOM = reactDomFactories.DOM, body = reactDomFactories.body, div = reactDomFactories.div, script = reactDomFactories.script, link = reactDomFactories.link,

		    RatingControl = require('./RatingControl'),
		    ratingControlTester = require('./ratingControlTester'),
		    // This is our React component, shared by server and browser thanks to browserify
		    App = React.createFactory(require('./App')),
		    /*schemax = require('./CreatorModel.json'),
		    uischemax = require('./CreatorView.json')*/
		    schema = require('./GeneralInformationModel.json'),
		    uischema = require('./GeneralInformationView.json'),
		    
		   // SCOPE
		    schema2 = require('./ScopeModel.json'),
		    uischema2 = require('./ScopeView.json'),
		    
		    schema3 = require('./ProductModel.json'),
		    uischema3 = require('./ProductView.json'),
		    
		    schema4 = require('./HazardModel.json'),
		    uischema4 = require('./HazardView.json'),
		    
		    schema5 = require('./PopulationGroupModel.json'),
		    uischema5 = require('./PopulationGroupView.json'),
		    

		    //DATA Background
		    schema6 = require('./DataBackgroundModel.json'),
		    uischema6 = require('./DataBackgroundView.json'),
		    
		    schema7 = require('./StudyModel.json'),
		    uischema7 = require('./StudyView.json'),
		    
		    schema8 = require('./StudySampleModel.json'),
		    uischema8 = require('./StudySampleView.json'),
		    
		    schema9 = require('./DietaryAssessmentMethodModel.json'),
		    uischema9 = require('./DietaryAssessmentMethodView.json')
		    
		    schema10 = require('./LaboratoryModel.json'),
		    uischema10 = require('./LaboratoryView.json'),
		    
		    schema11 = require('./AssayModel.json'),
		    uischema11 = require('./AssayView.json'),
		    
		    
		    
		    
		    
		    
		    
		    
		    // popup creators
		    schema12 = require('./CreatorModel.json'),
		    uischema12 = require('./CreatorView.json'),
		    schema13 = require('./ModelCategoryModel.json'),
		    uischema13 = require('./ModelCategoryView.json'),
		    schema14 = require('./ModificationDateModel.json'),
		    uischema14 = require('./ModificationDateView.json'),
		    schema15 = require('./CountryModel.json'),
		    uischema15 = require('./CountryView.json'),
		    schema16 = require('./RegionModel.json'),
		    uischema16 = require('./RegionView.json'),
		    schema18 = require('./ParameterModel.json'),
		    uischema18 = require('./ParameterView.json'),
		    schema19 = require('./ModelEquationModel.json'),
		    uischema19 = require('./ModelEquationView.json'),
		    schema20 = require('./EventModel.json'),
		    uischema20 = require('./EventView.json')

		    //Model Math
		    schema17 = require('./ModelMathModel.json'),
		    uischema17 = require('./ModelMathView.json'),
		    schema21 = require('./ExposureModel.json'),
		    uischema21 = require('./ExposureView.json')
		    

		var Actions= jsonformscore.Actions,
		  jsonformsReducer= jsonformscore.jsonformsReducer,
		  combineReducers= redux.combineReducers,
		  createStore= redux.createStore,
		  Provider= react_redux.Provider,
		  materialFields= material_renderers.materialFields,
		  materialRenderers= material_renderers.materialRenderers
		  

		  window.store1 = createStore(
		  combineReducers({ jsonforms: jsonformsReducer() }),  
		  {
		    jsonforms: {
		      renderers: materialRenderers,
		      fields: materialFields,
		    }
		  }
		);
		window.store1.dispatch(Actions.init(window.generalInformation, schema, uischema));

		window.store2 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		  window.store2.dispatch(Actions.init(window.scope, schema2, uischema2));

		  store3 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store3.dispatch(Actions.init(window.scope.product, schema3, uischema3));

		  store4 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store4.dispatch(Actions.init(window.scope.hazard, schema4, uischema4));

		  store5 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store5.dispatch(Actions.init(window.scope.populationgroup, schema5, uischema5));




		//databackground stores
		window.store6 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		  window.store6.dispatch(Actions.init(window.dataBackground, schema6, uischema6));
		  store7 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store7.dispatch(Actions.init(window.dataBackground.study, schema7, uischema7));
		  store8 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store8.dispatch(Actions.init(window.dataBackground.studySample, schema8, uischema8));
		  store9 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store9.dispatch(Actions.init(window.dataBackground.dietaryAssessmentMethod, schema9, uischema9));
		  store10 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store10.dispatch(Actions.init(window.dataBackground.laboratory, schema10, uischema10));
		  store11 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store11.dispatch(Actions.init(window.dataBackground.assay, schema11, uischema11));

		//popups creator
		  store12 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store12.dispatch(Actions.init({}, schema12, uischema12));

		  store13 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store13.dispatch(Actions.init(window.generalInformation.modelCategory, schema13, uischema13));


		  store14 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store14.dispatch(Actions.init({}, schema14, uischema14));


		store15 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store15.dispatch(Actions.init({}, schema15, uischema15));

		store16 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store16.dispatch(Actions.init({}, schema16, uischema16));


		window.store17 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		window.store17.dispatch(Actions.init(window.modelMath, schema17, uischema17));


		store18 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store18.dispatch(Actions.init({}, schema18, uischema18));


		store19 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store19.dispatch(Actions.init({}, schema19, uischema19));


		store20 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store20.dispatch(Actions.init({}, schema20, uischema20));

		store21 = createStore(
				  combineReducers({ jsonforms: jsonformsReducer() }),  
				  {
				    jsonforms: {
				      renderers: materialRenderers,
				      fields: materialFields,
				    }
				  }
				);
		store21.dispatch(Actions.init({}, schema21, uischema21));
		// Uncomment this line (and respective import) to register our custom renderer
		//store.dispatch(Actions.registerRenderer(ratingControlTester, RatingControl));

		// This script will run in the browser and will render our component using the
		// value from APP_PROPS that we generate inline in the page's html on the server.
		// If these props match what is used in the server render, React will see that
		// it doesn't need to generate any DOM and the page will load faster

		//document.getElementsByClassName("MuiTable-root-222")[0].classList.add("secondTable");


		ReactDOM.render(React.createFactory(Provider)({store: store1},
				App()
		), document.getElementById('generalinformation'));
		ReactDOM.render(React.createFactory(Provider)({store: store2},
				App()
		), document.getElementById('scope'));

		ReactDOM.render(React.createFactory(Provider)({store: store6},
				App()
		), document.getElementById('databackground'));

		ReactDOM.render(React.createFactory(Provider)({store: store17},
				App()
		), document.getElementById('modelMath'));

		notAProperDiv = $("div:contains('No applicable field found.'):not(:has(div))");

		parent0 = $(notAProperDiv[0]).parent();
		$(notAProperDiv[0]).remove();
		parent0.append( "<div id ='test0' class='replaced' ></div>" );
		ReactDOM.render(React.createFactory(Provider)({store: store3},
				App()
		), document.getElementById('test0'));

		parent1 = $(notAProperDiv[1]).parent();
		$(notAProperDiv[1]).remove();
		parent1.append( "<div id ='test1' class='replaced' ></div>" );
		ReactDOM.render(React.createFactory(Provider)({store: store4},
				App()
		), document.getElementById('test1'));

		parent2 = $(notAProperDiv[2]).parent();
		$(notAProperDiv[2]).remove();
		parent2.append( "<div id ='test2' class='replaced'></div>" );
		ReactDOM.render(React.createFactory(Provider)({store: store5},
				App()
		), document.getElementById('test2'));


		//data background
		parent3 = $(notAProperDiv[3]).parent();
		$(notAProperDiv[3]).remove();
		parent3.append( "<div id ='test3' class='replaced'></div>" );
		ReactDOM.render(React.createFactory(Provider)({store: store7},
				App()
		), document.getElementById('test3'));

		parent4 = $(notAProperDiv[4]).parent();
		$(notAProperDiv[4]).remove();
		parent4.append( "<div id ='test4' class='replaced'></div>" );
		ReactDOM.render(React.createFactory(Provider)({store: store8},
				App()
		), document.getElementById('test4'));

		parent5 = $(notAProperDiv[5]).parent();
		$(notAProperDiv[5]).remove();
		parent5.append( "<div id ='test5' class='replaced'></div>" );
		ReactDOM.render(React.createFactory(Provider)({store: store9},
				App()
		), document.getElementById('test5'));

		parent6 = $(notAProperDiv[6]).parent();
		$(notAProperDiv[6]).remove();
		parent6.append( "<div id ='test6' class='replaced'></div>" );
		ReactDOM.render(React.createFactory(Provider)({store: store10},
				App()
		), document.getElementById('test6'));

		parent7 = $(notAProperDiv[7]).parent();
		$(notAProperDiv[7]).remove();
		parent7.append( "<div id ='test7' class='replaced'></div>" );
		ReactDOM.render(React.createFactory(Provider)({store: store11},
				App()
		), document.getElementById('test7'));


		parent8 = $(notAProperDiv[8]).parent();
		$(notAProperDiv[8]).remove();
		parent8.append( "<div id ='test8' class='replaced'></div>" );
		ReactDOM.render(React.createFactory(Provider)({store: store21},
				App()
		), document.getElementById('test8'));

		//popup creatror
		window.saveCreators = function () {
			//console.log();
			window.generalInformation.creators.push(store12.getState().jsonforms.core.data);
			store1.dispatch(Actions.init(window.generalInformation, schema, uischema));
			//$('#modificationdates').modal('toggle');
		}
		parent8 = document.getElementById('generalinformation');
		$(parent8).append(
				"<div id='Creators' class='modal fade' role='dialog'>\n" + 
		        "  <div class='modal-dialog'>\n" + 
		        "\n" + 
		        "    <!-- Modal content-->\n" + 
		        "    <div class='modal-content'>\n" + 
		        "      <div class='modal-header'>\n" + 
		        "        <button type='button' class='close' data-dismiss='modal'>&times;</button>\n" + 
		        "        <h4 id='titleCreators' class='modal-title'>Modal Header</h4>\n" + 
		        "      </div>\n" + 
		        "      <div id='creatorModelContent' class='modal-body'>\n" + 
		        "      </div>\n" + 
		        "      <div class='modal-footer'>\n" + 
		        "        <button type='button' class='btn btn-default' data-dismiss='modal'>Close</button>\n" + 
		        "   	 <button id='save' onclick='window.saveCreators()' class='btn btn-width bkgrnd-cyan save-details' data-dismiss='modal' type='button' name='save-details'>Save</button>" + 
		        "      </div>\n" + 
		        "    </div>\n" + 
		        "\n" + 
		        "  </div>\n" + 
		        "</div>");
		ReactDOM.render(React.createFactory(Provider)({store: store12},
				App()
		), document.getElementById('creatorModelContent'));

		//popup modelcategory
		window.saveModelCategory = function () {
			//console.log();
			window.generalInformation.modelcategory.push(store13.getState().jsonforms.core.data);
			store1.dispatch(Actions.init(window.generalInformation, schema, uischema));
			//$('#modificationdates').modal('toggle');
		}
		$(parent8).append(
				"<div id='Modelcategory' class='modal fade' role='dialog'>\n" + 
		        "  <div class='modal-dialog'>\n" + 
		        "\n" + 
		        "    <!-- Modal content-->\n" + 
		        "    <div class='modal-content'>\n" + 
		        "      <div class='modal-header'>\n" + 
		        "        <button type='button' class='close' data-dismiss='modal'>&times;</button>\n" + 
		        "        <h4 id='titleModelcategory' class='modal-title'>Modal Header</h4>\n" + 
		        "      </div>\n" + 
		        "      <div id='modelcategoryModelContent' class='modal-body'>\n" + 
		        "      </div>\n" + 
		        "      <div class='modal-footer'>\n" + 
		        "        <button type='button' class='btn btn-default' data-dismiss='modal'>Close</button>\n" + 
		        "   	 <button id='save' onclick='window.saveModelCategory()' class='btn btn-width bkgrnd-cyan save-details' data-dismiss='modal' type='button' name='save-details'>Save</button>" + 
		        "      </div>\n" + 
		        "    </div>\n" + 
		        "\n" + 
		        "  </div>\n" + 
		        "</div>");
		ReactDOM.render(React.createFactory(Provider)({store: store13},
				App()
		), document.getElementById('modelcategoryModelContent'));


		//popup modificationdates
		window.saveModificationdates = function () {
			//console.log();
			window.generalInformation.modificationdates.push(store14.getState().jsonforms.core.data);
			store1.dispatch(Actions.init(window.generalInformation, schema, uischema));
			//$('#modificationdates').modal('toggle');
		}

		$(parent8).append(
				"<div id='Modificationdate' class='modal fade' role='dialog'>\n" + 
		        "  <div class='modal-dialog'>\n" + 
		        "\n" + 
		        "    <!-- Modal content-->\n" + 
		        "    <div class='modal-content'>\n" + 
		        "      <div class='modal-header'>\n" + 
		        "        <button type='button' class='close' data-dismiss='modal'>&times;</button>\n" + 
		        "        <h4 id='titleModificationdate' class='modal-title'>Modal Header</h4>\n" + 
		        "      </div>\n" + 
		        "      <div id='modificationdatesModelContent' class='modal-body'>\n" + 
		        "      </div>\n" + 
		        "      <div class='modal-footer'>\n" + 
		        "        <button type='button' class='btn btn-default' data-dismiss='modal'>cancle</button>\n" + 
		        "   	 <button id='save' onclick='window.saveModificationdates()' class='btn btn-width bkgrnd-cyan save-details' data-dismiss='modal' type='button' name='save-details'>Save</button>" + 
		        "      </div>\n" + 
		        "    </div>\n" + 
		        "\n" + 
		        "  </div>\n" + 
		        "</div>");
		ReactDOM.render(React.createFactory(Provider)({store: store14},
				App()
		), document.getElementById('modificationdatesModelContent'));
		parent9 = document.getElementById('scope');
		//popup country
		window.saveCountry = function () {
			//console.log();
			window.scope.country.push(store15.getState().jsonforms.core.data);
			store2.dispatch(Actions.init(window.scope, schema2, uischema2));
			//$('#modificationdates').modal('toggle');
		}

		$(parent9).append(
				"<div id='Country' class='modal fade' role='dialog'>\n" + 
		        "  <div class='modal-dialog'>\n" + 
		        "\n" + 
		        "    <!-- Modal content-->\n" + 
		        "    <div class='modal-content'>\n" + 
		        "      <div class='modal-header'>\n" + 
		        "        <button type='button' class='close' data-dismiss='modal'>&times;</button>\n" + 
		        "        <h4 id='titleCountry' class='modal-title'>Modal Header</h4>\n" + 
		        "      </div>\n" + 
		        "      <div id='countryModelContent' class='modal-body'>\n" + 
		        "      </div>\n" + 
		        "      <div class='modal-footer'>\n" + 
		        "        <button type='button' class='btn btn-default' data-dismiss='modal'>cancle</button>\n" + 
		        "   	 <button id='save' onclick='window.saveCountry()' class='btn btn-width bkgrnd-cyan save-details' data-dismiss='modal' type='button' name='save-details'>Save</button>" + 
		        "      </div>\n" + 
		        "    </div>\n" + 
		        "\n" + 
		        "  </div>\n" + 
		        "</div>");
		ReactDOM.render(React.createFactory(Provider)({store: store15},
				App()
		), document.getElementById('countryModelContent'));
		//popup region
		window.saveRegion = function () {
			//console.log();
			window.scope.region.push(store16.getState().jsonforms.core.data);
			store2.dispatch(Actions.init(window.scope, schema2, uischema2));
			//$('#modificationdates').modal('toggle');
		}

		$(parent9).append(
				"<div id='Region' class='modal fade' role='dialog'>\n" + 
		        "  <div class='modal-dialog'>\n" + 
		        "\n" + 
		        "    <!-- Modal content-->\n" + 
		        "    <div class='modal-content'>\n" + 
		        "      <div class='modal-header'>\n" + 
		        "        <button type='button' class='close' data-dismiss='modal'>&times;</button>\n" + 
		        "        <h4 id='titleRegion' class='modal-title'>Modal Header</h4>\n" + 
		        "      </div>\n" + 
		        "      <div id='regionModelContent' class='modal-body'>\n" + 
		        "      </div>\n" + 
		        "      <div class='modal-footer'>\n" + 
		        "        <button type='button' class='btn btn-default' data-dismiss='modal'>cancle</button>\n" + 
		        "   	 <button id='save' onclick='window.saveRegion()' class='btn btn-width bkgrnd-cyan save-details' data-dismiss='modal' type='button' name='save-details'>Save</button>" + 
		        "      </div>\n" + 
		        "    </div>\n" + 
		        "\n" + 
		        "  </div>\n" + 
		        "</div>");
		ReactDOM.render(React.createFactory(Provider)({store: store16},
				App()
		), document.getElementById('regionModelContent'));
		//ReactDOM.render(App(window.APP_PROPS), document.getElementById('content'))   
		parent10 = document.getElementById('modelMath');

		window.saveParameter = function () {
			//console.log();
			window.modelMath.parameter.push(store18.getState().jsonforms.core.data);
			store17.dispatch(Actions.init(window.modelMath, schema17, uischema17));
			//$('#modificationdates').modal('toggle');
		}
		$(parent10).append(
				"<div id='Parameter' class='modal fade' role='dialog'>\n" + 
		        "  <div class='modal-dialog'>\n" + 
		        "\n" + 
		        "    <!-- Modal content-->\n" + 
		        "    <div class='modal-content'>\n" + 
		        "      <div class='modal-header'>\n" + 
		        "        <button type='button' class='close' data-dismiss='modal'>&times;</button>\n" + 
		        "        <h4 id='titleParameter' class='modal-title'>Modal Header</h4>\n" + 
		        "      </div>\n" + 
		        "      <div id='parameterModelContent' class='modal-body'>\n" + 
		        "      </div>\n" + 
		        "      <div class='modal-footer'>\n" + 
		        "        <button type='button' class='btn btn-default' data-dismiss='modal'>cancle</button>\n" + 
		        "   	 <button id='save' onclick='window.saveParameter()' class='btn btn-width bkgrnd-cyan save-details' data-dismiss='modal' type='button' name='save-details'>Save</button>" + 
		        "      </div>\n" + 
		        "    </div>\n" + 
		        "\n" + 
		        "  </div>\n" + 
		        "</div>");
		ReactDOM.render(React.createFactory(Provider)({store: store18},
				App()
		), document.getElementById('parameterModelContent'));

		window.saveModelequation = function () {
			//console.log();
			window.modelMath.modelequation.push(store19.getState().jsonforms.core.data);
			store17.dispatch(Actions.init(window.modelMath, schema17, uischema17));
			//$('#modificationdates').modal('toggle');
		}
		$(parent10).append(
				"<div id='Modelequation' class='modal fade' role='dialog'>\n" + 
		        "  <div class='modal-dialog'>\n" + 
		        "\n" + 
		        "    <!-- Modal content-->\n" + 
		        "    <div class='modal-content'>\n" + 
		        "      <div class='modal-header'>\n" + 
		        "        <button type='button' class='close' data-dismiss='modal'>&times;</button>\n" + 
		        "        <h4 id='titleModelequation' class='modal-title'>Modal Header</h4>\n" + 
		        "      </div>\n" + 
		        "      <div id='modelequationModelContent' class='modal-body'>\n" + 
		        "      </div>\n" + 
		        "      <div class='modal-footer'>\n" + 
		        "        <button type='button' class='btn btn-default' data-dismiss='modal'>cancle</button>\n" + 
		        "   	 <button id='save' onclick='window.saveModelequation()' class='btn btn-width bkgrnd-cyan save-details' data-dismiss='modal' type='button' name='save-details'>Save</button>" + 
		        "      </div>\n" + 
		        "    </div>\n" + 
		        "\n" + 
		        "  </div>\n" + 
		        "</div>");
		ReactDOM.render(React.createFactory(Provider)({store: store19},
				App()
		), document.getElementById('modelequationModelContent'));

		window.saveEvent = function () {
			//console.log();
			window.modelMath.event.push(store20.getState().jsonforms.core.data);
			store17.dispatch(Actions.init(window.modelMath, schema17, uischema17));
			//$('#modificationdates').modal('toggle');
		}
		$(parent10).append(
				"<div id='Event' class='modal fade' role='dialog'>\n" + 
		        "  <div class='modal-dialog'>\n" + 
		        "\n" + 
		        "    <!-- Modal content-->\n" + 
		        "    <div class='modal-content'>\n" + 
		        "      <div class='modal-header'>\n" + 
		        "        <button type='button' class='close' data-dismiss='modal'>&times;</button>\n" + 
		        "        <h4 id='titleEvent' class='modal-title'>Modal Header</h4>\n" + 
		        "      </div>\n" + 
		        "      <div id='eventModelContent' class='modal-body'>\n" + 
		        "      </div>\n" + 
		        "      <div class='modal-footer'>\n" + 
		        "        <button type='button' class='btn btn-default' data-dismiss='modal'>cancle</button>\n" + 
		        "   	 <button id='save' onclick='window.saveEvent()' class='btn btn-width bkgrnd-cyan save-details' data-dismiss='modal' type='button' name='save-details'>Save</button>" + 
		        "      </div>\n" + 
		        "    </div>\n" + 
		        "\n" + 
		        "  </div>\n" + 
		        "</div>");
		ReactDOM.render(React.createFactory(Provider)({store: store20},
				App()
		), document.getElementById('eventModelContent'));

		},{"./App":1,"./AssayModel.json":2,"./AssayView.json":3,"./CountryModel.json":4,"./CountryView.json":5,"./CreatorModel.json":6,"./CreatorView.json":7,"./DataBackgroundModel.json":8,"./DataBackgroundView.json":9,"./DietaryAssessmentMethodModel.json":10,"./DietaryAssessmentMethodView.json":11,"./EventModel.json":12,"./EventView.json":13,"./ExposureModel.json":14,"./ExposureView.json":15,"./GeneralInformationModel.json":16,"./GeneralInformationView.json":17,"./HazardModel.json":18,"./HazardView.json":19,"./LaboratoryModel.json":20,"./LaboratoryView.json":21,"./ModelCategoryModel.json":22,"./ModelCategoryView.json":23,"./ModelEquationModel.json":24,"./ModelEquationView.json":25,"./ModelMathModel.json":26,"./ModelMathView.json":27,"./ModificationDateModel.json":28,"./ModificationDateView.json":29,"./ParameterModel.json":30,"./ParameterView.json":31,"./PopulationGroupModel.json":32,"./PopulationGroupView.json":33,"./ProductModel.json":34,"./ProductView.json":35,"./RatingControl":37,"./RegionModel.json":38,"./RegionView.json":39,"./ScopeModel.json":40,"./ScopeView.json":41,"./StudyModel.json":42,"./StudySampleModel.json":43,"./StudySampleView.json":44,"./StudyView.json":45,"./ratingControlTester":1055,"@jsonforms/core":52,"@jsonforms/examples":84,"@jsonforms/material-renderers":117,"jquery":691,"react-dom-factories":967,"react-dom/cjs/react-dom-server.node.production.min.js":968,"react-dom/cjs/react-dom.production.min.js":970,"react-redux":991,"redux":1042}],47:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		var generators_1 = require("../generators");
		var NAMESPACE = 'jsonforms';
		exports.INIT = NAMESPACE + "/INIT";
		exports.UPDATE_DATA = 'jsonforms/UPDATE';
		exports.VALIDATE = NAMESPACE + "/VALIDATE";
		exports.ADD_RENDERER = NAMESPACE + "/ADD_RENDERER";
		exports.REMOVE_RENDERER = NAMESPACE + "/REMOVE_RENDERER";
		exports.ADD_FIELD = NAMESPACE + "/ADD_FIELD";
		exports.REMOVE_FIELD = NAMESPACE + "/REMOVE_FIELD";
		exports.SET_CONFIG = NAMESPACE + "/SET_CONFIG";
		exports.init = function (data, schema, uischema) {
		    if (schema === void 0) { schema = generators_1.generateJsonSchema(data); }
		    if (uischema === void 0) { uischema = generators_1.generateDefaultUISchema(schema); }
		    return ({
		        type: exports.INIT,
		        data: data,
		        schema: schema,
		        uischema: uischema
		    });
		};
		exports.update = function (path, updater) { return ({
		    type: exports.UPDATE_DATA,
		    path: path,
		    updater: updater
		}); };
		exports.registerRenderer = function (tester, renderer) { return ({
		    type: exports.ADD_RENDERER,
		    tester: tester,
		    renderer: renderer
		}); };
		exports.registerField = function (tester, field) { return ({
		    type: exports.ADD_FIELD,
		    tester: tester,
		    field: field
		}); };
		exports.unregisterField = function (tester, field) { return ({
		    type: exports.REMOVE_FIELD,
		    tester: tester,
		    field: field
		}); };
		exports.unregisterRenderer = function (tester, renderer) { return ({
		    type: exports.REMOVE_RENDERER,
		    tester: tester,
		    renderer: renderer
		}); };
		exports.setConfig = function (config) { return function (dispatch) {
		    dispatch({
		        type: exports.SET_CONFIG,
		        config: config,
		    });
		}; };

		},{"../generators":49}],48:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		exports.configDefault = {
		    /*
		     * [text] whether to restrict the number of characters to maxLength,
		     * if specified in the JSON schema
		     */
		    restrict: false,
		    /*
		     * [text] whether to resize the input's width to maxLength,
		     * if specified in the JSON schema
		     */
		    trim: false
		};

		},{}],49:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		var schema_1 = require("./schema");
		exports.generateJsonSchema = schema_1.generateJsonSchema;
		var uischema_1 = require("./uischema");
		exports.generateDefaultUISchema = uischema_1.generateDefaultUISchema;
		var Generate = {
		    jsonSchema: schema_1.generateJsonSchema,
		    uiSchema: uischema_1.generateDefaultUISchema,
		};
		exports.Generate = Generate;
		exports.default = Generate;

		},{"./schema":50,"./uischema":51}],50:[function(require,module,exports){
		"use strict";
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		Object.defineProperty(exports, "__esModule", { value: true });
		var ADDITIONAL_PROPERTIES = 'additionalProperties';
		var REQUIRED_PROPERTIES = 'required';
		var distinct = function (array, discriminator) {
		    var known = {};
		    return array.filter(function (item) {
		        var discriminatorValue = discriminator(item);
		        if (known.hasOwnProperty(discriminatorValue)) {
		            return false;
		        }
		        else {
		            known[discriminatorValue] = true;
		            return true;
		        }
		    });
		};
		var Gen = /** @class */ (function () {
		    function Gen(findOption) {
		        var _this = this;
		        this.findOption = findOption;
		        this.schemaObject = function (data) {
		            var props = _this.properties(data);
		            var schema = {
		                'type': 'object',
		                'properties': props,
		                'additionalProperties': _this.findOption(props)(ADDITIONAL_PROPERTIES)
		            };
		            var required = _this.findOption(props)(REQUIRED_PROPERTIES);
		            if (required.length > 0) {
		                schema.required = required;
		            }
		            return schema;
		        };
		        this.properties = function (data) {
		            var emptyProps = {};
		            return Object
		                .keys(data)
		                .reduce(function (acc, propName) {
		                acc[propName] = _this.property(data[propName]);
		                return acc;
		            }, emptyProps);
		        };
		        this.property = function (data) {
		            switch (typeof data) {
		                case 'string':
		                    return { 'type': 'string' };
		                case 'boolean':
		                    return { 'type': 'boolean' };
		                case 'number':
		                    if (Number.isInteger(data)) {
		                        return { 'type': 'integer' };
		                    }
		                    return { 'type': 'number' };
		                case 'object':
		                    if (data == null) {
		                        return { 'type': 'null' };
		                    }
		                    return _this.schemaObjectOrArray(data);
		                default:
		                    return {};
		            }
		        };
		        this.schemaObjectOrArray = function (data) {
		            if (data instanceof Array) {
		                return _this.schemaArray(data);
		            }
		            else {
		                return _this.schemaObject(data);
		            }
		        };
		        this.schemaArray = function (data) {
		            if (data.length > 0) {
		                var allProperties = data.map(_this.property);
		                var uniqueProperties = distinct(allProperties, function (prop) { return JSON.stringify(prop); });
		                if (uniqueProperties.length === 1) {
		                    return {
		                        'type': 'array',
		                        'items': uniqueProperties[0]
		                    };
		                }
		                else {
		                    return {
		                        'type': 'array',
		                        'items': {
		                            'oneOf': uniqueProperties
		                        }
		                    };
		                }
		            }
		            else {
		                return {
		                    'type': 'array',
		                    'items': {}
		                };
		            }
		        };
		    }
		    return Gen;
		}());
		/**
		 * Generate a JSON schema based on the given data and any additional options.
		 * @param {Object} instance the data to create a JSON schema for
		 * @param {any} options any additional options that may alter the generated JSON schema
		 * @returns {JsonSchema} the generated schema
		 */
		exports.generateJsonSchema = function (instance, options) {
		    if (options === void 0) { options = {}; }
		    var findOption = function (props) { return function (optionName) {
		        switch (optionName) {
		            case ADDITIONAL_PROPERTIES:
		                if (options.hasOwnProperty(ADDITIONAL_PROPERTIES)) {
		                    return options[ADDITIONAL_PROPERTIES];
		                }
		                return true;
		            case REQUIRED_PROPERTIES:
		                if (options.hasOwnProperty(REQUIRED_PROPERTIES)) {
		                    return options[REQUIRED_PROPERTIES](props);
		                }
		                return Object.keys(props);
		            default:
		                return;
		        }
		    }; };
		    var gen = new Gen(findOption);
		    return gen.schemaObject(instance);
		};

		},{}],51:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var _ = window.lodashs;
		/**
		 * Creates a new ILayout.
		 * @param layoutType The type of the laoyut
		 * @returns the new ILayout
		 */
		var createLayout = function (layoutType) { return ({
		    type: layoutType,
		    elements: []
		}); };
		/**
		 * Derives the type of the jsonSchema element
		 */
		var deriveType = function (jsonSchema) {
		    if (!_.isEmpty(jsonSchema) &&
		        !_.isEmpty(jsonSchema.type) &&
		        typeof jsonSchema.type === 'string') {
		        return jsonSchema.type;
		    }
		    if (!_.isEmpty(jsonSchema) &&
		        (!_.isEmpty(jsonSchema.properties) || !_.isEmpty(jsonSchema.additionalProperties))) {
		        return 'object';
		    }
		    if (!_.isEmpty(jsonSchema) && !_.isEmpty(jsonSchema.items)) {
		        return 'array';
		    }
		    // ignore all remaining cases
		    return 'null';
		};
		/**
		 * Creates a IControlObject with the given label referencing the given ref
		 */
		var createControlElement = function (label, ref) { return ({
		    type: 'Control',
		    label: label,
		    scope: ref,
		}); };
		var isLayout = function (uischema) {
		    return uischema.elements !== undefined;
		};
		/**
		 * Wraps the given {@code uiSchema} in a Layout if there is none already.
		 * @param uiSchema The ui schema to wrap in a layout.
		 * @param layoutType The type of the layout to create.
		 * @returns the wrapped uiSchema.
		 */
		var wrapInLayoutIfNecessary = function (uischema, layoutType) {
		    if (!_.isEmpty(uischema) && !isLayout(uischema)) {
		        var verticalLayout = createLayout(layoutType);
		        verticalLayout.elements.push(uischema);
		        return verticalLayout;
		    }
		    return uischema;
		};
		/**
		 * Adds the given {@code labelName} to the {@code layout} if it exists
		 * @param layout
		 *      The layout which is to receive the label
		 * @param labelName
		 *      The name of the schema
		 */
		var addLabel = function (layout, labelName) {
		    if (!_.isEmpty(labelName)) {
		        // add label with name
		        var label = {
		            type: 'Label',
		            text: _.startCase(labelName)
		        };
		        layout.elements.push(label);
		    }
		};
		var generateUISchema = function (jsonSchema, schemaElements, currentRef, schemaName, layoutType) {
		    var type = deriveType(jsonSchema);
		    switch (type) {
		        case 'object':
		            var layout_1 = createLayout(layoutType);
		            schemaElements.push(layout_1);
		            addLabel(layout_1, schemaName);
		            if (!_.isEmpty(jsonSchema.properties)) {
		                // traverse properties
		                var nextRef_1 = currentRef + '/properties';
		                Object.keys(jsonSchema.properties).map(function (propName) {
		                    var value = jsonSchema.properties[propName];
		                    generateUISchema(value, layout_1.elements, nextRef_1 + "/" + propName, propName, layoutType);
		                });
		            }
		            return layout_1;
		        case 'array': // array items will be handled by the array control itself
		        /* falls through */
		        case 'string':
		        /* falls through */
		        case 'number':
		        /* falls through */
		        case 'integer':
		        /* falls through */
		        case 'boolean':
		            var controlObject = createControlElement(_.startCase(schemaName), currentRef);
		            schemaElements.push(controlObject);
		            return controlObject;
		        case 'null':
		            return null;
		        default:
		            throw new Error('Unknown type: ' + JSON.stringify(jsonSchema));
		    }
		};
		/**
		 * Generate a default UI schema.
		 * @param {JsonSchema} jsonSchema the JSON schema to generated a UI schema for
		 * @param {string} layoutType the desired layout type for the root layout
		 *        of the generated UI schema
		 */
		exports.generateDefaultUISchema = function (jsonSchema, layoutType, prefix) {
		    if (layoutType === void 0) { layoutType = 'VerticalLayout'; }
		    if (prefix === void 0) { prefix = '#'; }
		    return wrapInLayoutIfNecessary(generateUISchema(jsonSchema, [], prefix, '', layoutType), layoutType);
		};

		},{}],52:[function(require,module,exports){
		"use strict";
		function __export(m) {
		    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
		}
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		__export(require("./util"));
		__export(require("./actions"));
		var Actions = require("./actions");
		exports.Actions = Actions;
		__export(require("./reducers"));
		__export(require("./generators"));
		__export(require("./models/uischema"));
		var Test = require("./testers");
		exports.Test = Test;
		__export(require("./testers"));
		var util_1 = require("./util");
		var Helpers = {
		    createLabelDescriptionFrom: util_1.createLabelDescriptionFrom,
		    convertToValidClassName: util_1.convertToValidClassName
		};
		exports.Helpers = Helpers;
		__export(require("./util"));

		},{"./actions":47,"./generators":49,"./models/uischema":53,"./reducers":57,"./testers":60,"./util":62}],53:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/**
		 * The different rule effects.
		 */
		var RuleEffect;
		(function (RuleEffect) {
		    /**
		     * Effect that hides the associated element.
		     */
		    RuleEffect["HIDE"] = "HIDE";
		    /**
		     * Effect that shows the associated element.
		     */
		    RuleEffect["SHOW"] = "SHOW";
		    /**
		     * Effect that enables the associated element.
		     */
		    RuleEffect["ENABLE"] = "ENABLE";
		    /**
		     * Effect that disables the associated element.
		     */
		    RuleEffect["DISABLE"] = "DISABLE";
		})(RuleEffect = exports.RuleEffect || (exports.RuleEffect = {}));

		},{}],54:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var _ = window.lodashs;
		var actions_1 = require("../actions");
		var configDefault_1 = require("../configDefault");
		var applyDefaultConfiguration = function (config) {
		    if (config === void 0) { config = {}; }
		    return _.merge(configDefault_1.configDefault, config);
		};
		exports.configReducer = function (state, action) {
		    if (state === void 0) { state = applyDefaultConfiguration(); }
		    switch (action.type) {
		        case actions_1.SET_CONFIG:
		            return applyDefaultConfiguration(action.config);
		        default:
		            return state;
		    }
		};

		},{"../actions":47,"../configDefault":48}],55:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var _ = window.lodashs;
		var AJV = require("ajv");
		var actions_1 = require("../actions");
		var ajv = new AJV({ allErrors: true, jsonPointers: true, errorDataPath: 'property' });
		ajv.addFormat('time', '^([0-1][0-9]|2[0-3]):[0-5][0-9]$');
		var validate = function (validator, data) {
		    var valid = validator(data);
		    if (valid) {
		        return [];
		    }
		    return validator.errors;
		};
		var sanitizeErrors = function (validator, data) {
		    return validate(validator, data).map(function (error) {
		        error.dataPath = error.dataPath.replace(/\//g, '.').substr(1);
		        return error;
		    });
		};
		exports.coreReducer = function (state, action) {
		    if (state === void 0) { state = {
		        data: {},
		        schema: {},
		        uischema: {},
		        errors: [],
		        validator: function () { return true; },
		    }; }
		    switch (action.type) {
		        case actions_1.INIT: {
		            var v = ajv.compile(action.schema);
		            var e = sanitizeErrors(v, action.data);
		            return {
		                data: action.data,
		                schema: action.schema,
		                uischema: action.uischema,
		                validator: v,
		                errors: e
		            };
		        }
		        case actions_1.UPDATE_DATA: {
		            if (action.path === undefined || action.path === null) {
		                return state;
		            }
		            else if (action.path === '') {
		                // empty path is ok
		                var result = action.updater(state.data);
		                if (result === undefined || result === null) {
		                    return {
		                        data: state.data,
		                        uischema: state.uischema,
		                        schema: state.schema
		                    };
		                }
		                var errors = sanitizeErrors(state.validator, result);
		                return {
		                    data: result,
		                    uischema: state.uischema,
		                    schema: state.schema,
		                    validator: state.validator,
		                    errors: errors
		                };
		            }
		            else {
		                var oldData = _.get(state.data, action.path);
		                var newData = action.updater(oldData);
		                var newState = _.set(_.cloneDeep(state.data), action.path, newData);
		                var errors = sanitizeErrors(state.validator, newState);
		                return {
		                    data: newState,
		                    uischema: state.uischema,
		                    schema: state.schema,
		                    validator: state.validator,
		                    errors: errors
		                };
		            }
		        }
		        default:
		            return state;
		    }
		};
		exports.extractData = function (state) { return state.data; };
		exports.extractSchema = function (state) { return state.schema; };
		exports.extractUiSchema = function (state) { return state.uischema; };
		exports.errorAt = function (instancePath) { return function (state) {
		    return _.filter(state.errors, function (error) { return error.dataPath === instancePath; });
		}; };
		exports.subErrorsAt = function (instancePath) { return function (state) {
		    var path = instancePath + ".";
		    return _.filter(state.errors, function (error) { return error.dataPath.startsWith(path); });
		}; };

		},{"../actions":47,"ajv":137}],56:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		var actions_1 = require("../actions");
		exports.fieldReducer = function (state, _a) {
		    if (state === void 0) { state = []; }
		    var type = _a.type, tester = _a.tester, field = _a.field;
		    switch (type) {
		        case actions_1.ADD_FIELD:
		            return state.concat([{ tester: tester, field: field }]);
		        case actions_1.REMOVE_FIELD:
		            return state.filter(function (t) { return t.tester !== tester; });
		        default:
		            return state;
		    }
		};

		},{"../actions":47}],57:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var redux_1 = require("redux");
		var renderers_1 = require("./renderers");
		exports.rendererReducer = renderers_1.rendererReducer;
		var fields_1 = require("./fields");
		exports.fieldReducer = fields_1.fieldReducer;
		var transformProps_1 = require("./transformProps");
		var config_1 = require("./config");
		var core_1 = require("./core");
		exports.coreReducer = core_1.coreReducer;
		exports.jsonformsReducer = function (additionalReducers) {
		    if (additionalReducers === void 0) { additionalReducers = {}; }
		    return redux_1.combineReducers(__assign({ core: core_1.coreReducer, renderers: renderers_1.rendererReducer, fields: fields_1.fieldReducer, transformProps: transformProps_1.transformPropsReducer, config: config_1.configReducer }, additionalReducers));
		};
		exports.getData = function (state) { return core_1.extractData(state.jsonforms.core); };
		exports.getSchema = function (state) { return core_1.extractSchema(state.jsonforms.core); };
		exports.getUiSchema = function (state) { return core_1.extractUiSchema(state.jsonforms.core); };
		exports.getErrorAt = function (instancePath) { return function (state) {
		    return core_1.errorAt(instancePath)(state.jsonforms.core);
		}; };
		exports.getSubErrorsAt = function (instancePath) { return function (state) {
		    return core_1.subErrorsAt(instancePath)(state.jsonforms.core);
		}; };
		exports.getPropsTransformer = function (state) { return state.jsonforms.transformProps; };
		exports.getConfig = function (state) { return state.jsonforms.config; };

		},{"./config":54,"./core":55,"./fields":56,"./renderers":58,"./transformProps":59,"redux":1042}],58:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		var actions_1 = require("../actions");
		exports.rendererReducer = function (state, _a) {
		    if (state === void 0) { state = []; }
		    var type = _a.type, tester = _a.tester, renderer = _a.renderer;
		    switch (type) {
		        case actions_1.ADD_RENDERER:
		            return state.concat([{ tester: tester, renderer: renderer }]);
		        case actions_1.REMOVE_RENDERER:
		            return state.filter(function (t) { return t.tester !== tester; });
		        default:
		            return state;
		    }
		};

		},{"../actions":47}],59:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		exports.transformPropsReducer = function (state) {
		    if (state === void 0) { state = []; }
		    return state;
		};

		},{}],60:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var _ = window.lodashs;
		var resolvers_1 = require("../util/resolvers");
		/**
		 * Constant that indicates that a tester is not capable of handling
		 * a combination of schema/data.
		 * @type {number}
		 */
		exports.NOT_APPLICABLE = -1;
		exports.isControl = function (uischema) {
		    return !_.isEmpty(uischema) && uischema.scope !== undefined && uischema.scope !== undefined;
		};
		/**
		 * Only applicable for Controls.
		 *
		 * This function checks whether the given UI schema is of type Control
		 * and if so, resolves the sub-schema referenced by the control and applies
		 * the given predicate
		 *
		 * @param {(JsonSchema) => boolean} predicate the predicate that should be
		 *        applied to the resolved sub-schema
		 */
		exports.schemaMatches = function (predicate) {
		    return function (uischema, schema) {
		        if (_.isEmpty(uischema) || !exports.isControl(uischema)) {
		            return false;
		        }
		        var schemaPath = uischema.scope;
		        if (_.isEmpty(schemaPath)) {
		            return false;
		        }
		        var currentDataSchema = resolvers_1.resolveSchema(schema, schemaPath);
		        while (!_.isEmpty(currentDataSchema) && !_.isEmpty(currentDataSchema.$ref)) {
		            currentDataSchema = resolvers_1.resolveSchema(schema, currentDataSchema.$ref);
		        }
		        if (currentDataSchema === undefined) {
		            return false;
		        }
		        return predicate(currentDataSchema);
		    };
		};
		exports.schemaSubPathMatches = function (subPath, predicate) {
		    return function (uischema, schema) {
		        if (_.isEmpty(uischema) || !exports.isControl(uischema)) {
		            return false;
		        }
		        var schemaPath = uischema.scope;
		        if (_.isEmpty(schemaPath)) {
		            return false;
		        }
		        var currentDataSchema = resolvers_1.resolveSchema(schema, schemaPath + "/" + subPath);
		        while (!_.isEmpty(currentDataSchema.$ref)) {
		            currentDataSchema = resolvers_1.resolveSchema(schema, currentDataSchema.$ref);
		        }
		        if (currentDataSchema === undefined) {
		            return false;
		        }
		        return predicate(currentDataSchema);
		    };
		};
		/**
		 * Only applicable for Controls.
		 *
		 * This function checks whether the given UI schema is of type Control
		 * and if so, resolves the sub-schema referenced by the control and checks
		 * whether the type of the sub-schema matches the expected one.
		 *
		 * @param {string} expectedType the expected type of the resolved sub-schema
		 */
		exports.schemaTypeIs = function (expectedType) { return exports.schemaMatches(function (schema) {
		    return !_.isEmpty(schema) && schema.type === expectedType;
		}); };
		/**
		 * Only applicable for Controls.
		 *
		 * This function checks whether the given UI schema is of type Control
		 * and if so, resolves the sub-schema referenced by the control and checks
		 * whether the format of the sub-schema matches the expected one.
		 *
		 * @param {string} expectedFormat the expected format of the resolved sub-schema
		 */
		exports.formatIs = function (expectedFormat) { return exports.schemaMatches(function (schema) {
		    return !_.isEmpty(schema)
		        && schema.format === expectedFormat
		        && schema.type === 'string';
		}); };
		/**
		 * Checks whether the given UI schema has the expected type.
		 *
		 * @param {string} expected the expected UI schema type
		 */
		exports.uiTypeIs = function (expected) {
		    return function (uischema) {
		        return !_.isEmpty(uischema) && uischema.type === expected;
		    };
		};
		/**
		 * Checks whether the given UI schema has an option with the given
		 * name and whether it has the expected value. If no options property
		 * is set, returns false.
		 *
		 * @param {string} optionName the name of the option to check
		 * @param {any} optionValue the expected value of the option
		 */
		exports.optionIs = function (optionName, optionValue) {
		    return function (uischema) {
		        var options = uischema.options;
		        return !_.isEmpty(options) && options[optionName] === optionValue;
		    };
		};
		/**
		 * Only applicable for Controls.
		 *
		 * Checks whether the scope of a control ends with the expected string.
		 *
		 * @param {string} expected the expected ending of the reference
		 */
		exports.scopeEndsWith = function (expected) {
		    return function (uischema) {
		        if (_.isEmpty(expected) || !exports.isControl(uischema)) {
		            return false;
		        }
		        return _.endsWith(uischema.scope, expected);
		    };
		};
		/**
		 * Only applicable for Controls.
		 *
		 * Checks whether the last segment of the scope matches the expected string.
		 *
		 * @param {string} expected the expected ending of the reference
		 */
		exports.scopeEndIs = function (expected) {
		    return function (uischema) {
		        if (_.isEmpty(expected) || !exports.isControl(uischema)) {
		            return false;
		        }
		        var schemaPath = uischema.scope;
		        return !_.isEmpty(schemaPath) && _.last(schemaPath.split('/')) === expected;
		    };
		};
		/**
		 * A tester that allow composing other testers by && them.
		 *
		 * @param {Array<Tester>} testers the testers to be composed
		 */
		exports.and = function () {
		    var testers = [];
		    for (var _i = 0; _i < arguments.length; _i++) {
		        testers[_i] = arguments[_i];
		    }
		    return function (uischema, schema) {
		        return testers.reduce(function (acc, tester) { return acc && tester(uischema, schema); }, true);
		    };
		};
		/**
		 * A tester that allow composing other testers by || them.
		 *
		 * @param {Array<Tester>} testers the testers to be composed
		 */
		exports.or = function () {
		    var testers = [];
		    for (var _i = 0; _i < arguments.length; _i++) {
		        testers[_i] = arguments[_i];
		    }
		    return function (uischema, schema) {
		        return testers.reduce(function (acc, tester) { return acc || tester(uischema, schema); }, false);
		    };
		};
		/**
		 * Create a ranked tester that will associate a number with a given tester, if the
		 * latter returns true.
		 *
		 * @param {number} rank the rank to be returned in case the tester returns true
		 * @param {Tester} tester a tester
		 */
		exports.rankWith = function (rank, tester) {
		    return function (uischema, schema) {
		        if (tester(uischema, schema)) {
		            return rank;
		        }
		        return exports.NOT_APPLICABLE;
		    };
		};
		exports.withIncreasedRank = function (by, rankedTester) {
		    return function (uischema, schema) {
		        var rank = rankedTester(uischema, schema);
		        if (rank === exports.NOT_APPLICABLE) {
		            return exports.NOT_APPLICABLE;
		        }
		        return rank + by;
		    };
		};
		/**
		 * Default tester for boolean.
		 * @type {RankedTester}
		 */
		exports.isBooleanControl = exports.and(exports.uiTypeIs('Control'), exports.schemaTypeIs('boolean'));
		/**
		 * Tests whether the given UI schema is of type Control and if the schema
		 * has a 'date' format.
		 * @type {Tester}
		 */
		exports.isDateControl = exports.and(exports.uiTypeIs('Control'), exports.formatIs('date'));
		/**
		 * Tests whether the given UI schema is of type Control and if the schema
		 * has an enum.
		 * @type {Tester}
		 */
		exports.isEnumControl = exports.and(exports.uiTypeIs('Control'), exports.schemaMatches(function (schema) { return schema.hasOwnProperty('enum'); }));
		/**
		 * Tests whether the given UI schema is of type Control and if the schema
		 * is of type integer
		 * @type {Tester}
		 */
		exports.isIntegerControl = exports.and(exports.uiTypeIs('Control'), exports.schemaTypeIs('integer'));
		/**
		 * Tests whether the given UI schema is of type Control and if the schema
		 * is of type number
		 * @type {Tester}
		 */
		exports.isNumberControl = exports.and(exports.uiTypeIs('Control'), exports.schemaTypeIs('number'));
		/**
		 * Tests whether the given UI schema is of type Control and if the schema
		 * is of type string
		 * @type {Tester}
		 */
		exports.isStringControl = exports.and(exports.uiTypeIs('Control'), exports.schemaTypeIs('string'));
		/**
		 * Tests whether the given UI schema is of type Control and if is has
		 * a 'multi' option.
		 * @type {Tester}
		 */
		exports.isMultiLineControl = exports.and(exports.uiTypeIs('Control'), exports.optionIs('multi', true));
		/**
		 * Tests whether the given UI schema is of type Control and if the schema
		 * has a 'time' format.
		 * @type {Tester}
		 */
		exports.isTimeControl = exports.and(exports.uiTypeIs('Control'), exports.formatIs('time'));
		/**
		 * Tests whether the given UI schema is of type Control and if the schema
		 * has a 'date-time' format.
		 * @type {Tester}
		 */
		exports.isDateTimeControl = exports.and(exports.uiTypeIs('Control'), exports.formatIs('date-time'));
		/**
		 * Tests whether the given UI schema is of type Control and if the schema
		 * is an array of objects.
		 * @type {Tester}
		 */
		exports.isArrayObjectControl = exports.and(exports.uiTypeIs('Control'), exports.schemaMatches(function (schema) {
		    return !_.isEmpty(schema)
		        && schema.type === 'array'
		        && !_.isEmpty(schema.items)
		        && !Array.isArray(schema.items);
		} // we don't care about tuples
		), exports.schemaSubPathMatches('items', function (schema) {
		    return schema.type === 'object';
		}));
		/**
		 * Tests whether a given UI schema is of type Control and
		 * whether the schema defines a numerical range.
		 * Furthermore it checks that the Control has the option 'slider' set to 'true'.
		 * @type {Tester}
		 */
		exports.isRangeControl = exports.and(exports.uiTypeIs('Control'), exports.or(exports.schemaTypeIs('number'), exports.schemaTypeIs('integer')), exports.schemaMatches(function (schema) {
		    return schema.hasOwnProperty('maximum') &&
		        schema.hasOwnProperty('minimum') &&
		        schema.hasOwnProperty('default');
		}));
		/**
		 * Tests whether the given UI schema is of type Control, if the schema
		 * is of type string and has option format
		 * @type {Tester}
		 */
		exports.isNumberFormatControl = exports.and(exports.uiTypeIs('Control'), exports.schemaTypeIs('integer'), exports.optionIs('format', true));

		},{"../util/resolvers":66}],61:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var _ = window.lodashs;
		var reducers_1 = require("../reducers");
		var util_1 = require("../util");
		var renderer_1 = require("./renderer");
		exports.mapStateToDispatchFieldProps = function (state) { return ({
		    fields: state.jsonforms.fields || []
		}); };
		/**
		 * Map state to field props.
		 *
		 * @param state JSONForms state tree
		 * @param ownProps any own props
		 * @returns {StatePropsOfField} state props of a field
		 */
		exports.mapStateToFieldProps = function (state, ownProps) {
		    var path = util_1.composeWithUi(ownProps.uischema, ownProps.path);
		    var visible = _.has(ownProps, 'visible') ? ownProps.visible : util_1.isVisible(ownProps, state);
		    var enabled = _.has(ownProps, 'enabled') ? ownProps.enabled : util_1.isEnabled(ownProps, state);
		    var errors = reducers_1.getErrorAt(path)(state).map(function (error) { return error.message; });
		    var isValid = _.isEmpty(errors);
		    var controlElement = ownProps.uischema;
		    var id = controlElement.scope || '';
		    var inputClassName = ['validate'].concat(isValid ? 'valid' : 'invalid');
		    var defaultConfig = _.cloneDeep(reducers_1.getConfig(state));
		    var config = _.merge(defaultConfig, ownProps.uischema.options);
		    return {
		        data: util_1.Resolve.data(reducers_1.getData(state), path),
		        className: inputClassName.join(' '),
		        visible: visible,
		        enabled: enabled,
		        id: id,
		        path: path,
		        isValid: isValid,
		        scopedSchema: util_1.Resolve.schema(ownProps.schema, controlElement.scope),
		        uischema: ownProps.uischema,
		        schema: ownProps.schema,
		        config: config
		    };
		};
		/**
		 * Synonym for mapDispatchToControlProps.
		 *
		 * @type {(dispatch) => {handleChange(path, value): void}}
		 */
		exports.mapDispatchToFieldProps = renderer_1.mapDispatchToControlProps;

		},{"../reducers":57,"../util":62,"./renderer":65}],62:[function(require,module,exports){
		"use strict";
		function __export(m) {
		    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
		}
		Object.defineProperty(exports, "__esModule", { value: true });
		var resolvers_1 = require("./resolvers");
		var path_1 = require("./path");
		exports.composePaths = path_1.compose;
		exports.composeWithUi = path_1.composeWithUi;
		exports.toDataPath = path_1.toDataPath;
		var runtime_1 = require("./runtime");
		exports.isEnabled = runtime_1.isEnabled;
		exports.isVisible = runtime_1.isVisible;
		var label_1 = require("./label");
		exports.createLabelDescriptionFrom = label_1.createLabelDescriptionFrom;
		/**
		 * Escape the given string such that it can be used as a class name,
		 * i.e. hashes and slashes will be replaced.
		 *
		 * @param {string} s the string that should be converted to a valid class name
		 * @returns {string} the escaped string
		 */
		exports.convertToValidClassName = function (s) {
		    return s.replace('#', 'root')
		        .replace(new RegExp('/', 'g'), '_');
		};
		exports.formatErrorMessage = function (errors) {
		    if (errors === undefined || errors === null) {
		        return '';
		    }
		    return errors.join('\n');
		};
		/**
		 * Convenience wrapper around resolveData and resolveSchema.
		 */
		var Resolve = {
		    schema: resolvers_1.resolveSchema,
		    data: resolvers_1.resolveData
		};
		exports.Resolve = Resolve;
		var resolvers_2 = require("./resolvers");
		exports.resolveData = resolvers_2.resolveData;
		exports.resolveSchema = resolvers_2.resolveSchema;
		// Paths --
		var fromScopable = function (scopable) { return path_1.toDataPathSegments(scopable.scope).join('.'); };
		var Paths = {
		    compose: path_1.compose,
		    fromScopable: fromScopable
		};
		exports.Paths = Paths;
		// Runtime --
		var Runtime = {
		    isEnabled: runtime_1.isEnabled,
		    isVisible: runtime_1.isVisible,
		};
		exports.Runtime = Runtime;
		__export(require("./renderer"));
		__export(require("./field"));
		__export(require("./runtime"));

		},{"./field":61,"./label":63,"./path":64,"./renderer":65,"./resolvers":66,"./runtime":67}],63:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var _ = window.lodashs;
		var deriveLabel = function (controlElement) {
		    if (controlElement.scope !== undefined) {
		        var ref = controlElement.scope;
		        var label = ref.substr(ref.lastIndexOf('/') + 1);
		        return _.startCase(label);
		    }
		    return '';
		};
		/**
		 * Return a label object based on the given control element.
		 * @param {ControlElement} withLabel the UI schema to obtain a label object for
		 * @returns {LabelDescription}
		 */
		exports.createLabelDescriptionFrom = function (withLabel) {
		    var labelProperty = withLabel.label;
		    var derivedLabel = deriveLabel(withLabel);
		    if (typeof labelProperty === 'boolean') {
		        if (labelProperty) {
		            return {
		                text: derivedLabel,
		                show: labelProperty
		            };
		        }
		        else {
		            return {
		                text: derivedLabel,
		                show: labelProperty
		            };
		        }
		    }
		    else if (typeof labelProperty === 'string') {
		        return {
		            text: labelProperty,
		            show: true
		        };
		    }
		    else if (typeof labelProperty === 'object') {
		        var show = labelProperty.hasOwnProperty('show') ? labelProperty.show : true;
		        var label = labelProperty.hasOwnProperty('text') ?
		            labelProperty.text : derivedLabel;
		        return {
		            text: label,
		            show: show
		        };
		    }
		    else {
		        return {
		            text: derivedLabel,
		            show: true
		        };
		    }
		};

		},{}],64:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var _ = window.lodashs;
		exports.compose = function (path1, path2) {
		    var p1 = path1;
		    if (!_.isEmpty(path1) && !_.isEmpty(path2) && !path2.startsWith('[')) {
		        p1 = path1 + '.';
		    }
		    if (_.isEmpty(p1)) {
		        return path2;
		    }
		    else if (_.isEmpty(path2)) {
		        return p1;
		    }
		    else {
		        return "" + p1 + path2;
		    }
		};
		/**
		 * Convert a schema path (i.e. JSON pointer) to an array by splitting
		 * at the '/' character and removing all schema-specific keywords.
		 *
		 * The returned value can be used to de-reference a root object by folding over it
		 * and de-referencing the single segments to obtain a new object.
		 *
		 *
		 * @param {string} schemaPath the schema path to be converted
		 * @returns {string[]} an array containing only non-schema-specific segments
		 */
		exports.toDataPathSegments = function (schemaPath) {
		    var segments = schemaPath.split('/');
		    var startFromRoot = segments[0] === '#' || segments[0] === '';
		    var startIndex = startFromRoot ? 2 : 1;
		    return _.range(startIndex, segments.length, 2).map(function (idx) { return segments[idx]; });
		};
		/**
		 * Remove all schema-specific keywords (e.g. 'properties') from a given path.
		 * @example
		 * toDataPath('#/properties/foo/properties/bar') === '#/foo/bar')
		 *
		 * @param {string} schemaPath the schema path to be converted
		 * @returns {string} the path without schema-specific keywords
		 */
		exports.toDataPath = function (schemaPath) {
		    return exports.toDataPathSegments(schemaPath).join('.');
		};
		exports.composeWithUi = function (scopableUi, path) {
		    var segments = exports.toDataPathSegments(scopableUi.scope);
		    if (_.isEmpty(segments) && path === undefined) {
		        return '';
		    }
		    return _.isEmpty(segments) ? path : exports.compose(path, segments.join('.'));
		};

		},{}],65:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		var __rest = (this && this.__rest) || function (s, e) {
		    var t = {};
		    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
		        t[p] = s[p];
		    if (s != null && typeof Object.getOwnPropertySymbols === "function")
		        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
		            t[p[i]] = s[p[i]];
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var _ = window.lodashs;
		var util_1 = require("../util");
		var reducers_1 = require("../reducers");
		var actions_1 = require("../actions");
		exports.isPlainLabel = function (label) {
		    return typeof label === 'string';
		};
		exports.mapStateToDispatchRendererProps = function (state, ownProps) { return ({
		    renderers: state.jsonforms.renderers || [],
		    schema: ownProps.schema || reducers_1.getSchema(state),
		    uischema: ownProps.uischema || reducers_1.getUiSchema(state)
		}); };
		/**
		 * Map state to layout props.
		 * @param state JSONForms state tree
		 * @param ownProps any own props
		 * @returns {StatePropsOfLayout}
		 */
		exports.mapStateToLayoutProps = function (state, ownProps) {
		    var visible = _.has(ownProps, 'visible') ? ownProps.visible : util_1.isVisible(ownProps, state);
		    return {
		        renderers: state.renderers,
		        visible: visible,
		        path: ownProps.path,
		        uischema: ownProps.uischema,
		        schema: ownProps.schema
		    };
		};
		var isRequired = function (schema, schemaPath) {
		    var pathSegments = schemaPath.split('/');
		    var lastSegment = pathSegments[pathSegments.length - 1];
		    var nextHigherSchemaSegments = pathSegments.slice(0, pathSegments.length - 2);
		    var nextHigherSchemaPath = nextHigherSchemaSegments.join('/');
		    var nextHigherSchema = util_1.Resolve.schema(schema, nextHigherSchemaPath);
		    return nextHigherSchema !== undefined
		        && nextHigherSchema.required !== undefined
		        && nextHigherSchema.required.indexOf(lastSegment) !== -1;
		};
		/**
		 * Adds an asterisk to the given label string based
		 * on the required parameter.
		 *
		 * @param {string} label the label string
		 * @param {boolean} required whether the label belongs to a control which is required
		 * @returns {string} the label string
		 */
		exports.computeLabel = function (label, required) {
		    return required ? label + '*' : label;
		};
		/**
		 * Whether an element's description should be hidden.
		 *
		 * @param visible whether an element is visible
		 * @param description the element's description
		 * @param isFocused whether the element is focused
		 *
		 * @returns {boolean} true, if the description is to be hidden, false otherwise
		 */
		exports.isDescriptionHidden = function (visible, description, isFocused) {
		    return description === undefined ||
		        (description !== undefined && !visible) ||
		        !isFocused;
		};
		/**
		 * Map state to control props.
		 * @param state the store's state
		 * @param ownProps any own props
		 * @returns {StatePropsOfControl} state props for a control
		 */
		exports.mapStateToControlProps = function (state, ownProps) {
		    var path = util_1.composeWithUi(ownProps.uischema, ownProps.path);
		    var visible = _.has(ownProps, 'visible') ? ownProps.visible : util_1.isVisible(ownProps, state);
		    var enabled = _.has(ownProps, 'enabled') ? ownProps.enabled : util_1.isEnabled(ownProps, state);
		    var labelDesc = util_1.createLabelDescriptionFrom(ownProps.uischema);
		    var label = labelDesc.show ? labelDesc.text : '';
		    var errors = reducers_1.getErrorAt(path)(state).map(function (error) { return error.message; });
		    var controlElement = ownProps.uischema;
		    var id = controlElement.scope || '';
		    var required = controlElement.scope !== undefined && isRequired(ownProps.schema, controlElement.scope);
		    var resolvedSchema = util_1.Resolve.schema(ownProps.schema, controlElement.scope);
		    var description = resolvedSchema !== undefined ? resolvedSchema.description : '';
		    var defaultConfig = _.cloneDeep(reducers_1.getConfig(state));
		    var config = _.merge(defaultConfig, controlElement.options);
		    return {
		        data: util_1.Resolve.data(reducers_1.getData(state), path),
		        description: description,
		        errors: errors,
		        label: label,
		        visible: visible,
		        enabled: enabled,
		        id: id,
		        path: path,
		        parentPath: ownProps.path,
		        required: required,
		        scopedSchema: resolvedSchema,
		        uischema: ownProps.uischema,
		        schema: ownProps.schema,
		        config: config
		    };
		};
		/**
		 *
		 * Map dispatch to control props.
		 *
		 * @param dispatch the store's dispatch method
		 * @returns {DispatchPropsOfControl} dispatch props for a control
		 */
		exports.mapDispatchToControlProps = function (dispatch) { return ({
		    handleChange: function (path, value) {
		        dispatch(actions_1.update(path, function () { return value; }));
		    }
		}); };
		/**
		 * Map state to table props
		 *
		 * @param state the store's state
		 * @param ownProps any element's own props
		 * @returns {StatePropsOfTable} state props for a table control
		 */
		exports.mapStateToTableControlProps = function (state, ownProps) {
		    var _a = exports.mapStateToControlProps(state, ownProps), path = _a.path, props = __rest(_a, ["path"]);
		    var controlElement = ownProps.uischema;
		    var resolvedSchema = util_1.Resolve.schema(ownProps.schema, controlElement.scope + '/items');
		    var childErrors = reducers_1.getSubErrorsAt(path)(state);
		    return __assign({}, props, { scopedSchema: resolvedSchema, path: path,
		        childErrors: childErrors });
		};
		/**
		 * Map dispatch to table control props
		 *
		 * @param dispatch the store's dispatch method
		 * @returns {DispatchPropsOfTable} dispatch props for a table control
		 */
		exports.mapDispatchToTableControlProps = function (dispatch) { return ({
		    addItem: function (path) { return function () {
		        dispatch(actions_1.update(path, function (array) {
		            if (array === undefined || array === null) {
		                return [{}];
		            }
		            array.push({});
		            return array;
		        }));
		    }; },
		    removeItems: function (path, toDelete) { return function () {
		        dispatch(actions_1.update(path, function (array) {
		            var clone = _.clone(array);
		            toDelete.forEach(function (s) { return clone.splice(clone.indexOf(s), 1); });
		            return clone;
		        }));
		    }; }
		}); };

		},{"../actions":47,"../reducers":57,"../util":62}],66:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var _ = window.lodashs;
		var isObject = function (schema) {
		    return schema.properties !== undefined;
		};
		var isArray = function (schema) {
		    return schema.type === 'array' && schema.items !== undefined;
		};
		exports.resolveData = function (instance, dataPath) {
		    var dataPathSegments = dataPath.split('.');
		    if (_.isEmpty(dataPath)) {
		        return instance;
		    }
		    return dataPathSegments
		        .map(function (segment) { return decodeURIComponent(segment); })
		        .reduce(function (curInstance, decodedSegment) {
		        if (curInstance === undefined || !curInstance.hasOwnProperty(decodedSegment)) {
		            return undefined;
		        }
		        return curInstance[decodedSegment];
		    }, instance);
		};
		/**
		 * Finds all references inside the given schema.
		 *
		 * @param schema The {@link JsonSchema} to find the references in
		 * @param result The initial result map, default: empty map (this parameter is used for recursion
		 *               inside the function)
		 * @param resolveTuples Whether arrays of tuples should be considered; default: false
		 */
		exports.findAllRefs = function (schema, result, resolveTuples) {
		    if (result === void 0) { result = {}; }
		    if (resolveTuples === void 0) { resolveTuples = false; }
		    if (isObject(schema)) {
		        Object.keys(schema.properties).forEach(function (key) {
		            return exports.findAllRefs(schema.properties[key], result);
		        });
		    }
		    if (isArray(schema)) {
		        if (Array.isArray(schema.items)) {
		            if (resolveTuples) {
		                schema.items.forEach(function (child) { return exports.findAllRefs(child, result); });
		            }
		        }
		        else {
		            exports.findAllRefs(schema.items, result);
		        }
		    }
		    if (Array.isArray(schema.anyOf)) {
		        schema.anyOf.forEach(function (child) { return exports.findAllRefs(child, result); });
		    }
		    if (schema.$ref !== undefined) {
		        result[schema.$ref] = schema;
		    }
		    // tslint:disable:no-string-literal
		    if (schema['links'] !== undefined) {
		        schema['links'].forEach(function (link) {
		            if (!_.isEmpty(link.targetSchema.$ref)) {
		                result[link.targetSchema.$ref] = schema;
		            }
		            else {
		                exports.findAllRefs(link.targetSchema, result);
		            }
		        });
		    }
		    return result;
		};
		/**
		 * Resolve the given schema path in order to obtain a subschema.
		 * @param {JsonSchema} schema the root schema from which to start
		 * @param {string} schemaPath the schema path to be resolved
		 * @returns {JsonSchema} the resolved sub-schema
		 */
		exports.resolveSchema = function (schema, schemaPath) {
		    if (_.isEmpty(schema)) {
		        return undefined;
		    }
		    var validPathSegments = schemaPath.split('/');
		    var invalidSegment = function (pathSegment) { return pathSegment === '#' || pathSegment === undefined || pathSegment === ''; };
		    var resultSchema = validPathSegments.reduce(function (curSchema, pathSegment) {
		        return invalidSegment(pathSegment) ? curSchema : curSchema[pathSegment];
		    }, schema);
		    if (resultSchema !== undefined && resultSchema.$ref !== undefined) {
		        return retrieveResolvableSchema(schema, resultSchema.$ref);
		    }
		    return resultSchema;
		};
		/**
		 * Normalizes the schema and resolves the given ref.
		 *
		 * @param {JsonSchema} full the JSON schema to resolved the reference against
		 * @param {string} reference the reference to be resolved
		 * @returns {JsonSchema} the resolved sub-schema
		 */
		// disable rule because resolve is mutually recursive
		// tslint:disable:only-arrow-functions
		function retrieveResolvableSchema(full, reference) {
		    // tslint:enable:only-arrow-functions
		    var child = exports.resolveSchema(full, reference);
		    var allRefs = exports.findAllRefs(child);
		    var innerSelfReference = allRefs[reference];
		    if (innerSelfReference !== undefined) {
		        innerSelfReference.$ref = '#';
		    }
		    return child;
		}

		},{}],67:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var _ = window.lodashs;
		// TODO: pass in uischema and data instead of props and state
		var reducers_1 = require("../reducers");
		var uischema_1 = require("../models/uischema");
		var resolvers_1 = require("./resolvers");
		var path_1 = require("./path");
		exports.evalVisibility = function (uischema, data) {
		    // TODO condition evaluation should be done somewhere else
		    if (!_.has(uischema, 'rule.condition')) {
		        return true;
		    }
		    var condition = uischema.rule.condition;
		    var value = resolvers_1.resolveData(data, path_1.toDataPath(condition.scope));
		    var equals = value === condition.expectedValue;
		    switch (uischema.rule.effect) {
		        case uischema_1.RuleEffect.HIDE: return !equals;
		        case uischema_1.RuleEffect.SHOW: return equals;
		        default:
		            // visible by default
		            return true;
		    }
		};
		exports.evalEnablement = function (uischema, data) {
		    if (!_.has(uischema, 'rule.condition')) {
		        return true;
		    }
		    var condition = uischema.rule.condition;
		    var value = resolvers_1.resolveData(data, path_1.toDataPath(condition.scope));
		    var equals = value === condition.expectedValue;
		    switch (uischema.rule.effect) {
		        case uischema_1.RuleEffect.DISABLE: return !equals;
		        case uischema_1.RuleEffect.ENABLE: return equals;
		        default:
		            // enabled by default
		            return true;
		    }
		};
		exports.isVisible = function (props, state) {
		    if (props.uischema.rule) {
		        return exports.evalVisibility(props.uischema, reducers_1.getData(state));
		    }
		    return true;
		};
		exports.isEnabled = function (props, state) {
		    if (props.uischema.rule) {
		        return exports.evalEnablement(props.uischema, reducers_1.getData(state));
		    }
		    return true;
		};

		},{"../models/uischema":53,"../reducers":57,"./path":64,"./resolvers":66}],68:[function(require,module,exports){
		"use strict";
		var __extends = (this && this.__extends) || (function () {
		    var extendStatics = Object.setPrototypeOf ||
		        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
		        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
		    return function (d, b) {
		        extendStatics(d, b);
		        function __() { this.constructor = d; }
		        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		    };
		})();
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var react_1 = require("react");
		var _ = window.lodashs;
		var Rating = /** @class */ (function (_super) {
		    __extends(Rating, _super);
		    function Rating(props) {
		        var _this = _super.call(this, props) || this;
		        _this.state = {
		            rating: props.value,
		            hoverAt: null
		        };
		        return _this;
		    }
		    Rating.prototype.handleMouseOver = function (idx) {
		        this.setState({
		            hoverAt: idx + 1
		        });
		    };
		    Rating.prototype.handleMouseOut = function () {
		        this.setState({
		            hoverAt: null
		        });
		    };
		    Rating.prototype.handleClick = function (idx) {
		        this.setState({
		            rating: idx + 1
		        });
		    };
		    Rating.prototype.render = function () {
		        var _this = this;
		        var onClick = this.props.onClick;
		        return (React.createElement("div", null, _.range(0, 5).map(function (i) {
		            var rating = _this.state.hoverAt != null ? _this.state.hoverAt : _this.state.rating;
		            return (React.createElement("span", { onMouseOver: function () {
		                    _this.handleMouseOver(i);
		                }, onMouseOut: function () {
		                    _this.handleMouseOut();
		                }, onClick: function () {
		                    _this.handleClick(i);
		                    onClick({ value: i + 1 });
		                }, key: _this.props.id + "_" + i }, i < rating ? '\u2605' : '\u2606'));
		        })));
		    };
		    return Rating;
		}(react_1.Component));
		exports.Rating = Rating;
		exports.default = Rating;

		},{"react":1016}],69:[function(require,module,exports){
		"use strict";
		var __extends = (this && this.__extends) || (function () {
		    var extendStatics = Object.setPrototypeOf ||
		        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
		        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
		    return function (d, b) {
		        extendStatics(d, b);
		        function __() { this.constructor = d; }
		        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		    };
		})();
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Rating_1 = require("./Rating");
		var react_redux_1 = require("react-redux");
		/**
		 * Default tester for integer controls.
		 * @type {RankedTester}
		 */
		exports.ratingControlTester = core_1.rankWith(Number.MAX_VALUE, core_1.scopeEndsWith('rating'));
		var RatingControl = /** @class */ (function (_super) {
		    __extends(RatingControl, _super);
		    function RatingControl() {
		        return _super !== null && _super.apply(this, arguments) || this;
		    }
		    /**
		     * @inheritDoc
		     */
		    RatingControl.prototype.render = function () {
		        var _this = this;
		        return (React.createElement("div", { style: { paddingTop: '1.5em' } },
		            React.createElement(Rating_1.Rating, { value: this.props.data, onClick: function (ev) {
		                    _this.onClick(ev);
		                }, id: this.props.id })));
		    };
		    RatingControl.prototype.onClick = function (ev) {
		        this.handleChange(ev.value);
		    };
		    return RatingControl;
		}(react_1.Control));
		exports.RatingControl = RatingControl;
		exports.default = react_redux_1.connect(core_1.mapStateToControlProps)(RatingControl);

		},{"./Rating":68,"@jsonforms/core":52,"@jsonforms/react":132,"react":1016,"react-redux":991}],70:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		var person_1 = require("./person");
		exports.schema = {
		    type: 'object',
		    properties: __assign({}, person_1.personCoreSchema.properties, { occupation: { type: 'string' }, comments: {
		            type: 'array',
		            items: {
		                type: 'object',
		                properties: {
		                    date: {
		                        type: 'string',
		                        format: 'date'
		                    },
		                    message: {
		                        type: 'string',
		                        maxLength: 5
		                    }
		                }
		            }
		        } }),
		    required: ['occupation', 'nationality']
		};
		exports.uischema = {
		    type: 'VerticalLayout',
		    elements: [
		        {
		            type: 'Control',
		            scope: '#/properties/comments'
		        }
		    ]
		};
		exports.data = {
		    comments: [
		        {
		            date: new Date(2001, 8, 11).toISOString().substr(0, 10),
		            message: 'This is an example message'
		        },
		        {
		            date: new Date().toISOString().substr(0, 10),
		            message: 'Get ready for booohay'
		        }
		    ]
		};
		register_1.registerExamples([
		    {
		        name: 'array',
		        label: 'Array',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema
		    },
		]);

		},{"./person":86,"./register":87}],71:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		var person_1 = require("./person");
		exports.schema = person_1.personCoreSchema;
		exports.uischema = {
		    type: 'Categorization',
		    elements: [
		        {
		            type: 'Category',
		            label: 'Private',
		            elements: [
		                {
		                    type: 'Control',
		                    scope: '#/properties/name'
		                },
		                {
		                    type: 'Control',
		                    scope: '#/properties/birthDate'
		                }
		            ]
		        },
		        {
		            type: 'Category',
		            label: 'Additional',
		            elements: [
		                {
		                    type: 'Control',
		                    scope: '#/properties/birthDate'
		                },
		                {
		                    type: 'Control',
		                    scope: '#/properties/vegetarian'
		                }
		            ]
		        }
		    ]
		};
		exports.data = person_1.data;
		register_1.registerExamples([
		    {
		        name: 'categorization',
		        label: 'Categorization',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema
		    }
		]);

		},{"./person":86,"./register":87}],72:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		exports.schema = {
		    type: 'object',
		    properties: {
		        postalCode: {
		            type: 'string',
		            maxLength: 5
		        }
		    }
		};
		exports.uischema = {
		    type: 'VerticalLayout',
		    elements: [
		        {
		            type: 'HorizontalLayout',
		            elements: [
		                {
		                    type: 'Control',
		                    scope: '#/properties/postalCode',
		                    label: '%postalcode'
		                }
		            ]
		        }
		    ]
		};
		exports.data = {
		    postalCode: '12345'
		};
		var translations = {
		    'en-US': {
		        postalcode: 'Postal Code'
		    },
		    'de-DE': {
		        postalcode: 'Postleitzahl'
		    }
		};
		var config = {
		    restrict: true,
		    trim: true
		};
		register_1.registerExamples([
		    {
		        name: 'configDefault',
		        label: 'Configuration (Default)',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema,
		        translations: translations
		    },
		    {
		        name: 'configCustom',
		        label: 'Configuration (Custom)',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema,
		        translations: translations,
		        config: config
		    }
		]);

		},{"./register":87}],73:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		var moment = require("moment");
		var schema = {
		    type: 'object',
		    properties: {
		        date: {
		            type: 'string',
		            format: 'date'
		        },
		        time: {
		            type: 'string',
		            format: 'time'
		        },
		        datetime: {
		            type: 'string',
		            format: 'date-time'
		        }
		    }
		};
		var uischema = {
		    type: 'VerticalLayout',
		    elements: [
		        {
		            type: 'HorizontalLayout',
		            elements: [
		                {
		                    type: 'Control',
		                    scope: '#/properties/date'
		                },
		                {
		                    type: 'Control',
		                    scope: '#/properties/time'
		                }
		            ]
		        },
		        {
		            type: 'HorizontalLayout',
		            elements: [
		                {
		                    type: 'Control',
		                    scope: '#/properties/datetime'
		                }
		            ]
		        }
		    ]
		};
		var data = {
		    date: new Date().toISOString().substr(0, 10),
		    time: '13:37',
		    datetime: moment().format()
		};
		register_1.registerExamples([
		    {
		        name: 'dates',
		        label: 'Dates',
		        data: data,
		        schema: schema,
		        uiSchema: uischema
		    }
		]);

		},{"./register":87,"moment":952}],74:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		exports.schema = {
		    type: 'object',
		    properties: {
		        name: {
		            type: 'string',
		            minLength: 1
		        },
		        description: {
		            type: 'string'
		        },
		        done: {
		            type: 'boolean'
		        }
		    },
		    required: ['name']
		};
		exports.uischema = undefined;
		exports.data = {
		    name: 'Send email to Adrian',
		    description: 'Confirm if you have passed the subject\nHereby ...',
		    done: true,
		};
		register_1.registerExamples([
		    {
		        name: 'day1',
		        label: 'Day 1',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: undefined
		    }
		]);

		},{"./register":87}],75:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		var day1_1 = require("./day1");
		exports.schema = day1_1.schema;
		exports.uischema = {
		    type: 'VerticalLayout',
		    elements: [
		        {
		            type: 'Control',
		            scope: '#/properties/name'
		        },
		        {
		            type: 'Control',
		            label: false,
		            scope: '#/properties/done'
		        },
		        {
		            type: 'Control',
		            scope: '#/properties/description',
		            options: {
		                multi: true
		            }
		        },
		    ]
		};
		exports.data = day1_1.data;
		register_1.registerExamples([
		    {
		        name: 'day2',
		        label: 'Day 2',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema
		    }
		]);

		},{"./day1":74,"./register":87}],76:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		var day2_1 = require("./day2");
		exports.schema = {
		    type: 'object',
		    properties: __assign({}, day2_1.schema.properties, { dueDate: {
		            type: 'string',
		            format: 'date'
		        }, rating: {
		            type: 'integer',
		            maximum: 5
		        } }),
		    required: ['name']
		};
		exports.uischema = {
		    type: 'VerticalLayout',
		    elements: day2_1.uischema.elements.concat([
		        {
		            type: 'Control',
		            scope: '#/properties/dueDate'
		        },
		        {
		            type: 'Control',
		            scope: '#/properties/rating'
		        }
		    ])
		};
		exports.data = __assign({}, day2_1.data, { rating: 3 });
		register_1.registerExamples([
		    {
		        name: 'day3',
		        label: 'Day 3',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema
		    }
		]);

		},{"./day2":75,"./register":87}],77:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		var day3_1 = require("./day3");
		exports.schema = {
		    type: 'object',
		    properties: __assign({}, day3_1.schema.properties, { recurrence: {
		            type: 'string',
		            enum: ['Never', 'Daily', 'Weekly', 'Monthly']
		        }, recurrenceInterval: {
		            type: 'integer'
		        } }),
		    required: ['name']
		};
		exports.uischema = {
		    type: 'VerticalLayout',
		    elements: day3_1.uischema.elements.concat([
		        {
		            type: 'Control',
		            scope: '#/properties/recurrence'
		        },
		        {
		            type: 'Control',
		            scope: '#/properties/recurrenceInterval',
		            rule: {
		                effect: 'HIDE',
		                condition: {
		                    scope: '#/properties/recurrence',
		                    expectedValue: 'Never'
		                }
		            }
		        }
		    ])
		};
		exports.data = __assign({}, day3_1.data, { recurrence: 'Daily', recurrenceInterval: 5 });
		register_1.registerExamples([
		    {
		        name: 'day4',
		        label: 'Day 4',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema
		    }
		]);

		},{"./day3":76,"./register":87}],78:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		var day4_1 = require("./day4");
		exports.schema = day4_1.schema;
		exports.uischema = {
		    type: 'VerticalLayout',
		    elements: [
		        {
		            type: 'Control',
		            label: false,
		            scope: '#/properties/done'
		        },
		        {
		            type: 'Control',
		            scope: '#/properties/name'
		        },
		        {
		            type: 'HorizontalLayout',
		            elements: [
		                {
		                    type: 'Control',
		                    scope: '#/properties/dueDate'
		                },
		                {
		                    type: 'Control',
		                    scope: '#/properties/rating'
		                }
		            ]
		        },
		        {
		            type: 'Control',
		            scope: '#/properties/description',
		            options: {
		                multi: true
		            }
		        },
		        {
		            type: 'HorizontalLayout',
		            elements: [
		                {
		                    type: 'Control',
		                    scope: '#/properties/recurrence'
		                },
		                {
		                    type: 'Control',
		                    scope: '#/properties/recurrenceInterval',
		                    rule: {
		                        effect: 'HIDE',
		                        condition: {
		                            scope: '#/properties/recurrence',
		                            expectedValue: 'Never'
		                        }
		                    }
		                }
		            ]
		        }
		    ]
		};
		exports.categoryUiSchema = {
		    type: 'Categorization',
		    elements: [
		        {
		            type: 'Category',
		            label: 'Main',
		            elements: [
		                {
		                    type: 'Control',
		                    label: false,
		                    scope: '#/properties/done'
		                },
		                {
		                    type: 'Control',
		                    scope: '#/properties/name'
		                },
		                {
		                    type: 'Control',
		                    scope: '#/properties/description',
		                    options: {
		                        'multi': true
		                    }
		                }
		            ]
		        },
		        {
		            type: 'Category',
		            label: 'Additional',
		            elements: [
		                {
		                    type: 'HorizontalLayout',
		                    elements: [
		                        {
		                            type: 'Control',
		                            scope: '#/properties/dueDate'
		                        },
		                        {
		                            type: 'Control',
		                            scope: '#/properties/rating'
		                        }
		                    ]
		                },
		                {
		                    type: 'HorizontalLayout',
		                    elements: [
		                        {
		                            type: 'Control',
		                            scope: '#/properties/recurrence'
		                        },
		                        {
		                            type: 'Control',
		                            scope: '#/properties/recurrenceInterval',
		                            rule: {
		                                effect: 'HIDE',
		                                condition: {
		                                    scope: '#/properties/recurrence',
		                                    expectedValue: 'Never'
		                                }
		                            }
		                        }
		                    ]
		                }
		            ]
		        }
		    ]
		};
		exports.data = day4_1.data;
		register_1.registerExamples([
		    {
		        name: 'day5',
		        label: 'Day 5',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema
		    },
		    {
		        name: 'day5_category',
		        label: 'Day 5 With Category',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.categoryUiSchema
		    }
		]);

		},{"./day4":77,"./register":87}],79:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		var core_1 = require("@jsonforms/core");
		var RatingControl_1 = require("./RatingControl");
		var day5_1 = require("./day5");
		exports.schema = day5_1.schema;
		exports.uischema = day5_1.uischema;
		exports.data = day5_1.data;
		var setup = function (div) {
		    var buttonRegister = document.createElement('button');
		    buttonRegister.innerText = 'Register Custom Field';
		    buttonRegister.onclick = function () {
		        var jsonForms = document.getElementsByTagName('json-forms')[0];
		        jsonForms.store.dispatch(core_1.Actions.registerField(RatingControl_1.ratingControlTester, RatingControl_1.default));
		    };
		    div.appendChild(buttonRegister);
		    var buttonUnregister = document.createElement('button');
		    buttonUnregister.innerText = 'Unregister Custom Field';
		    buttonUnregister.onclick = function () {
		        var jsonForms = document.getElementsByTagName('json-forms')[0];
		        jsonForms.store.dispatch(core_1.Actions.unregisterField(RatingControl_1.ratingControlTester, RatingControl_1.default));
		    };
		    div.appendChild(buttonUnregister);
		};
		register_1.registerExamples([
		    {
		        name: 'day6',
		        label: 'Day 6',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema,
		        setupCallback: setup
		    }
		]);

		},{"./RatingControl":69,"./day5":78,"./register":87,"@jsonforms/core":52}],80:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var core_1 = require("@jsonforms/core");
		var register_1 = require("./register");
		var setup = function (div) {
		    var button = document.createElement('button');
		    button.innerText = 'Change data';
		    button.onclick = function () {
		        var jsonforms = document.getElementsByTagName('json-forms')[0];
		        var currentState = jsonforms.store.getState();
		        jsonforms.store.dispatch({
		            type: core_1.Actions.INIT,
		            data: { id: 'aaa' },
		            schema: core_1.getSchema(currentState),
		            uischema: core_1.getUiSchema(currentState),
		        });
		    };
		    div.appendChild(button);
		};
		register_1.registerExamples([
		    {
		        name: 'dynamic',
		        label: 'Dynamic Change',
		        schema: undefined,
		        uiSchema: undefined,
		        data: { name: 'bla' },
		        setupCallback: setup
		    }
		]);

		},{"./register":87,"@jsonforms/core":52}],81:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		var person_1 = require("./person");
		exports.schema = undefined;
		exports.uischema = undefined;
		exports.data = person_1.data;
		register_1.registerExamples([
		    {
		        name: 'generate',
		        label: 'Generate both Schemas',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema
		    }
		]);

		},{"./person":86,"./register":87}],82:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		var person_1 = require("./person");
		exports.schema = person_1.personCoreSchema;
		exports.uischema = undefined;
		exports.data = person_1.data;
		register_1.registerExamples([
		    {
		        name: 'generate-ui',
		        label: 'Generate UI Schema',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema
		    }
		]);

		},{"./person":86,"./register":87}],83:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		var person_1 = require("./person");
		require("moment/locale/de");
		exports.schema = {
		    type: 'object',
		    properties: __assign({}, person_1.personCoreSchema.properties, { personalData: {
		            type: 'object',
		            properties: {
		                age: {
		                    type: 'integer',
		                    description: 'Please enter your age.'
		                },
		                height: {
		                    type: 'number'
		                },
		                drivingSkill: {
		                    type: 'number',
		                    maximum: 10,
		                    minimum: 1,
		                    default: 7
		                }
		            },
		            required: ['age', 'height']
		        }, occupation: {
		            type: 'string'
		        }, postalCode: {
		            type: 'string',
		            maxLength: 5
		        }, income: {
		            type: 'number',
		        } }),
		    required: ['occupation', 'nationality']
		};
		exports.uischema = {
		    type: 'VerticalLayout',
		    elements: [
		        {
		            type: 'HorizontalLayout',
		            elements: [
		                {
		                    type: 'Control',
		                    label: {
		                        text: '%name',
		                        show: true
		                    },
		                    scope: '#/properties/name'
		                },
		                {
		                    type: 'Control',
		                    label: {
		                        text: '%age'
		                    },
		                    scope: '#/properties/personalData/properties/age'
		                },
		                {
		                    type: 'Control',
		                    label: '%birthday',
		                    scope: '#/properties/birthDate'
		                },
		            ]
		        },
		        {
		            type: 'HorizontalLayout',
		            elements: [
		                {
		                    type: 'Control',
		                    label: '%height',
		                    scope: '#/properties/personalData/properties/height'
		                },
		                {
		                    type: 'Control',
		                    label: '%nationality',
		                    scope: '#/properties/nationality'
		                },
		                {
		                    type: 'Control',
		                    label: '%occupation',
		                    scope: '#/properties/occupation',
		                    suggestion: [
		                        'Accountant',
		                        'Engineer',
		                        'Freelancer',
		                        'Journalism',
		                        'Physician',
		                        'Student',
		                        'Teacher',
		                        'Other'
		                    ]
		                },
		                {
		                    type: 'Control',
		                    label: {
		                        text: '%income',
		                        show: true
		                    },
		                    scope: '#/properties/income',
		                    options: {
		                        format: true
		                    }
		                }
		            ]
		        }
		    ]
		};
		exports.data = {
		    name: 'John Doe',
		    vegetarian: false,
		    birthDate: '1985-06-02',
		    personalData: {},
		    postalCode: '12345',
		    income: 100000023
		};
		var translations = {
		    'en-US': {
		        name: 'Name',
		        height: 'Height',
		        age: 'Age',
		        nationality: 'Nationality',
		        occupation: 'Occupation',
		        birthday: 'Birthday',
		        postalcode: 'Postal Code',
		        drivingskill: 'Driving skill',
		        namedescription: 'Please enter your full name.',
		        income: 'Income'
		    },
		    'de-DE': {
		        cancel: 'Stornieren',
		        clear: 'Löschen',
		        name: 'Name',
		        height: 'Höhe',
		        age: 'Alter',
		        nationality: 'Staatsangehörigkeit',
		        occupation: 'Tätigkeit',
		        birthday: 'Geburtstag',
		        postalcode: 'Postleitzahl',
		        drivingskill: 'Fahrkönnen',
		        namedescription: 'Bitte tragen Sie Ihren vollen Namen ein.',
		        income: 'Gehalt'
		    }
		};
		register_1.registerExamples([
		    {
		        name: 'i18n',
		        label: 'I18n',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema,
		        translations: translations
		    }
		]);

		},{"./person":86,"./register":87,"moment/locale/de":951}],84:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var array = require("./arrays");
		exports.array = array;
		var categorization = require("./categorization");
		exports.categorization = categorization;
		var day1 = require("./day1");
		exports.day1 = day1;
		var day2 = require("./day2");
		exports.day2 = day2;
		var day3 = require("./day3");
		exports.day3 = day3;
		var day4 = require("./day4");
		exports.day4 = day4;
		var day5 = require("./day5");
		exports.day5 = day5;
		var day6 = require("./day6");
		exports.day6 = day6;
		var dates = require("./dates");
		exports.dates = dates;
		var dyanmic = require("./dynamic");
		exports.dyanmic = dyanmic;
		var generateSchema = require("./generate");
		exports.generateSchema = generateSchema;
		var generateUISchema = require("./generateUI");
		exports.generateUISchema = generateUISchema;
		var i18n = require("./i18n");
		exports.i18n = i18n;
		var layout = require("./layout");
		exports.layout = layout;
		var person = require("./person");
		exports.person = person;
		var rule = require("./rule");
		exports.rule = rule;
		var resolve = require("./resolve");
		exports.resolve = resolve;
		var Rating_1 = require("./Rating");
		exports.Rating = Rating_1.default;
		var RatingControl_1 = require("./RatingControl");
		exports.RatingControl = RatingControl_1.RatingControl;
		exports.ratingControlTester = RatingControl_1.ratingControlTester;
		var config = require("./config");
		exports.config = config;

		},{"./Rating":68,"./RatingControl":69,"./arrays":70,"./categorization":71,"./config":72,"./dates":73,"./day1":74,"./day2":75,"./day3":76,"./day4":77,"./day5":78,"./day6":79,"./dynamic":80,"./generate":81,"./generateUI":82,"./i18n":83,"./layout":85,"./person":86,"./resolve":88,"./rule":89}],85:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		var person_1 = require("./person");
		exports.schema = person_1.schema;
		exports.uischemaVertical = {
		    type: 'VerticalLayout',
		    elements: [
		        {
		            type: 'Control',
		            label: 'Name',
		            scope: '#/properties/name'
		        },
		        {
		            type: 'Control',
		            label: 'Birth Date',
		            scope: '#/properties/birthDate'
		        }
		    ]
		};
		exports.uischemaHorizontal = {
		    type: 'HorizontalLayout',
		    elements: [
		        {
		            type: 'Control',
		            label: 'Name',
		            scope: '#/properties/name'
		        },
		        {
		            type: 'Control',
		            label: 'Birth Date',
		            scope: '#/properties/birthDate'
		        }
		    ]
		};
		exports.uischemaGroup = {
		    type: 'Group',
		    label: 'My Group',
		    elements: [
		        {
		            type: 'Control',
		            label: 'Name',
		            scope: '#/properties/name'
		        },
		        {
		            type: 'Control',
		            label: 'Birth Date',
		            scope: '#/properties/birthDate'
		        }
		    ]
		};
		exports.uischemaComplex = {
		    type: 'Group',
		    label: 'My Group',
		    elements: [
		        {
		            type: 'HorizontalLayout',
		            elements: [
		                {
		                    type: 'VerticalLayout',
		                    elements: [
		                        {
		                            type: 'Control',
		                            label: 'Name',
		                            scope: '#/properties/name'
		                        },
		                        {
		                            type: 'Control',
		                            label: 'Birth Date',
		                            scope: '#/properties/birthDate'
		                        }
		                    ]
		                },
		                {
		                    type: 'VerticalLayout',
		                    elements: [
		                        {
		                            type: 'Control',
		                            label: 'Name',
		                            scope: '#/properties/name'
		                        },
		                        {
		                            type: 'Control',
		                            label: 'Birth Date',
		                            scope: '#/properties/birthDate'
		                        }
		                    ]
		                }
		            ]
		        }
		    ]
		};
		exports.data = person_1.data;
		register_1.registerExamples([
		    {
		        name: 'layout-vertical',
		        label: 'Layout Vertical',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischemaVertical
		    },
		    {
		        name: 'layout-horizontal',
		        label: 'Layout Horizontal',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischemaHorizontal
		    },
		    {
		        name: 'layout-group',
		        label: 'Layout Group',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischemaGroup
		    },
		    {
		        name: 'layout-complex',
		        label: 'Layout Complex',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischemaComplex
		    }
		]);

		},{"./person":86,"./register":87}],86:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		exports.personCoreSchema = {
		    type: 'object',
		    properties: {
		        name: {
		            type: 'string',
		            minLength: 3,
		            description: 'Please enter your name'
		        },
		        vegetarian: {
		            type: 'boolean'
		        },
		        birthDate: {
		            type: 'string',
		            format: 'date',
		            description: 'Please enter your birth date.'
		        },
		        nationality: {
		            type: 'string',
		            enum: ['DE', 'IT', 'JP', 'US', 'RU', 'Other']
		        }
		    }
		};
		exports.schema = {
		    type: 'object',
		    properties: __assign({}, exports.personCoreSchema.properties, { personalData: {
		            type: 'object',
		            properties: {
		                age: {
		                    type: 'integer',
		                    description: 'Please enter your age.'
		                },
		                height: {
		                    type: 'number'
		                },
		                drivingSkill: {
		                    type: 'number',
		                    maximum: 10,
		                    minimum: 1,
		                    default: 7
		                }
		            },
		            required: ['age', 'height']
		        }, vegetarian: {
		            type: 'boolean'
		        }, birthDate: {
		            type: 'string',
		            format: 'date'
		        }, occupation: {
		            type: 'string'
		        }, postalCode: {
		            type: 'string',
		            maxLength: 5
		        } }),
		    required: ['occupation', 'nationality']
		};
		exports.uischema = {
		    type: 'VerticalLayout',
		    elements: [
		        {
		            type: 'HorizontalLayout',
		            elements: [
		                {
		                    type: 'Control',
		                    scope: '#/properties/name'
		                },
		                {
		                    type: 'Control',
		                    scope: '#/properties/personalData/properties/age'
		                },
		                {
		                    type: 'Control',
		                    scope: '#/properties/birthDate'
		                },
		            ]
		        },
		        {
		            type: 'HorizontalLayout',
		            elements: [
		                {
		                    type: 'Control',
		                    scope: '#/properties/personalData/properties/height'
		                },
		                {
		                    type: 'Control',
		                    scope: '#/properties/nationality'
		                },
		                {
		                    type: 'Control',
		                    scope: '#/properties/occupation',
		                    suggestion: [
		                        'Accountant',
		                        'Engineer',
		                        'Freelancer',
		                        'Journalism',
		                        'Physician',
		                        'Student',
		                        'Teacher',
		                        'Other'
		                    ]
		                }
		            ]
		        }
		    ]
		};
		exports.data = {
		    name: 'John Doe',
		    vegetarian: false,
		    birthDate: '1985-06-02',
		    personalData: {},
		    postalCode: '12345'
		};
		register_1.registerExamples([
		    {
		        name: 'person',
		        label: 'Person',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema
		    }
		]);

		},{"./register":87}],87:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		var core_1 = require("@jsonforms/core");
		var redux_1 = require("redux");
		var i18n_1 = require("@jsonforms/i18n");
		var knownExamples = {};
		exports.registerExamples = function (examples) {
		    examples.forEach(function (example) { return knownExamples[example.name] = example; });
		};
		exports.changeExample = function (selectedExample, renderers, fields) {
		    var additionalStoreParams = [];
		    for (var _i = 3; _i < arguments.length; _i++) {
		        additionalStoreParams[_i - 3] = arguments[_i];
		    }
		    var body = document.getElementById(viewDivId);
		    if (body.firstChild !== null && body.firstChild.childNodes.length !== 0) {
		        body.removeChild(body.firstChild);
		    }
		    var example = knownExamples[selectedExample];
		    if (example.setupCallback !== undefined) {
		        var div = document.createElement('div');
		        example.setupCallback(div);
		        body.appendChild(div);
		        body = div;
		    }
		    var jsonForms = document.createElement('json-forms');
		    var additionalReducers = additionalStoreParams.reduce(function (acc, x) {
		        if (x.reducer) {
		            acc[x.name] = x.reducer;
		        }
		        return acc;
		    }, {});
		    var additionalInitState = additionalStoreParams.reduce(function (acc, x) {
		        acc[x.name] = x.state;
		        return acc;
		    }, {});
		    jsonForms.store = redux_1.createStore(redux_1.combineReducers({
		        jsonforms: core_1.jsonformsReducer(__assign({ i18n: i18n_1.i18nReducer }, additionalReducers))
		    }), {
		        jsonforms: __assign({ core: {
		                data: example.data,
		                schema: example.schema,
		                uischema: example.uiSchema
		            }, renderers: renderers,
		            fields: fields, config: example.config, i18n: {
		                translations: example.translations,
		                locale: example.locale || navigator.languages[0],
		            }, transformProps: [i18n_1.translateProps] }, additionalInitState)
		    });
		    body.appendChild(jsonForms);
		};
		exports.createExampleSelection = function (renderers, fields) {
		    var additionalStoreParams = [];
		    for (var _i = 2; _i < arguments.length; _i++) {
		        additionalStoreParams[_i - 2] = arguments[_i];
		    }
		    var examplesDiv = document.getElementById(exampleDivId);
		    var labelExample = document.createElement('label');
		    labelExample.textContent = 'Example:';
		    labelExample.htmlFor = 'example_select';
		    examplesDiv.appendChild(labelExample);
		    var select = document.createElement('select');
		    select.id = 'example_select';
		    Object.keys(knownExamples).forEach(function (key) {
		        var example = knownExamples[key];
		        var option = document.createElement('option');
		        option.value = example.name;
		        option.label = example.label;
		        option.text = example.label;
		        select.appendChild(option);
		    });
		    select.onchange = function () {
		        exports.changeExample.apply(void 0, [select.value, renderers, fields].concat(additionalStoreParams));
		    };
		    examplesDiv.appendChild(select);
		    exports.changeExample.apply(void 0, [select.value, renderers, fields].concat(additionalStoreParams));
		    return select;
		};

		},{"@jsonforms/core":52,"@jsonforms/i18n":91,"redux":1042}],88:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		exports.schema = {
		    definitions: {
		        address: {
		            type: 'object',
		            properties: {
		                street_address: { 'type': 'string' },
		                city: { 'type': 'string' },
		                state: { 'type': 'string' },
		                coord: { '$ref': '#/definitions/coord' },
		            },
		            required: ['street_address', 'city', 'state']
		        },
		        coord: { '$ref': 'http://json-schema.org/geo' }
		    },
		    type: 'object',
		    properties: {
		        address: { '$ref': '#/definitions/address' }
		    }
		};
		exports.uischema = {
		    type: 'VerticalLayout',
		    elements: [
		        {
		            type: 'Control',
		            scope: '#/properties/address/properties/street_address'
		        },
		        {
		            type: 'Control',
		            scope: '#/properties/address/properties/city'
		        },
		        {
		            type: 'Control',
		            scope: '#/properties/address/properties/state'
		        },
		        {
		            type: 'Control',
		            scope: '#/properties/address/properties/coord/properties/latitude'
		        },
		        {
		            type: 'Control',
		            scope: '#/properties/address/properties/coord/properties/longitude'
		        }
		    ]
		};
		exports.data = {
		    address: {
		        street_address: 'Agnes-Pockels Bogen 1',
		        city: 'Munich',
		        state: 'Bavaria'
		    }
		};
		register_1.registerExamples([
		    {
		        name: 'resolve',
		        label: 'Resolve Remote Schema',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema
		    }
		]);

		},{"./register":87}],89:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var register_1 = require("./register");
		exports.schema = {
		    type: 'object',
		    properties: {
		        name: {
		            type: 'string'
		        },
		        alive: {
		            type: 'boolean'
		        },
		        kindOfDead: {
		            type: 'string',
		            enum: ['Zombie', 'Vampire', 'Ghoul']
		        }
		    }
		};
		exports.uischema = {
		    type: 'HorizontalLayout',
		    elements: [
		        {
		            type: 'Control',
		            label: 'Name',
		            scope: '#/properties/name'
		        },
		        {
		            type: 'Control',
		            label: 'Is Alive?',
		            scope: '#/properties/alive'
		        },
		        {
		            type: 'Control',
		            label: 'Kind of dead',
		            scope: '#/properties/kindOfDead',
		            rule: {
		                effect: 'DISABLE',
		                condition: {
		                    type: 'LEAF',
		                    scope: '#/properties/alive',
		                    expectedValue: false
		                }
		            }
		        }
		    ]
		};
		exports.data = {
		    name: 'John Doe',
		    alive: true,
		    kindOfDead: 'Zombie'
		};
		register_1.registerExamples([
		    {
		        name: 'rule',
		        label: 'Rule',
		        data: exports.data,
		        schema: exports.schema,
		        uiSchema: exports.uischema
		    }
		]);

		},{"./register":87}],90:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var NAMESPACE = 'jsonforms';
		exports.SET_TRANSLATIONS = NAMESPACE + "/SET_TRANSLATIONS";
		exports.SET_LOCALE = NAMESPACE + "/SET_LOCALE";
		exports.setTranslationData = function (translations) { return function (dispatch) {
		    dispatch({
		        type: exports.SET_TRANSLATIONS,
		        translations: translations,
		    });
		}; };
		exports.setLocale = function (locale) { return function (dispatch) {
		    dispatch({
		        type: exports.SET_LOCALE,
		        locale: locale,
		    });
		}; };

		},{}],91:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var _ = window.lodashs;
		var moment = require("moment");
		var core_1 = require("@jsonforms/core");
		var reducers_1 = require("./reducers");
		exports.i18nReducer = reducers_1.i18nReducer;
		/**
		 * Number is formatted based on the current locale value.
		 * If user enters a decimal point, the corresponding decimal separator is added as the last
		 * character of the locale string
		 */
		exports.fromNumber = function (locale) { return function (data) {
		    if (data === null || data === undefined) {
		        return '';
		    }
		    return new Intl.NumberFormat(locale, { maximumFractionDigits: 10 }).format(data);
		}; };
		/**
		 * It coverts the given string number by the user to a valid string number before updating state
		 * Local thousands separators are removed, local decimal separators are replaced with '.'
		 */
		exports.toNumber = function (value) {
		    // inspired by
		    // https://stackoverflow.com/questions/29255843/is-there-a-way-to-reverse-the-formatting-by-intl-numberformat-in-javascript
		    var separator = new Intl.NumberFormat().format(1111).replace(/1/g, '');
		    return Number(value.replace(new RegExp('\\' + separator, 'g'), ''));
		};
		var translate = function (translations, label) {
		    if (translations && _.startsWith(label, '%')) {
		        var labelKey = label.substr(1, label.length);
		        return translations[labelKey] ? translations[labelKey] : label;
		    }
		    return label;
		};
		exports.translateLabel = function (translations, label) {
		    if (label === undefined || label === null) {
		        return undefined;
		    }
		    if (core_1.isPlainLabel(label)) {
		        return translate(translations, label);
		    }
		    else {
		        return _.mapValues(label, function (l) { return translate(translations, l); });
		    }
		};
		exports.translateProps = function (state, props) {
		    var label = exports.translateLabel(reducers_1.getTranslations(state), props.label);
		    var description = exports.translateLabel(reducers_1.getTranslations(state), props.description);
		    var momentLocale = moment().locale(reducers_1.getLocale(state));
		    if (props.scopedSchema && props.scopedSchema.type === 'number') {
		        return __assign({}, props, { label: label,
		            description: description, toFormatted: exports.fromNumber(reducers_1.getLocale(state)), fromFormatted: exports.toNumber, locale: reducers_1.getLocale(state), momentLocale: momentLocale });
		    }
		    return __assign({}, props, { label: label,
		        description: description, toFormatted: function (x) { return x; }, fromFormatted: function (x) { return x; }, locale: reducers_1.getLocale(state), momentLocale: momentLocale });
		};

		},{"./reducers":93,"@jsonforms/core":52,"moment":952}],92:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var actions_1 = require("../actions");
		exports.i18nReducer = function (state, action) {
		    if (state === void 0) { state = {
		        locale: navigator.languages[0]
		    }; }
		    switch (action.type) {
		        case actions_1.SET_TRANSLATIONS:
		            return __assign({}, state, { translations: action.translations });
		        case actions_1.SET_LOCALE:
		            return __assign({}, state, { locale: action.locale === undefined ? navigator.languages[0] : action.locale });
		        default:
		            return state;
		    }
		};
		exports.fetchTranslation = function (state) {
		    return state.translations ? state.translations[state.locale] : undefined;
		};
		exports.fetchLocale = function (state) { return state.locale; };

		},{"../actions":90}],93:[function(require,module,exports){
		"use strict";
		function __export(m) {
		    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
		}
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var i18n_1 = require("./i18n");
		__export(require("./i18n"));
		exports.getTranslations = function (state) { return i18n_1.fetchTranslation(state.jsonforms.i18n); };
		exports.getLocale = function (state) { return i18n_1.fetchLocale(state.jsonforms.i18n); };

		},{"./i18n":92}],94:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License

		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms

		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:

		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.

		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var _ = window.lodashs;
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Typography_1 = require("material-ui/Typography");
		/**
		 * Default tester for a label.
		 * @type {RankedTester}
		 */
		exports.materialLabelRendererTester = core_1.rankWith(1, core_1.uiTypeIs('Label'));
		/**
		 * Default renderer for a label.
		 */
		exports.MaterialLabelRenderer = function (_a) {
		    var uischema = _a.uischema, visible = _a.visible;
		    var labelElement = uischema;
		    var style = {};
		    if (!visible) {
		        style.display = 'none';
		    }
		    return (React.createElement(Typography_1.default, { type: 'title', style: style }, labelElement.text !== undefined && labelElement.text !== null && labelElement.text));
		};
		var mapStateToProps = function (state, ownProps) {
		    var visible = _.has(ownProps, 'visible') ? ownProps.visible : core_1.isVisible(ownProps, state);
		    return {
		        visible: visible,
		    };
		};
		exports.default = react_1.connectToJsonForms(mapStateToProps, null)(exports.MaterialLabelRenderer);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Typography":884,"react":126}],95:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License

		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms

		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:

		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.

		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var MaterialLabelRenderer_1 = require("./MaterialLabelRenderer");
		exports.MaterialLabelRenderer = MaterialLabelRenderer_1.default;
		exports.materialLabelRendererTester = MaterialLabelRenderer_1.materialLabelRendererTester;

		},{"./MaterialLabelRenderer":94}],96:[function(require,module,exports){
		"use strict";
		var __extends = (this && this.__extends) || (function () {
		    var extendStatics = Object.setPrototypeOf ||
		        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
		        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
		    return function (d, b) {
		        extendStatics(d, b);
		        function __() { this.constructor = d; }
		        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		    };
		})();
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var _ = window.lodashs;
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var TableToolbar_1 = require("./TableToolbar");
		var MaterialTableControl_1 = require("./MaterialTableControl");
		var Button_1 = require("material-ui/Button");
		var Dialog_1 = require("material-ui/Dialog");
		var Grid_1 = require("material-ui/Grid");
		var MaterialArrayControlRenderer = /** @class */ (function (_super) {
		    __extends(MaterialArrayControlRenderer, _super);
		    function MaterialArrayControlRenderer(props) {
		        var _this = _super.call(this, props) || this;
		        _this.select = function (_event, index) {
		            var copy = _this.state.selected.slice();
		            copy[index] = !copy[index];
		            _this.setState({ selected: copy });
		        };
		        _this.selectAll = function (_event, checked) {
		            if (checked) {
		                _this.setState({ selected: _this.createSelection(true) });
		                return;
		            }
		            _this.setState({ selected: _this.createSelection(false) });
		        };
		        _this.closeConfirmDeleteDialog = function () {
		            _this.setState({ openConfirmDelete: false });
		        };
		        _this.openConfirmDeleteDialog = function () {
		            _this.setState({ openConfirmDelete: true });
		        };
		        _this.confirmDelete = function () {
		            var selectedIndices = _this.state.selected;
		            var toDelete = selectedIndices.reduce(function (acc, value, index) {
		                if (value) {
		                    acc.push(_this.props.data[index]);
		                }
		                return acc;
		            }, []);
		            _this.props.removeItems(_this.props.path, toDelete)();
		            _this.closeConfirmDeleteDialog();
		            _this.setState({ selected: _this.createSelection(false) });
		        };
		        _this.isSelected = function (index) {
		            return _this.state.selected[index];
		        };
		        _this.createSelection = function (selected) { return _.fill(Array(_this.props.data?_this.props.data.length:0), selected); };
		        _this.state = {
		            selected: _this.createSelection(false),
		            openConfirmDelete: false
		        };
		        return _this;
		    }
		    MaterialArrayControlRenderer.prototype.render = function () {
		        var visible = this.props.visible;
		        var numSelected = this.state.selected ? _.filter(this.state.selected, function (v) { return v; }).length : 0;
		        var tableProps = __assign({ selectAll: this.selectAll, select: this.select, isSelected: this.isSelected, numSelected: numSelected }, this.props);
		        var toolbarProps = __assign({ openConfirmDeleteDialog: this.openConfirmDeleteDialog, numSelected: numSelected }, this.props);
		        var selectedCount = _.filter(this.state.selected, function (v) { return v; }).length;
		        return (React.createElement(Grid_1.default, { container: true, direction: 'column', hidden: { xsUp: !visible }, spacing: 0 },
		            React.createElement(Grid_1.default, { item: true },
		                React.createElement(TableToolbar_1.TableToolbar, __assign({}, toolbarProps))),
		            React.createElement(Grid_1.default, { item: true },
		                React.createElement(MaterialTableControl_1.MaterialTableControl, __assign({}, tableProps))),
		            React.createElement(Dialog_1.default, { open: this.state.openConfirmDelete, keepMounted: true, onClose: this.closeConfirmDeleteDialog, "aria-labelledby": 'alert-dialog-confirmdelete-title', "aria-describedby": 'alert-dialog-confirmdelete-description' },
		                React.createElement(Dialog_1.DialogTitle, { id: 'alert-dialog-confirmdelete-title' }, 'Confirm Deletion'),
		                React.createElement(Dialog_1.DialogContent, null,
		                    React.createElement(Dialog_1.DialogContentText, { id: 'alert-dialog-confirmdelete-description' },
		                        "Are you sure you want to delete the ",
		                        selectedCount,
		                        " selected objects?")),
		                React.createElement(Dialog_1.DialogActions, null,
		                    React.createElement(Button_1.default, { onClick: this.closeConfirmDeleteDialog, color: 'primary' }, "No"),
		                    React.createElement(Button_1.default, { onClick: this.confirmDelete, color: 'primary' }, "Yes")))));
		    };
		    return MaterialArrayControlRenderer;
		}(react_1.RendererComponent));
		exports.MaterialArrayControlRenderer = MaterialArrayControlRenderer;
		exports.default = react_1.connectToJsonForms(core_1.mapStateToTableControlProps, core_1.mapDispatchToTableControlProps)(MaterialArrayControlRenderer);

		},{"./MaterialTableControl":97,"./TableToolbar":98,"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Button":770,"material-ui/Dialog":786,"material-ui/Grid":804,"react":126}],97:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var _ = window.lodashs;
		var Checkbox_1 = require("material-ui/Checkbox");
		var Grid_1 = require("material-ui/Grid");
		var Table_1 = require("material-ui/Table");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var ValidationIcon_1 = require("./ValidationIcon");
		var generateCells = function (Cell, scopedSchema, rowPath, cellErrors) {
		    return Object.keys(scopedSchema.properties)
		        .filter(function (prop) { return scopedSchema.properties[prop].type !== 'array'; })
		        .map(function (prop) {
		        var cellPath = core_1.Paths.compose(rowPath, prop);
		        var props = {
		            cellProperty: prop,
		            scopedSchema: scopedSchema,
		            rowPath: rowPath,
		            cellPath: cellPath,
		            errors: cellErrors
		        };
		        return React.createElement(Cell, __assign({ key: cellPath }, props));
		    });
		};
		var EmptyTable = function () { return (React.createElement(Table_1.TableRow, null,
		    React.createElement(Table_1.TableCell, null, "No data"))); };
		var TableHeaderCell = function (_a) {
		    var cellProperty = _a.cellProperty;
		    return React.createElement(Table_1.TableCell, null, _.capitalize(cellProperty));
		};
		var TableContentCell = function (_a) {
		    var rowPath = _a.rowPath, cellProperty = _a.cellProperty, cellPath = _a.cellPath, errors = _a.errors, scopedSchema = _a.scopedSchema;
		    var cellErrors = errors
		        .filter(function (error) { return error.dataPath === cellPath; })
		        .map(function (error) { return error.message; });
		    var createControlElement = function (key) { return ({
		        type: 'Control',
		        label: false,
		        scope: "#/properties/" + key
		    }); };
		    return (React.createElement(Table_1.TableCell, null,
		        React.createElement(Grid_1.default, { container: true, alignItems: 'center', justify: 'center', spacing: 0 },
		            React.createElement(Grid_1.default, { item: true, xs: 1, hidden: { smUp: cellErrors.length === 0 } },
		                React.createElement(ValidationIcon_1.ValidationIcon, { id: "tooltip-" + cellPath, errorMessages: cellErrors })),
		            React.createElement(Grid_1.default, { item: true, xs: true },
		                React.createElement(react_1.DispatchField, { schema: scopedSchema, uischema: createControlElement(cellProperty), path: rowPath })))));
		};
		var TableWithContent = function (tableProps) {
		    var data = tableProps.data, path = tableProps.path, scopedSchema = tableProps.scopedSchema, childErrors = tableProps.childErrors, select = tableProps.select, isSelected = tableProps.isSelected;
		    return data.map(function (_child, index) {
		        var childPath = core_1.Paths.compose(path, "" + index);
		        var selected = isSelected(index);
		        return (React.createElement(Table_1.TableRow, { key: childPath, hover: true, selected: selected },
		            React.createElement(Table_1.TableCell, { padding: 'checkbox' },
		                React.createElement(Checkbox_1.default, { checked: selected, onChange: function (e) { return select(e, index); } })),
		            generateCells(TableContentCell, scopedSchema, childPath, childErrors)));
		    });
		};
		exports.MaterialTableControl = function (props) {
		    var data = props.data, path = props.path, scopedSchema = props.scopedSchema, numSelected = props.numSelected, selectAll = props.selectAll;
		    var isEmptyTable = !data || !Array.isArray(data) || data.length === 0;
		    var rowCount = data ? data.length : 0;
		    return (React.createElement(Table_1.default, null,
		        React.createElement(Table_1.TableHead, null,
		            React.createElement(Table_1.TableRow, null,
		                React.createElement(Table_1.TableCell, { padding: 'checkbox', style: { width: '1em' } },
		                    React.createElement(Checkbox_1.default, { indeterminate: numSelected > 0 && numSelected < rowCount, checked: numSelected === rowCount, onChange: selectAll })),
		                generateCells(TableHeaderCell, scopedSchema, path))),
		        React.createElement(Table_1.TableBody, null, isEmptyTable ? React.createElement(EmptyTable, null) : React.createElement(TableWithContent, __assign({}, props)))));
		};

		},{"./ValidationIcon":99,"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Checkbox":778,"material-ui/Grid":804,"material-ui/Table":871,"react":126}],98:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var Button_1 = require("material-ui/Button");
		var Grid_1 = require("material-ui/Grid");
		var Toolbar_1 = require("material-ui/Toolbar");
		var Tooltip_1 = require("material-ui/Tooltip");
		var Typography_1 = require("material-ui/Typography");
		var Add_1 = require("material-ui-icons/Add");
		var Delete_1 = require("material-ui-icons/Delete");
		var ValidationIcon_1 = require("./ValidationIcon");
		exports.TableToolbar = function (_a) {
		    var errors = _a.errors, childErrors = _a.childErrors, label = _a.label, uischema = _a.uischema, numSelected = _a.numSelected, openConfirmDeleteDialog = _a.openConfirmDeleteDialog, addItem = _a.addItem, path = _a.path;
		    var controlElement = uischema;
		    var labelObject = core_1.Helpers.createLabelDescriptionFrom(controlElement);
		    var allErrors = [].concat(errors).concat(childErrors.map(function (e) { return e.message; }));
		    return (React.createElement(Toolbar_1.default, { hidden: true },
		        React.createElement(Grid_1.default, { container: true, alignItems: 'center', justify: 'space-between' },
		            React.createElement(Grid_1.default, { item: true },
		                React.createElement(Typography_1.default, { type: 'title' }, label)),
		            React.createElement(Grid_1.default, { item: true, hidden: { smUp: allErrors.length === 0 } },
		                React.createElement(ValidationIcon_1.ValidationIcon, { id: 'tooltip-validation', errorMessages: allErrors })),
		            React.createElement(Grid_1.default, { item: true },
		                React.createElement(Grid_1.default, { container: true },
		                    React.createElement(Grid_1.default, { item: true },
		                        React.createElement(Tooltip_1.default, { id: 'tooltip-add', title: "Add to " + labelObject.text, placement: 'bottom' },
		                            React.createElement(Button_1.default, { fab: true, color: 'primary', "aria-label": "Add to " + labelObject.text, onClick: addItem(path) },
		                                React.createElement(Add_1.default, null)))),
		                    React.createElement(Grid_1.default, { item: true },
		                        React.createElement(Tooltip_1.default, { title: 'Delete' },
		                            React.createElement(Button_1.default, { fab: true, "aria-label": "Delete", disabled: numSelected === 0, onClick: openConfirmDeleteDialog },
		                                React.createElement(Delete_1.default, null)))))))));
		};

		},{"./ValidationIcon":99,"@jsonforms/core":52,"material-ui-icons/Add":748,"material-ui-icons/Delete":750,"material-ui/Button":770,"material-ui/Grid":804,"material-ui/Toolbar":880,"material-ui/Tooltip":882,"material-ui/Typography":884,"react":126}],99:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var Badge_1 = require("material-ui/Badge");
		var ErrorOutline_1 = require("material-ui-icons/ErrorOutline");
		var Tooltip_1 = require("material-ui/Tooltip");
		exports.ValidationIcon = function (_a) {
		    var id = _a.id, errorMessages = _a.errorMessages;
		    return (React.createElement(Tooltip_1.default, { id: id, title: errorMessages.map(function (e, idx) { return React.createElement("div", { key: id + "_" + idx }, e); }) },
		        React.createElement(Badge_1.default, { badgeContent: errorMessages.length },
		            React.createElement(ErrorOutline_1.default, { color: 'error' }))));
		};

		},{"material-ui-icons/ErrorOutline":751,"material-ui/Badge":760,"material-ui/Tooltip":882,"react":126}],100:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var core_1 = require("@jsonforms/core");
		var MaterialArrayControlRenderer_1 = require("./MaterialArrayControlRenderer");
		exports.MaterialArrayControlRenderer = MaterialArrayControlRenderer_1.default;
		exports.materialArrayControlTester = core_1.rankWith(3, core_1.isArrayObjectControl);

		},{"./MaterialArrayControlRenderer":96,"@jsonforms/core":52}],101:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Form_1 = require("material-ui/Form");
		var MaterialBooleanField_1 = require("../fields/MaterialBooleanField");
		exports.MaterialBooleanControl = function (_a) {
		    var label = _a.label, uischema = _a.uischema, schema = _a.schema, visible = _a.visible, parentPath = _a.parentPath;
		    var style = {};
		    if (!visible) {
		        style = { display: 'none' };
		    }
		    return (React.createElement(Form_1.FormControlLabel, { style: style, label: label, control: React.createElement(MaterialBooleanField_1.default, { uischema: uischema, schema: schema, path: parentPath }) }));
		};
		var ConnectedMaterialBooleanControl = react_1.connectToJsonForms(core_1.mapStateToControlProps)(exports.MaterialBooleanControl);
		exports.materialBooleanControlTester = core_1.rankWith(2, core_1.isBooleanControl);
		exports.default = ConnectedMaterialBooleanControl;

		},{"../fields/MaterialBooleanField":107,"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Form":802,"react":126}],102:[function(require,module,exports){
		"use strict";
		var __extends = (this && this.__extends) || (function () {
		    var extendStatics = Object.setPrototypeOf ||
		        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
		        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
		    return function (d, b) {
		        extendStatics(d, b);
		        function __() { this.constructor = d; }
		        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		    };
		})();
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var _ = window.lodashs;
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var material_ui_pickers_1 = require("material-ui-pickers");
		var KeyboardArrowLeft_1 = require("material-ui-icons/KeyboardArrowLeft");
		var KeyboardArrowRight_1 = require("material-ui-icons/KeyboardArrowRight");
		var moment = require("moment");
		var MaterialDateControl = /** @class */ (function (_super) {
		    __extends(MaterialDateControl, _super);
		    function MaterialDateControl() {
		        return _super !== null && _super.apply(this, arguments) || this;
		    }
		    MaterialDateControl.prototype.render = function () {
		        var _a = this.props, description = _a.description, id = _a.id, errors = _a.errors, label = _a.label, uischema = _a.uischema, visible = _a.visible, enabled = _a.enabled, required = _a.required, path = _a.path, handleChange = _a.handleChange, data = _a.data, momentLocale = _a.momentLocale;
		        var isValid = errors.length === 0;
		        var trim = uischema.options && uischema.options.trim;
		        var showDescription = !core_1.isDescriptionHidden(visible, description, this.state.isFocused);
		        var style = {};
		        if (!visible) {
		            style = { display: 'none' };
		        }
		        var inputProps = {};
		        var localeDateTimeFormat = momentLocale ? "" + momentLocale.localeData().longDateFormat('L')
		            : 'YYYY-MM-DD';
		        var labelText;
		        var labelCancel;
		        var labelClear;
		        if (core_1.isPlainLabel(label)) {
		            labelText = label;
		            labelCancel = 'Cancel';
		            labelClear = 'Clear';
		        }
		        else {
		            labelText = label.default;
		            labelCancel = _.startsWith(label.cancel, '%') ? 'Cancel' : label.cancel;
		            labelClear = _.startsWith(label.clear, '%') ? 'Clear' : label.clear;
		        }
		        return (React.createElement(material_ui_pickers_1.DatePicker, { id: id, label: core_1.computeLabel(labelText, required), error: !isValid, style: style, fullWidth: !trim, helperText: !isValid ? errors : showDescription ? description : null, InputLabelProps: { shrink: true }, value: data || null, onChange: function (datetime) {
		                return handleChange(path, datetime ? moment(datetime).format('YYYY-MM-DD') : '');
		            }, format: localeDateTimeFormat, clearable: true, disabled: !enabled, autoFocus: uischema.options && uischema.options.focus, onClear: function () { return handleChange(path, ''); }, onFocus: this.onFocus, onBlur: this.onBlur, cancelLabel: labelCancel, clearLabel: labelClear, leftArrowIcon: React.createElement(KeyboardArrowLeft_1.default, null), rightArrowIcon: React.createElement(KeyboardArrowRight_1.default, null), InputProps: inputProps }));
		    };
		    return MaterialDateControl;
		}(react_1.Control));
		exports.MaterialDateControl = MaterialDateControl;
		exports.addLabelProps = function (mapStateToProps) {
		    return function (state, ownProps) {
		        var stateProps = mapStateToProps(state, ownProps);
		        return __assign({}, stateProps, { label: {
		                default: stateProps.label,
		                cancel: '%cancel',
		                clear: '%clear'
		            } });
		    };
		};
		exports.materialDateControlTester = core_1.rankWith(4, core_1.isDateControl);
		exports.default = react_1.connectToJsonForms(exports.addLabelProps(core_1.mapStateToControlProps), core_1.mapDispatchToControlProps)(MaterialDateControl);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui-icons/KeyboardArrowLeft":752,"material-ui-icons/KeyboardArrowRight":753,"material-ui-pickers":754,"moment":952,"react":126}],103:[function(require,module,exports){
		"use strict";
		var __extends = (this && this.__extends) || (function () {
		    var extendStatics = Object.setPrototypeOf ||
		        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
		        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
		    return function (d, b) {
		        extendStatics(d, b);
		        function __() { this.constructor = d; }
		        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		    };
		})();
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var material_ui_pickers_1 = require("material-ui-pickers");
		var moment = require("moment");
		var KeyboardArrowLeft_1 = require("material-ui-icons/KeyboardArrowLeft");
		var KeyboardArrowRight_1 = require("material-ui-icons/KeyboardArrowRight");
		var DateRange_1 = require("material-ui-icons/DateRange");
		var AccessTime_1 = require("material-ui-icons/AccessTime");
		var MaterialDateTimeControl = /** @class */ (function (_super) {
		    __extends(MaterialDateTimeControl, _super);
		    function MaterialDateTimeControl() {
		        return _super !== null && _super.apply(this, arguments) || this;
		    }
		    MaterialDateTimeControl.prototype.render = function () {
		        var _a = this.props, id = _a.id, description = _a.description, errors = _a.errors, label = _a.label, uischema = _a.uischema, visible = _a.visible, enabled = _a.enabled, required = _a.required, path = _a.path, handleChange = _a.handleChange, data = _a.data, config = _a.config;
		        var isValid = errors.length === 0;
		        var trim = config.trim;
		        var style = {};
		        if (!visible) {
		            style = { display: 'none' };
		        }
		        var inputProps = {};
		        return (React.createElement(material_ui_pickers_1.DateTimePicker, { id: id, label: core_1.computeLabel(core_1.isPlainLabel(label) ? label : label.default, required), error: !isValid, style: style, fullWidth: !trim, onFocus: this.onFocus, onBlur: this.onBlur, helperText: !isValid ? errors : description, InputLabelProps: { shrink: true, }, value: data || null, onChange: function (datetime) {
		                return handleChange(path, datetime ? moment(datetime).format() : '');
		            }, format: 'MM/DD/YYYY h:mm a', clearable: true, disabled: !enabled, autoFocus: uischema.options && uischema.options.focus, leftArrowIcon: React.createElement(KeyboardArrowLeft_1.default, null), rightArrowIcon: React.createElement(KeyboardArrowRight_1.default, null), dateRangeIcon: React.createElement(DateRange_1.default, null), timeIcon: React.createElement(AccessTime_1.default, null), onClear: function () { return handleChange(path, ''); }, InputProps: inputProps }));
		    };
		    return MaterialDateTimeControl;
		}(react_1.Control));
		exports.MaterialDateTimeControl = MaterialDateTimeControl;
		exports.materialDateTimeControlTester = core_1.rankWith(2, core_1.isDateTimeControl);
		exports.default = react_1.connectToJsonForms(core_1.mapStateToControlProps, core_1.mapDispatchToControlProps)(MaterialDateTimeControl);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui-icons/AccessTime":747,"material-ui-icons/DateRange":749,"material-ui-icons/KeyboardArrowLeft":752,"material-ui-icons/KeyboardArrowRight":753,"material-ui-pickers":754,"moment":952,"react":126}],104:[function(require,module,exports){
		"use strict";
		var __extends = (this && this.__extends) || (function () {
		    var extendStatics = Object.setPrototypeOf ||
		        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
		        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
		    return function (d, b) {
		        extendStatics(d, b);
		        function __() { this.constructor = d; }
		        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		    };
		})();
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Input_1 = require("material-ui/Input");
		var Form_1 = require("material-ui/Form");
		var MaterialInputControl = /** @class */ (function (_super) {
		    __extends(MaterialInputControl, _super);
		    function MaterialInputControl() {
		        return _super !== null && _super.apply(this, arguments) || this;
		    }
		    MaterialInputControl.prototype.render = function () {
		        var _a = this.props, id = _a.id, description = _a.description, errors = _a.errors, label = _a.label, uischema = _a.uischema, schema = _a.schema, visible = _a.visible, required = _a.required, parentPath = _a.parentPath, config = _a.config;
		        var isValid = errors.length === 0;
		        var trim = config.trim;
		        var style = {};
		        if (!visible) {
		            style.display = 'none';
		        }
		        var showDescription = !core_1.isDescriptionHidden(visible, description, this.state.isFocused);
		        return (React.createElement(Form_1.FormControl, { style: style, fullWidth: !trim, onFocus: this.onFocus, onBlur: this.onBlur },
		            React.createElement(Input_1.InputLabel, { htmlFor: id, error: !isValid }, core_1.computeLabel(core_1.isPlainLabel(label) ? label : label.default, required)),
		            React.createElement(react_1.DispatchField, { uischema: uischema, schema: schema, path: parentPath }),
		            React.createElement(Form_1.FormHelperText, { error: !isValid }, !isValid ? core_1.formatErrorMessage(errors) : showDescription ? description : null)));
		    };
		    return MaterialInputControl;
		}(react_1.Control));
		exports.MaterialInputControl = MaterialInputControl;
		exports.materialInputControlTester = core_1.rankWith(1, core_1.isControl);
		exports.default = react_1.connectToJsonForms(core_1.mapStateToControlProps)(MaterialInputControl);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Form":802,"material-ui/Input":817,"react":126}],105:[function(require,module,exports){
		"use strict";
		var __extends = (this && this.__extends) || (function () {
		    var extendStatics = Object.setPrototypeOf ||
		        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
		        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
		    return function (d, b) {
		        extendStatics(d, b);
		        function __() { this.constructor = d; }
		        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		    };
		})();
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var TextField_1 = require("material-ui/TextField");
		var MaterialNativeControl = /** @class */ (function (_super) {
		    __extends(MaterialNativeControl, _super);
		    function MaterialNativeControl() {
		        return _super !== null && _super.apply(this, arguments) || this;
		    }
		    MaterialNativeControl.prototype.render = function () {
		        var _a = this.props, id = _a.id, errors = _a.errors, label = _a.label, scopedSchema = _a.scopedSchema, description = _a.description, visible = _a.visible, required = _a.required, path = _a.path, handleChange = _a.handleChange, data = _a.data, config = _a.config;
		        var isValid = errors.length === 0;
		        var trim = config.trim;
		        var style = {};
		        if (!visible) {
		            style = { display: 'none' };
		        }
		        var onChange = function (ev) { return handleChange(path, ev.target.value); };
		        var fieldType = scopedSchema.format;
		        var showDescription = !core_1.isDescriptionHidden(visible, description, this.state.isFocused);
		        return (React.createElement(TextField_1.default, { id: id, label: core_1.computeLabel(core_1.isPlainLabel(label) ? label : label.default, required), type: fieldType, error: !isValid, style: style, fullWidth: !trim, onFocus: this.onFocus, onBlur: this.onBlur, helperText: !isValid ? core_1.formatErrorMessage(errors) : showDescription ? description : null, InputLabelProps: { shrink: true }, value: data, onChange: onChange }));
		    };
		    return MaterialNativeControl;
		}(react_1.Control));
		exports.MaterialNativeControl = MaterialNativeControl;
		exports.materialNativeControlTester = core_1.rankWith(2, core_1.or(core_1.isDateControl, core_1.isTimeControl));
		exports.default = react_1.connectToJsonForms(core_1.mapStateToControlProps, core_1.mapDispatchToControlProps)(MaterialNativeControl);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/TextField":878,"react":126}],106:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var MaterialBooleanControl_1 = require("./MaterialBooleanControl");
		exports.MaterialBooleanControl = MaterialBooleanControl_1.default;
		exports.materialBooleanControlTester = MaterialBooleanControl_1.materialBooleanControlTester;
		var MaterialInputControl_1 = require("./MaterialInputControl");
		exports.MaterialInputControl = MaterialInputControl_1.default;
		exports.materialInputControlTester = MaterialInputControl_1.materialInputControlTester;
		var MaterialNativeControl_1 = require("./MaterialNativeControl");
		exports.MaterialNativeControl = MaterialNativeControl_1.default;
		exports.materialNativeControlTester = MaterialNativeControl_1.materialNativeControlTester;
		var MaterialDateControl_1 = require("./MaterialDateControl");
		exports.MaterialDateControl = MaterialDateControl_1.default;
		exports.materialDateControlTester = MaterialDateControl_1.materialDateControlTester;
		var MaterialDateTimeControl_1 = require("./MaterialDateTimeControl");
		exports.MaterialDateTimeControl = MaterialDateTimeControl_1.default;
		exports.materialDateTimeControlTester = MaterialDateTimeControl_1.materialDateTimeControlTester;

		},{"./MaterialBooleanControl":101,"./MaterialDateControl":102,"./MaterialDateTimeControl":103,"./MaterialInputControl":104,"./MaterialNativeControl":105}],107:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License

		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms

		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:

		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.

		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Checkbox_1 = require("material-ui/Checkbox");
		exports.MaterialBooleanField = function (props) {
		    var data = props.data, className = props.className, id = props.id, enabled = props.enabled, uischema = props.uischema, path = props.path, handleChange = props.handleChange;
		    var config = { 'autoFocus': uischema.options && uischema.options.focus };
		    return (React.createElement(Checkbox_1.default, { checked: data || '', onChange: function (_ev, checked) { return handleChange(path, checked); }, className: className, id: id, disabled: !enabled, inputProps: config }));
		};
		exports.materialBooleanFieldTester = core_1.rankWith(2, core_1.isBooleanControl);
		exports.default = react_1.connectToJsonForms(core_1.mapStateToFieldProps, core_1.mapDispatchToFieldProps)(exports.MaterialBooleanField);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Checkbox":778,"react":126}],108:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Input_1 = require("material-ui/Input");
		exports.MaterialDateField = function (props) {
		    var data = props.data, className = props.className, id = props.id, enabled = props.enabled, uischema = props.uischema, path = props.path, handleChange = props.handleChange;
		    return (React.createElement(Input_1.default, { type: 'date', value: data || '', onChange: function (ev) { return handleChange(path, ev.target.value); }, className: className, id: id, disabled: !enabled, autoFocus: uischema.options && uischema.options.focus, fullWidth: true }));
		};
		exports.materialDateFieldTester = core_1.rankWith(2, core_1.isDateControl);
		exports.default = react_1.connectToJsonForms(core_1.mapStateToFieldProps, core_1.mapDispatchToFieldProps)(exports.MaterialDateField);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Input":817,"react":126}],109:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Select_1 = require("material-ui/Select");
		var Menu_1 = require("material-ui/Menu");
		exports.MaterialEnumField = function (props) {
		    var data = props.data, className = props.className, id = props.id, enabled = props.enabled, uischema = props.uischema, path = props.path, handleChange = props.handleChange, scopedSchema = props.scopedSchema;
		    var options = scopedSchema.enum;
		    return (React.createElement(Select_1.default, { className: className, id: id, disabled: !enabled, autoFocus: uischema.options && uischema.options.focus, value: data || '', onChange: function (ev) { return handleChange(path, ev.target.value); }, fullWidth: true }, [React.createElement(Menu_1.MenuItem, { value: '', key: 'empty' })]
		        .concat(options.map(function (optionValue) {
		        return (React.createElement(Menu_1.MenuItem, { value: optionValue, key: optionValue }, optionValue));
		    }))));
		};
		/**
		 * Default tester for enum controls.
		 * @type {RankedTester}
		 */
		exports.materialEnumFieldTester = core_1.rankWith(2, core_1.isEnumControl);
		exports.default = react_1.connectToJsonForms(core_1.mapStateToFieldProps, core_1.mapDispatchToFieldProps)(exports.MaterialEnumField);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Menu":829,"material-ui/Select":846,"react":126}],110:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Input_1 = require("material-ui/Input");
		exports.MaterialIntegerField = function (props) {
		    var data = props.data, className = props.className, id = props.id, enabled = props.enabled, uischema = props.uischema, path = props.path, handleChange = props.handleChange;
		    var config = { 'step': '1' };
		    return (React.createElement(Input_1.default, { type: 'number', value: data || '', onChange: function (ev) { return handleChange(path, parseInt(ev.target.value, 10)); }, className: className, id: id, disabled: !enabled, autoFocus: uischema.options && uischema.options.focus, inputProps: config, fullWidth: true }));
		};
		exports.materialIntegerFieldTester = core_1.rankWith(2, core_1.isIntegerControl);
		exports.default = react_1.connectToJsonForms(core_1.mapStateToFieldProps, core_1.mapDispatchToFieldProps)(exports.MaterialIntegerField);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Input":817,"react":126}],111:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Input_1 = require("material-ui/Input");
		exports.MaterialNumberField = function (props) {
		    var data = props.data, className = props.className, id = props.id, enabled = props.enabled, uischema = props.uischema, path = props.path, handleChange = props.handleChange;
		    var config = { 'step': '0.1' };
		    return (React.createElement(Input_1.default, { type: 'number', value: data || '', onChange: function (ev) { return handleChange(path, Number(ev.target.value)); }, className: className, id: id, disabled: !enabled, autoFocus: uischema.options && uischema.options.focus, inputProps: config, fullWidth: true }));
		};
		/**
		 * Default tester for number controls.
		 * @type {RankedTester}
		 */
		exports.materialNumberFieldTester = core_1.rankWith(2, core_1.isNumberControl);
		exports.default = react_1.connectToJsonForms(core_1.mapStateToFieldProps, core_1.mapDispatchToFieldProps)(exports.MaterialNumberField);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Input":817,"react":126}],112:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Input_1 = require("material-ui/Input");
		var MaterialNumberFormatField = function (props) {
		    var className = props.className, id = props.id, enabled = props.enabled, uischema = props.uischema, isValid = props.isValid, path = props.path, handleChange = props.handleChange, scopedSchema = props.scopedSchema;
		    var maxLength = scopedSchema.maxLength;
		    var config;
		    if (uischema.options && uischema.options.restrict) {
		        config = { 'maxLength': maxLength };
		    }
		    else {
		        config = {};
		    }
		    var trim = uischema.options && uischema.options.trim;
		    var formattedNumber = props.toFormatted(props.data);
		    var onChange = function (ev) {
		        var validStringNumber = props.fromFormatted(ev.currentTarget.value);
		        handleChange(path, validStringNumber);
		    };
		    return (React.createElement(Input_1.default, { type: 'text', value: formattedNumber, onChange: onChange, className: className, id: id, disabled: !enabled, autoFocus: uischema.options && uischema.options.focus, multiline: uischema.options && uischema.options.multi, fullWidth: !trim || maxLength === undefined, inputProps: config, error: !isValid }));
		};
		/**
		 * Default tester for text-based/string controls.
		 * @type {RankedTester}
		 */
		exports.materialNumberFormatFieldTester = core_1.rankWith(4, core_1.isNumberFormatControl);
		exports.default = react_1.connectToJsonForms(core_1.mapStateToFieldProps, core_1.mapDispatchToFieldProps)(MaterialNumberFormatField);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Input":817,"react":126}],113:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Input_1 = require("material-ui/Input");
		var MaterialSliderField = function (props) {
		    var data = props.data, className = props.className, id = props.id, enabled = props.enabled, uischema = props.uischema, path = props.path, handleChange = props.handleChange, scopedSchema = props.scopedSchema;
		    var config = { 'max': scopedSchema.maximum, 'min': scopedSchema.minimum };
		    return (React.createElement(Input_1.default, { type: 'range', value: data || scopedSchema.default, onChange: function (ev) { return handleChange(path, Number(ev.currentTarget.value)); }, className: className, id: id, disabled: !enabled, autoFocus: uischema.options && uischema.options.focus, inputProps: config, endAdornment: React.createElement("label", { style: { marginLeft: '0.5em' } }, data || scopedSchema.default) }));
		};
		/**
		 * Matrial tester for slider controls.
		 * @type {RankedTester}
		 */
		exports.materialSliderFieldTester = core_1.rankWith(4, core_1.isRangeControl);
		exports.default = react_1.connectToJsonForms(core_1.mapStateToFieldProps, core_1.mapDispatchToFieldProps)(MaterialSliderField);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Input":817,"react":126}],114:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Input_1 = require("material-ui/Input");
		exports.MaterialTextField = function (props) {
		    var data = props.data, config = props.config, className = props.className, id = props.id, enabled = props.enabled, uischema = props.uischema, isValid = props.isValid, path = props.path, handleChange = props.handleChange, scopedSchema = props.scopedSchema;
		    var maxLength = scopedSchema.maxLength;
		    var inputProps;
		    if (config.restrict) {
		        inputProps = { 'maxLength': maxLength };
		    }
		    else {
		        inputProps = {};
		    }
		    if (config.trim && maxLength !== undefined) {
		        inputProps.size = maxLength;
		    }
		    var onChange = function (ev) { return handleChange(path, ev.target.value); };
		    return (React.createElement(Input_1.default, { type: 'text', value: data || '', onChange: onChange, className: className, id: id, disabled: !enabled, autoFocus: uischema.options && uischema.options.focus, multiline: uischema.options && uischema.options.multi, fullWidth: !config.trim || maxLength === undefined, inputProps: inputProps, error: !isValid }));
		};
		/**
		 * Default tester for text-based/string controls.
		 * @type {RankedTester}
		 */
		exports.materialTextFieldTester = core_1.rankWith(1, core_1.isStringControl);
		exports.default = react_1.connectToJsonForms(core_1.mapStateToFieldProps, core_1.mapDispatchToFieldProps)(exports.MaterialTextField);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Input":817,"react":126}],115:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var Input_1 = require("material-ui/Input");
		exports.MaterialTimeField = function (props) {
		    var data = props.data, className = props.className, id = props.id, enabled = props.enabled, uischema = props.uischema, path = props.path, handleChange = props.handleChange;
		    return (React.createElement(Input_1.default, { type: 'time', value: data || '', onChange: function (ev) { return handleChange(path, ev.target.value); }, className: className, id: id, disabled: !enabled, autoFocus: uischema.options && uischema.options.focus, fullWidth: true }));
		};
		exports.materialTimeFieldTester = core_1.rankWith(2, core_1.isTimeControl);
		exports.default = react_1.connectToJsonForms(core_1.mapStateToFieldProps, core_1.mapDispatchToFieldProps)(exports.MaterialTimeField);

		},{"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/Input":817,"react":126}],116:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var MaterialBooleanField_1 = require("./MaterialBooleanField");
		exports.MaterialBooleanField = MaterialBooleanField_1.default;
		exports.materialBooleanFieldTester = MaterialBooleanField_1.materialBooleanFieldTester;
		var MaterialDateField_1 = require("./MaterialDateField");
		exports.MaterialDateField = MaterialDateField_1.default;
		exports.materialDateFieldTester = MaterialDateField_1.materialDateFieldTester;
		var MaterialEnumField_1 = require("./MaterialEnumField");
		exports.MaterialEnumField = MaterialEnumField_1.default;
		exports.materialEnumFieldTester = MaterialEnumField_1.materialEnumFieldTester;
		var MaterialIntegerField_1 = require("./MaterialIntegerField");
		exports.MaterialIntegerField = MaterialIntegerField_1.default;
		exports.materialIntegerFieldTester = MaterialIntegerField_1.materialIntegerFieldTester;
		var MaterialNumberField_1 = require("./MaterialNumberField");
		exports.MaterialNumberField = MaterialNumberField_1.default;
		exports.materialNumberFieldTester = MaterialNumberField_1.materialNumberFieldTester;
		var MaterialNumberFormatField_1 = require("./MaterialNumberFormatField");
		exports.MaterialNumberFormatField = MaterialNumberFormatField_1.default;
		exports.materialNumberFormatFieldTester = MaterialNumberFormatField_1.materialNumberFormatFieldTester;
		var MaterialSliderField_1 = require("./MaterialSliderField");
		exports.MaterialSliderField = MaterialSliderField_1.default;
		exports.materialSliderFieldTester = MaterialSliderField_1.materialSliderFieldTester;
		var MaterialTextField_1 = require("./MaterialTextField");
		exports.MaterialTextField = MaterialTextField_1.default;
		exports.materialTextFieldTester = MaterialTextField_1.materialTextFieldTester;
		var MaterialTimeField_1 = require("./MaterialTimeField");
		exports.MaterialTimeField = MaterialTimeField_1.default;
		exports.materialTimeFieldTester = MaterialTimeField_1.materialTimeFieldTester;

		},{"./MaterialBooleanField":107,"./MaterialDateField":108,"./MaterialEnumField":109,"./MaterialIntegerField":110,"./MaterialNumberField":111,"./MaterialNumberFormatField":112,"./MaterialSliderField":113,"./MaterialTextField":114,"./MaterialTimeField":115}],117:[function(require,module,exports){
		"use strict";
		function __export(m) {
		    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
		}
		Object.defineProperty(exports, "__esModule", { value: true });
		var complex_1 = require("./complex");
		var additional_1 = require("./additional");
		var controls_1 = require("./controls");
		var layouts_1 = require("./layouts");
		var fields_1 = require("./fields");
		__export(require("./complex"));
		__export(require("./controls"));
		__export(require("./layouts"));
		__export(require("./fields"));
		exports.materialRenderers = [
		    // controls
		    { tester: complex_1.materialArrayControlTester, renderer: complex_1.MaterialArrayControlRenderer },
		    { tester: controls_1.materialBooleanControlTester, renderer: controls_1.MaterialBooleanControl },
		    { tester: controls_1.materialNativeControlTester, renderer: controls_1.MaterialNativeControl },
		    { tester: controls_1.materialInputControlTester, renderer: controls_1.MaterialInputControl },
		    { tester: controls_1.materialDateTimeControlTester, renderer: controls_1.MaterialDateTimeControl },
		    { tester: controls_1.materialDateControlTester, renderer: controls_1.MaterialDateControl },
		    // layouts
		    { tester: layouts_1.materialGroupTester, renderer: layouts_1.MaterialGroupLayout },
		    { tester: layouts_1.materialHorizontalLayoutTester, renderer: layouts_1.MaterialHorizontalLayout },
		    { tester: layouts_1.materialVerticalLayoutTester, renderer: layouts_1.MaterialVerticalLayout },
		    { tester: layouts_1.materialCategorizationTester, renderer: layouts_1.MaterialCategorizationLayout },
		    // additional
		    { tester: additional_1.materialLabelRendererTester, renderer: additional_1.MaterialLabelRenderer }
		];
		exports.materialFields = [
		    { tester: fields_1.materialBooleanFieldTester, field: fields_1.MaterialBooleanField },
		    { tester: fields_1.materialDateFieldTester, field: fields_1.MaterialDateField },
		    { tester: fields_1.materialEnumFieldTester, field: fields_1.MaterialEnumField },
		    { tester: fields_1.materialIntegerFieldTester, field: fields_1.MaterialIntegerField },
		    { tester: fields_1.materialNumberFieldTester, field: fields_1.MaterialNumberField },
		    { tester: fields_1.materialNumberFormatFieldTester, field: fields_1.MaterialNumberFormatField },
		    { tester: fields_1.materialSliderFieldTester, field: fields_1.MaterialSliderField },
		    { tester: fields_1.materialTextFieldTester, field: fields_1.MaterialTextField },
		    { tester: fields_1.materialTimeFieldTester, field: fields_1.MaterialTimeField },
		];

		},{"./additional":95,"./complex":100,"./controls":106,"./fields":116,"./layouts":122}],118:[function(require,module,exports){
		"use strict";
		var __extends = (this && this.__extends) || (function () {
		    var extendStatics = Object.setPrototypeOf ||
		        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
		        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
		    return function (d, b) {
		        extendStatics(d, b);
		        function __() { this.constructor = d; }
		        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		    };
		})();
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var AppBar_1 = require("material-ui/AppBar");
		var Tabs_1 = require("material-ui/Tabs");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var layout_1 = require("../util/layout");
		var isSingleLevelCategorization = core_1.and(core_1.uiTypeIs('Categorization'), function (uischema) {
		    var categorization = uischema;
		    return categorization.elements.reduce(function (acc, e) { return acc && e.type === 'Category'; }, true);
		});
		exports.materialCategorizationTester = core_1.rankWith(1, isSingleLevelCategorization);
		var MaterialCategorizationLayoutRenderer = /** @class */ (function (_super) {
		    __extends(MaterialCategorizationLayoutRenderer, _super);
		    function MaterialCategorizationLayoutRenderer(props) {
		        var _this = _super.call(this, props) || this;
		        _this.handleChange = function (_event, value) {
		            _this.setState({ value: value });
		        };
		        _this.state = {
		            value: 0
		        };
		        return _this;
		    }
		    MaterialCategorizationLayoutRenderer.prototype.render = function () {
		        var _a = this.props, uischema = _a.uischema, schema = _a.schema, path = _a.path, visible = _a.visible;
		        var value = this.state.value;
		        var categorization = uischema;
		        var childProps = {
		            elements: categorization.elements[value].elements,
		            schema: schema,
		            path: path,
		            direction: 'column',
		            visible: visible
		        };
		        var style = { marginBottom: '10px' };
		        if (!visible) {
		            style.display = 'none';
		        }
		        return (React.createElement("div", { style: style },
		            React.createElement(AppBar_1.default, { position: 'static' },
		                React.createElement(Tabs_1.default, { value: value, onChange: this.handleChange }, categorization.elements.map(function (e, idx) { return React.createElement(Tabs_1.Tab, { key: idx, label: e.label }); }))),
		            React.createElement("div", { style: { marginTop: '0.5em' } },
		                React.createElement(layout_1.MaterialLayoutRenderer, __assign({}, childProps)))));
		    };
		    return MaterialCategorizationLayoutRenderer;
		}(react_1.RendererComponent));
		exports.MaterialCategorizationLayoutRenderer = MaterialCategorizationLayoutRenderer;
		exports.default = react_1.connectToJsonForms(core_1.mapStateToLayoutProps)(MaterialCategorizationLayoutRenderer);

		},{"../util/layout":123,"@jsonforms/core":52,"@jsonforms/react":132,"material-ui/AppBar":756,"material-ui/Tabs":876,"react":126}],119:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var _ = window.lodashs;
		var material_ui_1 = require("material-ui");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var layout_1 = require("../util/layout");
		exports.groupTester = core_1.rankWith(1, core_1.uiTypeIs('Group'));
		exports.MaterializedGroupLayoutRenderer = function (props) {
		    var uischema = props.uischema, schema = props.schema, path = props.path, visible = props.visible;
		    var groupLayout = uischema;
		    var childProps = {
		        elements: groupLayout.elements,
		        schema: schema,
		        path: path,
		        direction: 'column',
		        visible: visible
		    };
		    var style = { marginBottom: '10px' };
		    if (!visible) {
		        style.display = 'none';
		    }
		    return (React.createElement(material_ui_1.Card, { style: style },
		        !_.isEmpty(groupLayout.label) && React.createElement(material_ui_1.CardHeader, { title: groupLayout.label }),
		        React.createElement(material_ui_1.CardContent, null,
		            React.createElement(layout_1.MaterialLayoutRenderer, __assign({}, childProps)))));
		};
		exports.default = react_1.connectToJsonForms(core_1.mapStateToLayoutProps)(exports.MaterializedGroupLayoutRenderer);
		exports.materialGroupTester = core_1.withIncreasedRank(1, exports.groupTester);

		},{"../util/layout":123,"@jsonforms/core":52,"@jsonforms/react":132,"material-ui":906,"react":126}],120:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var layout_1 = require("../util/layout");
		/**
		 * Default tester for a horizontal layout.
		 * @type {RankedTester}
		 */
		exports.materialHorizontalLayoutTester = core_1.rankWith(2, core_1.uiTypeIs('HorizontalLayout'));
		exports.MaterialHorizontalLayoutRenderer = function (_a) {
		    var schema = _a.schema, uischema = _a.uischema, path = _a.path, visible = _a.visible;
		    var horizontalLayout = uischema;
		    var childProps = {
		        elements: horizontalLayout.elements,
		        schema: schema,
		        path: path,
		        direction: 'row',
		        visible: visible
		    };
		    return React.createElement(layout_1.MaterialLayoutRenderer, __assign({}, childProps));
		};
		var ConnectedMaterialHorizontalLayoutRendered = react_1.connectToJsonForms(core_1.mapStateToLayoutProps)(exports.MaterialHorizontalLayoutRenderer);
		exports.default = ConnectedMaterialHorizontalLayoutRendered;

		},{"../util/layout":123,"@jsonforms/core":52,"@jsonforms/react":132,"react":126}],121:[function(require,module,exports){
		"use strict";
		var __assign = (this && this.__assign) || Object.assign || function(t) {
		    for (var s, i = 1, n = arguments.length; i < n; i++) {
		        s = arguments[i];
		        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
		            t[p] = s[p];
		    }
		    return t;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var core_1 = require("@jsonforms/core");
		var react_1 = require("@jsonforms/react");
		var layout_1 = require("../util/layout");
		/**
		 * Default tester for a vertical layout.
		 * @type {RankedTester}
		 */
		exports.materialVerticalLayoutTester = core_1.rankWith(1, core_1.uiTypeIs('VerticalLayout'));
		exports.MaterialVerticalLayoutRenderer = function (_a) {
		    var schema = _a.schema, uischema = _a.uischema, path = _a.path, visible = _a.visible;
		    var verticalLayout = uischema;
		    var childProps = {
		        elements: verticalLayout.elements,
		        schema: schema,
		        path: path,
		        direction: 'column',
		        visible: visible
		    };
		    return React.createElement(layout_1.MaterialLayoutRenderer, __assign({}, childProps));
		};
		exports.default = react_1.connectToJsonForms(core_1.mapStateToLayoutProps)(exports.MaterialVerticalLayoutRenderer);

		},{"../util/layout":123,"@jsonforms/core":52,"@jsonforms/react":132,"react":126}],122:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var MaterialGroupLayout_1 = require("./MaterialGroupLayout");
		exports.MaterialGroupLayout = MaterialGroupLayout_1.default;
		exports.materialGroupTester = MaterialGroupLayout_1.materialGroupTester;
		var MaterialHorizontalLayout_1 = require("./MaterialHorizontalLayout");
		exports.MaterialHorizontalLayout = MaterialHorizontalLayout_1.default;
		exports.materialHorizontalLayoutTester = MaterialHorizontalLayout_1.materialHorizontalLayoutTester;
		var MaterialVerticalLayout_1 = require("./MaterialVerticalLayout");
		exports.MaterialVerticalLayout = MaterialVerticalLayout_1.default;
		exports.materialVerticalLayoutTester = MaterialVerticalLayout_1.materialVerticalLayoutTester;
		var MaterialCategorizationLayout_1 = require("./MaterialCategorizationLayout");
		exports.MaterialCategorizationLayout = MaterialCategorizationLayout_1.default;
		exports.materialCategorizationTester = MaterialCategorizationLayout_1.materialCategorizationTester;

		},{"./MaterialCategorizationLayout":118,"./MaterialGroupLayout":119,"./MaterialHorizontalLayout":120,"./MaterialVerticalLayout":121}],123:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var _ = window.lodashs;
		var react_1 = require("@jsonforms/react");
		var Grid_1 = require("material-ui/Grid");
		var renderChildren = function (elements, schema, path) {
		    return elements.map(function (child, index) {
		        return (React.createElement(Grid_1.default, { item: true, key: path + "-" + index, xs: true },
		            React.createElement(react_1.JsonForms, { uischema: child, schema: schema, path: path })));
		    });
		};
		exports.MaterialLayoutRenderer = function (_a) {
		    var visible = _a.visible, elements = _a.elements, schema = _a.schema, path = _a.path, direction = _a.direction;
		    if (_.isEmpty(elements)) {
		        return null;
		    }
		    else {
		        return (React.createElement(Grid_1.default, { container: true, hidden: { xsUp: !visible }, direction: direction }, renderChildren(elements, schema, path)));
		    }
		};

		},{"@jsonforms/react":132,"material-ui/Grid":804,"react":126}],124:[function(require,module,exports){
		(function (process){
		/** @license React v16.2.0
		 * react.development.js
		 *
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 */

		'use strict';



		if (process.env.NODE_ENV !== "production") {
		  (function() {
		'use strict';

		var _assign = require('object-assign');
		var emptyObject = require('fbjs/lib/emptyObject');
		var invariant = require('fbjs/lib/invariant');
		var warning = require('fbjs/lib/warning');
		var emptyFunction = require('fbjs/lib/emptyFunction');
		var checkPropTypes = require('prop-types/checkPropTypes');

		// TODO: this is special because it gets imported during build.

		var ReactVersion = '16.2.0';

		// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
		// nor polyfill, then a plain number is used for performance.
		var hasSymbol = typeof Symbol === 'function' && Symbol['for'];

		var REACT_ELEMENT_TYPE = hasSymbol ? Symbol['for']('react.element') : 0xeac7;
		var REACT_CALL_TYPE = hasSymbol ? Symbol['for']('react.call') : 0xeac8;
		var REACT_RETURN_TYPE = hasSymbol ? Symbol['for']('react.return') : 0xeac9;
		var REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;
		var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;

		var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
		var FAUX_ITERATOR_SYMBOL = '@@iterator';

		function getIteratorFn(maybeIterable) {
		  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
		    return null;
		  }
		  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
		  if (typeof maybeIterator === 'function') {
		    return maybeIterator;
		  }
		  return null;
		}

		/**
		 * WARNING: DO NOT manually require this module.
		 * This is a replacement for `invariant(...)` used by the error code system
		 * and will _only_ be required by the corresponding babel pass.
		 * It always throws.
		 */

		/**
		 * Forked from fbjs/warning:
		 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
		 *
		 * Only change is we use console.warn instead of console.error,
		 * and do nothing when 'console' is not supported.
		 * This really simplifies the code.
		 * ---
		 * Similar to invariant but only logs a warning if the condition is not met.
		 * This can be used to log issues in development environments in critical
		 * paths. Removing the logging code for production environments will keep the
		 * same logic and follow the same code paths.
		 */

		var lowPriorityWarning = function () {};

		{
		  var printWarning = function (format) {
		    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		      args[_key - 1] = arguments[_key];
		    }

		    var argIndex = 0;
		    var message = 'Warning: ' + format.replace(/%s/g, function () {
		      return args[argIndex++];
		    });
		    if (typeof console !== 'undefined') {
		      console.warn(message);
		    }
		    try {
		      // --- Welcome to debugging React ---
		      // This error was thrown as a convenience so that you can use this stack
		      // to find the callsite that caused this warning to fire.
		      throw new Error(message);
		    } catch (x) {}
		  };

		  lowPriorityWarning = function (condition, format) {
		    if (format === undefined) {
		      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
		    }
		    if (!condition) {
		      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
		        args[_key2 - 2] = arguments[_key2];
		      }

		      printWarning.apply(undefined, [format].concat(args));
		    }
		  };
		}

		var lowPriorityWarning$1 = lowPriorityWarning;

		var didWarnStateUpdateForUnmountedComponent = {};

		function warnNoop(publicInstance, callerName) {
		  {
		    var constructor = publicInstance.constructor;
		    var componentName = constructor && (constructor.displayName || constructor.name) || 'ReactClass';
		    var warningKey = componentName + '.' + callerName;
		    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
		      return;
		    }
		    warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\n\nPlease check the code for the %s component.', callerName, callerName, componentName);
		    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
		  }
		}

		/**
		 * This is the abstract API for an update queue.
		 */
		var ReactNoopUpdateQueue = {
		  /**
		   * Checks whether or not this composite component is mounted.
		   * @param {ReactClass} publicInstance The instance we want to test.
		   * @return {boolean} True if mounted, false otherwise.
		   * @protected
		   * @final
		   */
		  isMounted: function (publicInstance) {
		    return false;
		  },

		  /**
		   * Forces an update. This should only be invoked when it is known with
		   * certainty that we are **not** in a DOM transaction.
		   *
		   * You may want to call this when you know that some deeper aspect of the
		   * component's state has changed but `setState` was not called.
		   *
		   * This will not invoke `shouldComponentUpdate`, but it will invoke
		   * `componentWillUpdate` and `componentDidUpdate`.
		   *
		   * @param {ReactClass} publicInstance The instance that should rerender.
		   * @param {?function} callback Called after component is updated.
		   * @param {?string} callerName name of the calling function in the public API.
		   * @internal
		   */
		  enqueueForceUpdate: function (publicInstance, callback, callerName) {
		    warnNoop(publicInstance, 'forceUpdate');
		  },

		  /**
		   * Replaces all of the state. Always use this or `setState` to mutate state.
		   * You should treat `this.state` as immutable.
		   *
		   * There is no guarantee that `this.state` will be immediately updated, so
		   * accessing `this.state` after calling this method may return the old value.
		   *
		   * @param {ReactClass} publicInstance The instance that should rerender.
		   * @param {object} completeState Next state.
		   * @param {?function} callback Called after component is updated.
		   * @param {?string} callerName name of the calling function in the public API.
		   * @internal
		   */
		  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
		    warnNoop(publicInstance, 'replaceState');
		  },

		  /**
		   * Sets a subset of the state. This only exists because _pendingState is
		   * internal. This provides a merging strategy that is not available to deep
		   * properties which is confusing. TODO: Expose pendingState or don't use it
		   * during the merge.
		   *
		   * @param {ReactClass} publicInstance The instance that should rerender.
		   * @param {object} partialState Next partial state to be merged with state.
		   * @param {?function} callback Called after component is updated.
		   * @param {?string} Name of the calling function in the public API.
		   * @internal
		   */
		  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
		    warnNoop(publicInstance, 'setState');
		  }
		};

		/**
		 * Base class helpers for the updating state of a component.
		 */
		function Component(props, context, updater) {
		  this.props = props;
		  this.context = context;
		  this.refs = emptyObject;
		  // We initialize the default updater but the real one gets injected by the
		  // renderer.
		  this.updater = updater || ReactNoopUpdateQueue;
		}

		Component.prototype.isReactComponent = {};

		/**
		 * Sets a subset of the state. Always use this to mutate
		 * state. You should treat `this.state` as immutable.
		 *
		 * There is no guarantee that `this.state` will be immediately updated, so
		 * accessing `this.state` after calling this method may return the old value.
		 *
		 * There is no guarantee that calls to `setState` will run synchronously,
		 * as they may eventually be batched together.  You can provide an optional
		 * callback that will be executed when the call to setState is actually
		 * completed.
		 *
		 * When a function is provided to setState, it will be called at some point in
		 * the future (not synchronously). It will be called with the up to date
		 * component arguments (state, props, context). These values can be different
		 * from this.* because your function may be called after receiveProps but before
		 * shouldComponentUpdate, and this new state, props, and context will not yet be
		 * assigned to this.
		 *
		 * @param {object|function} partialState Next partial state or function to
		 *        produce next partial state to be merged with current state.
		 * @param {?function} callback Called after state is updated.
		 * @final
		 * @protected
		 */
		Component.prototype.setState = function (partialState, callback) {
		  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
		  this.updater.enqueueSetState(this, partialState, callback, 'setState');
		};

		/**
		 * Forces an update. This should only be invoked when it is known with
		 * certainty that we are **not** in a DOM transaction.
		 *
		 * You may want to call this when you know that some deeper aspect of the
		 * component's state has changed but `setState` was not called.
		 *
		 * This will not invoke `shouldComponentUpdate`, but it will invoke
		 * `componentWillUpdate` and `componentDidUpdate`.
		 *
		 * @param {?function} callback Called after update is complete.
		 * @final
		 * @protected
		 */
		Component.prototype.forceUpdate = function (callback) {
		  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
		};

		/**
		 * Deprecated APIs. These APIs used to exist on classic React classes but since
		 * we would like to deprecate them, we're not going to move them over to this
		 * modern base class. Instead, we define a getter that warns if it's accessed.
		 */
		{
		  var deprecatedAPIs = {
		    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
		    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
		  };
		  var defineDeprecationWarning = function (methodName, info) {
		    Object.defineProperty(Component.prototype, methodName, {
		      get: function () {
		        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
		        return undefined;
		      }
		    });
		  };
		  for (var fnName in deprecatedAPIs) {
		    if (deprecatedAPIs.hasOwnProperty(fnName)) {
		      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
		    }
		  }
		}

		/**
		 * Base class helpers for the updating state of a component.
		 */
		function PureComponent(props, context, updater) {
		  // Duplicated from Component.
		  this.props = props;
		  this.context = context;
		  this.refs = emptyObject;
		  // We initialize the default updater but the real one gets injected by the
		  // renderer.
		  this.updater = updater || ReactNoopUpdateQueue;
		}

		function ComponentDummy() {}
		ComponentDummy.prototype = Component.prototype;
		var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
		pureComponentPrototype.constructor = PureComponent;
		// Avoid an extra prototype jump for these methods.
		_assign(pureComponentPrototype, Component.prototype);
		pureComponentPrototype.isPureReactComponent = true;

		function AsyncComponent(props, context, updater) {
		  // Duplicated from Component.
		  this.props = props;
		  this.context = context;
		  this.refs = emptyObject;
		  // We initialize the default updater but the real one gets injected by the
		  // renderer.
		  this.updater = updater || ReactNoopUpdateQueue;
		}

		var asyncComponentPrototype = AsyncComponent.prototype = new ComponentDummy();
		asyncComponentPrototype.constructor = AsyncComponent;
		// Avoid an extra prototype jump for these methods.
		_assign(asyncComponentPrototype, Component.prototype);
		asyncComponentPrototype.unstable_isAsyncReactComponent = true;
		asyncComponentPrototype.render = function () {
		  return this.props.children;
		};

		/**
		 * Keeps track of the current owner.
		 *
		 * The current owner is the component who should own any components that are
		 * currently being constructed.
		 */
		var ReactCurrentOwner = {
		  /**
		   * @internal
		   * @type {ReactComponent}
		   */
		  current: null
		};

		var hasOwnProperty = Object.prototype.hasOwnProperty;

		var RESERVED_PROPS = {
		  key: true,
		  ref: true,
		  __self: true,
		  __source: true
		};

		var specialPropKeyWarningShown;
		var specialPropRefWarningShown;

		function hasValidRef(config) {
		  {
		    if (hasOwnProperty.call(config, 'ref')) {
		      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
		      if (getter && getter.isReactWarning) {
		        return false;
		      }
		    }
		  }
		  return config.ref !== undefined;
		}

		function hasValidKey(config) {
		  {
		    if (hasOwnProperty.call(config, 'key')) {
		      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
		      if (getter && getter.isReactWarning) {
		        return false;
		      }
		    }
		  }
		  return config.key !== undefined;
		}

		function defineKeyPropWarningGetter(props, displayName) {
		  var warnAboutAccessingKey = function () {
		    if (!specialPropKeyWarningShown) {
		      specialPropKeyWarningShown = true;
		      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
		    }
		  };
		  warnAboutAccessingKey.isReactWarning = true;
		  Object.defineProperty(props, 'key', {
		    get: warnAboutAccessingKey,
		    configurable: true
		  });
		}

		function defineRefPropWarningGetter(props, displayName) {
		  var warnAboutAccessingRef = function () {
		    if (!specialPropRefWarningShown) {
		      specialPropRefWarningShown = true;
		      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
		    }
		  };
		  warnAboutAccessingRef.isReactWarning = true;
		  Object.defineProperty(props, 'ref', {
		    get: warnAboutAccessingRef,
		    configurable: true
		  });
		}

		/**
		 * Factory method to create a new React element. This no longer adheres to
		 * the class pattern, so do not use new to call it. Also, no instanceof check
		 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
		 * if something is a React Element.
		 *
		 * @param {*} type
		 * @param {*} key
		 * @param {string|object} ref
		 * @param {*} self A *temporary* helper to detect places where `this` is
		 * different from the `owner` when React.createElement is called, so that we
		 * can warn. We want to get rid of owner and replace string `ref`s with arrow
		 * functions, and as long as `this` and owner are the same, there will be no
		 * change in behavior.
		 * @param {*} source An annotation object (added by a transpiler or otherwise)
		 * indicating filename, line number, and/or other information.
		 * @param {*} owner
		 * @param {*} props
		 * @internal
		 */
		var ReactElement = function (type, key, ref, self, source, owner, props) {
		  var element = {
		    // This tag allow us to uniquely identify this as a React Element
		    $$typeof: REACT_ELEMENT_TYPE,

		    // Built-in properties that belong on the element
		    type: type,
		    key: key,
		    ref: ref,
		    props: props,

		    // Record the component responsible for creating this element.
		    _owner: owner
		  };

		  {
		    // The validation flag is currently mutative. We put it on
		    // an external backing store so that we can freeze the whole object.
		    // This can be replaced with a WeakMap once they are implemented in
		    // commonly used development environments.
		    element._store = {};

		    // To make comparing ReactElements easier for testing purposes, we make
		    // the validation flag non-enumerable (where possible, which should
		    // include every environment we run tests in), so the test framework
		    // ignores it.
		    Object.defineProperty(element._store, 'validated', {
		      configurable: false,
		      enumerable: false,
		      writable: true,
		      value: false
		    });
		    // self and source are DEV only properties.
		    Object.defineProperty(element, '_self', {
		      configurable: false,
		      enumerable: false,
		      writable: false,
		      value: self
		    });
		    // Two elements created in two different places should be considered
		    // equal for testing purposes and therefore we hide it from enumeration.
		    Object.defineProperty(element, '_source', {
		      configurable: false,
		      enumerable: false,
		      writable: false,
		      value: source
		    });
		    if (Object.freeze) {
		      Object.freeze(element.props);
		      Object.freeze(element);
		    }
		  }

		  return element;
		};

		/**
		 * Create and return a new ReactElement of the given type.
		 * See https://reactjs.org/docs/react-api.html#createelement
		 */
		function createElement(type, config, children) {
		  var propName;

		  // Reserved names are extracted
		  var props = {};

		  var key = null;
		  var ref = null;
		  var self = null;
		  var source = null;

		  if (config != null) {
		    if (hasValidRef(config)) {
		      ref = config.ref;
		    }
		    if (hasValidKey(config)) {
		      key = '' + config.key;
		    }

		    self = config.__self === undefined ? null : config.__self;
		    source = config.__source === undefined ? null : config.__source;
		    // Remaining properties are added to a new props object
		    for (propName in config) {
		      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
		        props[propName] = config[propName];
		      }
		    }
		  }

		  // Children can be more than one argument, and those are transferred onto
		  // the newly allocated props object.
		  var childrenLength = arguments.length - 2;
		  if (childrenLength === 1) {
		    props.children = children;
		  } else if (childrenLength > 1) {
		    var childArray = Array(childrenLength);
		    for (var i = 0; i < childrenLength; i++) {
		      childArray[i] = arguments[i + 2];
		    }
		    {
		      if (Object.freeze) {
		        Object.freeze(childArray);
		      }
		    }
		    props.children = childArray;
		  }

		  // Resolve default props
		  if (type && type.defaultProps) {
		    var defaultProps = type.defaultProps;
		    for (propName in defaultProps) {
		      if (props[propName] === undefined) {
		        props[propName] = defaultProps[propName];
		      }
		    }
		  }
		  {
		    if (key || ref) {
		      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
		        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
		        if (key) {
		          defineKeyPropWarningGetter(props, displayName);
		        }
		        if (ref) {
		          defineRefPropWarningGetter(props, displayName);
		        }
		      }
		    }
		  }
		  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
		}

		/**
		 * Return a function that produces ReactElements of a given type.
		 * See https://reactjs.org/docs/react-api.html#createfactory
		 */


		function cloneAndReplaceKey(oldElement, newKey) {
		  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

		  return newElement;
		}

		/**
		 * Clone and return a new ReactElement using element as the starting point.
		 * See https://reactjs.org/docs/react-api.html#cloneelement
		 */
		function cloneElement(element, config, children) {
		  var propName;

		  // Original props are copied
		  var props = _assign({}, element.props);

		  // Reserved names are extracted
		  var key = element.key;
		  var ref = element.ref;
		  // Self is preserved since the owner is preserved.
		  var self = element._self;
		  // Source is preserved since cloneElement is unlikely to be targeted by a
		  // transpiler, and the original source is probably a better indicator of the
		  // true owner.
		  var source = element._source;

		  // Owner will be preserved, unless ref is overridden
		  var owner = element._owner;

		  if (config != null) {
		    if (hasValidRef(config)) {
		      // Silently steal the ref from the parent.
		      ref = config.ref;
		      owner = ReactCurrentOwner.current;
		    }
		    if (hasValidKey(config)) {
		      key = '' + config.key;
		    }

		    // Remaining properties override existing props
		    var defaultProps;
		    if (element.type && element.type.defaultProps) {
		      defaultProps = element.type.defaultProps;
		    }
		    for (propName in config) {
		      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
		        if (config[propName] === undefined && defaultProps !== undefined) {
		          // Resolve default props
		          props[propName] = defaultProps[propName];
		        } else {
		          props[propName] = config[propName];
		        }
		      }
		    }
		  }

		  // Children can be more than one argument, and those are transferred onto
		  // the newly allocated props object.
		  var childrenLength = arguments.length - 2;
		  if (childrenLength === 1) {
		    props.children = children;
		  } else if (childrenLength > 1) {
		    var childArray = Array(childrenLength);
		    for (var i = 0; i < childrenLength; i++) {
		      childArray[i] = arguments[i + 2];
		    }
		    props.children = childArray;
		  }

		  return ReactElement(element.type, key, ref, self, source, owner, props);
		}

		/**
		 * Verifies the object is a ReactElement.
		 * See https://reactjs.org/docs/react-api.html#isvalidelement
		 * @param {?object} object
		 * @return {boolean} True if `object` is a valid component.
		 * @final
		 */
		function isValidElement(object) {
		  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
		}

		var ReactDebugCurrentFrame = {};

		{
		  // Component that is being worked on
		  ReactDebugCurrentFrame.getCurrentStack = null;

		  ReactDebugCurrentFrame.getStackAddendum = function () {
		    var impl = ReactDebugCurrentFrame.getCurrentStack;
		    if (impl) {
		      return impl();
		    }
		    return null;
		  };
		}

		var SEPARATOR = '.';
		var SUBSEPARATOR = ':';

		/**
		 * Escape and wrap key so it is safe to use as a reactid
		 *
		 * @param {string} key to be escaped.
		 * @return {string} the escaped key.
		 */
		function escape(key) {
		  var escapeRegex = /[=:]/g;
		  var escaperLookup = {
		    '=': '=0',
		    ':': '=2'
		  };
		  var escapedString = ('' + key).replace(escapeRegex, function (match) {
		    return escaperLookup[match];
		  });

		  return '$' + escapedString;
		}

		/**
		 * TODO: Test that a single child and an array with one item have the same key
		 * pattern.
		 */

		var didWarnAboutMaps = false;

		var userProvidedKeyEscapeRegex = /\/+/g;
		function escapeUserProvidedKey(text) {
		  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
		}

		var POOL_SIZE = 10;
		var traverseContextPool = [];
		function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
		  if (traverseContextPool.length) {
		    var traverseContext = traverseContextPool.pop();
		    traverseContext.result = mapResult;
		    traverseContext.keyPrefix = keyPrefix;
		    traverseContext.func = mapFunction;
		    traverseContext.context = mapContext;
		    traverseContext.count = 0;
		    return traverseContext;
		  } else {
		    return {
		      result: mapResult,
		      keyPrefix: keyPrefix,
		      func: mapFunction,
		      context: mapContext,
		      count: 0
		    };
		  }
		}

		function releaseTraverseContext(traverseContext) {
		  traverseContext.result = null;
		  traverseContext.keyPrefix = null;
		  traverseContext.func = null;
		  traverseContext.context = null;
		  traverseContext.count = 0;
		  if (traverseContextPool.length < POOL_SIZE) {
		    traverseContextPool.push(traverseContext);
		  }
		}

		/**
		 * @param {?*} children Children tree container.
		 * @param {!string} nameSoFar Name of the key path so far.
		 * @param {!function} callback Callback to invoke with each child found.
		 * @param {?*} traverseContext Used to pass information throughout the traversal
		 * process.
		 * @return {!number} The number of children in this subtree.
		 */
		function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
		  var type = typeof children;

		  if (type === 'undefined' || type === 'boolean') {
		    // All of the above are perceived as null.
		    children = null;
		  }

		  var invokeCallback = false;

		  if (children === null) {
		    invokeCallback = true;
		  } else {
		    switch (type) {
		      case 'string':
		      case 'number':
		        invokeCallback = true;
		        break;
		      case 'object':
		        switch (children.$$typeof) {
		          case REACT_ELEMENT_TYPE:
		          case REACT_CALL_TYPE:
		          case REACT_RETURN_TYPE:
		          case REACT_PORTAL_TYPE:
		            invokeCallback = true;
		        }
		    }
		  }

		  if (invokeCallback) {
		    callback(traverseContext, children,
		    // If it's the only child, treat the name as if it was wrapped in an array
		    // so that it's consistent if the number of children grows.
		    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
		    return 1;
		  }

		  var child;
		  var nextName;
		  var subtreeCount = 0; // Count of children found in the current subtree.
		  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

		  if (Array.isArray(children)) {
		    for (var i = 0; i < children.length; i++) {
		      child = children[i];
		      nextName = nextNamePrefix + getComponentKey(child, i);
		      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
		    }
		  } else {
		    var iteratorFn = getIteratorFn(children);
		    if (typeof iteratorFn === 'function') {
		      {
		        // Warn about using Maps as children
		        if (iteratorFn === children.entries) {
		          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum());
		          didWarnAboutMaps = true;
		        }
		      }

		      var iterator = iteratorFn.call(children);
		      var step;
		      var ii = 0;
		      while (!(step = iterator.next()).done) {
		        child = step.value;
		        nextName = nextNamePrefix + getComponentKey(child, ii++);
		        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
		      }
		    } else if (type === 'object') {
		      var addendum = '';
		      {
		        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
		      }
		      var childrenString = '' + children;
		      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
		    }
		  }

		  return subtreeCount;
		}

		/**
		 * Traverses children that are typically specified as `props.children`, but
		 * might also be specified through attributes:
		 *
		 * - `traverseAllChildren(this.props.children, ...)`
		 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
		 *
		 * The `traverseContext` is an optional argument that is passed through the
		 * entire traversal. It can be used to store accumulations or anything else that
		 * the callback might find relevant.
		 *
		 * @param {?*} children Children tree object.
		 * @param {!function} callback To invoke upon traversing each child.
		 * @param {?*} traverseContext Context for traversal.
		 * @return {!number} The number of children in this subtree.
		 */
		function traverseAllChildren(children, callback, traverseContext) {
		  if (children == null) {
		    return 0;
		  }

		  return traverseAllChildrenImpl(children, '', callback, traverseContext);
		}

		/**
		 * Generate a key string that identifies a component within a set.
		 *
		 * @param {*} component A component that could contain a manual key.
		 * @param {number} index Index that is used if a manual key is not provided.
		 * @return {string}
		 */
		function getComponentKey(component, index) {
		  // Do some typechecking here since we call this blindly. We want to ensure
		  // that we don't block potential future ES APIs.
		  if (typeof component === 'object' && component !== null && component.key != null) {
		    // Explicit key
		    return escape(component.key);
		  }
		  // Implicit key determined by the index in the set
		  return index.toString(36);
		}

		function forEachSingleChild(bookKeeping, child, name) {
		  var func = bookKeeping.func,
		      context = bookKeeping.context;

		  func.call(context, child, bookKeeping.count++);
		}

		/**
		 * Iterates through children that are typically specified as `props.children`.
		 *
		 * See https://reactjs.org/docs/react-api.html#react.children.foreach
		 *
		 * The provided forEachFunc(child, index) will be called for each
		 * leaf child.
		 *
		 * @param {?*} children Children tree container.
		 * @param {function(*, int)} forEachFunc
		 * @param {*} forEachContext Context for forEachContext.
		 */
		function forEachChildren(children, forEachFunc, forEachContext) {
		  if (children == null) {
		    return children;
		  }
		  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
		  traverseAllChildren(children, forEachSingleChild, traverseContext);
		  releaseTraverseContext(traverseContext);
		}

		function mapSingleChildIntoContext(bookKeeping, child, childKey) {
		  var result = bookKeeping.result,
		      keyPrefix = bookKeeping.keyPrefix,
		      func = bookKeeping.func,
		      context = bookKeeping.context;


		  var mappedChild = func.call(context, child, bookKeeping.count++);
		  if (Array.isArray(mappedChild)) {
		    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
		  } else if (mappedChild != null) {
		    if (isValidElement(mappedChild)) {
		      mappedChild = cloneAndReplaceKey(mappedChild,
		      // Keep both the (mapped) and old keys if they differ, just as
		      // traverseAllChildren used to do for objects as children
		      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
		    }
		    result.push(mappedChild);
		  }
		}

		function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
		  var escapedPrefix = '';
		  if (prefix != null) {
		    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
		  }
		  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
		  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
		  releaseTraverseContext(traverseContext);
		}

		/**
		 * Maps children that are typically specified as `props.children`.
		 *
		 * See https://reactjs.org/docs/react-api.html#react.children.map
		 *
		 * The provided mapFunction(child, key, index) will be called for each
		 * leaf child.
		 *
		 * @param {?*} children Children tree container.
		 * @param {function(*, int)} func The map function.
		 * @param {*} context Context for mapFunction.
		 * @return {object} Object containing the ordered map of results.
		 */
		function mapChildren(children, func, context) {
		  if (children == null) {
		    return children;
		  }
		  var result = [];
		  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
		  return result;
		}

		/**
		 * Count the number of children that are typically specified as
		 * `props.children`.
		 *
		 * See https://reactjs.org/docs/react-api.html#react.children.count
		 *
		 * @param {?*} children Children tree container.
		 * @return {number} The number of children.
		 */
		function countChildren(children, context) {
		  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
		}

		/**
		 * Flatten a children object (typically specified as `props.children`) and
		 * return an array with appropriately re-keyed children.
		 *
		 * See https://reactjs.org/docs/react-api.html#react.children.toarray
		 */
		function toArray(children) {
		  var result = [];
		  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
		  return result;
		}

		/**
		 * Returns the first child in a collection of children and verifies that there
		 * is only one child in the collection.
		 *
		 * See https://reactjs.org/docs/react-api.html#react.children.only
		 *
		 * The current implementation of this function assumes that a single child gets
		 * passed without a wrapper, but the purpose of this helper function is to
		 * abstract away the particular structure of children.
		 *
		 * @param {?object} children Child collection structure.
		 * @return {ReactElement} The first and only `ReactElement` contained in the
		 * structure.
		 */
		function onlyChild(children) {
		  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
		  return children;
		}

		var describeComponentFrame = function (name, source, ownerName) {
		  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
		};

		function getComponentName(fiber) {
		  var type = fiber.type;

		  if (typeof type === 'string') {
		    return type;
		  }
		  if (typeof type === 'function') {
		    return type.displayName || type.name;
		  }
		  return null;
		}

		/**
		 * ReactElementValidator provides a wrapper around a element factory
		 * which validates the props passed to the element. This is intended to be
		 * used only in DEV and could be replaced by a static type checker for languages
		 * that support it.
		 */

		{
		  var currentlyValidatingElement = null;

		  var propTypesMisspellWarningShown = false;

		  var getDisplayName = function (element) {
		    if (element == null) {
		      return '#empty';
		    } else if (typeof element === 'string' || typeof element === 'number') {
		      return '#text';
		    } else if (typeof element.type === 'string') {
		      return element.type;
		    } else if (element.type === REACT_FRAGMENT_TYPE) {
		      return 'React.Fragment';
		    } else {
		      return element.type.displayName || element.type.name || 'Unknown';
		    }
		  };

		  var getStackAddendum = function () {
		    var stack = '';
		    if (currentlyValidatingElement) {
		      var name = getDisplayName(currentlyValidatingElement);
		      var owner = currentlyValidatingElement._owner;
		      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));
		    }
		    stack += ReactDebugCurrentFrame.getStackAddendum() || '';
		    return stack;
		  };

		  var VALID_FRAGMENT_PROPS = new Map([['children', true], ['key', true]]);
		}

		function getDeclarationErrorAddendum() {
		  if (ReactCurrentOwner.current) {
		    var name = getComponentName(ReactCurrentOwner.current);
		    if (name) {
		      return '\n\nCheck the render method of `' + name + '`.';
		    }
		  }
		  return '';
		}

		function getSourceInfoErrorAddendum(elementProps) {
		  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
		    var source = elementProps.__source;
		    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
		    var lineNumber = source.lineNumber;
		    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
		  }
		  return '';
		}

		/**
		 * Warn if there's no key explicitly set on dynamic arrays of children or
		 * object keys are not valid. This allows us to keep track of children between
		 * updates.
		 */
		var ownerHasKeyUseWarning = {};

		function getCurrentComponentErrorInfo(parentType) {
		  var info = getDeclarationErrorAddendum();

		  if (!info) {
		    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
		    if (parentName) {
		      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
		    }
		  }
		  return info;
		}

		/**
		 * Warn if the element doesn't have an explicit key assigned to it.
		 * This element is in an array. The array could grow and shrink or be
		 * reordered. All children that haven't already been validated are required to
		 * have a "key" property assigned to it. Error statuses are cached so a warning
		 * will only be shown once.
		 *
		 * @internal
		 * @param {ReactElement} element Element that requires a key.
		 * @param {*} parentType element's parent's type.
		 */
		function validateExplicitKey(element, parentType) {
		  if (!element._store || element._store.validated || element.key != null) {
		    return;
		  }
		  element._store.validated = true;

		  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
		  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
		    return;
		  }
		  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

		  // Usually the current owner is the offender, but if it accepts children as a
		  // property, it may be the creator of the child that's responsible for
		  // assigning it a key.
		  var childOwner = '';
		  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
		    // Give the component that originally created this child.
		    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
		  }

		  currentlyValidatingElement = element;
		  {
		    warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());
		  }
		  currentlyValidatingElement = null;
		}

		/**
		 * Ensure that every element either is passed in a static location, in an
		 * array with an explicit keys property defined, or in an object literal
		 * with valid key property.
		 *
		 * @internal
		 * @param {ReactNode} node Statically passed child of any type.
		 * @param {*} parentType node's parent's type.
		 */
		function validateChildKeys(node, parentType) {
		  if (typeof node !== 'object') {
		    return;
		  }
		  if (Array.isArray(node)) {
		    for (var i = 0; i < node.length; i++) {
		      var child = node[i];
		      if (isValidElement(child)) {
		        validateExplicitKey(child, parentType);
		      }
		    }
		  } else if (isValidElement(node)) {
		    // This element was passed in a valid location.
		    if (node._store) {
		      node._store.validated = true;
		    }
		  } else if (node) {
		    var iteratorFn = getIteratorFn(node);
		    if (typeof iteratorFn === 'function') {
		      // Entry iterators used to provide implicit keys,
		      // but now we print a separate warning for them later.
		      if (iteratorFn !== node.entries) {
		        var iterator = iteratorFn.call(node);
		        var step;
		        while (!(step = iterator.next()).done) {
		          if (isValidElement(step.value)) {
		            validateExplicitKey(step.value, parentType);
		          }
		        }
		      }
		    }
		  }
		}

		/**
		 * Given an element, validate that its props follow the propTypes definition,
		 * provided by the type.
		 *
		 * @param {ReactElement} element
		 */
		function validatePropTypes(element) {
		  var componentClass = element.type;
		  if (typeof componentClass !== 'function') {
		    return;
		  }
		  var name = componentClass.displayName || componentClass.name;
		  var propTypes = componentClass.propTypes;
		  if (propTypes) {
		    currentlyValidatingElement = element;
		    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);
		    currentlyValidatingElement = null;
		  } else if (componentClass.PropTypes !== undefined && !propTypesMisspellWarningShown) {
		    propTypesMisspellWarningShown = true;
		    warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
		  }
		  if (typeof componentClass.getDefaultProps === 'function') {
		    warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
		  }
		}

		/**
		 * Given a fragment, validate that it can only be provided with fragment props
		 * @param {ReactElement} fragment
		 */
		function validateFragmentProps(fragment) {
		  currentlyValidatingElement = fragment;

		  var _iteratorNormalCompletion = true;
		  var _didIteratorError = false;
		  var _iteratorError = undefined;

		  try {
		    for (var _iterator = Object.keys(fragment.props)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
		      var key = _step.value;

		      if (!VALID_FRAGMENT_PROPS.has(key)) {
		        warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());
		        break;
		      }
		    }
		  } catch (err) {
		    _didIteratorError = true;
		    _iteratorError = err;
		  } finally {
		    try {
		      if (!_iteratorNormalCompletion && _iterator['return']) {
		        _iterator['return']();
		      }
		    } finally {
		      if (_didIteratorError) {
		        throw _iteratorError;
		      }
		    }
		  }

		  if (fragment.ref !== null) {
		    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());
		  }

		  currentlyValidatingElement = null;
		}

		function createElementWithValidation(type, props, children) {
		  var validType = typeof type === 'string' || typeof type === 'function' || typeof type === 'symbol' || typeof type === 'number';
		  // We warn in this case but don't throw. We expect the element creation to
		  // succeed and there will likely be errors in render.
		  if (!validType) {
		    var info = '';
		    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
		      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
		    }

		    var sourceInfo = getSourceInfoErrorAddendum(props);
		    if (sourceInfo) {
		      info += sourceInfo;
		    } else {
		      info += getDeclarationErrorAddendum();
		    }

		    info += getStackAddendum() || '';

		    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info);
		  }

		  var element = createElement.apply(this, arguments);

		  // The result can be nullish if a mock or a custom function is used.
		  // TODO: Drop this when these are no longer allowed as the type argument.
		  if (element == null) {
		    return element;
		  }

		  // Skip key warning if the type isn't valid since our key validation logic
		  // doesn't expect a non-string/function type and can throw confusing errors.
		  // We don't want exception behavior to differ between dev and prod.
		  // (Rendering will throw with a helpful message and as soon as the type is
		  // fixed, the key warnings will appear.)
		  if (validType) {
		    for (var i = 2; i < arguments.length; i++) {
		      validateChildKeys(arguments[i], type);
		    }
		  }

		  if (typeof type === 'symbol' && type === REACT_FRAGMENT_TYPE) {
		    validateFragmentProps(element);
		  } else {
		    validatePropTypes(element);
		  }

		  return element;
		}

		function createFactoryWithValidation(type) {
		  var validatedFactory = createElementWithValidation.bind(null, type);
		  // Legacy hook TODO: Warn if this is accessed
		  validatedFactory.type = type;

		  {
		    Object.defineProperty(validatedFactory, 'type', {
		      enumerable: false,
		      get: function () {
		        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
		        Object.defineProperty(this, 'type', {
		          value: type
		        });
		        return type;
		      }
		    });
		  }

		  return validatedFactory;
		}

		function cloneElementWithValidation(element, props, children) {
		  var newElement = cloneElement.apply(this, arguments);
		  for (var i = 2; i < arguments.length; i++) {
		    validateChildKeys(arguments[i], newElement.type);
		  }
		  validatePropTypes(newElement);
		  return newElement;
		}

		var React = {
		  Children: {
		    map: mapChildren,
		    forEach: forEachChildren,
		    count: countChildren,
		    toArray: toArray,
		    only: onlyChild
		  },

		  Component: Component,
		  PureComponent: PureComponent,
		  unstable_AsyncComponent: AsyncComponent,

		  Fragment: REACT_FRAGMENT_TYPE,

		  createElement: createElementWithValidation,
		  cloneElement: cloneElementWithValidation,
		  createFactory: createFactoryWithValidation,
		  isValidElement: isValidElement,

		  version: ReactVersion,

		  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
		    ReactCurrentOwner: ReactCurrentOwner,
		    // Used by renderers to avoid bundling object-assign twice in UMD bundles:
		    assign: _assign
		  }
		};

		{
		  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
		    // These should not be included in production.
		    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
		    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
		    // TODO: remove in React 17.0.
		    ReactComponentTreeHook: {}
		  });
		}



		var React$2 = Object.freeze({
			default: React
		});

		var React$3 = ( React$2 && React ) || React$2;

		// TODO: decide on the top-level export form.
		// This is hacky but makes it work with both Rollup and Jest.
		var react = React$3['default'] ? React$3['default'] : React$3;

		module.exports = react;
		  })();
		}

		}).call(this,require('_process'))
		},{"_process":957,"fbjs/lib/emptyFunction":670,"fbjs/lib/emptyObject":671,"fbjs/lib/invariant":676,"fbjs/lib/warning":681,"object-assign":954,"prop-types/checkPropTypes":958}],125:[function(require,module,exports){
		/** @license React v16.2.0
		 * react.production.min.js
		 *
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 */

		'use strict';var m=require("object-assign"),n=require("fbjs/lib/emptyObject"),p=require("fbjs/lib/emptyFunction"),q="function"===typeof Symbol&&Symbol["for"],r=q?Symbol["for"]("react.element"):60103,t=q?Symbol["for"]("react.call"):60104,u=q?Symbol["for"]("react.return"):60105,v=q?Symbol["for"]("react.portal"):60106,w=q?Symbol["for"]("react.fragment"):60107,x="function"===typeof Symbol&&Symbol.iterator;
		function y(a){for(var b=arguments.length-1,e="Minified React error #"+a+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d"+a,c=0;c<b;c++)e+="\x26args[]\x3d"+encodeURIComponent(arguments[c+1]);b=Error(e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name="Invariant Violation";b.framesToPop=1;throw b;}
		var z={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function A(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}A.prototype.isReactComponent={};A.prototype.setState=function(a,b){"object"!==typeof a&&"function"!==typeof a&&null!=a?y("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};A.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};
		function B(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}function C(){}C.prototype=A.prototype;var D=B.prototype=new C;D.constructor=B;m(D,A.prototype);D.isPureReactComponent=!0;function E(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}var F=E.prototype=new C;F.constructor=E;m(F,A.prototype);F.unstable_isAsyncReactComponent=!0;F.render=function(){return this.props.children};var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};
		function J(a,b,e){var c,d={},g=null,k=null;if(null!=b)for(c in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=""+b.key),b)H.call(b,c)&&!I.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var h=Array(f),l=0;l<f;l++)h[l]=arguments[l+2];d.children=h}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:r,type:a,key:g,ref:k,props:d,_owner:G.current}}function K(a){return"object"===typeof a&&null!==a&&a.$$typeof===r}
		function escape(a){var b={"\x3d":"\x3d0",":":"\x3d2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var L=/\/+/g,M=[];function N(a,b,e,c){if(M.length){var d=M.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function O(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>M.length&&M.push(a)}
		function P(a,b,e,c){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case r:case t:case u:case v:g=!0}}if(g)return e(c,a,""===b?"."+Q(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+Q(d,k);g+=P(d,f,e,c)}else if(null===a||"undefined"===typeof a?f=null:(f=x&&a[x]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=
		f.call(a),k=0;!(d=a.next()).done;)d=d.value,f=b+Q(d,k++),g+=P(d,f,e,c);else"object"===d&&(e=""+a,y("31","[object Object]"===e?"object with keys {"+Object.keys(a).join(", ")+"}":e,""));return g}function Q(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function R(a,b){a.func.call(a.context,b,a.count++)}
		function S(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?T(a,c,e,p.thatReturnsArgument):null!=a&&(K(a)&&(b=d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(L,"$\x26/")+"/")+e,a={$$typeof:r,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function T(a,b,e,c,d){var g="";null!=e&&(g=(""+e).replace(L,"$\x26/")+"/");b=N(b,g,c,d);null==a||P(a,"",S,b);O(b)}
		var U={Children:{map:function(a,b,e){if(null==a)return a;var c=[];T(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=N(null,null,b,e);null==a||P(a,"",R,b);O(b)},count:function(a){return null==a?0:P(a,"",p.thatReturnsNull,null)},toArray:function(a){var b=[];T(a,b,null,p.thatReturnsArgument);return b},only:function(a){K(a)?void 0:y("143");return a}},Component:A,PureComponent:B,unstable_AsyncComponent:E,Fragment:w,createElement:J,cloneElement:function(a,b,e){var c=m({},a.props),
		d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=G.current);void 0!==b.key&&(d=""+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)H.call(b,h)&&!I.hasOwnProperty(h)&&(c[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)c.children=e;else if(1<h){f=Array(h);for(var l=0;l<h;l++)f[l]=arguments[l+2];c.children=f}return{$$typeof:r,type:a.type,key:d,ref:g,props:c,_owner:k}},createFactory:function(a){var b=J.bind(null,a);b.type=a;return b},
		isValidElement:K,version:"16.2.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:G,assign:m}},V=Object.freeze({default:U}),W=V&&U||V;module.exports=W["default"]?W["default"]:W;

		},{"fbjs/lib/emptyFunction":670,"fbjs/lib/emptyObject":671,"object-assign":954}],126:[function(require,module,exports){
		(function (process){
		'use strict';

		if (process.env.NODE_ENV === 'production') {
		  module.exports = require('./cjs/react.production.min.js');
		} else {
		  module.exports = require('./cjs/react.development.js');
		}

		}).call(this,require('_process'))
		},{"./cjs/react.development.js":124,"./cjs/react.production.min.js":125,"_process":957}],127:[function(require,module,exports){
		"use strict";
		var __extends = (this && this.__extends) || (function () {
		    var extendStatics = Object.setPrototypeOf ||
		        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
		        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
		    return function (d, b) {
		        extendStatics(d, b);
		        function __() { this.constructor = d; }
		        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		    };
		})();
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var Renderer_1 = require("./Renderer");
		/**
		 * A controlled component convenience wrapper that additionally manages a focused state.
		 *
		 * @template P control specific properties
		 * @template S the state managed by the control
		 */
		var Control = /** @class */ (function (_super) {
		    __extends(Control, _super);
		    function Control(props) {
		        var _this = _super.call(this, props) || this;
		        /**
		         * Propagates a value change.
		         *
		         * @param value the updated value
		         */
		        _this.handleChange = function (value) {
		            _this.setState({ value: value });
		            _this.updateData(value);
		        };
		        /**
		         * Set the focused state to true.
		         */
		        _this.onFocus = function () {
		            _this.setState({ isFocused: true });
		        };
		        /**
		         * Set the focused state to false.
		         */
		        _this.onBlur = function () {
		            _this.setState({ isFocused: false });
		        };
		        _this.updateData = function (value) {
		            _this.props.handleChange(_this.props.path, value);
		        };
		        // tslint:disable:no-object-literal-type-assertion
		        _this.state = {
		            value: props.data ? props.data : '',
		            isFocused: false
		        };
		        return _this;
		        // tslint:enable:no-object-literal-type-assertion
		    }
		    return Control;
		}(Renderer_1.RendererComponent));
		exports.Control = Control;

		},{"./Renderer":130}],128:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var react_redux_1 = require("react-redux");
		var _ = window.lodashs;
		var UnknownRenderer_1 = require("./UnknownRenderer");
		var core_1 = require("@jsonforms/core");
		/**
		 * Props of the {@link DispatchField} renderer.
		 */
		/**
		 * The available field renderers.
		 */
		var Dispatch = function (dispatchFieldProps) {
		    var uischema = dispatchFieldProps.uischema;
		    var schema = dispatchFieldProps.schema;
		    var field = _.maxBy(dispatchFieldProps.fields, function (r) { return r.tester(uischema, schema); });
		    if (field === undefined || field.tester(uischema, schema) === -1) {
		        return React.createElement(UnknownRenderer_1.UnknownRenderer, { type: 'field' });
		    }
		    else {
		        var Field = field.field;
		        return (React.createElement(Field, { schema: schema, uischema: uischema, path: dispatchFieldProps.path }));
		    }
		};
		exports.DispatchField = react_redux_1.connect(core_1.mapStateToDispatchFieldProps)(Dispatch);

		},{"./UnknownRenderer":131,"@jsonforms/core":52,"react":136,"react-redux":991}],129:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var _ = window.lodashs;
		var react_redux_1 = require("react-redux");
		var UnknownRenderer_1 = require("./UnknownRenderer");
		var core_1 = require("@jsonforms/core");
		var JsonFormsDispatchRenderer = function (_a) {
		    var uischema = _a.uischema, schema = _a.schema, path = _a.path, renderers = _a.renderers;
		    var renderer = _.maxBy(renderers, function (r) { return r.tester(uischema, schema); });
		    if (renderer === undefined || renderer.tester(uischema, schema) === -1) {
		        return React.createElement(UnknownRenderer_1.UnknownRenderer, { type: 'renderer' });
		    }
		    else {
		        var Render = renderer.renderer;
		        return (React.createElement(Render, { uischema: uischema, schema: schema, path: path, renderers: renderers }));
		    }
		};
		exports.JsonForms = react_redux_1.connect(core_1.mapStateToDispatchRendererProps, null)(JsonFormsDispatchRenderer);

		},{"./UnknownRenderer":131,"@jsonforms/core":52,"react":136,"react-redux":991}],130:[function(require,module,exports){
		"use strict";
		var __extends = (this && this.__extends) || (function () {
		    var extendStatics = Object.setPrototypeOf ||
		        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
		        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
		    return function (d, b) {
		        extendStatics(d, b);
		        function __() { this.constructor = d; }
		        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		    };
		})();
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		/**
		 * Convenience wrapper around React's Component for constraining props.
		 *
		 * @template P type of any renderer props
		 * @template S state of the Renderer
		 */
		var RendererComponent = /** @class */ (function (_super) {
		    __extends(RendererComponent, _super);
		    function RendererComponent(props) {
		        return _super.call(this, props) || this;
		    }
		    return RendererComponent;
		}(React.Component));
		exports.RendererComponent = RendererComponent;

		},{"react":136}],131:[function(require,module,exports){
		"use strict";
		var __extends = (this && this.__extends) || (function () {
		    var extendStatics = Object.setPrototypeOf ||
		        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
		        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
		    return function (d, b) {
		        extendStatics(d, b);
		        function __() { this.constructor = d; }
		        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		    };
		})();
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var React = require("react");
		var react_1 = require("react");
		/**
		 * A renderer that will be used in case no other renderer is applicable.
		 */
		var UnknownRenderer = /** @class */ (function (_super) {
		    __extends(UnknownRenderer, _super);
		    function UnknownRenderer() {
		        return _super !== null && _super.apply(this, arguments) || this;
		    }
		    UnknownRenderer.prototype.render = function () {
		        return (React.createElement("div", { style: { color: 'red' } },
		            "No applicable ",
		            this.props.type,
		            " found."));
		    };
		    return UnknownRenderer;
		}(react_1.Component));
		exports.UnknownRenderer = UnknownRenderer;

		},{"react":136}],132:[function(require,module,exports){
		"use strict";
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		function __export(m) {
		    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
		}
		Object.defineProperty(exports, "__esModule", { value: true });
		__export(require("./Control"));
		__export(require("./JsonForms"));
		__export(require("./DispatchField"));
		__export(require("./Renderer"));
		__export(require("./util"));

		},{"./Control":127,"./DispatchField":128,"./JsonForms":129,"./Renderer":130,"./util":133}],133:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		/*
		  The MIT License
		  
		  Copyright (c) 2018 EclipseSource Munich
		  https://github.com/eclipsesource/jsonforms
		  
		  Permission is hereby granted, free of charge, to any person obtaining a copy
		  of this software and associated documentation files (the "Software"), to deal
		  in the Software without restriction, including without limitation the rights
		  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		  copies of the Software, and to permit persons to whom the Software is
		  furnished to do so, subject to the following conditions:
		  
		  The above copyright notice and this permission notice shall be included in
		  all copies or substantial portions of the Software.
		  
		  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		  THE SOFTWARE.
		*/
		var _ = window.lodashs;
		var core_1 = require("@jsonforms/core");
		var react_redux_1 = require("react-redux");
		/**
		 * JSONForms specific connect function. This is a wrapper
		 * around redux's connect function that executes any registered
		 * prop transformers on the result of the given mapStateToProps
		 * function before passing them to the actual connect function.
		 *
		 * @param {(state, ownProps) => any} mapStateToProps
		 * @param {(dispatch, ownProps) => any} mapDispatchToProps
		 * @returns {(Component) => any} function expecting a Renderer Component to be connected
		 */
		exports.connectToJsonForms = function (mapStateToProps, mapDispatchToProps) {
		    if (mapStateToProps === void 0) { mapStateToProps = core_1.mapStateToControlProps; }
		    if (mapDispatchToProps === void 0) { mapDispatchToProps = core_1.mapDispatchToControlProps; }
		    return function (Component) {
		        return react_redux_1.connect(function (state, ownProps) {
		            return (core_1.getPropsTransformer(state) || []).reduce(function (props, materializer) {
		                return _.merge(props, materializer(state, props));
		            }, mapStateToProps(state, ownProps));
		        }, mapDispatchToProps)(Component);
		    };
		};

		},{"@jsonforms/core":52,"react-redux":991}],134:[function(require,module,exports){
		arguments[4][124][0].apply(exports,arguments)
		},{"_process":957,"dup":124,"fbjs/lib/emptyFunction":670,"fbjs/lib/emptyObject":671,"fbjs/lib/invariant":676,"fbjs/lib/warning":681,"object-assign":954,"prop-types/checkPropTypes":958}],135:[function(require,module,exports){
		arguments[4][125][0].apply(exports,arguments)
		},{"dup":125,"fbjs/lib/emptyFunction":670,"fbjs/lib/emptyObject":671,"object-assign":954}],136:[function(require,module,exports){
		arguments[4][126][0].apply(exports,arguments)
		},{"./cjs/react.development.js":134,"./cjs/react.production.min.js":135,"_process":957,"dup":126}],137:[function(require,module,exports){
		'use strict';

		var compileSchema = require('./compile')
		  , resolve = require('./compile/resolve')
		  , Cache = require('./cache')
		  , SchemaObject = require('./compile/schema_obj')
		  , stableStringify = require('json-stable-stringify')
		  , formats = require('./compile/formats')
		  , rules = require('./compile/rules')
		  , v5 = require('./v5')
		  , util = require('./compile/util')
		  , async = require('./async')
		  , co = require('co');

		module.exports = Ajv;

		Ajv.prototype.compileAsync = async.compile;

		var customKeyword = require('./keyword');
		Ajv.prototype.addKeyword = customKeyword.add;
		Ajv.prototype.getKeyword = customKeyword.get;
		Ajv.prototype.removeKeyword = customKeyword.remove;
		Ajv.ValidationError = require('./compile/validation_error');

		var META_SCHEMA_ID = 'http://json-schema.org/draft-04/schema';
		var SCHEMA_URI_FORMAT = /^(?:(?:[a-z][a-z0-9+-.]*:)?\/\/)?[^\s]*$/i;
		function SCHEMA_URI_FORMAT_FUNC(str) {
		  return SCHEMA_URI_FORMAT.test(str);
		}

		var META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes' ];

		/**
		 * Creates validator instance.
		 * Usage: `Ajv(opts)`
		 * @param {Object} opts optional options
		 * @return {Object} ajv instance
		 */
		function Ajv(opts) {
		  if (!(this instanceof Ajv)) return new Ajv(opts);
		  var self = this;

		  opts = this._opts = util.copy(opts) || {};
		  this._schemas = {};
		  this._refs = {};
		  this._fragments = {};
		  this._formats = formats(opts.format);
		  this._cache = opts.cache || new Cache;
		  this._loadingSchemas = {};
		  this._compilations = [];
		  this.RULES = rules();

		  // this is done on purpose, so that methods are bound to the instance
		  // (without using bind) so that they can be used without the instance
		  this.validate = validate;
		  this.compile = compile;
		  this.addSchema = addSchema;
		  this.addMetaSchema = addMetaSchema;
		  this.validateSchema = validateSchema;
		  this.getSchema = getSchema;
		  this.removeSchema = removeSchema;
		  this.addFormat = addFormat;
		  this.errorsText = errorsText;

		  this._addSchema = _addSchema;
		  this._compile = _compile;

		  opts.loopRequired = opts.loopRequired || Infinity;
		  if (opts.async || opts.transpile) async.setup(opts);
		  if (opts.beautify === true) opts.beautify = { indent_size: 2 };
		  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;
		  this._metaOpts = getMetaSchemaOptions();

		  if (opts.formats) addInitialFormats();
		  addDraft4MetaSchema();
		  if (opts.v5) v5.enable(this);
		  if (typeof opts.meta == 'object') addMetaSchema(opts.meta);
		  addInitialSchemas();


		  /**
		   * Validate data using schema
		   * Schema will be compiled and cached (using serialized JSON as key. [json-stable-stringify](https://github.com/substack/json-stable-stringify) is used to serialize.
		   * @param  {String|Object} schemaKeyRef key, ref or schema object
		   * @param  {Any} data to be validated
		   * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).
		   */
		  function validate(schemaKeyRef, data) {
		    var v;
		    if (typeof schemaKeyRef == 'string') {
		      v = getSchema(schemaKeyRef);
		      if (!v) throw new Error('no schema with key or ref "' + schemaKeyRef + '"');
		    } else {
		      var schemaObj = _addSchema(schemaKeyRef);
		      v = schemaObj.validate || _compile(schemaObj);
		    }

		    var valid = v(data);
		    if (v.$async === true)
		      return self._opts.async == '*' ? co(valid) : valid;
		    self.errors = v.errors;
		    return valid;
		  }


		  /**
		   * Create validating function for passed schema.
		   * @param  {Object} schema schema object
		   * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.
		   * @return {Function} validating function
		   */
		  function compile(schema, _meta) {
		    var schemaObj = _addSchema(schema, undefined, _meta);
		    return schemaObj.validate || _compile(schemaObj);
		  }


		  /**
		   * Adds schema to the instance.
		   * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.
		   * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.
		   * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.
		   * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.
		   */
		  function addSchema(schema, key, _skipValidation, _meta) {
		    if (Array.isArray(schema)){
		      for (var i=0; i<schema.length; i++) addSchema(schema[i], undefined, _skipValidation, _meta);
		      return;
		    }
		    // can key/id have # inside?
		    key = resolve.normalizeId(key || schema.id);
		    checkUnique(key);
		    self._schemas[key] = _addSchema(schema, _skipValidation, _meta, true);
		  }


		  /**
		   * Add schema that will be used to validate other schemas
		   * options in META_IGNORE_OPTIONS are alway set to false
		   * @param {Object} schema schema object
		   * @param {String} key optional schema key
		   * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema
		   */
		  function addMetaSchema(schema, key, skipValidation) {
		    addSchema(schema, key, skipValidation, true);
		  }


		  /**
		   * Validate schema
		   * @param {Object} schema schema to validate
		   * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid
		   * @return {Boolean} true if schema is valid
		   */
		  function validateSchema(schema, throwOrLogError) {
		    var $schema = schema.$schema || self._opts.defaultMeta || defaultMeta();
		    var currentUriFormat = self._formats.uri;
		    self._formats.uri = typeof currentUriFormat == 'function'
		                        ? SCHEMA_URI_FORMAT_FUNC
		                        : SCHEMA_URI_FORMAT;
		    var valid;
		    try { valid = validate($schema, schema); }
		    finally { self._formats.uri = currentUriFormat; }
		    if (!valid && throwOrLogError) {
		      var message = 'schema is invalid: ' + errorsText();
		      if (self._opts.validateSchema == 'log') console.error(message);
		      else throw new Error(message);
		    }
		    return valid;
		  }


		  function defaultMeta() {
		    var meta = self._opts.meta;
		    self._opts.defaultMeta = typeof meta == 'object'
		                              ? meta.id || meta
		                              : self._opts.v5
		                                ? v5.META_SCHEMA_ID
		                                : META_SCHEMA_ID;
		    return self._opts.defaultMeta;
		  }


		  /**
		   * Get compiled schema from the instance by `key` or `ref`.
		   * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).
		   * @return {Function} schema validating function (with property `schema`).
		   */
		  function getSchema(keyRef) {
		    var schemaObj = _getSchemaObj(keyRef);
		    switch (typeof schemaObj) {
		      case 'object': return schemaObj.validate || _compile(schemaObj);
		      case 'string': return getSchema(schemaObj);
		      case 'undefined': return _getSchemaFragment(keyRef);
		    }
		  }


		  function _getSchemaFragment(ref) {
		    var res = resolve.schema.call(self, { schema: {} }, ref);
		    if (res) {
		      var schema = res.schema
		        , root = res.root
		        , baseId = res.baseId;
		      var v = compileSchema.call(self, schema, root, undefined, baseId);
		      self._fragments[ref] = new SchemaObject({
		        ref: ref,
		        fragment: true,
		        schema: schema,
		        root: root,
		        baseId: baseId,
		        validate: v
		      });
		      return v;
		    }
		  }


		  function _getSchemaObj(keyRef) {
		    keyRef = resolve.normalizeId(keyRef);
		    return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];
		  }


		  /**
		   * Remove cached schema(s).
		   * If no parameter is passed all schemas but meta-schemas are removed.
		   * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.
		   * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.
		   * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object
		   */
		  function removeSchema(schemaKeyRef) {
		    if (schemaKeyRef instanceof RegExp) {
		      _removeAllSchemas(self._schemas, schemaKeyRef);
		      _removeAllSchemas(self._refs, schemaKeyRef);
		      return;
		    }
		    switch (typeof schemaKeyRef) {
		      case 'undefined':
		        _removeAllSchemas(self._schemas);
		        _removeAllSchemas(self._refs);
		        self._cache.clear();
		        return;
		      case 'string':
		        var schemaObj = _getSchemaObj(schemaKeyRef);
		        if (schemaObj) self._cache.del(schemaObj.jsonStr);
		        delete self._schemas[schemaKeyRef];
		        delete self._refs[schemaKeyRef];
		        return;
		      case 'object':
		        var jsonStr = stableStringify(schemaKeyRef);
		        self._cache.del(jsonStr);
		        var id = schemaKeyRef.id;
		        if (id) {
		          id = resolve.normalizeId(id);
		          delete self._schemas[id];
		          delete self._refs[id];
		        }
		    }
		  }


		  function _removeAllSchemas(schemas, regex) {
		    for (var keyRef in schemas) {
		      var schemaObj = schemas[keyRef];
		      if (!schemaObj.meta && (!regex || regex.test(keyRef))) {
		        self._cache.del(schemaObj.jsonStr);
		        delete schemas[keyRef];
		      }
		    }
		  }


		  function _addSchema(schema, skipValidation, meta, shouldAddSchema) {
		    if (typeof schema != 'object') throw new Error('schema should be object');
		    var jsonStr = stableStringify(schema);
		    var cached = self._cache.get(jsonStr);
		    if (cached) return cached;

		    shouldAddSchema = shouldAddSchema || self._opts.addUsedSchema !== false;

		    var id = resolve.normalizeId(schema.id);
		    if (id && shouldAddSchema) checkUnique(id);

		    var willValidate = self._opts.validateSchema !== false && !skipValidation;
		    var recursiveMeta;
		    if (willValidate && !(recursiveMeta = schema.id && schema.id == schema.$schema))
		      validateSchema(schema, true);

		    var localRefs = resolve.ids.call(self, schema);

		    var schemaObj = new SchemaObject({
		      id: id,
		      schema: schema,
		      localRefs: localRefs,
		      jsonStr: jsonStr,
		      meta: meta
		    });

		    if (id[0] != '#' && shouldAddSchema) self._refs[id] = schemaObj;
		    self._cache.put(jsonStr, schemaObj);

		    if (willValidate && recursiveMeta) validateSchema(schema, true);

		    return schemaObj;
		  }


		  function _compile(schemaObj, root) {
		    if (schemaObj.compiling) {
		      schemaObj.validate = callValidate;
		      callValidate.schema = schemaObj.schema;
		      callValidate.errors = null;
		      callValidate.root = root ? root : callValidate;
		      if (schemaObj.schema.$async === true)
		        callValidate.$async = true;
		      return callValidate;
		    }
		    schemaObj.compiling = true;

		    var currentOpts;
		    if (schemaObj.meta) {
		      currentOpts = self._opts;
		      self._opts = self._metaOpts;
		    }

		    var v;
		    try { v = compileSchema.call(self, schemaObj.schema, root, schemaObj.localRefs); }
		    finally {
		      schemaObj.compiling = false;
		      if (schemaObj.meta) self._opts = currentOpts;
		    }

		    schemaObj.validate = v;
		    schemaObj.refs = v.refs;
		    schemaObj.refVal = v.refVal;
		    schemaObj.root = v.root;
		    return v;


		    function callValidate() {
		      var _validate = schemaObj.validate;
		      var result = _validate.apply(null, arguments);
		      callValidate.errors = _validate.errors;
		      return result;
		    }
		  }


		  /**
		   * Convert array of error message objects to string
		   * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.
		   * @param  {Object} options optional options with properties `separator` and `dataVar`.
		   * @return {String} human readable string with all errors descriptions
		   */
		  function errorsText(errors, options) {
		    errors = errors || self.errors;
		    if (!errors) return 'No errors';
		    options = options || {};
		    var separator = options.separator === undefined ? ', ' : options.separator;
		    var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;

		    var text = '';
		    for (var i=0; i<errors.length; i++) {
		      var e = errors[i];
		      if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;
		    }
		    return text.slice(0, -separator.length);
		  }


		  /**
		   * Add custom format
		   * @param {String} name format name
		   * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)
		   */
		  function addFormat(name, format) {
		    if (typeof format == 'string') format = new RegExp(format);
		    self._formats[name] = format;
		  }


		  function addDraft4MetaSchema() {
		    if (self._opts.meta !== false) {
		      var metaSchema = require('./refs/json-schema-draft-04.json');
		      addMetaSchema(metaSchema, META_SCHEMA_ID, true);
		      self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;
		    }
		  }


		  function addInitialSchemas() {
		    var optsSchemas = self._opts.schemas;
		    if (!optsSchemas) return;
		    if (Array.isArray(optsSchemas)) addSchema(optsSchemas);
		    else for (var key in optsSchemas) addSchema(optsSchemas[key], key);
		  }


		  function addInitialFormats() {
		    for (var name in self._opts.formats) {
		      var format = self._opts.formats[name];
		      addFormat(name, format);
		    }
		  }


		  function checkUnique(id) {
		    if (self._schemas[id] || self._refs[id])
		      throw new Error('schema with key or id "' + id + '" already exists');
		  }


		  function getMetaSchemaOptions() {
		    var metaOpts = util.copy(self._opts);
		    for (var i=0; i<META_IGNORE_OPTIONS.length; i++)
		      delete metaOpts[META_IGNORE_OPTIONS[i]];
		    return metaOpts;
		  }
		}

		},{"./async":138,"./cache":139,"./compile":143,"./compile/formats":142,"./compile/resolve":144,"./compile/rules":145,"./compile/schema_obj":146,"./compile/util":148,"./compile/validation_error":149,"./keyword":174,"./refs/json-schema-draft-04.json":175,"./v5":177,"co":643,"json-stable-stringify":178}],138:[function(require,module,exports){
		'use strict';

		module.exports = {
		  setup: setupAsync,
		  compile: compileAsync
		};


		var util = require('./compile/util');

		var ASYNC = {
		  '*': checkGenerators,
		  'co*': checkGenerators,
		  'es7': checkAsyncFunction
		};

		var TRANSPILE = {
		  'nodent': getNodent,
		  'regenerator': getRegenerator
		};

		var MODES = [
		  { async: 'co*' },
		  { async: 'es7', transpile: 'nodent' },
		  { async: 'co*', transpile: 'regenerator' }
		];


		var regenerator, nodent;


		function setupAsync(opts, required) {
		  if (required !== false) required = true;
		  var async = opts.async
		    , transpile = opts.transpile
		    , check;

		  switch (typeof transpile) {
		    case 'string':
		      var get = TRANSPILE[transpile];
		      if (!get) throw new Error('bad transpiler: ' + transpile);
		      return (opts._transpileFunc = get(opts, required));
		    case 'undefined':
		    case 'boolean':
		      if (typeof async == 'string') {
		        check = ASYNC[async];
		        if (!check) throw new Error('bad async mode: ' + async);
		        return (opts.transpile = check(opts, required));
		      }

		      for (var i=0; i<MODES.length; i++) {
		        var _opts = MODES[i];
		        if (setupAsync(_opts, false)) {
		          util.copy(_opts, opts);
		          return opts.transpile;
		        }
		      }
		      /* istanbul ignore next */
		      throw new Error('generators, nodent and regenerator are not available');
		    case 'function':
		      return (opts._transpileFunc = opts.transpile);
		    default:
		      throw new Error('bad transpiler: ' + transpile);
		  }
		}


		function checkGenerators(opts, required) {
		  /* jshint evil: true */
		  try {
		    (new Function('(function*(){})()'))();
		    return true;
		  } catch(e) {
		    /* istanbul ignore next */
		    if (required) throw new Error('generators not supported');
		  }
		}


		function checkAsyncFunction(opts, required) {
		  /* jshint evil: true */
		  try {
		    (new Function('(async function(){})()'))();
		    /* istanbul ignore next */
		    return true;
		  } catch(e) {
		    if (required) throw new Error('es7 async functions not supported');
		  }
		}


		function getRegenerator(opts, required) {
		  try {
		    if (!regenerator) {
		      var name = 'regenerator';
		      regenerator = require(name);
		      regenerator.runtime();
		    }
		    if (!opts.async || opts.async === true)
		      opts.async = 'es7';
		    return regeneratorTranspile;
		  } catch(e) {
		    /* istanbul ignore next */
		    if (required) throw new Error('regenerator not available');
		  }
		}


		function regeneratorTranspile(code) {
		  return regenerator.compile(code).code;
		}


		function getNodent(opts, required) {
		  /* jshint evil: true */
		  try {
		    if (!nodent) {
		      var name = 'nodent';
		      nodent = require(name)({ log: false, dontInstallRequireHook: true });
		    }
		    if (opts.async != 'es7') {
		      if (opts.async && opts.async !== true) console.warn('nodent transpiles only es7 async functions');
		      opts.async = 'es7';
		    }
		    return nodentTranspile;
		  } catch(e) {
		    /* istanbul ignore next */
		    if (required) throw new Error('nodent not available');
		  }
		}


		function nodentTranspile(code) {
		  return nodent.compile(code, '', { promises: true, sourcemap: false }).code;
		}


		/**
		 * Creates validating function for passed schema with asynchronous loading of missing schemas.
		 * `loadSchema` option should be a function that accepts schema uri and node-style callback.
		 * @this  Ajv
		 * @param {Object}   schema schema object
		 * @param {Function} callback node-style callback, it is always called with 2 parameters: error (or null) and validating function.
		 */
		function compileAsync(schema, callback) {
		  /* eslint no-shadow: 0 */
		  /* jshint validthis: true */
		  var schemaObj;
		  var self = this;
		  try {
		    schemaObj = this._addSchema(schema);
		  } catch(e) {
		    setTimeout(function() { callback(e); });
		    return;
		  }
		  if (schemaObj.validate) {
		    setTimeout(function() { callback(null, schemaObj.validate); });
		  } else {
		    if (typeof this._opts.loadSchema != 'function')
		      throw new Error('options.loadSchema should be a function');
		    _compileAsync(schema, callback, true);
		  }


		  function _compileAsync(schema, callback, firstCall) {
		    var validate;
		    try { validate = self.compile(schema); }
		    catch(e) {
		      if (e.missingSchema) loadMissingSchema(e);
		      else deferCallback(e);
		      return;
		    }
		    deferCallback(null, validate);

		    function loadMissingSchema(e) {
		      var ref = e.missingSchema;
		      if (self._refs[ref] || self._schemas[ref])
		        return callback(new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved'));
		      var _callbacks = self._loadingSchemas[ref];
		      if (_callbacks) {
		        if (typeof _callbacks == 'function')
		          self._loadingSchemas[ref] = [_callbacks, schemaLoaded];
		        else
		          _callbacks[_callbacks.length] = schemaLoaded;
		      } else {
		        self._loadingSchemas[ref] = schemaLoaded;
		        self._opts.loadSchema(ref, function (err, sch) {
		          var _callbacks = self._loadingSchemas[ref];
		          delete self._loadingSchemas[ref];
		          if (typeof _callbacks == 'function') {
		            _callbacks(err, sch);
		          } else {
		            for (var i=0; i<_callbacks.length; i++)
		              _callbacks[i](err, sch);
		          }
		        });
		      }

		      function schemaLoaded(err, sch) {
		        if (err) return callback(err);
		        if (!(self._refs[ref] || self._schemas[ref])) {
		          try {
		            self.addSchema(sch, ref);
		          } catch(e) {
		            callback(e);
		            return;
		          }
		        }
		        _compileAsync(schema, callback);
		      }
		    }

		    function deferCallback(err, validate) {
		      if (firstCall) setTimeout(function() { callback(err, validate); });
		      else return callback(err, validate);
		    }
		  }
		}

		},{"./compile/util":148}],139:[function(require,module,exports){
		'use strict';


		var Cache = module.exports = function Cache() {
		  this._cache = {};
		};


		Cache.prototype.put = function Cache_put(key, value) {
		  this._cache[key] = value;
		};


		Cache.prototype.get = function Cache_get(key) {
		  return this._cache[key];
		};


		Cache.prototype.del = function Cache_del(key) {
		  delete this._cache[key];
		};


		Cache.prototype.clear = function Cache_clear() {
		  this._cache = {};
		};

		},{}],140:[function(require,module,exports){
		'use strict';

		//all requires must be explicit because browserify won't work with dynamic requires
		module.exports = {
		  '$ref': require('../dotjs/ref'),
		  allOf: require('../dotjs/allOf'),
		  anyOf: require('../dotjs/anyOf'),
		  dependencies: require('../dotjs/dependencies'),
		  'enum': require('../dotjs/enum'),
		  format: require('../dotjs/format'),
		  items: require('../dotjs/items'),
		  maximum: require('../dotjs/_limit'),
		  minimum: require('../dotjs/_limit'),
		  maxItems: require('../dotjs/_limitItems'),
		  minItems: require('../dotjs/_limitItems'),
		  maxLength: require('../dotjs/_limitLength'),
		  minLength: require('../dotjs/_limitLength'),
		  maxProperties: require('../dotjs/_limitProperties'),
		  minProperties: require('../dotjs/_limitProperties'),
		  multipleOf: require('../dotjs/multipleOf'),
		  not: require('../dotjs/not'),
		  oneOf: require('../dotjs/oneOf'),
		  pattern: require('../dotjs/pattern'),
		  properties: require('../dotjs/properties'),
		  required: require('../dotjs/required'),
		  uniqueItems: require('../dotjs/uniqueItems'),
		  validate: require('../dotjs/validate')
		};

		},{"../dotjs/_limit":151,"../dotjs/_limitItems":152,"../dotjs/_limitLength":153,"../dotjs/_limitProperties":154,"../dotjs/allOf":155,"../dotjs/anyOf":156,"../dotjs/dependencies":159,"../dotjs/enum":160,"../dotjs/format":161,"../dotjs/items":162,"../dotjs/multipleOf":163,"../dotjs/not":164,"../dotjs/oneOf":165,"../dotjs/pattern":166,"../dotjs/properties":168,"../dotjs/ref":169,"../dotjs/required":170,"../dotjs/uniqueItems":172,"../dotjs/validate":173}],141:[function(require,module,exports){
		'use strict';

		/*eslint complexity: 0*/

		module.exports = function equal(a, b) {
		  if (a === b) return true;

		  var arrA = Array.isArray(a)
		    , arrB = Array.isArray(b)
		    , i;

		  if (arrA && arrB) {
		    if (a.length != b.length) return false;
		    for (i = 0; i < a.length; i++)
		      if (!equal(a[i], b[i])) return false;
		    return true;
		  }

		  if (arrA != arrB) return false;

		  if (a && b && typeof a === 'object' && typeof b === 'object') {
		    var keys = Object.keys(a);
		    if (keys.length !== Object.keys(b).length) return false;

		    var dateA = a instanceof Date
		      , dateB = b instanceof Date;
		    if (dateA && dateB) return a.getTime() == b.getTime();
		    if (dateA != dateB) return false;

		    var regexpA = a instanceof RegExp
		      , regexpB = b instanceof RegExp;
		    if (regexpA && regexpB) return a.toString() == b.toString();
		    if (regexpA != regexpB) return false;

		    for (i = 0; i < keys.length; i++)
		      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;

		    for (i = 0; i < keys.length; i++)
		      if(!equal(a[keys[i]], b[keys[i]])) return false;

		    return true;
		  }

		  return false;
		};

		},{}],142:[function(require,module,exports){
		'use strict';

		var util = require('./util');

		var DATE = /^\d\d\d\d-(\d\d)-(\d\d)$/;
		var DAYS = [0,31,29,31,30,31,30,31,31,30,31,30,31];
		var TIME = /^(\d\d):(\d\d):(\d\d)(\.\d+)?(z|[+-]\d\d:\d\d)?$/i;
		var HOSTNAME = /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i;
		var URI = /^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@\/?]|%[0-9a-f]{2})*)?(?:\#(?:[a-z0-9\-._~!$&'()*+,;=:@\/?]|%[0-9a-f]{2})*)?$/i;
		var UUID = /^(?:urn\:uuid\:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;
		var JSON_POINTER = /^(?:\/(?:[^~\/]|~0|~1)*)*$|^\#(?:\/(?:[a-z0-9_\-\.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;
		var RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:\#|(?:\/(?:[^~\/]|~0|~1)*)*)$/;


		module.exports = formats;

		function formats(mode) {
		  mode = mode == 'full' ? 'full' : 'fast';
		  var formatDefs = util.copy(formats[mode]);
		  for (var fName in formats.compare) {
		    formatDefs[fName] = {
		      validate: formatDefs[fName],
		      compare: formats.compare[fName]
		    };
		  }
		  return formatDefs;
		}


		formats.fast = {
		  // date: http://tools.ietf.org/html/rfc3339#section-5.6
		  date: /^\d\d\d\d-[0-1]\d-[0-3]\d$/,
		  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6
		  time: /^[0-2]\d:[0-5]\d:[0-5]\d(?:\.\d+)?(?:z|[+-]\d\d:\d\d)?$/i,
		  'date-time': /^\d\d\d\d-[0-1]\d-[0-3]\d[t\s][0-2]\d:[0-5]\d:[0-5]\d(?:\.\d+)?(?:z|[+-]\d\d:\d\d)$/i,
		  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js
		  uri: /^(?:[a-z][a-z0-9+-.]*)?(?:\:|\/)\/?[^\s]*$/i,
		  // email (sources from jsen validator):
		  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363
		  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')
		  email: /^[a-z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,
		  hostname: HOSTNAME,
		  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html
		  ipv4: /^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,
		  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses
		  ipv6: /^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,
		  regex: regex,
		  // uuid: http://tools.ietf.org/html/rfc4122
		  uuid: UUID,
		  // JSON-pointer: https://tools.ietf.org/html/rfc6901
		  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A
		  'json-pointer': JSON_POINTER,
		  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00
		  'relative-json-pointer': RELATIVE_JSON_POINTER
		};


		formats.full = {
		  date: date,
		  time: time,
		  'date-time': date_time,
		  uri: uri,
		  email: /^[a-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&''*+\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,
		  hostname: hostname,
		  ipv4: /^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,
		  ipv6: /^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,
		  regex: regex,
		  uuid: UUID,
		  'json-pointer': JSON_POINTER,
		  'relative-json-pointer': RELATIVE_JSON_POINTER
		};


		formats.compare = {
		  date: compareDate,
		  time: compareTime,
		  'date-time': compareDateTime
		};


		function date(str) {
		  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6
		  var matches = str.match(DATE);
		  if (!matches) return false;

		  var month = +matches[1];
		  var day = +matches[2];
		  return month >= 1 && month <= 12 && day >= 1 && day <= DAYS[month];
		}


		function time(str, full) {
		  var matches = str.match(TIME);
		  if (!matches) return false;

		  var hour = matches[1];
		  var minute = matches[2];
		  var second = matches[3];
		  var timeZone = matches[5];
		  return hour <= 23 && minute <= 59 && second <= 59 && (!full || timeZone);
		}


		var DATE_TIME_SEPARATOR = /t|\s/i;
		function date_time(str) {
		  // http://tools.ietf.org/html/rfc3339#section-5.6
		  var dateTime = str.split(DATE_TIME_SEPARATOR);
		  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);
		}


		function hostname(str) {
		  // https://tools.ietf.org/html/rfc1034#section-3.5
		  // https://tools.ietf.org/html/rfc1123#section-2
		  return str.length <= 255 && HOSTNAME.test(str);
		}


		var NOT_URI_FRAGMENT = /\/|\:/;
		function uri(str) {
		  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required "."
		  return NOT_URI_FRAGMENT.test(str) && URI.test(str);
		}


		function regex(str) {
		  try {
		    new RegExp(str);
		    return true;
		  } catch(e) {
		    return false;
		  }
		}


		function compareDate(d1, d2) {
		  if (!(d1 && d2)) return;
		  if (d1 > d2) return 1;
		  if (d1 < d2) return -1;
		  if (d1 === d2) return 0;
		}


		function compareTime(t1, t2) {
		  if (!(t1 && t2)) return;
		  t1 = t1.match(TIME);
		  t2 = t2.match(TIME);
		  if (!(t1 && t2)) return;
		  t1 = t1[1] + t1[2] + t1[3] + (t1[4]||'');
		  t2 = t2[1] + t2[2] + t2[3] + (t2[4]||'');
		  if (t1 > t2) return 1;
		  if (t1 < t2) return -1;
		  if (t1 === t2) return 0;
		}


		function compareDateTime(dt1, dt2) {
		  if (!(dt1 && dt2)) return;
		  dt1 = dt1.split(DATE_TIME_SEPARATOR);
		  dt2 = dt2.split(DATE_TIME_SEPARATOR);
		  var res = compareDate(dt1[0], dt2[0]);
		  if (res === undefined) return;
		  return res || compareTime(dt1[1], dt2[1]);
		}

		},{"./util":148}],143:[function(require,module,exports){
		'use strict';

		var resolve = require('./resolve')
		  , util = require('./util')
		  , stableStringify = require('json-stable-stringify')
		  , async = require('../async');

		var beautify;

		function loadBeautify(){
		  if (beautify === undefined) {
		    var name = 'js-beautify';
		    try { beautify = require(name).js_beautify; }
		    catch(e) { beautify = false; }
		  }
		}

		var validateGenerator = require('../dotjs/validate');

		/**
		 * Functions below are used inside compiled validations function
		 */

		var co = require('co');
		var ucs2length = util.ucs2length;
		var equal = require('./equal');

		// this error is thrown by async schemas to return validation errors via exception
		var ValidationError = require('./validation_error');

		module.exports = compile;


		/**
		 * Compiles schema to validation function
		 * @this   Ajv
		 * @param  {Object} schema schema object
		 * @param  {Object} root object with information about the root schema for this schema
		 * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution
		 * @param  {String} baseId base ID for IDs in the schema
		 * @return {Function} validation function
		 */
		function compile(schema, root, localRefs, baseId) {
		  /* jshint validthis: true, evil: true */
		  /* eslint no-shadow: 0 */
		  var self = this
		    , opts = this._opts
		    , refVal = [ undefined ]
		    , refs = {}
		    , patterns = []
		    , patternsHash = {}
		    , defaults = []
		    , defaultsHash = {}
		    , customRules = []
		    , keepSourceCode = opts.sourceCode !== false;

		  root = root || { schema: schema, refVal: refVal, refs: refs };

		  var c = checkCompiling.call(this, schema, root, baseId);
		  var compilation = this._compilations[c.index];
		  if (c.compiling) return (compilation.callValidate = callValidate);

		  var formats = this._formats;
		  var RULES = this.RULES;

		  try {
		    var v = localCompile(schema, root, localRefs, baseId);
		    compilation.validate = v;
		    var cv = compilation.callValidate;
		    if (cv) {
		      cv.schema = v.schema;
		      cv.errors = null;
		      cv.refs = v.refs;
		      cv.refVal = v.refVal;
		      cv.root = v.root;
		      cv.$async = v.$async;
		      if (keepSourceCode) cv.sourceCode = v.sourceCode;
		    }
		    return v;
		  } finally {
		    endCompiling.call(this, schema, root, baseId);
		  }

		  function callValidate() {
		    var validate = compilation.validate;
		    var result = validate.apply(null, arguments);
		    callValidate.errors = validate.errors;
		    return result;
		  }

		  function localCompile(_schema, _root, localRefs, baseId) {
		    var isRoot = !_root || (_root && _root.schema == _schema);
		    if (_root.schema != root.schema)
		      return compile.call(self, _schema, _root, localRefs, baseId);

		    var $async = _schema.$async === true;
		    if ($async && !opts.transpile) async.setup(opts);

		    var sourceCode = validateGenerator({
		      isTop: true,
		      schema: _schema,
		      isRoot: isRoot,
		      baseId: baseId,
		      root: _root,
		      schemaPath: '',
		      errSchemaPath: '#',
		      errorPath: '""',
		      RULES: RULES,
		      validate: validateGenerator,
		      util: util,
		      resolve: resolve,
		      resolveRef: resolveRef,
		      usePattern: usePattern,
		      useDefault: useDefault,
		      useCustomRule: useCustomRule,
		      opts: opts,
		      formats: formats,
		      self: self
		    });

		    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)
		                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)
		                   + sourceCode;

		    if (opts.beautify) {
		      loadBeautify();
		      /* istanbul ignore else */
		      if (beautify) sourceCode = beautify(sourceCode, opts.beautify);
		      else console.error('"npm install js-beautify" to use beautify option');
		    }
		    // console.log('\n\n\n *** \n', sourceCode);
		    var validate, validateCode
		      , transpile = opts._transpileFunc;
		    try {
		      validateCode = $async && transpile
		                      ? transpile(sourceCode)
		                      : sourceCode;

		      var makeValidate = new Function(
		        'self',
		        'RULES',
		        'formats',
		        'root',
		        'refVal',
		        'defaults',
		        'customRules',
		        'co',
		        'equal',
		        'ucs2length',
		        'ValidationError',
		        validateCode
		      );

		      validate = makeValidate(
		        self,
		        RULES,
		        formats,
		        root,
		        refVal,
		        defaults,
		        customRules,
		        co,
		        equal,
		        ucs2length,
		        ValidationError
		      );

		      refVal[0] = validate;
		    } catch(e) {
		      console.error('Error compiling schema, function code:', validateCode);
		      throw e;
		    }

		    validate.schema = _schema;
		    validate.errors = null;
		    validate.refs = refs;
		    validate.refVal = refVal;
		    validate.root = isRoot ? validate : _root;
		    if ($async) validate.$async = true;
		    if (keepSourceCode) validate.sourceCode = sourceCode;
		    if (opts.sourceCode === true) {
		      validate.source = {
		        patterns: patterns,
		        defaults: defaults
		      };
		    }

		    return validate;
		  }

		  function resolveRef(baseId, ref, isRoot) {
		    ref = resolve.url(baseId, ref);
		    var refIndex = refs[ref];
		    var _refVal, refCode;
		    if (refIndex !== undefined) {
		      _refVal = refVal[refIndex];
		      refCode = 'refVal[' + refIndex + ']';
		      return resolvedRef(_refVal, refCode);
		    }
		    if (!isRoot && root.refs) {
		      var rootRefId = root.refs[ref];
		      if (rootRefId !== undefined) {
		        _refVal = root.refVal[rootRefId];
		        refCode = addLocalRef(ref, _refVal);
		        return resolvedRef(_refVal, refCode);
		      }
		    }

		    refCode = addLocalRef(ref);
		    var v = resolve.call(self, localCompile, root, ref);
		    if (!v) {
		      var localSchema = localRefs && localRefs[ref];
		      if (localSchema) {
		        v = resolve.inlineRef(localSchema, opts.inlineRefs)
		            ? localSchema
		            : compile.call(self, localSchema, root, localRefs, baseId);
		      }
		    }

		    if (v) {
		      replaceLocalRef(ref, v);
		      return resolvedRef(v, refCode);
		    }
		  }

		  function addLocalRef(ref, v) {
		    var refId = refVal.length;
		    refVal[refId] = v;
		    refs[ref] = refId;
		    return 'refVal' + refId;
		  }

		  function replaceLocalRef(ref, v) {
		    var refId = refs[ref];
		    refVal[refId] = v;
		  }

		  function resolvedRef(refVal, code) {
		    return typeof refVal == 'object'
		            ? { code: code, schema: refVal, inline: true }
		            : { code: code, $async: refVal && refVal.$async };
		  }

		  function usePattern(regexStr) {
		    var index = patternsHash[regexStr];
		    if (index === undefined) {
		      index = patternsHash[regexStr] = patterns.length;
		      patterns[index] = regexStr;
		    }
		    return 'pattern' + index;
		  }

		  function useDefault(value) {
		    switch (typeof value) {
		      case 'boolean':
		      case 'number':
		        return '' + value;
		      case 'string':
		        return util.toQuotedString(value);
		      case 'object':
		        if (value === null) return 'null';
		        var valueStr = stableStringify(value);
		        var index = defaultsHash[valueStr];
		        if (index === undefined) {
		          index = defaultsHash[valueStr] = defaults.length;
		          defaults[index] = value;
		        }
		        return 'default' + index;
		    }
		  }

		  function useCustomRule(rule, schema, parentSchema, it) {
		    var validateSchema = rule.definition.validateSchema;
		    if (validateSchema && self._opts.validateSchema !== false) {
		      var valid = validateSchema(schema);
		      if (!valid) {
		        var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);
		        if (self._opts.validateSchema == 'log') console.error(message);
		        else throw new Error(message);
		      }
		    }

		    var compile = rule.definition.compile
		      , inline = rule.definition.inline
		      , macro = rule.definition.macro;

		    var validate;
		    if (compile) {
		      validate = compile.call(self, schema, parentSchema, it);
		    } else if (macro) {
		      validate = macro.call(self, schema, parentSchema, it);
		      if (opts.validateSchema !== false) self.validateSchema(validate, true);
		    } else if (inline) {
		      validate = inline.call(self, it, rule.keyword, schema, parentSchema);
		    } else {
		      validate = rule.definition.validate;
		    }

		    var index = customRules.length;
		    customRules[index] = validate;

		    return {
		      code: 'customRule' + index,
		      validate: validate
		    };
		  }
		}


		/**
		 * Checks if the schema is currently compiled
		 * @this   Ajv
		 * @param  {Object} schema schema to compile
		 * @param  {Object} root root object
		 * @param  {String} baseId base schema ID
		 * @return {Object} object with properties "index" (compilation index) and "compiling" (boolean)
		 */
		function checkCompiling(schema, root, baseId) {
		  /* jshint validthis: true */
		  var index = compIndex.call(this, schema, root, baseId);
		  if (index >= 0) return { index: index, compiling: true };
		  index = this._compilations.length;
		  this._compilations[index] = {
		    schema: schema,
		    root: root,
		    baseId: baseId
		  };
		  return { index: index, compiling: false };
		}


		/**
		 * Removes the schema from the currently compiled list
		 * @this   Ajv
		 * @param  {Object} schema schema to compile
		 * @param  {Object} root root object
		 * @param  {String} baseId base schema ID
		 */
		function endCompiling(schema, root, baseId) {
		  /* jshint validthis: true */
		  var i = compIndex.call(this, schema, root, baseId);
		  if (i >= 0) this._compilations.splice(i, 1);
		}


		/**
		 * Index of schema compilation in the currently compiled list
		 * @this   Ajv
		 * @param  {Object} schema schema to compile
		 * @param  {Object} root root object
		 * @param  {String} baseId base schema ID
		 * @return {Integer} compilation index
		 */
		function compIndex(schema, root, baseId) {
		  /* jshint validthis: true */
		  for (var i=0; i<this._compilations.length; i++) {
		    var c = this._compilations[i];
		    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;
		  }
		  return -1;
		}


		function patternCode(i, patterns) {
		  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';
		}


		function defaultCode(i) {
		  return 'var default' + i + ' = defaults[' + i + '];';
		}


		function refValCode(i, refVal) {
		  return refVal[i] ? 'var refVal' + i + ' = refVal[' + i + '];' : '';
		}


		function customRuleCode(i) {
		  return 'var customRule' + i + ' = customRules[' + i + '];';
		}


		function vars(arr, statement) {
		  if (!arr.length) return '';
		  var code = '';
		  for (var i=0; i<arr.length; i++)
		    code += statement(i, arr);
		  return code;
		}

		},{"../async":138,"../dotjs/validate":173,"./equal":141,"./resolve":144,"./util":148,"./validation_error":149,"co":643,"json-stable-stringify":178}],144:[function(require,module,exports){
		'use strict';

		var url = require('url')
		  , equal = require('./equal')
		  , util = require('./util')
		  , SchemaObject = require('./schema_obj');

		module.exports = resolve;

		resolve.normalizeId = normalizeId;
		resolve.fullPath = getFullPath;
		resolve.url = resolveUrl;
		resolve.ids = resolveIds;
		resolve.inlineRef = inlineRef;
		resolve.schema = resolveSchema;

		/**
		 * [resolve and compile the references ($ref)]
		 * @this   Ajv
		 * @param  {Function} compile reference to schema compilation funciton (localCompile)
		 * @param  {Object} root object with information about the root schema for the current schema
		 * @param  {String} ref reference to resolve
		 * @return {Object|Function} schema object (if the schema can be inlined) or validation function
		 */
		function resolve(compile, root, ref) {
		  /* jshint validthis: true */
		  var refVal = this._refs[ref];
		  if (typeof refVal == 'string') {
		    if (this._refs[refVal]) refVal = this._refs[refVal];
		    else return resolve.call(this, compile, root, refVal);
		  }

		  refVal = refVal || this._schemas[ref];
		  if (refVal instanceof SchemaObject) {
		    return inlineRef(refVal.schema, this._opts.inlineRefs)
		            ? refVal.schema
		            : refVal.validate || this._compile(refVal);
		  }

		  var res = resolveSchema.call(this, root, ref);
		  var schema, v, baseId;
		  if (res) {
		    schema = res.schema;
		    root = res.root;
		    baseId = res.baseId;
		  }

		  if (schema instanceof SchemaObject) {
		    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);
		  } else if (schema) {
		    v = inlineRef(schema, this._opts.inlineRefs)
		        ? schema
		        : compile.call(this, schema, root, undefined, baseId);
		  }

		  return v;
		}


		/**
		 * Resolve schema, its root and baseId
		 * @this Ajv
		 * @param  {Object} root root object with properties schema, refVal, refs
		 * @param  {String} ref  reference to resolve
		 * @return {Object} object with properties schema, root, baseId
		 */
		function resolveSchema(root, ref) {
		  /* jshint validthis: true */
		  var p = url.parse(ref, false, true)
		    , refPath = _getFullPath(p)
		    , baseId = getFullPath(root.schema.id);
		  if (refPath !== baseId) {
		    var id = normalizeId(refPath);
		    var refVal = this._refs[id];
		    if (typeof refVal == 'string') {
		      return resolveRecursive.call(this, root, refVal, p);
		    } else if (refVal instanceof SchemaObject) {
		      if (!refVal.validate) this._compile(refVal);
		      root = refVal;
		    } else {
		      refVal = this._schemas[id];
		      if (refVal instanceof SchemaObject) {
		        if (!refVal.validate) this._compile(refVal);
		        if (id == normalizeId(ref))
		          return { schema: refVal, root: root, baseId: baseId };
		        root = refVal;
		      } else {
		        return;
		      }
		    }
		    if (!root.schema) return;
		    baseId = getFullPath(root.schema.id);
		  }
		  return getJsonPointer.call(this, p, baseId, root.schema, root);
		}


		/* @this Ajv */
		function resolveRecursive(root, ref, parsedRef) {
		  /* jshint validthis: true */
		  var res = resolveSchema.call(this, root, ref);
		  if (res) {
		    var schema = res.schema;
		    var baseId = res.baseId;
		    root = res.root;
		    if (schema.id) baseId = resolveUrl(baseId, schema.id);
		    return getJsonPointer.call(this, parsedRef, baseId, schema, root);
		  }
		}


		var PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);
		/* @this Ajv */
		function getJsonPointer(parsedRef, baseId, schema, root) {
		  /* jshint validthis: true */
		  parsedRef.hash = parsedRef.hash || '';
		  if (parsedRef.hash.slice(0,2) != '#/') return;
		  var parts = parsedRef.hash.split('/');

		  for (var i = 1; i < parts.length; i++) {
		    var part = parts[i];
		    if (part) {
		      part = util.unescapeFragment(part);
		      schema = schema[part];
		      if (!schema) break;
		      if (schema.id && !PREVENT_SCOPE_CHANGE[part]) baseId = resolveUrl(baseId, schema.id);
		      if (schema.$ref) {
		        var $ref = resolveUrl(baseId, schema.$ref);
		        var res = resolveSchema.call(this, root, $ref);
		        if (res) {
		          schema = res.schema;
		          root = res.root;
		          baseId = res.baseId;
		        }
		      }
		    }
		  }
		  if (schema && schema != root.schema)
		    return { schema: schema, root: root, baseId: baseId };
		}


		var SIMPLE_INLINED = util.toHash([
		  'type', 'format', 'pattern',
		  'maxLength', 'minLength',
		  'maxProperties', 'minProperties',
		  'maxItems', 'minItems',
		  'maximum', 'minimum',
		  'uniqueItems', 'multipleOf',
		  'required', 'enum'
		]);
		function inlineRef(schema, limit) {
		  if (limit === false) return false;
		  if (limit === undefined || limit === true) return checkNoRef(schema);
		  else if (limit) return countKeys(schema) <= limit;
		}


		function checkNoRef(schema) {
		  var item;
		  if (Array.isArray(schema)) {
		    for (var i=0; i<schema.length; i++) {
		      item = schema[i];
		      if (typeof item == 'object' && !checkNoRef(item)) return false;
		    }
		  } else {
		    for (var key in schema) {
		      if (key == '$ref') return false;
		      item = schema[key];
		      if (typeof item == 'object' && !checkNoRef(item)) return false;
		    }
		  }
		  return true;
		}


		function countKeys(schema) {
		  var count = 0, item;
		  if (Array.isArray(schema)) {
		    for (var i=0; i<schema.length; i++) {
		      item = schema[i];
		      if (typeof item == 'object') count += countKeys(item);
		      if (count == Infinity) return Infinity;
		    }
		  } else {
		    for (var key in schema) {
		      if (key == '$ref') return Infinity;
		      if (SIMPLE_INLINED[key]) {
		        count++;
		      } else {
		        item = schema[key];
		        if (typeof item == 'object') count += countKeys(item) + 1;
		        if (count == Infinity) return Infinity;
		      }
		    }
		  }
		  return count;
		}


		function getFullPath(id, normalize) {
		  if (normalize !== false) id = normalizeId(id);
		  var p = url.parse(id, false, true);
		  return _getFullPath(p);
		}


		function _getFullPath(p) {
		  var protocolSeparator = p.protocol || p.href.slice(0,2) == '//' ? '//' : '';
		  return (p.protocol||'') + protocolSeparator + (p.host||'') + (p.path||'')  + '#';
		}


		var TRAILING_SLASH_HASH = /#\/?$/;
		function normalizeId(id) {
		  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';
		}


		function resolveUrl(baseId, id) {
		  id = normalizeId(id);
		  return url.resolve(baseId, id);
		}


		/* @this Ajv */
		function resolveIds(schema) {
		  /* eslint no-shadow: 0 */
		  /* jshint validthis: true */
		  var id = normalizeId(schema.id);
		  var localRefs = {};
		  _resolveIds.call(this, schema, getFullPath(id, false), id);
		  return localRefs;

		  /* @this Ajv */
		  function _resolveIds(schema, fullPath, baseId) {
		    /* jshint validthis: true */
		    if (Array.isArray(schema)) {
		      for (var i=0; i<schema.length; i++)
		        _resolveIds.call(this, schema[i], fullPath+'/'+i, baseId);
		    } else if (schema && typeof schema == 'object') {
		      if (typeof schema.id == 'string') {
		        var id = baseId = baseId
		                          ? url.resolve(baseId, schema.id)
		                          : schema.id;
		        id = normalizeId(id);

		        var refVal = this._refs[id];
		        if (typeof refVal == 'string') refVal = this._refs[refVal];
		        if (refVal && refVal.schema) {
		          if (!equal(schema, refVal.schema))
		            throw new Error('id "' + id + '" resolves to more than one schema');
		        } else if (id != normalizeId(fullPath)) {
		          if (id[0] == '#') {
		            if (localRefs[id] && !equal(schema, localRefs[id]))
		              throw new Error('id "' + id + '" resolves to more than one schema');
		            localRefs[id] = schema;
		          } else {
		            this._refs[id] = fullPath;
		          }
		        }
		      }
		      for (var key in schema)
		        _resolveIds.call(this, schema[key], fullPath+'/'+util.escapeFragment(key), baseId);
		    }
		  }
		}

		},{"./equal":141,"./schema_obj":146,"./util":148,"url":1051}],145:[function(require,module,exports){
		'use strict';

		var ruleModules = require('./_rules')
		  , toHash = require('./util').toHash;

		module.exports = function rules() {
		  var RULES = [
		    { type: 'number',
		      rules: [ 'maximum', 'minimum', 'multipleOf'] },
		    { type: 'string',
		      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },
		    { type: 'array',
		      rules: [ 'maxItems', 'minItems', 'uniqueItems', 'items' ] },
		    { type: 'object',
		      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'properties' ] },
		    { rules: [ '$ref', 'enum', 'not', 'anyOf', 'oneOf', 'allOf' ] }
		  ];

		  var ALL = [ 'type', 'additionalProperties', 'patternProperties' ];
		  var KEYWORDS = [ 'additionalItems', '$schema', 'id', 'title', 'description', 'default' ];
		  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];
		  RULES.all = toHash(ALL);

		  RULES.forEach(function (group) {
		    group.rules = group.rules.map(function (keyword) {
		      ALL.push(keyword);
		      var rule = RULES.all[keyword] = {
		        keyword: keyword,
		        code: ruleModules[keyword]
		      };
		      return rule;
		    });
		  });

		  RULES.keywords = toHash(ALL.concat(KEYWORDS));
		  RULES.types = toHash(TYPES);
		  RULES.custom = {};

		  return RULES;
		};

		},{"./_rules":140,"./util":148}],146:[function(require,module,exports){
		'use strict';

		var util = require('./util');

		module.exports = SchemaObject;

		function SchemaObject(obj) {
		  util.copy(obj, this);
		}

		},{"./util":148}],147:[function(require,module,exports){
		'use strict';

		// https://mathiasbynens.be/notes/javascript-encoding
		// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode
		module.exports = function ucs2length(str) {
		  var length = 0
		    , len = str.length
		    , pos = 0
		    , value;
		  while (pos < len) {
		    length++;
		    value = str.charCodeAt(pos++);
		    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {
		      // high surrogate, and there is a next character
		      value = str.charCodeAt(pos);
		      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate
		    }
		  }
		  return length;
		};

		},{}],148:[function(require,module,exports){
		'use strict';


		module.exports = {
		  copy: copy,
		  checkDataType: checkDataType,
		  checkDataTypes: checkDataTypes,
		  coerceToTypes: coerceToTypes,
		  toHash: toHash,
		  getProperty: getProperty,
		  escapeQuotes: escapeQuotes,
		  ucs2length: require('./ucs2length'),
		  varOccurences: varOccurences,
		  varReplace: varReplace,
		  cleanUpCode: cleanUpCode,
		  cleanUpVarErrors: cleanUpVarErrors,
		  schemaHasRules: schemaHasRules,
		  schemaHasRulesExcept: schemaHasRulesExcept,
		  stableStringify: require('json-stable-stringify'),
		  toQuotedString: toQuotedString,
		  getPathExpr: getPathExpr,
		  getPath: getPath,
		  getData: getData,
		  unescapeFragment: unescapeFragment,
		  escapeFragment: escapeFragment,
		  escapeJsonPointer: escapeJsonPointer
		};


		function copy(o, to) {
		  to = to || {};
		  for (var key in o) to[key] = o[key];
		  return to;
		}


		function checkDataType(dataType, data, negate) {
		  var EQUAL = negate ? ' !== ' : ' === '
		    , AND = negate ? ' || ' : ' && '
		    , OK = negate ? '!' : ''
		    , NOT = negate ? '' : '!';
		  switch (dataType) {
		    case 'null': return data + EQUAL + 'null';
		    case 'array': return OK + 'Array.isArray(' + data + ')';
		    case 'object': return '(' + OK + data + AND +
		                          'typeof ' + data + EQUAL + '"object"' + AND +
		                          NOT + 'Array.isArray(' + data + '))';
		    case 'integer': return '(typeof ' + data + EQUAL + '"number"' + AND +
		                           NOT + '(' + data + ' % 1)' +
		                           AND + data + EQUAL + data + ')';
		    default: return 'typeof ' + data + EQUAL + '"' + dataType + '"';
		  }
		}


		function checkDataTypes(dataTypes, data) {
		  switch (dataTypes.length) {
		    case 1: return checkDataType(dataTypes[0], data, true);
		    default:
		      var code = '';
		      var types = toHash(dataTypes);
		      if (types.array && types.object) {
		        code = types.null ? '(': '(!' + data + ' || ';
		        code += 'typeof ' + data + ' !== "object")';
		        delete types.null;
		        delete types.array;
		        delete types.object;
		      }
		      if (types.number) delete types.integer;
		      for (var t in types)
		        code += (code ? ' && ' : '' ) + checkDataType(t, data, true);

		      return code;
		  }
		}


		var COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);
		function coerceToTypes(optionCoerceTypes, dataTypes) {
		  if (Array.isArray(dataTypes)) {
		    var types = [];
		    for (var i=0; i<dataTypes.length; i++) {
		      var t = dataTypes[i];
		      if (COERCE_TO_TYPES[t]) types[types.length] = t;
		      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;
		    }
		    if (types.length) return types;
		  } else if (COERCE_TO_TYPES[dataTypes]) {
		    return [dataTypes];
		  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {
		    return ['array'];
		  }
		}


		function toHash(arr) {
		  var hash = {};
		  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;
		  return hash;
		}


		var IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;
		var SINGLE_QUOTE = /'|\\/g;
		function getProperty(key) {
		  return typeof key == 'number'
		          ? '[' + key + ']'
		          : IDENTIFIER.test(key)
		            ? '.' + key
		            : "['" + escapeQuotes(key) + "']";
		}


		function escapeQuotes(str) {
		  return str.replace(SINGLE_QUOTE, '\\$&')
		            .replace(/\n/g, '\\n')
		            .replace(/\r/g, '\\r')
		            .replace(/\f/g, '\\f')
		            .replace(/\t/g, '\\t');
		}


		function varOccurences(str, dataVar) {
		  dataVar += '[^0-9]';
		  var matches = str.match(new RegExp(dataVar, 'g'));
		  return matches ? matches.length : 0;
		}


		function varReplace(str, dataVar, expr) {
		  dataVar += '([^0-9])';
		  expr = expr.replace(/\$/g, '$$$$');
		  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');
		}


		var EMPTY_ELSE = /else\s*{\s*}/g
		  , EMPTY_IF_NO_ELSE = /if\s*\([^)]+\)\s*\{\s*\}(?!\s*else)/g
		  , EMPTY_IF_WITH_ELSE = /if\s*\(([^)]+)\)\s*\{\s*\}\s*else(?!\s*if)/g;
		function cleanUpCode(out) {
		  return out.replace(EMPTY_ELSE, '')
		            .replace(EMPTY_IF_NO_ELSE, '')
		            .replace(EMPTY_IF_WITH_ELSE, 'if (!($1))');
		}


		var ERRORS_REGEXP = /[^v\.]errors/g
		  , REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g
		  , REMOVE_ERRORS_ASYNC = /var errors = 0;|var vErrors = null;/g
		  , RETURN_VALID = 'return errors === 0;'
		  , RETURN_TRUE = 'validate.errors = null; return true;'
		  , RETURN_ASYNC = /if \(errors === 0\) return true;\s*else throw new ValidationError\(vErrors\);/
		  , RETURN_TRUE_ASYNC = 'return true;';

		function cleanUpVarErrors(out, async) {
		  var matches = out.match(ERRORS_REGEXP);
		  if (!matches || matches.length !== 2) return out;
		  return async
		          ? out.replace(REMOVE_ERRORS_ASYNC, '')
		               .replace(RETURN_ASYNC, RETURN_TRUE_ASYNC)
		          : out.replace(REMOVE_ERRORS, '')
		               .replace(RETURN_VALID, RETURN_TRUE);
		}


		function schemaHasRules(schema, rules) {
		  for (var key in schema) if (rules[key]) return true;
		}


		function schemaHasRulesExcept(schema, rules, exceptKeyword) {
		  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;
		}


		function toQuotedString(str) {
		  return '\'' + escapeQuotes(str) + '\'';
		}


		function getPathExpr(currentPath, expr, jsonPointers, isNumber) {
		  var path = jsonPointers // false by default
		              ? '\'/\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \'~0\').replace(/\\//g, \'~1\')')
		              : (isNumber ? '\'[\' + ' + expr + ' + \']\'' : '\'[\\\'\' + ' + expr + ' + \'\\\']\'');
		  return joinPaths(currentPath, path);
		}


		function getPath(currentPath, prop, jsonPointers) {
		  var path = jsonPointers // false by default
		              ? toQuotedString('/' + escapeJsonPointer(prop))
		              : toQuotedString(getProperty(prop));
		  return joinPaths(currentPath, path);
		}


		var JSON_POINTER = /^\/(?:[^~]|~0|~1)*$/;
		var RELATIVE_JSON_POINTER = /^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;
		function getData($data, lvl, paths) {
		  var up, jsonPointer, data, matches;
		  if ($data === '') return 'rootData';
		  if ($data[0] == '/') {
		    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);
		    jsonPointer = $data;
		    data = 'rootData';
		  } else {
		    matches = $data.match(RELATIVE_JSON_POINTER);
		    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);
		    up = +matches[1];
		    jsonPointer = matches[2];
		    if (jsonPointer == '#') {
		      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);
		      return paths[lvl - up];
		    }

		    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);
		    data = 'data' + ((lvl - up) || '');
		    if (!jsonPointer) return data;
		  }

		  var expr = data;
		  var segments = jsonPointer.split('/');
		  for (var i=0; i<segments.length; i++) {
		    var segment = segments[i];
		    if (segment) {
		      data += getProperty(unescapeJsonPointer(segment));
		      expr += ' && ' + data;
		    }
		  }
		  return expr;
		}


		function joinPaths (a, b) {
		  if (a == '""') return b;
		  return (a + ' + ' + b).replace(/' \+ '/g, '');
		}


		function unescapeFragment(str) {
		  return unescapeJsonPointer(decodeURIComponent(str));
		}


		function escapeFragment(str) {
		  return encodeURIComponent(escapeJsonPointer(str));
		}


		function escapeJsonPointer(str) {
		  return str.replace(/~/g, '~0').replace(/\//g, '~1');
		}


		function unescapeJsonPointer(str) {
		  return str.replace(/~1/g, '/').replace(/~0/g, '~');
		}

		},{"./ucs2length":147,"json-stable-stringify":178}],149:[function(require,module,exports){
		'use strict';

		module.exports = ValidationError;


		function ValidationError(errors) {
		  this.message = 'validation failed';
		  this.errors = errors;
		  this.ajv = this.validation = true;
		}


		ValidationError.prototype = Object.create(Error.prototype);
		ValidationError.prototype.constructor = ValidationError;

		},{}],150:[function(require,module,exports){
		'use strict';
		module.exports = function generate__formatLimit(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $errorKeyword;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  out += 'var ' + ($valid) + ' = undefined;';
		  if (it.opts.format === false) {
		    out += ' ' + ($valid) + ' = true; ';
		    return out;
		  }
		  var $schemaFormat = it.schema.format,
		    $isDataFormat = it.opts.v5 && $schemaFormat.$data,
		    $closingBraces = '';
		  if ($isDataFormat) {
		    var $schemaValueFormat = it.util.getData($schemaFormat.$data, $dataLvl, it.dataPathArr),
		      $format = 'format' + $lvl,
		      $compare = 'compare' + $lvl;
		    out += ' var ' + ($format) + ' = formats[' + ($schemaValueFormat) + '] , ' + ($compare) + ' = ' + ($format) + ' && ' + ($format) + '.compare;';
		  } else {
		    var $format = it.formats[$schemaFormat];
		    if (!($format && $format.compare)) {
		      out += '  ' + ($valid) + ' = true; ';
		      return out;
		    }
		    var $compare = 'formats' + it.util.getProperty($schemaFormat) + '.compare';
		  }
		  var $isMax = $keyword == 'formatMaximum',
		    $exclusiveKeyword = 'formatExclusive' + ($isMax ? 'Maximum' : 'Minimum'),
		    $schemaExcl = it.schema[$exclusiveKeyword],
		    $isDataExcl = it.opts.v5 && $schemaExcl && $schemaExcl.$data,
		    $op = $isMax ? '<' : '>',
		    $result = 'result' + $lvl;
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  if ($isDataExcl) {
		    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),
		      $exclusive = 'exclusive' + $lvl,
		      $opExpr = 'op' + $lvl,
		      $opStr = '\' + ' + $opExpr + ' + \'';
		    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';
		    $schemaValueExcl = 'schemaExcl' + $lvl;
		    out += ' if (typeof ' + ($schemaValueExcl) + ' != \'boolean\' && ' + ($schemaValueExcl) + ' !== undefined) { ' + ($valid) + ' = false; ';
		    var $errorKeyword = $exclusiveKeyword;
		    var $$outStack = $$outStack || [];
		    $$outStack.push(out);
		    out = ''; /* istanbul ignore else */
		    if (it.createErrors !== false) {
		      out += ' { keyword: \'' + ($errorKeyword || '_formatExclusiveLimit') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
		      if (it.opts.messages !== false) {
		        out += ' , message: \'' + ($exclusiveKeyword) + ' should be boolean\' ';
		      }
		      if (it.opts.verbose) {
		        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		      }
		      out += ' } ';
		    } else {
		      out += ' {} ';
		    }
		    var __err = out;
		    out = $$outStack.pop();
		    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		      if (it.async) {
		        out += ' throw new ValidationError([' + (__err) + ']); ';
		      } else {
		        out += ' validate.errors = [' + (__err) + ']; return false; ';
		      }
		    } else {
		      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		    }
		    out += ' }  ';
		    if ($breakOnError) {
		      $closingBraces += '}';
		      out += ' else { ';
		    }
		    if ($isData) {
		      out += ' if (' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \'string\') ' + ($valid) + ' = false; else { ';
		      $closingBraces += '}';
		    }
		    if ($isDataFormat) {
		      out += ' if (!' + ($compare) + ') ' + ($valid) + ' = true; else { ';
		      $closingBraces += '}';
		    }
		    out += ' var ' + ($result) + ' = ' + ($compare) + '(' + ($data) + ',  ';
		    if ($isData) {
		      out += '' + ($schemaValue);
		    } else {
		      out += '' + (it.util.toQuotedString($schema));
		    }
		    out += ' ); if (' + ($result) + ' === undefined) ' + ($valid) + ' = false; var ' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true; if (' + ($valid) + ' === undefined) { ' + ($valid) + ' = ' + ($exclusive) + ' ? ' + ($result) + ' ' + ($op) + ' 0 : ' + ($result) + ' ' + ($op) + '= 0; } if (!' + ($valid) + ') var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \'' + ($op) + '\' : \'' + ($op) + '=\';';
		  } else {
		    var $exclusive = $schemaExcl === true,
		      $opStr = $op;
		    if (!$exclusive) $opStr += '=';
		    var $opExpr = '\'' + $opStr + '\'';
		    if ($isData) {
		      out += ' if (' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \'string\') ' + ($valid) + ' = false; else { ';
		      $closingBraces += '}';
		    }
		    if ($isDataFormat) {
		      out += ' if (!' + ($compare) + ') ' + ($valid) + ' = true; else { ';
		      $closingBraces += '}';
		    }
		    out += ' var ' + ($result) + ' = ' + ($compare) + '(' + ($data) + ',  ';
		    if ($isData) {
		      out += '' + ($schemaValue);
		    } else {
		      out += '' + (it.util.toQuotedString($schema));
		    }
		    out += ' ); if (' + ($result) + ' === undefined) ' + ($valid) + ' = false; if (' + ($valid) + ' === undefined) ' + ($valid) + ' = ' + ($result) + ' ' + ($op);
		    if (!$exclusive) {
		      out += '=';
		    }
		    out += ' 0;';
		  }
		  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') { ';
		  var $errorKeyword = $keyword;
		  var $$outStack = $$outStack || [];
		  $$outStack.push(out);
		  out = ''; /* istanbul ignore else */
		  if (it.createErrors !== false) {
		    out += ' { keyword: \'' + ($errorKeyword || '_formatLimit') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit:  ';
		    if ($isData) {
		      out += '' + ($schemaValue);
		    } else {
		      out += '' + (it.util.toQuotedString($schema));
		    }
		    out += ' , exclusive: ' + ($exclusive) + ' } ';
		    if (it.opts.messages !== false) {
		      out += ' , message: \'should be ' + ($opStr) + ' "';
		      if ($isData) {
		        out += '\' + ' + ($schemaValue) + ' + \'';
		      } else {
		        out += '' + (it.util.escapeQuotes($schema));
		      }
		      out += '"\' ';
		    }
		    if (it.opts.verbose) {
		      out += ' , schema:  ';
		      if ($isData) {
		        out += 'validate.schema' + ($schemaPath);
		      } else {
		        out += '' + (it.util.toQuotedString($schema));
		      }
		      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		    }
		    out += ' } ';
		  } else {
		    out += ' {} ';
		  }
		  var __err = out;
		  out = $$outStack.pop();
		  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		    if (it.async) {
		      out += ' throw new ValidationError([' + (__err) + ']); ';
		    } else {
		      out += ' validate.errors = [' + (__err) + ']; return false; ';
		    }
		  } else {
		    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		  }
		  out += '}';
		  return out;
		}

		},{}],151:[function(require,module,exports){
		'use strict';
		module.exports = function generate__limit(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $errorKeyword;
		  var $data = 'data' + ($dataLvl || '');
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  var $isMax = $keyword == 'maximum',
		    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',
		    $schemaExcl = it.schema[$exclusiveKeyword],
		    $isDataExcl = it.opts.v5 && $schemaExcl && $schemaExcl.$data,
		    $op = $isMax ? '<' : '>',
		    $notOp = $isMax ? '>' : '<';
		  if ($isDataExcl) {
		    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),
		      $exclusive = 'exclusive' + $lvl,
		      $opExpr = 'op' + $lvl,
		      $opStr = '\' + ' + $opExpr + ' + \'';
		    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';
		    $schemaValueExcl = 'schemaExcl' + $lvl;
		    out += ' var exclusive' + ($lvl) + '; if (typeof ' + ($schemaValueExcl) + ' != \'boolean\' && typeof ' + ($schemaValueExcl) + ' != \'undefined\') { ';
		    var $errorKeyword = $exclusiveKeyword;
		    var $$outStack = $$outStack || [];
		    $$outStack.push(out);
		    out = ''; /* istanbul ignore else */
		    if (it.createErrors !== false) {
		      out += ' { keyword: \'' + ($errorKeyword || '_exclusiveLimit') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
		      if (it.opts.messages !== false) {
		        out += ' , message: \'' + ($exclusiveKeyword) + ' should be boolean\' ';
		      }
		      if (it.opts.verbose) {
		        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		      }
		      out += ' } ';
		    } else {
		      out += ' {} ';
		    }
		    var __err = out;
		    out = $$outStack.pop();
		    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		      if (it.async) {
		        out += ' throw new ValidationError([' + (__err) + ']); ';
		      } else {
		        out += ' validate.errors = [' + (__err) + ']; return false; ';
		      }
		    } else {
		      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		    }
		    out += ' } else if( ';
		    if ($isData) {
		      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
		    }
		    out += ' ((exclusive' + ($lvl) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ') || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = exclusive' + ($lvl) + ' ? \'' + ($op) + '\' : \'' + ($op) + '=\';';
		  } else {
		    var $exclusive = $schemaExcl === true,
		      $opStr = $op;
		    if (!$exclusive) $opStr += '=';
		    var $opExpr = '\'' + $opStr + '\'';
		    out += ' if ( ';
		    if ($isData) {
		      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
		    }
		    out += ' ' + ($data) + ' ' + ($notOp);
		    if ($exclusive) {
		      out += '=';
		    }
		    out += ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') {';
		  }
		  var $errorKeyword = $keyword;
		  var $$outStack = $$outStack || [];
		  $$outStack.push(out);
		  out = ''; /* istanbul ignore else */
		  if (it.createErrors !== false) {
		    out += ' { keyword: \'' + ($errorKeyword || '_limit') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';
		    if (it.opts.messages !== false) {
		      out += ' , message: \'should be ' + ($opStr) + ' ';
		      if ($isData) {
		        out += '\' + ' + ($schemaValue);
		      } else {
		        out += '' + ($schema) + '\'';
		      }
		    }
		    if (it.opts.verbose) {
		      out += ' , schema:  ';
		      if ($isData) {
		        out += 'validate.schema' + ($schemaPath);
		      } else {
		        out += '' + ($schema);
		      }
		      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		    }
		    out += ' } ';
		  } else {
		    out += ' {} ';
		  }
		  var __err = out;
		  out = $$outStack.pop();
		  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		    if (it.async) {
		      out += ' throw new ValidationError([' + (__err) + ']); ';
		    } else {
		      out += ' validate.errors = [' + (__err) + ']; return false; ';
		    }
		  } else {
		    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		  }
		  out += ' } ';
		  if ($breakOnError) {
		    out += ' else { ';
		  }
		  return out;
		}

		},{}],152:[function(require,module,exports){
		'use strict';
		module.exports = function generate__limitItems(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $errorKeyword;
		  var $data = 'data' + ($dataLvl || '');
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  var $op = $keyword == 'maxItems' ? '>' : '<';
		  out += 'if ( ';
		  if ($isData) {
		    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
		  }
		  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';
		  var $errorKeyword = $keyword;
		  var $$outStack = $$outStack || [];
		  $$outStack.push(out);
		  out = ''; /* istanbul ignore else */
		  if (it.createErrors !== false) {
		    out += ' { keyword: \'' + ($errorKeyword || '_limitItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';
		    if (it.opts.messages !== false) {
		      out += ' , message: \'should NOT have ';
		      if ($keyword == 'maxItems') {
		        out += 'more';
		      } else {
		        out += 'less';
		      }
		      out += ' than ';
		      if ($isData) {
		        out += '\' + ' + ($schemaValue) + ' + \'';
		      } else {
		        out += '' + ($schema);
		      }
		      out += ' items\' ';
		    }
		    if (it.opts.verbose) {
		      out += ' , schema:  ';
		      if ($isData) {
		        out += 'validate.schema' + ($schemaPath);
		      } else {
		        out += '' + ($schema);
		      }
		      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		    }
		    out += ' } ';
		  } else {
		    out += ' {} ';
		  }
		  var __err = out;
		  out = $$outStack.pop();
		  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		    if (it.async) {
		      out += ' throw new ValidationError([' + (__err) + ']); ';
		    } else {
		      out += ' validate.errors = [' + (__err) + ']; return false; ';
		    }
		  } else {
		    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		  }
		  out += '} ';
		  if ($breakOnError) {
		    out += ' else { ';
		  }
		  return out;
		}

		},{}],153:[function(require,module,exports){
		'use strict';
		module.exports = function generate__limitLength(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $errorKeyword;
		  var $data = 'data' + ($dataLvl || '');
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  var $op = $keyword == 'maxLength' ? '>' : '<';
		  out += 'if ( ';
		  if ($isData) {
		    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
		  }
		  if (it.opts.unicode === false) {
		    out += ' ' + ($data) + '.length ';
		  } else {
		    out += ' ucs2length(' + ($data) + ') ';
		  }
		  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';
		  var $errorKeyword = $keyword;
		  var $$outStack = $$outStack || [];
		  $$outStack.push(out);
		  out = ''; /* istanbul ignore else */
		  if (it.createErrors !== false) {
		    out += ' { keyword: \'' + ($errorKeyword || '_limitLength') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';
		    if (it.opts.messages !== false) {
		      out += ' , message: \'should NOT be ';
		      if ($keyword == 'maxLength') {
		        out += 'longer';
		      } else {
		        out += 'shorter';
		      }
		      out += ' than ';
		      if ($isData) {
		        out += '\' + ' + ($schemaValue) + ' + \'';
		      } else {
		        out += '' + ($schema);
		      }
		      out += ' characters\' ';
		    }
		    if (it.opts.verbose) {
		      out += ' , schema:  ';
		      if ($isData) {
		        out += 'validate.schema' + ($schemaPath);
		      } else {
		        out += '' + ($schema);
		      }
		      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		    }
		    out += ' } ';
		  } else {
		    out += ' {} ';
		  }
		  var __err = out;
		  out = $$outStack.pop();
		  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		    if (it.async) {
		      out += ' throw new ValidationError([' + (__err) + ']); ';
		    } else {
		      out += ' validate.errors = [' + (__err) + ']; return false; ';
		    }
		  } else {
		    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		  }
		  out += '} ';
		  if ($breakOnError) {
		    out += ' else { ';
		  }
		  return out;
		}

		},{}],154:[function(require,module,exports){
		'use strict';
		module.exports = function generate__limitProperties(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $errorKeyword;
		  var $data = 'data' + ($dataLvl || '');
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  var $op = $keyword == 'maxProperties' ? '>' : '<';
		  out += 'if ( ';
		  if ($isData) {
		    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
		  }
		  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';
		  var $errorKeyword = $keyword;
		  var $$outStack = $$outStack || [];
		  $$outStack.push(out);
		  out = ''; /* istanbul ignore else */
		  if (it.createErrors !== false) {
		    out += ' { keyword: \'' + ($errorKeyword || '_limitProperties') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';
		    if (it.opts.messages !== false) {
		      out += ' , message: \'should NOT have ';
		      if ($keyword == 'maxProperties') {
		        out += 'more';
		      } else {
		        out += 'less';
		      }
		      out += ' than ';
		      if ($isData) {
		        out += '\' + ' + ($schemaValue) + ' + \'';
		      } else {
		        out += '' + ($schema);
		      }
		      out += ' properties\' ';
		    }
		    if (it.opts.verbose) {
		      out += ' , schema:  ';
		      if ($isData) {
		        out += 'validate.schema' + ($schemaPath);
		      } else {
		        out += '' + ($schema);
		      }
		      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		    }
		    out += ' } ';
		  } else {
		    out += ' {} ';
		  }
		  var __err = out;
		  out = $$outStack.pop();
		  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		    if (it.async) {
		      out += ' throw new ValidationError([' + (__err) + ']); ';
		    } else {
		      out += ' validate.errors = [' + (__err) + ']; return false; ';
		    }
		  } else {
		    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		  }
		  out += '} ';
		  if ($breakOnError) {
		    out += ' else { ';
		  }
		  return out;
		}

		},{}],155:[function(require,module,exports){
		'use strict';
		module.exports = function generate_allOf(it, $keyword) {
		  var out = ' ';
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $it = it.util.copy(it);
		  var $closingBraces = '';
		  $it.level++;
		  var $nextValid = 'valid' + $it.level;
		  var $currentBaseId = $it.baseId,
		    $allSchemasEmpty = true;
		  var arr1 = $schema;
		  if (arr1) {
		    var $sch, $i = -1,
		      l1 = arr1.length - 1;
		    while ($i < l1) {
		      $sch = arr1[$i += 1];
		      if (it.util.schemaHasRules($sch, it.RULES.all)) {
		        $allSchemasEmpty = false;
		        $it.schema = $sch;
		        $it.schemaPath = $schemaPath + '[' + $i + ']';
		        $it.errSchemaPath = $errSchemaPath + '/' + $i;
		        out += '  ' + (it.validate($it)) + ' ';
		        $it.baseId = $currentBaseId;
		        if ($breakOnError) {
		          out += ' if (' + ($nextValid) + ') { ';
		          $closingBraces += '}';
		        }
		      }
		    }
		  }
		  if ($breakOnError) {
		    if ($allSchemasEmpty) {
		      out += ' if (true) { ';
		    } else {
		      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';
		    }
		  }
		  out = it.util.cleanUpCode(out);
		  return out;
		}

		},{}],156:[function(require,module,exports){
		'use strict';
		module.exports = function generate_anyOf(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  var $errs = 'errs__' + $lvl;
		  var $it = it.util.copy(it);
		  var $closingBraces = '';
		  $it.level++;
		  var $nextValid = 'valid' + $it.level;
		  var $noEmptySchema = $schema.every(function($sch) {
		    return it.util.schemaHasRules($sch, it.RULES.all);
		  });
		  if ($noEmptySchema) {
		    var $currentBaseId = $it.baseId;
		    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';
		    var $wasComposite = it.compositeRule;
		    it.compositeRule = $it.compositeRule = true;
		    var arr1 = $schema;
		    if (arr1) {
		      var $sch, $i = -1,
		        l1 = arr1.length - 1;
		      while ($i < l1) {
		        $sch = arr1[$i += 1];
		        $it.schema = $sch;
		        $it.schemaPath = $schemaPath + '[' + $i + ']';
		        $it.errSchemaPath = $errSchemaPath + '/' + $i;
		        out += '  ' + (it.validate($it)) + ' ';
		        $it.baseId = $currentBaseId;
		        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';
		        $closingBraces += '}';
		      }
		    }
		    it.compositeRule = $it.compositeRule = $wasComposite;
		    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {  var err =   '; /* istanbul ignore else */
		    if (it.createErrors !== false) {
		      out += ' { keyword: \'' + ('anyOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
		      if (it.opts.messages !== false) {
		        out += ' , message: \'should match some schema in anyOf\' ';
		      }
		      if (it.opts.verbose) {
		        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		      }
		      out += ' } ';
		    } else {
		      out += ' {} ';
		    }
		    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';
		    if (it.opts.allErrors) {
		      out += ' } ';
		    }
		    out = it.util.cleanUpCode(out);
		  } else {
		    if ($breakOnError) {
		      out += ' if (true) { ';
		    }
		  }
		  return out;
		}

		},{}],157:[function(require,module,exports){
		'use strict';
		module.exports = function generate_constant(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  if (!$isData) {
		    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';
		  }
		  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';
		  var $$outStack = $$outStack || [];
		  $$outStack.push(out);
		  out = ''; /* istanbul ignore else */
		  if (it.createErrors !== false) {
		    out += ' { keyword: \'' + ('constant') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
		    if (it.opts.messages !== false) {
		      out += ' , message: \'should be equal to constant\' ';
		    }
		    if (it.opts.verbose) {
		      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		    }
		    out += ' } ';
		  } else {
		    out += ' {} ';
		  }
		  var __err = out;
		  out = $$outStack.pop();
		  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		    if (it.async) {
		      out += ' throw new ValidationError([' + (__err) + ']); ';
		    } else {
		      out += ' validate.errors = [' + (__err) + ']; return false; ';
		    }
		  } else {
		    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		  }
		  out += ' }';
		  return out;
		}

		},{}],158:[function(require,module,exports){
		'use strict';
		module.exports = function generate_custom(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $errorKeyword;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  var $errs = 'errs__' + $lvl;
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  var $rule = this,
		    $definition = 'definition' + $lvl,
		    $rDef = $rule.definition;
		  var $compile, $inline, $macro, $ruleValidate, $validateCode;
		  if ($isData && $rDef.$data) {
		    $validateCode = 'keywordValidate' + $lvl;
		    var $validateSchema = $rDef.validateSchema;
		    out += ' var ' + ($definition) + ' = RULES.custom[\'' + ($keyword) + '\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';
		  } else {
		    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);
		    $schemaValue = 'validate.schema' + $schemaPath;
		    $validateCode = $ruleValidate.code;
		    $compile = $rDef.compile;
		    $inline = $rDef.inline;
		    $macro = $rDef.macro;
		  }
		  var $ruleErrs = $validateCode + '.errors',
		    $i = 'i' + $lvl,
		    $ruleErr = 'ruleErr' + $lvl,
		    $asyncKeyword = $rDef.async;
		  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');
		  if (!($inline || $macro)) {
		    out += '' + ($ruleErrs) + ' = null;';
		  }
		  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';
		  if ($validateSchema) {
		    out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') {';
		  }
		  if ($inline) {
		    if ($rDef.statements) {
		      out += ' ' + ($ruleValidate.validate) + ' ';
		    } else {
		      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';
		    }
		  } else if ($macro) {
		    var $it = it.util.copy(it);
		    $it.level++;
		    var $nextValid = 'valid' + $it.level;
		    $it.schema = $ruleValidate.validate;
		    $it.schemaPath = '';
		    var $wasComposite = it.compositeRule;
		    it.compositeRule = $it.compositeRule = true;
		    var $code = it.validate($it).replace(/validate\.schema/g, $validateCode);
		    it.compositeRule = $it.compositeRule = $wasComposite;
		    out += ' ' + ($code);
		  } else {
		    var $$outStack = $$outStack || [];
		    $$outStack.push(out);
		    out = '';
		    out += '  ' + ($validateCode) + '.call( ';
		    if (it.opts.passContext) {
		      out += 'this';
		    } else {
		      out += 'self';
		    }
		    if ($compile || $rDef.schema === false) {
		      out += ' , ' + ($data) + ' ';
		    } else {
		      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';
		    }
		    out += ' , (dataPath || \'\')';
		    if (it.errorPath != '""') {
		      out += ' + ' + (it.errorPath);
		    }
		    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',
		      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';
		    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';
		    var def_callRuleValidate = out;
		    out = $$outStack.pop();
		    if ($rDef.errors === false) {
		      out += ' ' + ($valid) + ' = ';
		      if ($asyncKeyword) {
		        out += '' + (it.yieldAwait);
		      }
		      out += '' + (def_callRuleValidate) + '; ';
		    } else {
		      if ($asyncKeyword) {
		        $ruleErrs = 'customErrors' + $lvl;
		        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = ' + (it.yieldAwait) + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';
		      } else {
		        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';
		      }
		    }
		  }
		  if ($rDef.modifying) {
		    out += ' ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';
		  }
		  if ($validateSchema) {
		    out += ' }';
		  }
		  if ($rDef.valid) {
		    if ($breakOnError) {
		      out += ' if (true) { ';
		    }
		  } else {
		    out += ' if ( ';
		    if ($rDef.valid === undefined) {
		      out += ' !';
		      if ($macro) {
		        out += '' + ($nextValid);
		      } else {
		        out += '' + ($valid);
		      }
		    } else {
		      out += ' ' + (!$rDef.valid) + ' ';
		    }
		    out += ') { ';
		    $errorKeyword = $rule.keyword;
		    var $$outStack = $$outStack || [];
		    $$outStack.push(out);
		    out = '';
		    var $$outStack = $$outStack || [];
		    $$outStack.push(out);
		    out = ''; /* istanbul ignore else */
		    if (it.createErrors !== false) {
		      out += ' { keyword: \'' + ($errorKeyword || 'custom') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \'' + ($rule.keyword) + '\' } ';
		      if (it.opts.messages !== false) {
		        out += ' , message: \'should pass "' + ($rule.keyword) + '" keyword validation\' ';
		      }
		      if (it.opts.verbose) {
		        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		      }
		      out += ' } ';
		    } else {
		      out += ' {} ';
		    }
		    var __err = out;
		    out = $$outStack.pop();
		    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		      if (it.async) {
		        out += ' throw new ValidationError([' + (__err) + ']); ';
		      } else {
		        out += ' validate.errors = [' + (__err) + ']; return false; ';
		      }
		    } else {
		      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		    }
		    var def_customError = out;
		    out = $$outStack.pop();
		    if ($inline) {
		      if ($rDef.errors) {
		        if ($rDef.errors != 'full') {
		          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \'\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = "' + ($errSchemaPath) + '"; } ';
		          if (it.opts.verbose) {
		            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';
		          }
		          out += ' } ';
		        }
		      } else {
		        if ($rDef.errors === false) {
		          out += ' ' + (def_customError) + ' ';
		        } else {
		          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \'\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = "' + ($errSchemaPath) + '"; } ';
		          if (it.opts.verbose) {
		            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';
		          }
		          out += ' } } ';
		        }
		      }
		    } else if ($macro) {
		      out += '   var err =   '; /* istanbul ignore else */
		      if (it.createErrors !== false) {
		        out += ' { keyword: \'' + ($errorKeyword || 'custom') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \'' + ($rule.keyword) + '\' } ';
		        if (it.opts.messages !== false) {
		          out += ' , message: \'should pass "' + ($rule.keyword) + '" keyword validation\' ';
		        }
		        if (it.opts.verbose) {
		          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		        }
		        out += ' } ';
		      } else {
		        out += ' {} ';
		      }
		      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		        if (it.async) {
		          out += ' throw new ValidationError(vErrors); ';
		        } else {
		          out += ' validate.errors = vErrors; return false; ';
		        }
		      }
		    } else {
		      if ($rDef.errors === false) {
		        out += ' ' + (def_customError) + ' ';
		      } else {
		        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \'\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = "' + ($errSchemaPath) + '";  ';
		        if (it.opts.verbose) {
		          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';
		        }
		        out += ' } } else { ' + (def_customError) + ' } ';
		      }
		    }
		    out += ' } ';
		    if ($breakOnError) {
		      out += ' else { ';
		    }
		  }
		  return out;
		}

		},{}],159:[function(require,module,exports){
		'use strict';
		module.exports = function generate_dependencies(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $errs = 'errs__' + $lvl;
		  var $it = it.util.copy(it);
		  var $closingBraces = '';
		  $it.level++;
		  var $nextValid = 'valid' + $it.level;
		  var $schemaDeps = {},
		    $propertyDeps = {};
		  for ($property in $schema) {
		    var $sch = $schema[$property];
		    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;
		    $deps[$property] = $sch;
		  }
		  out += 'var ' + ($errs) + ' = errors;';
		  var $currentErrorPath = it.errorPath;
		  out += 'var missing' + ($lvl) + ';';
		  for (var $property in $propertyDeps) {
		    $deps = $propertyDeps[$property];
		    out += ' if (' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';
		    if ($breakOnError) {
		      out += ' && ( ';
		      var arr1 = $deps;
		      if (arr1) {
		        var _$property, $i = -1,
		          l1 = arr1.length - 1;
		        while ($i < l1) {
		          _$property = arr1[$i += 1];
		          if ($i) {
		            out += ' || ';
		          }
		          var $prop = it.util.getProperty(_$property);
		          out += ' ( ' + ($data) + ($prop) + ' === undefined && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? _$property : $prop)) + ') ) ';
		        }
		      }
		      out += ')) {  ';
		      var $propertyPath = 'missing' + $lvl,
		        $missingProperty = '\' + ' + $propertyPath + ' + \'';
		      if (it.opts._errorDataPathProperty) {
		        it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;
		      }
		      var $$outStack = $$outStack || [];
		      $$outStack.push(out);
		      out = ''; /* istanbul ignore else */
		      if (it.createErrors !== false) {
		        out += ' { keyword: \'' + ('dependencies') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \'' + (it.util.escapeQuotes($property)) + '\', missingProperty: \'' + ($missingProperty) + '\', depsCount: ' + ($deps.length) + ', deps: \'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(", "))) + '\' } ';
		        if (it.opts.messages !== false) {
		          out += ' , message: \'should have ';
		          if ($deps.length == 1) {
		            out += 'property ' + (it.util.escapeQuotes($deps[0]));
		          } else {
		            out += 'properties ' + (it.util.escapeQuotes($deps.join(", ")));
		          }
		          out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\' ';
		        }
		        if (it.opts.verbose) {
		          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		        }
		        out += ' } ';
		      } else {
		        out += ' {} ';
		      }
		      var __err = out;
		      out = $$outStack.pop();
		      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		        if (it.async) {
		          out += ' throw new ValidationError([' + (__err) + ']); ';
		        } else {
		          out += ' validate.errors = [' + (__err) + ']; return false; ';
		        }
		      } else {
		        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		      }
		    } else {
		      out += ' ) { ';
		      var arr2 = $deps;
		      if (arr2) {
		        var $reqProperty, i2 = -1,
		          l2 = arr2.length - 1;
		        while (i2 < l2) {
		          $reqProperty = arr2[i2 += 1];
		          var $prop = it.util.getProperty($reqProperty),
		            $missingProperty = it.util.escapeQuotes($reqProperty);
		          if (it.opts._errorDataPathProperty) {
		            it.errorPath = it.util.getPath($currentErrorPath, $reqProperty, it.opts.jsonPointers);
		          }
		          out += ' if (' + ($data) + ($prop) + ' === undefined) {  var err =   '; /* istanbul ignore else */
		          if (it.createErrors !== false) {
		            out += ' { keyword: \'' + ('dependencies') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \'' + (it.util.escapeQuotes($property)) + '\', missingProperty: \'' + ($missingProperty) + '\', depsCount: ' + ($deps.length) + ', deps: \'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(", "))) + '\' } ';
		            if (it.opts.messages !== false) {
		              out += ' , message: \'should have ';
		              if ($deps.length == 1) {
		                out += 'property ' + (it.util.escapeQuotes($deps[0]));
		              } else {
		                out += 'properties ' + (it.util.escapeQuotes($deps.join(", ")));
		              }
		              out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\' ';
		            }
		            if (it.opts.verbose) {
		              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		            }
		            out += ' } ';
		          } else {
		            out += ' {} ';
		          }
		          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';
		        }
		      }
		    }
		    out += ' }   ';
		    if ($breakOnError) {
		      $closingBraces += '}';
		      out += ' else { ';
		    }
		  }
		  it.errorPath = $currentErrorPath;
		  var $currentBaseId = $it.baseId;
		  for (var $property in $schemaDeps) {
		    var $sch = $schemaDeps[$property];
		    if (it.util.schemaHasRules($sch, it.RULES.all)) {
		      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + (it.util.getProperty($property)) + ' !== undefined) { ';
		      $it.schema = $sch;
		      $it.schemaPath = $schemaPath + it.util.getProperty($property);
		      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);
		      out += '  ' + (it.validate($it)) + ' ';
		      $it.baseId = $currentBaseId;
		      out += ' }  ';
		      if ($breakOnError) {
		        out += ' if (' + ($nextValid) + ') { ';
		        $closingBraces += '}';
		      }
		    }
		  }
		  if ($breakOnError) {
		    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
		  }
		  out = it.util.cleanUpCode(out);
		  return out;
		}

		},{}],160:[function(require,module,exports){
		'use strict';
		module.exports = function generate_enum(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  var $i = 'i' + $lvl,
		    $vSchema = 'schema' + $lvl;
		  if (!$isData) {
		    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';
		  }
		  out += 'var ' + ($valid) + ';';
		  if ($isData) {
		    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';
		  }
		  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';
		  if ($isData) {
		    out += '  }  ';
		  }
		  out += ' if (!' + ($valid) + ') {   ';
		  var $$outStack = $$outStack || [];
		  $$outStack.push(out);
		  out = ''; /* istanbul ignore else */
		  if (it.createErrors !== false) {
		    out += ' { keyword: \'' + ('enum') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';
		    if (it.opts.messages !== false) {
		      out += ' , message: \'should be equal to one of the allowed values\' ';
		    }
		    if (it.opts.verbose) {
		      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		    }
		    out += ' } ';
		  } else {
		    out += ' {} ';
		  }
		  var __err = out;
		  out = $$outStack.pop();
		  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		    if (it.async) {
		      out += ' throw new ValidationError([' + (__err) + ']); ';
		    } else {
		      out += ' validate.errors = [' + (__err) + ']; return false; ';
		    }
		  } else {
		    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		  }
		  out += ' }';
		  if ($breakOnError) {
		    out += ' else { ';
		  }
		  return out;
		}

		},{}],161:[function(require,module,exports){
		'use strict';
		module.exports = function generate_format(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  if (it.opts.format === false) {
		    if ($breakOnError) {
		      out += ' if (true) { ';
		    }
		    return out;
		  }
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  var $unknownFormats = it.opts.unknownFormats,
		    $allowUnknown = Array.isArray($unknownFormats);
		  if ($isData) {
		    var $format = 'format' + $lvl;
		    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var isObject' + ($lvl) + ' = typeof ' + ($format) + ' == \'object\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; if (isObject' + ($lvl) + ') { ';
		    if (it.async) {
		      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';
		    }
		    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';
		    if ($isData) {
		      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'string\') || ';
		    }
		    out += ' (';
		    if ($unknownFormats === true || $allowUnknown) {
		      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';
		      if ($allowUnknown) {
		        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';
		      }
		      out += ') || ';
		    }
		    out += ' (' + ($format) + ' && !(typeof ' + ($format) + ' == \'function\' ? ';
		    if (it.async) {
		      out += ' (async' + ($lvl) + ' ? ' + (it.yieldAwait) + ' ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';
		    } else {
		      out += ' ' + ($format) + '(' + ($data) + ') ';
		    }
		    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';
		  } else {
		    var $format = it.formats[$schema];
		    if (!$format) {
		      if ($unknownFormats === true || ($allowUnknown && $unknownFormats.indexOf($schema) == -1)) {
		        throw new Error('unknown format "' + $schema + '" is used in schema at path "' + it.errSchemaPath + '"');
		      } else {
		        if (!$allowUnknown) {
		          console.warn('unknown format "' + $schema + '" ignored in schema at path "' + it.errSchemaPath + '"');
		          if ($unknownFormats !== 'ignore') console.warn('In the next major version it will throw exception. See option unknownFormats for more information');
		        }
		        if ($breakOnError) {
		          out += ' if (true) { ';
		        }
		        return out;
		      }
		    }
		    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;
		    if ($isObject) {
		      var $async = $format.async === true;
		      $format = $format.validate;
		    }
		    if ($async) {
		      if (!it.async) throw new Error('async format in sync schema');
		      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';
		      out += ' if (!(' + (it.yieldAwait) + ' ' + ($formatRef) + '(' + ($data) + '))) { ';
		    } else {
		      out += ' if (! ';
		      var $formatRef = 'formats' + it.util.getProperty($schema);
		      if ($isObject) $formatRef += '.validate';
		      if (typeof $format == 'function') {
		        out += ' ' + ($formatRef) + '(' + ($data) + ') ';
		      } else {
		        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';
		      }
		      out += ') { ';
		    }
		  }
		  var $$outStack = $$outStack || [];
		  $$outStack.push(out);
		  out = ''; /* istanbul ignore else */
		  if (it.createErrors !== false) {
		    out += ' { keyword: \'' + ('format') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';
		    if ($isData) {
		      out += '' + ($schemaValue);
		    } else {
		      out += '' + (it.util.toQuotedString($schema));
		    }
		    out += '  } ';
		    if (it.opts.messages !== false) {
		      out += ' , message: \'should match format "';
		      if ($isData) {
		        out += '\' + ' + ($schemaValue) + ' + \'';
		      } else {
		        out += '' + (it.util.escapeQuotes($schema));
		      }
		      out += '"\' ';
		    }
		    if (it.opts.verbose) {
		      out += ' , schema:  ';
		      if ($isData) {
		        out += 'validate.schema' + ($schemaPath);
		      } else {
		        out += '' + (it.util.toQuotedString($schema));
		      }
		      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		    }
		    out += ' } ';
		  } else {
		    out += ' {} ';
		  }
		  var __err = out;
		  out = $$outStack.pop();
		  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		    if (it.async) {
		      out += ' throw new ValidationError([' + (__err) + ']); ';
		    } else {
		      out += ' validate.errors = [' + (__err) + ']; return false; ';
		    }
		  } else {
		    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		  }
		  out += ' } ';
		  if ($breakOnError) {
		    out += ' else { ';
		  }
		  return out;
		}

		},{}],162:[function(require,module,exports){
		'use strict';
		module.exports = function generate_items(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  var $errs = 'errs__' + $lvl;
		  var $it = it.util.copy(it);
		  var $closingBraces = '';
		  $it.level++;
		  var $nextValid = 'valid' + $it.level;
		  var $idx = 'i' + $lvl,
		    $dataNxt = $it.dataLevel = it.dataLevel + 1,
		    $nextData = 'data' + $dataNxt,
		    $currentBaseId = it.baseId;
		  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';
		  if (Array.isArray($schema)) {
		    var $additionalItems = it.schema.additionalItems;
		    if ($additionalItems === false) {
		      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';
		      var $currErrSchemaPath = $errSchemaPath;
		      $errSchemaPath = it.errSchemaPath + '/additionalItems';
		      out += '  if (!' + ($valid) + ') {   ';
		      var $$outStack = $$outStack || [];
		      $$outStack.push(out);
		      out = ''; /* istanbul ignore else */
		      if (it.createErrors !== false) {
		        out += ' { keyword: \'' + ('additionalItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';
		        if (it.opts.messages !== false) {
		          out += ' , message: \'should NOT have more than ' + ($schema.length) + ' items\' ';
		        }
		        if (it.opts.verbose) {
		          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		        }
		        out += ' } ';
		      } else {
		        out += ' {} ';
		      }
		      var __err = out;
		      out = $$outStack.pop();
		      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		        if (it.async) {
		          out += ' throw new ValidationError([' + (__err) + ']); ';
		        } else {
		          out += ' validate.errors = [' + (__err) + ']; return false; ';
		        }
		      } else {
		        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		      }
		      out += ' } ';
		      $errSchemaPath = $currErrSchemaPath;
		      if ($breakOnError) {
		        $closingBraces += '}';
		        out += ' else { ';
		      }
		    }
		    var arr1 = $schema;
		    if (arr1) {
		      var $sch, $i = -1,
		        l1 = arr1.length - 1;
		      while ($i < l1) {
		        $sch = arr1[$i += 1];
		        if (it.util.schemaHasRules($sch, it.RULES.all)) {
		          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';
		          var $passData = $data + '[' + $i + ']';
		          $it.schema = $sch;
		          $it.schemaPath = $schemaPath + '[' + $i + ']';
		          $it.errSchemaPath = $errSchemaPath + '/' + $i;
		          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);
		          $it.dataPathArr[$dataNxt] = $i;
		          var $code = it.validate($it);
		          $it.baseId = $currentBaseId;
		          if (it.util.varOccurences($code, $nextData) < 2) {
		            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
		          } else {
		            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
		          }
		          out += ' }  ';
		          if ($breakOnError) {
		            out += ' if (' + ($nextValid) + ') { ';
		            $closingBraces += '}';
		          }
		        }
		      }
		    }
		    if (typeof $additionalItems == 'object' && it.util.schemaHasRules($additionalItems, it.RULES.all)) {
		      $it.schema = $additionalItems;
		      $it.schemaPath = it.schemaPath + '.additionalItems';
		      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';
		      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';
		      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);
		      var $passData = $data + '[' + $idx + ']';
		      $it.dataPathArr[$dataNxt] = $idx;
		      var $code = it.validate($it);
		      $it.baseId = $currentBaseId;
		      if (it.util.varOccurences($code, $nextData) < 2) {
		        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
		      } else {
		        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
		      }
		      if ($breakOnError) {
		        out += ' if (!' + ($nextValid) + ') break; ';
		      }
		      out += ' } }  ';
		      if ($breakOnError) {
		        out += ' if (' + ($nextValid) + ') { ';
		        $closingBraces += '}';
		      }
		    }
		  } else if (it.util.schemaHasRules($schema, it.RULES.all)) {
		    $it.schema = $schema;
		    $it.schemaPath = $schemaPath;
		    $it.errSchemaPath = $errSchemaPath;
		    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';
		    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);
		    var $passData = $data + '[' + $idx + ']';
		    $it.dataPathArr[$dataNxt] = $idx;
		    var $code = it.validate($it);
		    $it.baseId = $currentBaseId;
		    if (it.util.varOccurences($code, $nextData) < 2) {
		      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
		    } else {
		      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
		    }
		    if ($breakOnError) {
		      out += ' if (!' + ($nextValid) + ') break; ';
		    }
		    out += ' }  ';
		    if ($breakOnError) {
		      out += ' if (' + ($nextValid) + ') { ';
		      $closingBraces += '}';
		    }
		  }
		  if ($breakOnError) {
		    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
		  }
		  out = it.util.cleanUpCode(out);
		  return out;
		}

		},{}],163:[function(require,module,exports){
		'use strict';
		module.exports = function generate_multipleOf(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  out += 'var division' + ($lvl) + ';if (';
		  if ($isData) {
		    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \'number\' || ';
		  }
		  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';
		  if (it.opts.multipleOfPrecision) {
		    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';
		  } else {
		    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';
		  }
		  out += ' ) ';
		  if ($isData) {
		    out += '  )  ';
		  }
		  out += ' ) {   ';
		  var $$outStack = $$outStack || [];
		  $$outStack.push(out);
		  out = ''; /* istanbul ignore else */
		  if (it.createErrors !== false) {
		    out += ' { keyword: \'' + ('multipleOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';
		    if (it.opts.messages !== false) {
		      out += ' , message: \'should be multiple of ';
		      if ($isData) {
		        out += '\' + ' + ($schemaValue);
		      } else {
		        out += '' + ($schema) + '\'';
		      }
		    }
		    if (it.opts.verbose) {
		      out += ' , schema:  ';
		      if ($isData) {
		        out += 'validate.schema' + ($schemaPath);
		      } else {
		        out += '' + ($schema);
		      }
		      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		    }
		    out += ' } ';
		  } else {
		    out += ' {} ';
		  }
		  var __err = out;
		  out = $$outStack.pop();
		  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		    if (it.async) {
		      out += ' throw new ValidationError([' + (__err) + ']); ';
		    } else {
		      out += ' validate.errors = [' + (__err) + ']; return false; ';
		    }
		  } else {
		    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		  }
		  out += '} ';
		  if ($breakOnError) {
		    out += ' else { ';
		  }
		  return out;
		}

		},{}],164:[function(require,module,exports){
		'use strict';
		module.exports = function generate_not(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $errs = 'errs__' + $lvl;
		  var $it = it.util.copy(it);
		  $it.level++;
		  var $nextValid = 'valid' + $it.level;
		  if (it.util.schemaHasRules($schema, it.RULES.all)) {
		    $it.schema = $schema;
		    $it.schemaPath = $schemaPath;
		    $it.errSchemaPath = $errSchemaPath;
		    out += ' var ' + ($errs) + ' = errors;  ';
		    var $wasComposite = it.compositeRule;
		    it.compositeRule = $it.compositeRule = true;
		    $it.createErrors = false;
		    var $allErrorsOption;
		    if ($it.opts.allErrors) {
		      $allErrorsOption = $it.opts.allErrors;
		      $it.opts.allErrors = false;
		    }
		    out += ' ' + (it.validate($it)) + ' ';
		    $it.createErrors = true;
		    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;
		    it.compositeRule = $it.compositeRule = $wasComposite;
		    out += ' if (' + ($nextValid) + ') {   ';
		    var $$outStack = $$outStack || [];
		    $$outStack.push(out);
		    out = ''; /* istanbul ignore else */
		    if (it.createErrors !== false) {
		      out += ' { keyword: \'' + ('not') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
		      if (it.opts.messages !== false) {
		        out += ' , message: \'should NOT be valid\' ';
		      }
		      if (it.opts.verbose) {
		        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		      }
		      out += ' } ';
		    } else {
		      out += ' {} ';
		    }
		    var __err = out;
		    out = $$outStack.pop();
		    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		      if (it.async) {
		        out += ' throw new ValidationError([' + (__err) + ']); ';
		      } else {
		        out += ' validate.errors = [' + (__err) + ']; return false; ';
		      }
		    } else {
		      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		    }
		    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';
		    if (it.opts.allErrors) {
		      out += ' } ';
		    }
		  } else {
		    out += '  var err =   '; /* istanbul ignore else */
		    if (it.createErrors !== false) {
		      out += ' { keyword: \'' + ('not') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
		      if (it.opts.messages !== false) {
		        out += ' , message: \'should NOT be valid\' ';
		      }
		      if (it.opts.verbose) {
		        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		      }
		      out += ' } ';
		    } else {
		      out += ' {} ';
		    }
		    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		    if ($breakOnError) {
		      out += ' if (false) { ';
		    }
		  }
		  return out;
		}

		},{}],165:[function(require,module,exports){
		'use strict';
		module.exports = function generate_oneOf(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  var $errs = 'errs__' + $lvl;
		  var $it = it.util.copy(it);
		  var $closingBraces = '';
		  $it.level++;
		  var $nextValid = 'valid' + $it.level;
		  out += 'var ' + ($errs) + ' = errors;var prevValid' + ($lvl) + ' = false;var ' + ($valid) + ' = false;';
		  var $currentBaseId = $it.baseId;
		  var $wasComposite = it.compositeRule;
		  it.compositeRule = $it.compositeRule = true;
		  var arr1 = $schema;
		  if (arr1) {
		    var $sch, $i = -1,
		      l1 = arr1.length - 1;
		    while ($i < l1) {
		      $sch = arr1[$i += 1];
		      if (it.util.schemaHasRules($sch, it.RULES.all)) {
		        $it.schema = $sch;
		        $it.schemaPath = $schemaPath + '[' + $i + ']';
		        $it.errSchemaPath = $errSchemaPath + '/' + $i;
		        out += '  ' + (it.validate($it)) + ' ';
		        $it.baseId = $currentBaseId;
		      } else {
		        out += ' var ' + ($nextValid) + ' = true; ';
		      }
		      if ($i) {
		        out += ' if (' + ($nextValid) + ' && prevValid' + ($lvl) + ') ' + ($valid) + ' = false; else { ';
		        $closingBraces += '}';
		      }
		      out += ' if (' + ($nextValid) + ') ' + ($valid) + ' = prevValid' + ($lvl) + ' = true;';
		    }
		  }
		  it.compositeRule = $it.compositeRule = $wasComposite;
		  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   ';
		  var $$outStack = $$outStack || [];
		  $$outStack.push(out);
		  out = ''; /* istanbul ignore else */
		  if (it.createErrors !== false) {
		    out += ' { keyword: \'' + ('oneOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
		    if (it.opts.messages !== false) {
		      out += ' , message: \'should match exactly one schema in oneOf\' ';
		    }
		    if (it.opts.verbose) {
		      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		    }
		    out += ' } ';
		  } else {
		    out += ' {} ';
		  }
		  var __err = out;
		  out = $$outStack.pop();
		  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		    if (it.async) {
		      out += ' throw new ValidationError([' + (__err) + ']); ';
		    } else {
		      out += ' validate.errors = [' + (__err) + ']; return false; ';
		    }
		  } else {
		    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		  }
		  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';
		  if (it.opts.allErrors) {
		    out += ' } ';
		  }
		  return out;
		}

		},{}],166:[function(require,module,exports){
		'use strict';
		module.exports = function generate_pattern(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);
		  out += 'if ( ';
		  if ($isData) {
		    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'string\') || ';
		  }
		  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';
		  var $$outStack = $$outStack || [];
		  $$outStack.push(out);
		  out = ''; /* istanbul ignore else */
		  if (it.createErrors !== false) {
		    out += ' { keyword: \'' + ('pattern') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';
		    if ($isData) {
		      out += '' + ($schemaValue);
		    } else {
		      out += '' + (it.util.toQuotedString($schema));
		    }
		    out += '  } ';
		    if (it.opts.messages !== false) {
		      out += ' , message: \'should match pattern "';
		      if ($isData) {
		        out += '\' + ' + ($schemaValue) + ' + \'';
		      } else {
		        out += '' + (it.util.escapeQuotes($schema));
		      }
		      out += '"\' ';
		    }
		    if (it.opts.verbose) {
		      out += ' , schema:  ';
		      if ($isData) {
		        out += 'validate.schema' + ($schemaPath);
		      } else {
		        out += '' + (it.util.toQuotedString($schema));
		      }
		      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		    }
		    out += ' } ';
		  } else {
		    out += ' {} ';
		  }
		  var __err = out;
		  out = $$outStack.pop();
		  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		    if (it.async) {
		      out += ' throw new ValidationError([' + (__err) + ']); ';
		    } else {
		      out += ' validate.errors = [' + (__err) + ']; return false; ';
		    }
		  } else {
		    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		  }
		  out += '} ';
		  if ($breakOnError) {
		    out += ' else { ';
		  }
		  return out;
		}

		},{}],167:[function(require,module,exports){
		'use strict';
		module.exports = function generate_patternRequired(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  var $key = 'key' + $lvl,
		    $matched = 'patternMatched' + $lvl,
		    $closingBraces = '',
		    $ownProperties = it.opts.ownProperties;
		  out += 'var ' + ($valid) + ' = true;';
		  var arr1 = $schema;
		  if (arr1) {
		    var $pProperty, i1 = -1,
		      l1 = arr1.length - 1;
		    while (i1 < l1) {
		      $pProperty = arr1[i1 += 1];
		      out += ' var ' + ($matched) + ' = false; for (var ' + ($key) + ' in ' + ($data) + ') {  ';
		      if ($ownProperties) {
		        out += ' if (!Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($key) + ')) continue; ';
		      }
		      out += ' ' + ($matched) + ' = ' + (it.usePattern($pProperty)) + '.test(' + ($key) + '); if (' + ($matched) + ') break; } ';
		      var $missingPattern = it.util.escapeQuotes($pProperty);
		      out += ' if (!' + ($matched) + ') { ' + ($valid) + ' = false;  var err =   '; /* istanbul ignore else */
		      if (it.createErrors !== false) {
		        out += ' { keyword: \'' + ('patternRequired') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingPattern: \'' + ($missingPattern) + '\' } ';
		        if (it.opts.messages !== false) {
		          out += ' , message: \'should have property matching pattern \\\'' + ($missingPattern) + '\\\'\' ';
		        }
		        if (it.opts.verbose) {
		          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		        }
		        out += ' } ';
		      } else {
		        out += ' {} ';
		      }
		      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   ';
		      if ($breakOnError) {
		        $closingBraces += '}';
		        out += ' else { ';
		      }
		    }
		  }
		  out += '' + ($closingBraces);
		  return out;
		}

		},{}],168:[function(require,module,exports){
		'use strict';
		module.exports = function generate_properties(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  var $errs = 'errs__' + $lvl;
		  var $it = it.util.copy(it);
		  var $closingBraces = '';
		  $it.level++;
		  var $nextValid = 'valid' + $it.level;
		  var $key = 'key' + $lvl,
		    $dataNxt = $it.dataLevel = it.dataLevel + 1,
		    $nextData = 'data' + $dataNxt;
		  var $schemaKeys = Object.keys($schema || {}),
		    $pProperties = it.schema.patternProperties || {},
		    $pPropertyKeys = Object.keys($pProperties),
		    $aProperties = it.schema.additionalProperties,
		    $someProperties = $schemaKeys.length || $pPropertyKeys.length,
		    $noAdditional = $aProperties === false,
		    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,
		    $removeAdditional = it.opts.removeAdditional,
		    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,
		    $ownProperties = it.opts.ownProperties,
		    $currentBaseId = it.baseId;
		  var $required = it.schema.required;
		  if ($required && !(it.opts.v5 && $required.$data) && $required.length < it.opts.loopRequired) var $requiredHash = it.util.toHash($required);
		  if (it.opts.v5) {
		    var $pgProperties = it.schema.patternGroups || {},
		      $pgPropertyKeys = Object.keys($pgProperties);
		  }
		  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';
		  if ($checkAdditional) {
		    out += ' for (var ' + ($key) + ' in ' + ($data) + ') {  ';
		    if ($ownProperties) {
		      out += ' if (!Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($key) + ')) continue; ';
		    }
		    if ($someProperties) {
		      out += ' var isAdditional' + ($lvl) + ' = !(false ';
		      if ($schemaKeys.length) {
		        if ($schemaKeys.length > 5) {
		          out += ' || validate.schema' + ($schemaPath) + '[' + ($key) + '] ';
		        } else {
		          var arr1 = $schemaKeys;
		          if (arr1) {
		            var $propertyKey, i1 = -1,
		              l1 = arr1.length - 1;
		            while (i1 < l1) {
		              $propertyKey = arr1[i1 += 1];
		              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';
		            }
		          }
		        }
		      }
		      if ($pPropertyKeys.length) {
		        var arr2 = $pPropertyKeys;
		        if (arr2) {
		          var $pProperty, $i = -1,
		            l2 = arr2.length - 1;
		          while ($i < l2) {
		            $pProperty = arr2[$i += 1];
		            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';
		          }
		        }
		      }
		      if (it.opts.v5 && $pgPropertyKeys && $pgPropertyKeys.length) {
		        var arr3 = $pgPropertyKeys;
		        if (arr3) {
		          var $pgProperty, $i = -1,
		            l3 = arr3.length - 1;
		          while ($i < l3) {
		            $pgProperty = arr3[$i += 1];
		            out += ' || ' + (it.usePattern($pgProperty)) + '.test(' + ($key) + ') ';
		          }
		        }
		      }
		      out += ' ); if (isAdditional' + ($lvl) + ') { ';
		    }
		    if ($removeAdditional == 'all') {
		      out += ' delete ' + ($data) + '[' + ($key) + ']; ';
		    } else {
		      var $currentErrorPath = it.errorPath;
		      var $additionalProperty = '\' + ' + $key + ' + \'';
		      if (it.opts._errorDataPathProperty) {
		        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
		      }
		      if ($noAdditional) {
		        if ($removeAdditional) {
		          out += ' delete ' + ($data) + '[' + ($key) + ']; ';
		        } else {
		          out += ' ' + ($nextValid) + ' = false; ';
		          var $currErrSchemaPath = $errSchemaPath;
		          $errSchemaPath = it.errSchemaPath + '/additionalProperties';
		          var $$outStack = $$outStack || [];
		          $$outStack.push(out);
		          out = ''; /* istanbul ignore else */
		          if (it.createErrors !== false) {
		            out += ' { keyword: \'' + ('additionalProperties') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \'' + ($additionalProperty) + '\' } ';
		            if (it.opts.messages !== false) {
		              out += ' , message: \'should NOT have additional properties\' ';
		            }
		            if (it.opts.verbose) {
		              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		            }
		            out += ' } ';
		          } else {
		            out += ' {} ';
		          }
		          var __err = out;
		          out = $$outStack.pop();
		          if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		            if (it.async) {
		              out += ' throw new ValidationError([' + (__err) + ']); ';
		            } else {
		              out += ' validate.errors = [' + (__err) + ']; return false; ';
		            }
		          } else {
		            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		          }
		          $errSchemaPath = $currErrSchemaPath;
		          if ($breakOnError) {
		            out += ' break; ';
		          }
		        }
		      } else if ($additionalIsSchema) {
		        if ($removeAdditional == 'failing') {
		          out += ' var ' + ($errs) + ' = errors;  ';
		          var $wasComposite = it.compositeRule;
		          it.compositeRule = $it.compositeRule = true;
		          $it.schema = $aProperties;
		          $it.schemaPath = it.schemaPath + '.additionalProperties';
		          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';
		          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
		          var $passData = $data + '[' + $key + ']';
		          $it.dataPathArr[$dataNxt] = $key;
		          var $code = it.validate($it);
		          $it.baseId = $currentBaseId;
		          if (it.util.varOccurences($code, $nextData) < 2) {
		            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
		          } else {
		            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
		          }
		          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';
		          it.compositeRule = $it.compositeRule = $wasComposite;
		        } else {
		          $it.schema = $aProperties;
		          $it.schemaPath = it.schemaPath + '.additionalProperties';
		          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';
		          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
		          var $passData = $data + '[' + $key + ']';
		          $it.dataPathArr[$dataNxt] = $key;
		          var $code = it.validate($it);
		          $it.baseId = $currentBaseId;
		          if (it.util.varOccurences($code, $nextData) < 2) {
		            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
		          } else {
		            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
		          }
		          if ($breakOnError) {
		            out += ' if (!' + ($nextValid) + ') break; ';
		          }
		        }
		      }
		      it.errorPath = $currentErrorPath;
		    }
		    if ($someProperties) {
		      out += ' } ';
		    }
		    out += ' }  ';
		    if ($breakOnError) {
		      out += ' if (' + ($nextValid) + ') { ';
		      $closingBraces += '}';
		    }
		  }
		  var $useDefaults = it.opts.useDefaults && !it.compositeRule;
		  if ($schemaKeys.length) {
		    var arr4 = $schemaKeys;
		    if (arr4) {
		      var $propertyKey, i4 = -1,
		        l4 = arr4.length - 1;
		      while (i4 < l4) {
		        $propertyKey = arr4[i4 += 1];
		        var $sch = $schema[$propertyKey];
		        if (it.util.schemaHasRules($sch, it.RULES.all)) {
		          var $prop = it.util.getProperty($propertyKey),
		            $passData = $data + $prop,
		            $hasDefault = $useDefaults && $sch.default !== undefined;
		          $it.schema = $sch;
		          $it.schemaPath = $schemaPath + $prop;
		          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);
		          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);
		          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);
		          var $code = it.validate($it);
		          $it.baseId = $currentBaseId;
		          if (it.util.varOccurences($code, $nextData) < 2) {
		            $code = it.util.varReplace($code, $nextData, $passData);
		            var $useData = $passData;
		          } else {
		            var $useData = $nextData;
		            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';
		          }
		          if ($hasDefault) {
		            out += ' ' + ($code) + ' ';
		          } else {
		            if ($requiredHash && $requiredHash[$propertyKey]) {
		              out += ' if (' + ($useData) + ' === undefined) { ' + ($nextValid) + ' = false; ';
		              var $currentErrorPath = it.errorPath,
		                $currErrSchemaPath = $errSchemaPath,
		                $missingProperty = it.util.escapeQuotes($propertyKey);
		              if (it.opts._errorDataPathProperty) {
		                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);
		              }
		              $errSchemaPath = it.errSchemaPath + '/required';
		              var $$outStack = $$outStack || [];
		              $$outStack.push(out);
		              out = ''; /* istanbul ignore else */
		              if (it.createErrors !== false) {
		                out += ' { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
		                if (it.opts.messages !== false) {
		                  out += ' , message: \'';
		                  if (it.opts._errorDataPathProperty) {
		                    out += 'is a required property';
		                  } else {
		                    out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
		                  }
		                  out += '\' ';
		                }
		                if (it.opts.verbose) {
		                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		                }
		                out += ' } ';
		              } else {
		                out += ' {} ';
		              }
		              var __err = out;
		              out = $$outStack.pop();
		              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		                if (it.async) {
		                  out += ' throw new ValidationError([' + (__err) + ']); ';
		                } else {
		                  out += ' validate.errors = [' + (__err) + ']; return false; ';
		                }
		              } else {
		                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		              }
		              $errSchemaPath = $currErrSchemaPath;
		              it.errorPath = $currentErrorPath;
		              out += ' } else { ';
		            } else {
		              if ($breakOnError) {
		                out += ' if (' + ($useData) + ' === undefined) { ' + ($nextValid) + ' = true; } else { ';
		              } else {
		                out += ' if (' + ($useData) + ' !== undefined) { ';
		              }
		            }
		            out += ' ' + ($code) + ' } ';
		          }
		        }
		        if ($breakOnError) {
		          out += ' if (' + ($nextValid) + ') { ';
		          $closingBraces += '}';
		        }
		      }
		    }
		  }
		  var arr5 = $pPropertyKeys;
		  if (arr5) {
		    var $pProperty, i5 = -1,
		      l5 = arr5.length - 1;
		    while (i5 < l5) {
		      $pProperty = arr5[i5 += 1];
		      var $sch = $pProperties[$pProperty];
		      if (it.util.schemaHasRules($sch, it.RULES.all)) {
		        $it.schema = $sch;
		        $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);
		        $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);
		        out += ' for (var ' + ($key) + ' in ' + ($data) + ') {  ';
		        if ($ownProperties) {
		          out += ' if (!Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($key) + ')) continue; ';
		        }
		        out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';
		        $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
		        var $passData = $data + '[' + $key + ']';
		        $it.dataPathArr[$dataNxt] = $key;
		        var $code = it.validate($it);
		        $it.baseId = $currentBaseId;
		        if (it.util.varOccurences($code, $nextData) < 2) {
		          out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
		        } else {
		          out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
		        }
		        if ($breakOnError) {
		          out += ' if (!' + ($nextValid) + ') break; ';
		        }
		        out += ' } ';
		        if ($breakOnError) {
		          out += ' else ' + ($nextValid) + ' = true; ';
		        }
		        out += ' }  ';
		        if ($breakOnError) {
		          out += ' if (' + ($nextValid) + ') { ';
		          $closingBraces += '}';
		        }
		      }
		    }
		  }
		  if (it.opts.v5) {
		    var arr6 = $pgPropertyKeys;
		    if (arr6) {
		      var $pgProperty, i6 = -1,
		        l6 = arr6.length - 1;
		      while (i6 < l6) {
		        $pgProperty = arr6[i6 += 1];
		        var $pgSchema = $pgProperties[$pgProperty],
		          $sch = $pgSchema.schema;
		        if (it.util.schemaHasRules($sch, it.RULES.all)) {
		          $it.schema = $sch;
		          $it.schemaPath = it.schemaPath + '.patternGroups' + it.util.getProperty($pgProperty) + '.schema';
		          $it.errSchemaPath = it.errSchemaPath + '/patternGroups/' + it.util.escapeFragment($pgProperty) + '/schema';
		          out += ' var pgPropCount' + ($lvl) + ' = 0; for (var ' + ($key) + ' in ' + ($data) + ') {  ';
		          if ($ownProperties) {
		            out += ' if (!Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($key) + ')) continue; ';
		          }
		          out += ' if (' + (it.usePattern($pgProperty)) + '.test(' + ($key) + ')) { pgPropCount' + ($lvl) + '++; ';
		          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
		          var $passData = $data + '[' + $key + ']';
		          $it.dataPathArr[$dataNxt] = $key;
		          var $code = it.validate($it);
		          $it.baseId = $currentBaseId;
		          if (it.util.varOccurences($code, $nextData) < 2) {
		            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
		          } else {
		            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
		          }
		          if ($breakOnError) {
		            out += ' if (!' + ($nextValid) + ') break; ';
		          }
		          out += ' } ';
		          if ($breakOnError) {
		            out += ' else ' + ($nextValid) + ' = true; ';
		          }
		          out += ' }  ';
		          if ($breakOnError) {
		            out += ' if (' + ($nextValid) + ') { ';
		            $closingBraces += '}';
		          }
		          var $pgMin = $pgSchema.minimum,
		            $pgMax = $pgSchema.maximum;
		          if ($pgMin !== undefined || $pgMax !== undefined) {
		            out += ' var ' + ($valid) + ' = true; ';
		            var $currErrSchemaPath = $errSchemaPath;
		            if ($pgMin !== undefined) {
		              var $limit = $pgMin,
		                $reason = 'minimum',
		                $moreOrLess = 'less';
		              out += ' ' + ($valid) + ' = pgPropCount' + ($lvl) + ' >= ' + ($pgMin) + '; ';
		              $errSchemaPath = it.errSchemaPath + '/patternGroups/minimum';
		              out += '  if (!' + ($valid) + ') {   ';
		              var $$outStack = $$outStack || [];
		              $$outStack.push(out);
		              out = ''; /* istanbul ignore else */
		              if (it.createErrors !== false) {
		                out += ' { keyword: \'' + ('patternGroups') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { reason: \'' + ($reason) + '\', limit: ' + ($limit) + ', pattern: \'' + (it.util.escapeQuotes($pgProperty)) + '\' } ';
		                if (it.opts.messages !== false) {
		                  out += ' , message: \'should NOT have ' + ($moreOrLess) + ' than ' + ($limit) + ' properties matching pattern "' + (it.util.escapeQuotes($pgProperty)) + '"\' ';
		                }
		                if (it.opts.verbose) {
		                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		                }
		                out += ' } ';
		              } else {
		                out += ' {} ';
		              }
		              var __err = out;
		              out = $$outStack.pop();
		              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		                if (it.async) {
		                  out += ' throw new ValidationError([' + (__err) + ']); ';
		                } else {
		                  out += ' validate.errors = [' + (__err) + ']; return false; ';
		                }
		              } else {
		                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		              }
		              out += ' } ';
		              if ($pgMax !== undefined) {
		                out += ' else ';
		              }
		            }
		            if ($pgMax !== undefined) {
		              var $limit = $pgMax,
		                $reason = 'maximum',
		                $moreOrLess = 'more';
		              out += ' ' + ($valid) + ' = pgPropCount' + ($lvl) + ' <= ' + ($pgMax) + '; ';
		              $errSchemaPath = it.errSchemaPath + '/patternGroups/maximum';
		              out += '  if (!' + ($valid) + ') {   ';
		              var $$outStack = $$outStack || [];
		              $$outStack.push(out);
		              out = ''; /* istanbul ignore else */
		              if (it.createErrors !== false) {
		                out += ' { keyword: \'' + ('patternGroups') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { reason: \'' + ($reason) + '\', limit: ' + ($limit) + ', pattern: \'' + (it.util.escapeQuotes($pgProperty)) + '\' } ';
		                if (it.opts.messages !== false) {
		                  out += ' , message: \'should NOT have ' + ($moreOrLess) + ' than ' + ($limit) + ' properties matching pattern "' + (it.util.escapeQuotes($pgProperty)) + '"\' ';
		                }
		                if (it.opts.verbose) {
		                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		                }
		                out += ' } ';
		              } else {
		                out += ' {} ';
		              }
		              var __err = out;
		              out = $$outStack.pop();
		              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		                if (it.async) {
		                  out += ' throw new ValidationError([' + (__err) + ']); ';
		                } else {
		                  out += ' validate.errors = [' + (__err) + ']; return false; ';
		                }
		              } else {
		                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		              }
		              out += ' } ';
		            }
		            $errSchemaPath = $currErrSchemaPath;
		            if ($breakOnError) {
		              out += ' if (' + ($valid) + ') { ';
		              $closingBraces += '}';
		            }
		          }
		        }
		      }
		    }
		  }
		  if ($breakOnError) {
		    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
		  }
		  out = it.util.cleanUpCode(out);
		  return out;
		}

		},{}],169:[function(require,module,exports){
		'use strict';
		module.exports = function generate_ref(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  var $async, $refCode;
		  if ($schema == '#' || $schema == '#/') {
		    if (it.isRoot) {
		      $async = it.async;
		      $refCode = 'validate';
		    } else {
		      $async = it.root.schema.$async === true;
		      $refCode = 'root.refVal[0]';
		    }
		  } else {
		    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);
		    if ($refVal === undefined) {
		      var $message = 'can\'t resolve reference ' + $schema + ' from id ' + it.baseId;
		      if (it.opts.missingRefs == 'fail') {
		        console.log($message);
		        var $$outStack = $$outStack || [];
		        $$outStack.push(out);
		        out = ''; /* istanbul ignore else */
		        if (it.createErrors !== false) {
		          out += ' { keyword: \'' + ('$ref') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \'' + (it.util.escapeQuotes($schema)) + '\' } ';
		          if (it.opts.messages !== false) {
		            out += ' , message: \'can\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\' ';
		          }
		          if (it.opts.verbose) {
		            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		          }
		          out += ' } ';
		        } else {
		          out += ' {} ';
		        }
		        var __err = out;
		        out = $$outStack.pop();
		        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		          if (it.async) {
		            out += ' throw new ValidationError([' + (__err) + ']); ';
		          } else {
		            out += ' validate.errors = [' + (__err) + ']; return false; ';
		          }
		        } else {
		          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		        }
		        if ($breakOnError) {
		          out += ' if (false) { ';
		        }
		      } else if (it.opts.missingRefs == 'ignore') {
		        console.log($message);
		        if ($breakOnError) {
		          out += ' if (true) { ';
		        }
		      } else {
		        var $error = new Error($message);
		        $error.missingRef = it.resolve.url(it.baseId, $schema);
		        $error.missingSchema = it.resolve.normalizeId(it.resolve.fullPath($error.missingRef));
		        throw $error;
		      }
		    } else if ($refVal.inline) {
		      var $it = it.util.copy(it);
		      $it.level++;
		      var $nextValid = 'valid' + $it.level;
		      $it.schema = $refVal.schema;
		      $it.schemaPath = '';
		      $it.errSchemaPath = $schema;
		      var $code = it.validate($it).replace(/validate\.schema/g, $refVal.code);
		      out += ' ' + ($code) + ' ';
		      if ($breakOnError) {
		        out += ' if (' + ($nextValid) + ') { ';
		      }
		    } else {
		      $async = $refVal.$async === true;
		      $refCode = $refVal.code;
		    }
		  }
		  if ($refCode) {
		    var $$outStack = $$outStack || [];
		    $$outStack.push(out);
		    out = '';
		    if (it.opts.passContext) {
		      out += ' ' + ($refCode) + '.call(this, ';
		    } else {
		      out += ' ' + ($refCode) + '( ';
		    }
		    out += ' ' + ($data) + ', (dataPath || \'\')';
		    if (it.errorPath != '""') {
		      out += ' + ' + (it.errorPath);
		    }
		    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',
		      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';
		    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';
		    var __callValidate = out;
		    out = $$outStack.pop();
		    if ($async) {
		      if (!it.async) throw new Error('async schema referenced by sync schema');
		      out += ' try { ';
		      if ($breakOnError) {
		        out += 'var ' + ($valid) + ' =';
		      }
		      out += ' ' + (it.yieldAwait) + ' ' + (__callValidate) + '; } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; } ';
		      if ($breakOnError) {
		        out += ' if (' + ($valid) + ') { ';
		      }
		    } else {
		      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';
		      if ($breakOnError) {
		        out += ' else { ';
		      }
		    }
		  }
		  return out;
		}

		},{}],170:[function(require,module,exports){
		'use strict';
		module.exports = function generate_required(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  var $vSchema = 'schema' + $lvl;
		  if (!$isData) {
		    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {
		      var $required = [];
		      var arr1 = $schema;
		      if (arr1) {
		        var $property, i1 = -1,
		          l1 = arr1.length - 1;
		        while (i1 < l1) {
		          $property = arr1[i1 += 1];
		          var $propertySch = it.schema.properties[$property];
		          if (!($propertySch && it.util.schemaHasRules($propertySch, it.RULES.all))) {
		            $required[$required.length] = $property;
		          }
		        }
		      }
		    } else {
		      var $required = $schema;
		    }
		  }
		  if ($isData || $required.length) {
		    var $currentErrorPath = it.errorPath,
		      $loopRequired = $isData || $required.length >= it.opts.loopRequired;
		    if ($breakOnError) {
		      out += ' var missing' + ($lvl) + '; ';
		      if ($loopRequired) {
		        if (!$isData) {
		          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';
		        }
		        var $i = 'i' + $lvl,
		          $propertyPath = 'schema' + $lvl + '[' + $i + ']',
		          $missingProperty = '\' + ' + $propertyPath + ' + \'';
		        if (it.opts._errorDataPathProperty) {
		          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);
		        }
		        out += ' var ' + ($valid) + ' = true; ';
		        if ($isData) {
		          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';
		        }
		        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined; if (!' + ($valid) + ') break; } ';
		        if ($isData) {
		          out += '  }  ';
		        }
		        out += '  if (!' + ($valid) + ') {   ';
		        var $$outStack = $$outStack || [];
		        $$outStack.push(out);
		        out = ''; /* istanbul ignore else */
		        if (it.createErrors !== false) {
		          out += ' { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
		          if (it.opts.messages !== false) {
		            out += ' , message: \'';
		            if (it.opts._errorDataPathProperty) {
		              out += 'is a required property';
		            } else {
		              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
		            }
		            out += '\' ';
		          }
		          if (it.opts.verbose) {
		            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		          }
		          out += ' } ';
		        } else {
		          out += ' {} ';
		        }
		        var __err = out;
		        out = $$outStack.pop();
		        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		          if (it.async) {
		            out += ' throw new ValidationError([' + (__err) + ']); ';
		          } else {
		            out += ' validate.errors = [' + (__err) + ']; return false; ';
		          }
		        } else {
		          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		        }
		        out += ' } else { ';
		      } else {
		        out += ' if ( ';
		        var arr2 = $required;
		        if (arr2) {
		          var _$property, $i = -1,
		            l2 = arr2.length - 1;
		          while ($i < l2) {
		            _$property = arr2[$i += 1];
		            if ($i) {
		              out += ' || ';
		            }
		            var $prop = it.util.getProperty(_$property);
		            out += ' ( ' + ($data) + ($prop) + ' === undefined && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? _$property : $prop)) + ') ) ';
		          }
		        }
		        out += ') {  ';
		        var $propertyPath = 'missing' + $lvl,
		          $missingProperty = '\' + ' + $propertyPath + ' + \'';
		        if (it.opts._errorDataPathProperty) {
		          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;
		        }
		        var $$outStack = $$outStack || [];
		        $$outStack.push(out);
		        out = ''; /* istanbul ignore else */
		        if (it.createErrors !== false) {
		          out += ' { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
		          if (it.opts.messages !== false) {
		            out += ' , message: \'';
		            if (it.opts._errorDataPathProperty) {
		              out += 'is a required property';
		            } else {
		              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
		            }
		            out += '\' ';
		          }
		          if (it.opts.verbose) {
		            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		          }
		          out += ' } ';
		        } else {
		          out += ' {} ';
		        }
		        var __err = out;
		        out = $$outStack.pop();
		        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		          if (it.async) {
		            out += ' throw new ValidationError([' + (__err) + ']); ';
		          } else {
		            out += ' validate.errors = [' + (__err) + ']; return false; ';
		          }
		        } else {
		          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		        }
		        out += ' } else { ';
		      }
		    } else {
		      if ($loopRequired) {
		        if (!$isData) {
		          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';
		        }
		        var $i = 'i' + $lvl,
		          $propertyPath = 'schema' + $lvl + '[' + $i + ']',
		          $missingProperty = '\' + ' + $propertyPath + ' + \'';
		        if (it.opts._errorDataPathProperty) {
		          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);
		        }
		        if ($isData) {
		          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */
		          if (it.createErrors !== false) {
		            out += ' { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
		            if (it.opts.messages !== false) {
		              out += ' , message: \'';
		              if (it.opts._errorDataPathProperty) {
		                out += 'is a required property';
		              } else {
		                out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
		              }
		              out += '\' ';
		            }
		            if (it.opts.verbose) {
		              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		            }
		            out += ' } ';
		          } else {
		            out += ' {} ';
		          }
		          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';
		        }
		        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined) {  var err =   '; /* istanbul ignore else */
		        if (it.createErrors !== false) {
		          out += ' { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
		          if (it.opts.messages !== false) {
		            out += ' , message: \'';
		            if (it.opts._errorDataPathProperty) {
		              out += 'is a required property';
		            } else {
		              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
		            }
		            out += '\' ';
		          }
		          if (it.opts.verbose) {
		            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		          }
		          out += ' } ';
		        } else {
		          out += ' {} ';
		        }
		        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';
		        if ($isData) {
		          out += '  }  ';
		        }
		      } else {
		        var arr3 = $required;
		        if (arr3) {
		          var $reqProperty, i3 = -1,
		            l3 = arr3.length - 1;
		          while (i3 < l3) {
		            $reqProperty = arr3[i3 += 1];
		            var $prop = it.util.getProperty($reqProperty),
		              $missingProperty = it.util.escapeQuotes($reqProperty);
		            if (it.opts._errorDataPathProperty) {
		              it.errorPath = it.util.getPath($currentErrorPath, $reqProperty, it.opts.jsonPointers);
		            }
		            out += ' if (' + ($data) + ($prop) + ' === undefined) {  var err =   '; /* istanbul ignore else */
		            if (it.createErrors !== false) {
		              out += ' { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
		              if (it.opts.messages !== false) {
		                out += ' , message: \'';
		                if (it.opts._errorDataPathProperty) {
		                  out += 'is a required property';
		                } else {
		                  out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
		                }
		                out += '\' ';
		              }
		              if (it.opts.verbose) {
		                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		              }
		              out += ' } ';
		            } else {
		              out += ' {} ';
		            }
		            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';
		          }
		        }
		      }
		    }
		    it.errorPath = $currentErrorPath;
		  } else if ($breakOnError) {
		    out += ' if (true) {';
		  }
		  return out;
		}

		},{}],171:[function(require,module,exports){
		'use strict';
		module.exports = function generate_switch(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  var $errs = 'errs__' + $lvl;
		  var $it = it.util.copy(it);
		  var $closingBraces = '';
		  $it.level++;
		  var $nextValid = 'valid' + $it.level;
		  var $ifPassed = 'ifPassed' + it.level,
		    $currentBaseId = $it.baseId,
		    $shouldContinue;
		  out += 'var ' + ($ifPassed) + ';';
		  var arr1 = $schema;
		  if (arr1) {
		    var $sch, $caseIndex = -1,
		      l1 = arr1.length - 1;
		    while ($caseIndex < l1) {
		      $sch = arr1[$caseIndex += 1];
		      if ($caseIndex && !$shouldContinue) {
		        out += ' if (!' + ($ifPassed) + ') { ';
		        $closingBraces += '}';
		      }
		      if ($sch.if && it.util.schemaHasRules($sch.if, it.RULES.all)) {
		        out += ' var ' + ($errs) + ' = errors;   ';
		        var $wasComposite = it.compositeRule;
		        it.compositeRule = $it.compositeRule = true;
		        $it.createErrors = false;
		        $it.schema = $sch.if;
		        $it.schemaPath = $schemaPath + '[' + $caseIndex + '].if';
		        $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/if';
		        out += '  ' + (it.validate($it)) + ' ';
		        $it.baseId = $currentBaseId;
		        $it.createErrors = true;
		        it.compositeRule = $it.compositeRule = $wasComposite;
		        out += ' ' + ($ifPassed) + ' = ' + ($nextValid) + '; if (' + ($ifPassed) + ') {  ';
		        if (typeof $sch.then == 'boolean') {
		          if ($sch.then === false) {
		            var $$outStack = $$outStack || [];
		            $$outStack.push(out);
		            out = ''; /* istanbul ignore else */
		            if (it.createErrors !== false) {
		              out += ' { keyword: \'' + ('switch') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';
		              if (it.opts.messages !== false) {
		                out += ' , message: \'should pass "switch" keyword validation\' ';
		              }
		              if (it.opts.verbose) {
		                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		              }
		              out += ' } ';
		            } else {
		              out += ' {} ';
		            }
		            var __err = out;
		            out = $$outStack.pop();
		            if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		              if (it.async) {
		                out += ' throw new ValidationError([' + (__err) + ']); ';
		              } else {
		                out += ' validate.errors = [' + (__err) + ']; return false; ';
		              }
		            } else {
		              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		            }
		          }
		          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';
		        } else {
		          $it.schema = $sch.then;
		          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';
		          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';
		          out += '  ' + (it.validate($it)) + ' ';
		          $it.baseId = $currentBaseId;
		        }
		        out += '  } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } } ';
		      } else {
		        out += ' ' + ($ifPassed) + ' = true;  ';
		        if (typeof $sch.then == 'boolean') {
		          if ($sch.then === false) {
		            var $$outStack = $$outStack || [];
		            $$outStack.push(out);
		            out = ''; /* istanbul ignore else */
		            if (it.createErrors !== false) {
		              out += ' { keyword: \'' + ('switch') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';
		              if (it.opts.messages !== false) {
		                out += ' , message: \'should pass "switch" keyword validation\' ';
		              }
		              if (it.opts.verbose) {
		                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		              }
		              out += ' } ';
		            } else {
		              out += ' {} ';
		            }
		            var __err = out;
		            out = $$outStack.pop();
		            if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		              if (it.async) {
		                out += ' throw new ValidationError([' + (__err) + ']); ';
		              } else {
		                out += ' validate.errors = [' + (__err) + ']; return false; ';
		              }
		            } else {
		              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		            }
		          }
		          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';
		        } else {
		          $it.schema = $sch.then;
		          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';
		          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';
		          out += '  ' + (it.validate($it)) + ' ';
		          $it.baseId = $currentBaseId;
		        }
		      }
		      $shouldContinue = $sch.continue
		    }
		  }
		  out += '' + ($closingBraces) + 'var ' + ($valid) + ' = ' + ($nextValid) + '; ';
		  out = it.util.cleanUpCode(out);
		  return out;
		}

		},{}],172:[function(require,module,exports){
		'use strict';
		module.exports = function generate_uniqueItems(it, $keyword) {
		  var out = ' ';
		  var $lvl = it.level;
		  var $dataLvl = it.dataLevel;
		  var $schema = it.schema[$keyword];
		  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
		  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
		  var $breakOnError = !it.opts.allErrors;
		  var $data = 'data' + ($dataLvl || '');
		  var $valid = 'valid' + $lvl;
		  var $isData = it.opts.v5 && $schema && $schema.$data,
		    $schemaValue;
		  if ($isData) {
		    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
		    $schemaValue = 'schema' + $lvl;
		  } else {
		    $schemaValue = $schema;
		  }
		  if (($schema || $isData) && it.opts.uniqueItems !== false) {
		    if ($isData) {
		      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \'boolean\') ' + ($valid) + ' = false; else { ';
		    }
		    out += ' var ' + ($valid) + ' = true; if (' + ($data) + '.length > 1) { var i = ' + ($data) + '.length, j; outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } } ';
		    if ($isData) {
		      out += '  }  ';
		    }
		    out += ' if (!' + ($valid) + ') {   ';
		    var $$outStack = $$outStack || [];
		    $$outStack.push(out);
		    out = ''; /* istanbul ignore else */
		    if (it.createErrors !== false) {
		      out += ' { keyword: \'' + ('uniqueItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';
		      if (it.opts.messages !== false) {
		        out += ' , message: \'should NOT have duplicate items (items ## \' + j + \' and \' + i + \' are identical)\' ';
		      }
		      if (it.opts.verbose) {
		        out += ' , schema:  ';
		        if ($isData) {
		          out += 'validate.schema' + ($schemaPath);
		        } else {
		          out += '' + ($schema);
		        }
		        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		      }
		      out += ' } ';
		    } else {
		      out += ' {} ';
		    }
		    var __err = out;
		    out = $$outStack.pop();
		    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		      if (it.async) {
		        out += ' throw new ValidationError([' + (__err) + ']); ';
		      } else {
		        out += ' validate.errors = [' + (__err) + ']; return false; ';
		      }
		    } else {
		      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		    }
		    out += ' } ';
		    if ($breakOnError) {
		      out += ' else { ';
		    }
		  } else {
		    if ($breakOnError) {
		      out += ' if (true) { ';
		    }
		  }
		  return out;
		}

		},{}],173:[function(require,module,exports){
		'use strict';
		module.exports = function generate_validate(it, $keyword) {
		  var out = '';
		  var $async = it.schema.$async === true;
		  if (it.isTop) {
		    var $top = it.isTop,
		      $lvl = it.level = 0,
		      $dataLvl = it.dataLevel = 0,
		      $data = 'data';
		    it.rootId = it.resolve.fullPath(it.root.schema.id);
		    it.baseId = it.baseId || it.rootId;
		    if ($async) {
		      it.async = true;
		      var $es7 = it.opts.async == 'es7';
		      it.yieldAwait = $es7 ? 'await' : 'yield';
		    }
		    delete it.isTop;
		    it.dataPathArr = [undefined];
		    out += ' var validate = ';
		    if ($async) {
		      if ($es7) {
		        out += ' (async function ';
		      } else {
		        if (it.opts.async == 'co*') {
		          out += 'co.wrap';
		        }
		        out += '(function* ';
		      }
		    } else {
		      out += ' (function ';
		    }
		    out += ' (data, dataPath, parentData, parentDataProperty, rootData) { \'use strict\'; var vErrors = null; ';
		    out += ' var errors = 0;     ';
		    out += ' if (rootData === undefined) rootData = data;';
		  } else {
		    var $lvl = it.level,
		      $dataLvl = it.dataLevel,
		      $data = 'data' + ($dataLvl || '');
		    if (it.schema.id) it.baseId = it.resolve.url(it.baseId, it.schema.id);
		    if ($async && !it.async) throw new Error('async schema in sync schema');
		    out += ' var errs_' + ($lvl) + ' = errors;';
		  }
		  var $valid = 'valid' + $lvl,
		    $breakOnError = !it.opts.allErrors,
		    $closingBraces1 = '',
		    $closingBraces2 = '';
		  var $typeSchema = it.schema.type,
		    $typeIsArray = Array.isArray($typeSchema);
		  if ($typeSchema && it.opts.coerceTypes) {
		    var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);
		    if ($coerceToTypes) {
		      var $schemaPath = it.schemaPath + '.type',
		        $errSchemaPath = it.errSchemaPath + '/type',
		        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';
		      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') {  ';
		      var $dataType = 'dataType' + $lvl,
		        $coerced = 'coerced' + $lvl;
		      out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';
		      if (it.opts.coerceTypes == 'array') {
		        out += ' if (' + ($dataType) + ' == \'object\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \'array\'; ';
		      }
		      out += ' var ' + ($coerced) + ' = undefined; ';
		      var $bracesCoercion = '';
		      var arr1 = $coerceToTypes;
		      if (arr1) {
		        var $type, $i = -1,
		          l1 = arr1.length - 1;
		        while ($i < l1) {
		          $type = arr1[$i += 1];
		          if ($i) {
		            out += ' if (' + ($coerced) + ' === undefined) { ';
		            $bracesCoercion += '}';
		          }
		          if (it.opts.coerceTypes == 'array' && $type != 'array') {
		            out += ' if (' + ($dataType) + ' == \'array\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';
		          }
		          if ($type == 'string') {
		            out += ' if (' + ($dataType) + ' == \'number\' || ' + ($dataType) + ' == \'boolean\') ' + ($coerced) + ' = \'\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \'\'; ';
		          } else if ($type == 'number' || $type == 'integer') {
		            out += ' if (' + ($dataType) + ' == \'boolean\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \'string\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';
		            if ($type == 'integer') {
		              out += ' && !(' + ($data) + ' % 1)';
		            }
		            out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';
		          } else if ($type == 'boolean') {
		            out += ' if (' + ($data) + ' === \'false\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \'true\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';
		          } else if ($type == 'null') {
		            out += ' if (' + ($data) + ' === \'\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';
		          } else if (it.opts.coerceTypes == 'array' && $type == 'array') {
		            out += ' if (' + ($dataType) + ' == \'string\' || ' + ($dataType) + ' == \'number\' || ' + ($dataType) + ' == \'boolean\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';
		          }
		        }
		      }
		      out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';
		      var $$outStack = $$outStack || [];
		      $$outStack.push(out);
		      out = ''; /* istanbul ignore else */
		      if (it.createErrors !== false) {
		        out += ' { keyword: \'' + ('type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \'';
		        if ($typeIsArray) {
		          out += '' + ($typeSchema.join(","));
		        } else {
		          out += '' + ($typeSchema);
		        }
		        out += '\' } ';
		        if (it.opts.messages !== false) {
		          out += ' , message: \'should be ';
		          if ($typeIsArray) {
		            out += '' + ($typeSchema.join(","));
		          } else {
		            out += '' + ($typeSchema);
		          }
		          out += '\' ';
		        }
		        if (it.opts.verbose) {
		          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		        }
		        out += ' } ';
		      } else {
		        out += ' {} ';
		      }
		      var __err = out;
		      out = $$outStack.pop();
		      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		        if (it.async) {
		          out += ' throw new ValidationError([' + (__err) + ']); ';
		        } else {
		          out += ' validate.errors = [' + (__err) + ']; return false; ';
		        }
		      } else {
		        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		      }
		      out += ' } else {  ';
		      var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',
		        $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';
		      out += ' ' + ($data) + ' = ' + ($coerced) + '; ';
		      if (!$dataLvl) {
		        out += 'if (' + ($parentData) + ' !== undefined)';
		      }
		      out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } } ';
		    }
		  }
		  var $refKeywords;
		  if (it.schema.$ref && ($refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'))) {
		    if (it.opts.extendRefs == 'fail') {
		      throw new Error('$ref: validation keywords used in schema at path "' + it.errSchemaPath + '"');
		    } else if (it.opts.extendRefs == 'ignore') {
		      $refKeywords = false;
		      console.log('$ref: keywords ignored in schema at path "' + it.errSchemaPath + '"');
		    } else if (it.opts.extendRefs !== true) {
		      console.log('$ref: all keywords used in schema at path "' + it.errSchemaPath + '". It will change in the next major version, see issue #260. Use option { extendRefs: true } to keep current behaviour');
		    }
		  }
		  if (it.schema.$ref && !$refKeywords) {
		    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';
		    if ($breakOnError) {
		      out += ' } if (errors === ';
		      if ($top) {
		        out += '0';
		      } else {
		        out += 'errs_' + ($lvl);
		      }
		      out += ') { ';
		      $closingBraces2 += '}';
		    }
		  } else {
		    var arr2 = it.RULES;
		    if (arr2) {
		      var $rulesGroup, i2 = -1,
		        l2 = arr2.length - 1;
		      while (i2 < l2) {
		        $rulesGroup = arr2[i2 += 1];
		        if ($shouldUseGroup($rulesGroup)) {
		          if ($rulesGroup.type) {
		            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';
		          }
		          if (it.opts.useDefaults && !it.compositeRule) {
		            if ($rulesGroup.type == 'object' && it.schema.properties) {
		              var $schema = it.schema.properties,
		                $schemaKeys = Object.keys($schema);
		              var arr3 = $schemaKeys;
		              if (arr3) {
		                var $propertyKey, i3 = -1,
		                  l3 = arr3.length - 1;
		                while (i3 < l3) {
		                  $propertyKey = arr3[i3 += 1];
		                  var $sch = $schema[$propertyKey];
		                  if ($sch.default !== undefined) {
		                    var $passData = $data + it.util.getProperty($propertyKey);
		                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';
		                    if (it.opts.useDefaults == 'shared') {
		                      out += ' ' + (it.useDefault($sch.default)) + ' ';
		                    } else {
		                      out += ' ' + (JSON.stringify($sch.default)) + ' ';
		                    }
		                    out += '; ';
		                  }
		                }
		              }
		            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {
		              var arr4 = it.schema.items;
		              if (arr4) {
		                var $sch, $i = -1,
		                  l4 = arr4.length - 1;
		                while ($i < l4) {
		                  $sch = arr4[$i += 1];
		                  if ($sch.default !== undefined) {
		                    var $passData = $data + '[' + $i + ']';
		                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';
		                    if (it.opts.useDefaults == 'shared') {
		                      out += ' ' + (it.useDefault($sch.default)) + ' ';
		                    } else {
		                      out += ' ' + (JSON.stringify($sch.default)) + ' ';
		                    }
		                    out += '; ';
		                  }
		                }
		              }
		            }
		          }
		          var arr5 = $rulesGroup.rules;
		          if (arr5) {
		            var $rule, i5 = -1,
		              l5 = arr5.length - 1;
		            while (i5 < l5) {
		              $rule = arr5[i5 += 1];
		              if ($shouldUseRule($rule)) {
		                out += ' ' + ($rule.code(it, $rule.keyword)) + ' ';
		                if ($breakOnError) {
		                  $closingBraces1 += '}';
		                }
		              }
		            }
		          }
		          if ($breakOnError) {
		            out += ' ' + ($closingBraces1) + ' ';
		            $closingBraces1 = '';
		          }
		          if ($rulesGroup.type) {
		            out += ' } ';
		            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {
		              var $typeChecked = true;
		              out += ' else { ';
		              var $schemaPath = it.schemaPath + '.type',
		                $errSchemaPath = it.errSchemaPath + '/type';
		              var $$outStack = $$outStack || [];
		              $$outStack.push(out);
		              out = ''; /* istanbul ignore else */
		              if (it.createErrors !== false) {
		                out += ' { keyword: \'' + ('type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \'';
		                if ($typeIsArray) {
		                  out += '' + ($typeSchema.join(","));
		                } else {
		                  out += '' + ($typeSchema);
		                }
		                out += '\' } ';
		                if (it.opts.messages !== false) {
		                  out += ' , message: \'should be ';
		                  if ($typeIsArray) {
		                    out += '' + ($typeSchema.join(","));
		                  } else {
		                    out += '' + ($typeSchema);
		                  }
		                  out += '\' ';
		                }
		                if (it.opts.verbose) {
		                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		                }
		                out += ' } ';
		              } else {
		                out += ' {} ';
		              }
		              var __err = out;
		              out = $$outStack.pop();
		              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		                if (it.async) {
		                  out += ' throw new ValidationError([' + (__err) + ']); ';
		                } else {
		                  out += ' validate.errors = [' + (__err) + ']; return false; ';
		                }
		              } else {
		                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		              }
		              out += ' } ';
		            }
		          }
		          if ($breakOnError) {
		            out += ' if (errors === ';
		            if ($top) {
		              out += '0';
		            } else {
		              out += 'errs_' + ($lvl);
		            }
		            out += ') { ';
		            $closingBraces2 += '}';
		          }
		        }
		      }
		    }
		  }
		  if ($typeSchema && !$typeChecked && !$coerceToTypes) {
		    var $schemaPath = it.schemaPath + '.type',
		      $errSchemaPath = it.errSchemaPath + '/type',
		      $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';
		    out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') {   ';
		    var $$outStack = $$outStack || [];
		    $$outStack.push(out);
		    out = ''; /* istanbul ignore else */
		    if (it.createErrors !== false) {
		      out += ' { keyword: \'' + ('type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \'';
		      if ($typeIsArray) {
		        out += '' + ($typeSchema.join(","));
		      } else {
		        out += '' + ($typeSchema);
		      }
		      out += '\' } ';
		      if (it.opts.messages !== false) {
		        out += ' , message: \'should be ';
		        if ($typeIsArray) {
		          out += '' + ($typeSchema.join(","));
		        } else {
		          out += '' + ($typeSchema);
		        }
		        out += '\' ';
		      }
		      if (it.opts.verbose) {
		        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
		      }
		      out += ' } ';
		    } else {
		      out += ' {} ';
		    }
		    var __err = out;
		    out = $$outStack.pop();
		    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */
		      if (it.async) {
		        out += ' throw new ValidationError([' + (__err) + ']); ';
		      } else {
		        out += ' validate.errors = [' + (__err) + ']; return false; ';
		      }
		    } else {
		      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
		    }
		    out += ' }';
		  }
		  if ($breakOnError) {
		    out += ' ' + ($closingBraces2) + ' ';
		  }
		  if ($top) {
		    if ($async) {
		      out += ' if (errors === 0) return true;           ';
		      out += ' else throw new ValidationError(vErrors); ';
		    } else {
		      out += ' validate.errors = vErrors; ';
		      out += ' return errors === 0;       ';
		    }
		    out += ' }); return validate;';
		  } else {
		    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';
		  }
		  out = it.util.cleanUpCode(out);
		  if ($top && $breakOnError) {
		    out = it.util.cleanUpVarErrors(out, $async);
		  }

		  function $shouldUseGroup($rulesGroup) {
		    for (var i = 0; i < $rulesGroup.rules.length; i++)
		      if ($shouldUseRule($rulesGroup.rules[i])) return true;
		  }

		  function $shouldUseRule($rule) {
		    return it.schema[$rule.keyword] !== undefined || ($rule.keyword == 'properties' && (it.schema.additionalProperties === false || typeof it.schema.additionalProperties == 'object' || (it.schema.patternProperties && Object.keys(it.schema.patternProperties).length) || (it.opts.v5 && it.schema.patternGroups && Object.keys(it.schema.patternGroups).length)));
		  }
		  return out;
		}

		},{}],174:[function(require,module,exports){
		'use strict';

		var IDENTIFIER = /^[a-z_$][a-z0-9_$\-]*$/i;
		var customRuleCode = require('./dotjs/custom');

		module.exports = {
		  add: addKeyword,
		  get: getKeyword,
		  remove: removeKeyword
		};

		/**
		 * Define custom keyword
		 * @this  Ajv
		 * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).
		 * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.
		 */
		function addKeyword(keyword, definition) {
		  /* jshint validthis: true */
		  /* eslint no-shadow: 0 */
		  var RULES = this.RULES;

		  if (RULES.keywords[keyword])
		    throw new Error('Keyword ' + keyword + ' is already defined');

		  if (!IDENTIFIER.test(keyword))
		    throw new Error('Keyword ' + keyword + ' is not a valid identifier');

		  if (definition) {
		    if (definition.macro && definition.valid !== undefined)
		      throw new Error('"valid" option cannot be used with macro keywords');

		    var dataType = definition.type;
		    if (Array.isArray(dataType)) {
		      var i, len = dataType.length;
		      for (i=0; i<len; i++) checkDataType(dataType[i]);
		      for (i=0; i<len; i++) _addRule(keyword, dataType[i], definition);
		    } else {
		      if (dataType) checkDataType(dataType);
		      _addRule(keyword, dataType, definition);
		    }

		    var $data = definition.$data === true && this._opts.v5;
		    if ($data && !definition.validate)
		      throw new Error('$data support: "validate" function is not defined');

		    var metaSchema = definition.metaSchema;
		    if (metaSchema) {
		      if ($data) {
		        metaSchema = {
		          anyOf: [
		            metaSchema,
		            { '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#/definitions/$data' }
		          ]
		        };
		      }
		      definition.validateSchema = this.compile(metaSchema, true);
		    }
		  }

		  RULES.keywords[keyword] = RULES.all[keyword] = true;


		  function _addRule(keyword, dataType, definition) {
		    var ruleGroup;
		    for (var i=0; i<RULES.length; i++) {
		      var rg = RULES[i];
		      if (rg.type == dataType) {
		        ruleGroup = rg;
		        break;
		      }
		    }

		    if (!ruleGroup) {
		      ruleGroup = { type: dataType, rules: [] };
		      RULES.push(ruleGroup);
		    }

		    var rule = {
		      keyword: keyword,
		      definition: definition,
		      custom: true,
		      code: customRuleCode
		    };
		    ruleGroup.rules.push(rule);
		    RULES.custom[keyword] = rule;
		  }


		  function checkDataType(dataType) {
		    if (!RULES.types[dataType]) throw new Error('Unknown type ' + dataType);
		  }
		}


		/**
		 * Get keyword
		 * @this  Ajv
		 * @param {String} keyword pre-defined or custom keyword.
		 * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.
		 */
		function getKeyword(keyword) {
		  /* jshint validthis: true */
		  var rule = this.RULES.custom[keyword];
		  return rule ? rule.definition : this.RULES.keywords[keyword] || false;
		}


		/**
		 * Remove keyword
		 * @this  Ajv
		 * @param {String} keyword pre-defined or custom keyword.
		 */
		function removeKeyword(keyword) {
		  /* jshint validthis: true */
		  var RULES = this.RULES;
		  delete RULES.keywords[keyword];
		  delete RULES.all[keyword];
		  delete RULES.custom[keyword];
		  for (var i=0; i<RULES.length; i++) {
		    var rules = RULES[i].rules;
		    for (var j=0; j<rules.length; j++) {
		      if (rules[j].keyword == keyword) {
		        rules.splice(j, 1);
		        break;
		      }
		    }
		  }
		}

		},{"./dotjs/custom":158}],175:[function(require,module,exports){
		module.exports={
		    "id": "http://json-schema.org/draft-04/schema#",
		    "$schema": "http://json-schema.org/draft-04/schema#",
		    "description": "Core schema meta-schema",
		    "definitions": {
		        "schemaArray": {
		            "type": "array",
		            "minItems": 1,
		            "items": { "$ref": "#" }
		        },
		        "positiveInteger": {
		            "type": "integer",
		            "minimum": 0
		        },
		        "positiveIntegerDefault0": {
		            "allOf": [ { "$ref": "#/definitions/positiveInteger" }, { "default": 0 } ]
		        },
		        "simpleTypes": {
		            "enum": [ "array", "boolean", "integer", "null", "number", "object", "string" ]
		        },
		        "stringArray": {
		            "type": "array",
		            "items": { "type": "string" },
		            "minItems": 1,
		            "uniqueItems": true
		        }
		    },
		    "type": "object",
		    "properties": {
		        "id": {
		            "type": "string",
		            "format": "uri"
		        },
		        "$schema": {
		            "type": "string",
		            "format": "uri"
		        },
		        "title": {
		            "type": "string"
		        },
		        "description": {
		            "type": "string"
		        },
		        "default": {},
		        "multipleOf": {
		            "type": "number",
		            "minimum": 0,
		            "exclusiveMinimum": true
		        },
		        "maximum": {
		            "type": "number"
		        },
		        "exclusiveMaximum": {
		            "type": "boolean",
		            "default": false
		        },
		        "minimum": {
		            "type": "number"
		        },
		        "exclusiveMinimum": {
		            "type": "boolean",
		            "default": false
		        },
		        "maxLength": { "$ref": "#/definitions/positiveInteger" },
		        "minLength": { "$ref": "#/definitions/positiveIntegerDefault0" },
		        "pattern": {
		            "type": "string",
		            "format": "regex"
		        },
		        "additionalItems": {
		            "anyOf": [
		                { "type": "boolean" },
		                { "$ref": "#" }
		            ],
		            "default": {}
		        },
		        "items": {
		            "anyOf": [
		                { "$ref": "#" },
		                { "$ref": "#/definitions/schemaArray" }
		            ],
		            "default": {}
		        },
		        "maxItems": { "$ref": "#/definitions/positiveInteger" },
		        "minItems": { "$ref": "#/definitions/positiveIntegerDefault0" },
		        "uniqueItems": {
		            "type": "boolean",
		            "default": false
		        },
		        "maxProperties": { "$ref": "#/definitions/positiveInteger" },
		        "minProperties": { "$ref": "#/definitions/positiveIntegerDefault0" },
		        "required": { "$ref": "#/definitions/stringArray" },
		        "additionalProperties": {
		            "anyOf": [
		                { "type": "boolean" },
		                { "$ref": "#" }
		            ],
		            "default": {}
		        },
		        "definitions": {
		            "type": "object",
		            "additionalProperties": { "$ref": "#" },
		            "default": {}
		        },
		        "properties": {
		            "type": "object",
		            "additionalProperties": { "$ref": "#" },
		            "default": {}
		        },
		        "patternProperties": {
		            "type": "object",
		            "additionalProperties": { "$ref": "#" },
		            "default": {}
		        },
		        "dependencies": {
		            "type": "object",
		            "additionalProperties": {
		                "anyOf": [
		                    { "$ref": "#" },
		                    { "$ref": "#/definitions/stringArray" }
		                ]
		            }
		        },
		        "enum": {
		            "type": "array",
		            "minItems": 1,
		            "uniqueItems": true
		        },
		        "type": {
		            "anyOf": [
		                { "$ref": "#/definitions/simpleTypes" },
		                {
		                    "type": "array",
		                    "items": { "$ref": "#/definitions/simpleTypes" },
		                    "minItems": 1,
		                    "uniqueItems": true
		                }
		            ]
		        },
		        "allOf": { "$ref": "#/definitions/schemaArray" },
		        "anyOf": { "$ref": "#/definitions/schemaArray" },
		        "oneOf": { "$ref": "#/definitions/schemaArray" },
		        "not": { "$ref": "#" }
		    },
		    "dependencies": {
		        "exclusiveMaximum": [ "maximum" ],
		        "exclusiveMinimum": [ "minimum" ]
		    },
		    "default": {}
		}

		},{}],176:[function(require,module,exports){
		module.exports={
		    "id": "https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#",
		    "$schema": "http://json-schema.org/draft-04/schema#",
		    "description": "Core schema meta-schema (v5 proposals)",
		    "definitions": {
		        "schemaArray": {
		            "type": "array",
		            "minItems": 1,
		            "items": { "$ref": "#" }
		        },
		        "positiveInteger": {
		            "type": "integer",
		            "minimum": 0
		        },
		        "positiveIntegerDefault0": {
		            "allOf": [ { "$ref": "#/definitions/positiveInteger" }, { "default": 0 } ]
		        },
		        "simpleTypes": {
		            "enum": [ "array", "boolean", "integer", "null", "number", "object", "string" ]
		        },
		        "stringArray": {
		            "type": "array",
		            "items": { "type": "string" },
		            "minItems": 1,
		            "uniqueItems": true
		        },
		        "$data": {
		            "type": "object",
		            "required": [ "$data" ],
		            "properties": {
		                "$data": {
		                    "type": "string",
		                    "anyOf": [
		                        { "format": "relative-json-pointer" }, 
		                        { "format": "json-pointer" }
		                    ]
		                }
		            },
		            "additionalProperties": false
		        }
		    },
		    "type": "object",
		    "properties": {
		        "id": {
		            "type": "string",
		            "format": "uri"
		        },
		        "$schema": {
		            "type": "string",
		            "format": "uri"
		        },
		        "title": {
		            "type": "string"
		        },
		        "description": {
		            "type": "string"
		        },
		        "default": {},
		        "multipleOf": {
		            "anyOf": [
		                {
		                    "type": "number",
		                    "minimum": 0,
		                    "exclusiveMinimum": true
		                },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "maximum": {
		            "anyOf": [
		                { "type": "number" },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "exclusiveMaximum": {
		            "anyOf": [
		                {
		                    "type": "boolean",
		                    "default": false
		                },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "minimum": {
		            "anyOf": [
		                { "type": "number" },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "exclusiveMinimum": {
		            "anyOf": [
		                {
		                    "type": "boolean",
		                    "default": false
		                },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "maxLength": {
		            "anyOf": [
		                { "$ref": "#/definitions/positiveInteger" },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "minLength": {
		            "anyOf": [
		                { "$ref": "#/definitions/positiveIntegerDefault0" },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "pattern": {
		            "anyOf": [
		                {
		                    "type": "string",
		                    "format": "regex"
		                },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "additionalItems": {
		            "anyOf": [
		                { "type": "boolean" },
		                { "$ref": "#" },
		                { "$ref": "#/definitions/$data" }
		            ],
		            "default": {}
		        },
		        "items": {
		            "anyOf": [
		                { "$ref": "#" },
		                { "$ref": "#/definitions/schemaArray" }
		            ],
		            "default": {}
		        },
		        "maxItems": {
		            "anyOf": [
		                { "$ref": "#/definitions/positiveInteger" },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "minItems": {
		            "anyOf": [
		                { "$ref": "#/definitions/positiveIntegerDefault0" },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "uniqueItems": {
		            "anyOf": [
		                {
		                    "type": "boolean",
		                    "default": false
		                },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "maxProperties": {
		            "anyOf": [
		                { "$ref": "#/definitions/positiveInteger" },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "minProperties": {
		            "anyOf": [
		                { "$ref": "#/definitions/positiveIntegerDefault0" },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "required": {
		            "anyOf": [
		                { "$ref": "#/definitions/stringArray" },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "additionalProperties": {
		            "anyOf": [
		                { "type": "boolean" },
		                { "$ref": "#" },
		                { "$ref": "#/definitions/$data" }
		            ],
		            "default": {}
		        },
		        "definitions": {
		            "type": "object",
		            "additionalProperties": { "$ref": "#" },
		            "default": {}
		        },
		        "properties": {
		            "type": "object",
		            "additionalProperties": { "$ref": "#" },
		            "default": {}
		        },
		        "patternProperties": {
		            "type": "object",
		            "additionalProperties": { "$ref": "#" },
		            "default": {}
		        },
		        "dependencies": {
		            "type": "object",
		            "additionalProperties": {
		                "anyOf": [
		                    { "$ref": "#" },
		                    { "$ref": "#/definitions/stringArray" }
		                ]
		            }
		        },
		        "enum": {
		            "anyOf": [
		                {
		                    "type": "array",
		                    "minItems": 1,
		                    "uniqueItems": true
		                },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "type": {
		            "anyOf": [
		                { "$ref": "#/definitions/simpleTypes" },
		                {
		                    "type": "array",
		                    "items": { "$ref": "#/definitions/simpleTypes" },
		                    "minItems": 1,
		                    "uniqueItems": true
		                }
		            ]
		        },
		        "allOf": { "$ref": "#/definitions/schemaArray" },
		        "anyOf": { "$ref": "#/definitions/schemaArray" },
		        "oneOf": { "$ref": "#/definitions/schemaArray" },
		        "not": { "$ref": "#" },
		        "format": {
		            "anyOf": [
		                { "type": "string" },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "formatMaximum": {
		            "anyOf": [
		                { "type": "string" },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "formatMinimum": {
		            "anyOf": [
		                { "type": "string" },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "formatExclusiveMaximum": {
		            "anyOf": [
		                {
		                    "type": "boolean",
		                    "default": false
		                },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "formatExclusiveMinimum": {
		            "anyOf": [
		                {
		                    "type": "boolean",
		                    "default": false
		                },
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "constant": {
		            "anyOf": [
		                {},
		                { "$ref": "#/definitions/$data" }
		            ]
		        },
		        "contains": { "$ref": "#" },
		        "patternGroups": {
		            "type": "object",
		            "additionalProperties": {
		                "type": "object",
		                "required": [ "schema" ],
		                "properties": {
		                    "maximum": {
		                        "anyOf": [
		                            { "$ref": "#/definitions/positiveInteger" },
		                            { "$ref": "#/definitions/$data" }
		                        ]
		                    },
		                    "minimum": {
		                        "anyOf": [
		                            { "$ref": "#/definitions/positiveIntegerDefault0" },
		                            { "$ref": "#/definitions/$data" }
		                        ]
		                    },
		                    "schema": { "$ref": "#" }
		                },
		                "additionalProperties": false
		            },
		            "default": {}
		        },
		        "switch": {
		            "type": "array",
		            "items": {
		                "required": [ "then" ],
		                "properties": {
		                    "if": { "$ref": "#" },
		                    "then": {
		                        "anyOf": [
		                            { "type": "boolean" },
		                            { "$ref": "#" }
		                        ]
		                    },
		                    "continue": { "type": "boolean" }
		                },
		                "additionalProperties": false,
		                "dependencies": {
		                    "continue": [ "if" ]
		                }
		            }
		        }
		    },
		    "dependencies": {
		        "exclusiveMaximum": [ "maximum" ],
		        "exclusiveMinimum": [ "minimum" ],
		        "formatMaximum": [ "format" ],
		        "formatMinimum": [ "format" ],
		        "formatExclusiveMaximum": [ "formatMaximum" ],
		        "formatExclusiveMinimum": [ "formatMinimum" ]
		    },
		    "default": {}
		}

		},{}],177:[function(require,module,exports){
		'use strict';

		var META_SCHEMA_ID = 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json';

		module.exports = {
		  enable: enableV5,
		  META_SCHEMA_ID: META_SCHEMA_ID
		};


		function enableV5(ajv) {
		  var inlineFunctions = {
		    'switch': require('./dotjs/switch'),
		    'constant': require('./dotjs/constant'),
		    '_formatLimit': require('./dotjs/_formatLimit'),
		    'patternRequired': require('./dotjs/patternRequired')
		  };

		  if (ajv._opts.meta !== false) {
		    var metaSchema = require('./refs/json-schema-v5.json');
		    ajv.addMetaSchema(metaSchema, META_SCHEMA_ID);
		  }
		  _addKeyword('constant');
		  ajv.addKeyword('contains', { type: 'array', macro: containsMacro });

		  _addKeyword('formatMaximum', 'string', inlineFunctions._formatLimit);
		  _addKeyword('formatMinimum', 'string', inlineFunctions._formatLimit);
		  ajv.addKeyword('formatExclusiveMaximum');
		  ajv.addKeyword('formatExclusiveMinimum');

		  ajv.addKeyword('patternGroups'); // implemented in properties.jst
		  _addKeyword('patternRequired', 'object');
		  _addKeyword('switch');


		  function _addKeyword(keyword, types, inlineFunc) {
		    var definition = {
		      inline: inlineFunc || inlineFunctions[keyword],
		      statements: true,
		      errors: 'full'
		    };
		    if (types) definition.type = types;
		    ajv.addKeyword(keyword, definition);
		  }
		}


		function containsMacro(schema) {
		  return {
		    not: { items: { not: schema } }
		  };
		}

		},{"./dotjs/_formatLimit":150,"./dotjs/constant":157,"./dotjs/patternRequired":167,"./dotjs/switch":171,"./refs/json-schema-v5.json":176}],178:[function(require,module,exports){
		var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');

		module.exports = function (obj, opts) {
		    if (!opts) opts = {};
		    if (typeof opts === 'function') opts = { cmp: opts };
		    var space = opts.space || '';
		    if (typeof space === 'number') space = Array(space+1).join(' ');
		    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;
		    var replacer = opts.replacer || function(key, value) { return value; };

		    var cmp = opts.cmp && (function (f) {
		        return function (node) {
		            return function (a, b) {
		                var aobj = { key: a, value: node[a] };
		                var bobj = { key: b, value: node[b] };
		                return f(aobj, bobj);
		            };
		        };
		    })(opts.cmp);

		    var seen = [];
		    return (function stringify (parent, key, node, level) {
		        var indent = space ? ('\n' + new Array(level + 1).join(space)) : '';
		        var colonSeparator = space ? ': ' : ':';

		        if (node && node.toJSON && typeof node.toJSON === 'function') {
		            node = node.toJSON();
		        }

		        node = replacer.call(parent, key, node);

		        if (node === undefined) {
		            return;
		        }
		        if (typeof node !== 'object' || node === null) {
		            return json.stringify(node);
		        }
		        if (isArray(node)) {
		            var out = [];
		            for (var i = 0; i < node.length; i++) {
		                var item = stringify(node, i, node[i], level+1) || json.stringify(null);
		                out.push(indent + space + item);
		            }
		            return '[' + out.join(',') + indent + ']';
		        }
		        else {
		            if (seen.indexOf(node) !== -1) {
		                if (cycles) return json.stringify('__cycle__');
		                throw new TypeError('Converting circular structure to JSON');
		            }
		            else seen.push(node);

		            var keys = objectKeys(node).sort(cmp && cmp(node));
		            var out = [];
		            for (var i = 0; i < keys.length; i++) {
		                var key = keys[i];
		                var value = stringify(node, key, node[key], level+1);

		                if(!value) continue;

		                var keyValue = json.stringify(key)
		                    + colonSeparator
		                    + value;
		                ;
		                out.push(indent + space + keyValue);
		            }
		            seen.splice(seen.indexOf(node), 1);
		            return '{' + out.join(',') + indent + '}';
		        }
		    })({ '': obj }, '', obj, 0);
		};

		var isArray = Array.isArray || function (x) {
		    return {}.toString.call(x) === '[object Array]';
		};

		var objectKeys = Object.keys || function (obj) {
		    var has = Object.prototype.hasOwnProperty || function () { return true };
		    var keys = [];
		    for (var key in obj) {
		        if (has.call(obj, key)) keys.push(key);
		    }
		    return keys;
		};

		},{"jsonify":692}],179:[function(require,module,exports){
		(function (global){
		"use strict";

		require("core-js/shim");

		require("regenerator-runtime/runtime");

		require("core-js/fn/regexp/escape");

		if (global._babelPolyfill) {
		  throw new Error("only one instance of babel-polyfill is allowed");
		}
		global._babelPolyfill = true;

		var DEFINE_PROPERTY = "defineProperty";
		function define(O, key, value) {
		  O[key] || Object[DEFINE_PROPERTY](O, key, {
		    writable: true,
		    configurable: true,
		    value: value
		  });
		}

		define(String.prototype, "padLeft", "".padStart);
		define(String.prototype, "padRight", "".padEnd);

		"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
		  [][key] && define(Array, key, Function.call.bind([][key]));
		});
		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"core-js/fn/regexp/escape":180,"core-js/shim":503,"regenerator-runtime/runtime":504}],180:[function(require,module,exports){
		require('../../modules/core.regexp.escape');
		module.exports = require('../../modules/_core').RegExp.escape;

		},{"../../modules/_core":201,"../../modules/core.regexp.escape":306}],181:[function(require,module,exports){
		module.exports = function (it) {
		  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
		  return it;
		};

		},{}],182:[function(require,module,exports){
		var cof = require('./_cof');
		module.exports = function (it, msg) {
		  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
		  return +it;
		};

		},{"./_cof":196}],183:[function(require,module,exports){
		// 22.1.3.31 Array.prototype[@@unscopables]
		var UNSCOPABLES = require('./_wks')('unscopables');
		var ArrayProto = Array.prototype;
		if (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});
		module.exports = function (key) {
		  ArrayProto[UNSCOPABLES][key] = true;
		};

		},{"./_hide":220,"./_wks":304}],184:[function(require,module,exports){
		module.exports = function (it, Constructor, name, forbiddenField) {
		  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
		    throw TypeError(name + ': incorrect invocation!');
		  } return it;
		};

		},{}],185:[function(require,module,exports){
		var isObject = require('./_is-object');
		module.exports = function (it) {
		  if (!isObject(it)) throw TypeError(it + ' is not an object!');
		  return it;
		};

		},{"./_is-object":229}],186:[function(require,module,exports){
		// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
		'use strict';
		var toObject = require('./_to-object');
		var toAbsoluteIndex = require('./_to-absolute-index');
		var toLength = require('./_to-length');

		module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
		  var O = toObject(this);
		  var len = toLength(O.length);
		  var to = toAbsoluteIndex(target, len);
		  var from = toAbsoluteIndex(start, len);
		  var end = arguments.length > 2 ? arguments[2] : undefined;
		  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
		  var inc = 1;
		  if (from < to && to < from + count) {
		    inc = -1;
		    from += count - 1;
		    to += count - 1;
		  }
		  while (count-- > 0) {
		    if (from in O) O[to] = O[from];
		    else delete O[to];
		    to += inc;
		    from += inc;
		  } return O;
		};

		},{"./_to-absolute-index":289,"./_to-length":293,"./_to-object":294}],187:[function(require,module,exports){
		// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
		'use strict';
		var toObject = require('./_to-object');
		var toAbsoluteIndex = require('./_to-absolute-index');
		var toLength = require('./_to-length');
		module.exports = function fill(value /* , start = 0, end = @length */) {
		  var O = toObject(this);
		  var length = toLength(O.length);
		  var aLen = arguments.length;
		  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
		  var end = aLen > 2 ? arguments[2] : undefined;
		  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
		  while (endPos > index) O[index++] = value;
		  return O;
		};

		},{"./_to-absolute-index":289,"./_to-length":293,"./_to-object":294}],188:[function(require,module,exports){
		var forOf = require('./_for-of');

		module.exports = function (iter, ITERATOR) {
		  var result = [];
		  forOf(iter, false, result.push, result, ITERATOR);
		  return result;
		};

		},{"./_for-of":217}],189:[function(require,module,exports){
		// false -> Array#indexOf
		// true  -> Array#includes
		var toIObject = require('./_to-iobject');
		var toLength = require('./_to-length');
		var toAbsoluteIndex = require('./_to-absolute-index');
		module.exports = function (IS_INCLUDES) {
		  return function ($this, el, fromIndex) {
		    var O = toIObject($this);
		    var length = toLength(O.length);
		    var index = toAbsoluteIndex(fromIndex, length);
		    var value;
		    // Array#includes uses SameValueZero equality algorithm
		    // eslint-disable-next-line no-self-compare
		    if (IS_INCLUDES && el != el) while (length > index) {
		      value = O[index++];
		      // eslint-disable-next-line no-self-compare
		      if (value != value) return true;
		    // Array#indexOf ignores holes, Array#includes - not
		    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
		      if (O[index] === el) return IS_INCLUDES || index || 0;
		    } return !IS_INCLUDES && -1;
		  };
		};

		},{"./_to-absolute-index":289,"./_to-iobject":292,"./_to-length":293}],190:[function(require,module,exports){
		// 0 -> Array#forEach
		// 1 -> Array#map
		// 2 -> Array#filter
		// 3 -> Array#some
		// 4 -> Array#every
		// 5 -> Array#find
		// 6 -> Array#findIndex
		var ctx = require('./_ctx');
		var IObject = require('./_iobject');
		var toObject = require('./_to-object');
		var toLength = require('./_to-length');
		var asc = require('./_array-species-create');
		module.exports = function (TYPE, $create) {
		  var IS_MAP = TYPE == 1;
		  var IS_FILTER = TYPE == 2;
		  var IS_SOME = TYPE == 3;
		  var IS_EVERY = TYPE == 4;
		  var IS_FIND_INDEX = TYPE == 6;
		  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
		  var create = $create || asc;
		  return function ($this, callbackfn, that) {
		    var O = toObject($this);
		    var self = IObject(O);
		    var f = ctx(callbackfn, that, 3);
		    var length = toLength(self.length);
		    var index = 0;
		    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
		    var val, res;
		    for (;length > index; index++) if (NO_HOLES || index in self) {
		      val = self[index];
		      res = f(val, index, O);
		      if (TYPE) {
		        if (IS_MAP) result[index] = res;   // map
		        else if (res) switch (TYPE) {
		          case 3: return true;             // some
		          case 5: return val;              // find
		          case 6: return index;            // findIndex
		          case 2: result.push(val);        // filter
		        } else if (IS_EVERY) return false; // every
		      }
		    }
		    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
		  };
		};

		},{"./_array-species-create":193,"./_ctx":203,"./_iobject":225,"./_to-length":293,"./_to-object":294}],191:[function(require,module,exports){
		var aFunction = require('./_a-function');
		var toObject = require('./_to-object');
		var IObject = require('./_iobject');
		var toLength = require('./_to-length');

		module.exports = function (that, callbackfn, aLen, memo, isRight) {
		  aFunction(callbackfn);
		  var O = toObject(that);
		  var self = IObject(O);
		  var length = toLength(O.length);
		  var index = isRight ? length - 1 : 0;
		  var i = isRight ? -1 : 1;
		  if (aLen < 2) for (;;) {
		    if (index in self) {
		      memo = self[index];
		      index += i;
		      break;
		    }
		    index += i;
		    if (isRight ? index < 0 : length <= index) {
		      throw TypeError('Reduce of empty array with no initial value');
		    }
		  }
		  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {
		    memo = callbackfn(memo, self[index], index, O);
		  }
		  return memo;
		};

		},{"./_a-function":181,"./_iobject":225,"./_to-length":293,"./_to-object":294}],192:[function(require,module,exports){
		var isObject = require('./_is-object');
		var isArray = require('./_is-array');
		var SPECIES = require('./_wks')('species');

		module.exports = function (original) {
		  var C;
		  if (isArray(original)) {
		    C = original.constructor;
		    // cross-realm fallback
		    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
		    if (isObject(C)) {
		      C = C[SPECIES];
		      if (C === null) C = undefined;
		    }
		  } return C === undefined ? Array : C;
		};

		},{"./_is-array":227,"./_is-object":229,"./_wks":304}],193:[function(require,module,exports){
		// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
		var speciesConstructor = require('./_array-species-constructor');

		module.exports = function (original, length) {
		  return new (speciesConstructor(original))(length);
		};

		},{"./_array-species-constructor":192}],194:[function(require,module,exports){
		'use strict';
		var aFunction = require('./_a-function');
		var isObject = require('./_is-object');
		var invoke = require('./_invoke');
		var arraySlice = [].slice;
		var factories = {};

		var construct = function (F, len, args) {
		  if (!(len in factories)) {
		    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
		    // eslint-disable-next-line no-new-func
		    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
		  } return factories[len](F, args);
		};

		module.exports = Function.bind || function bind(that /* , ...args */) {
		  var fn = aFunction(this);
		  var partArgs = arraySlice.call(arguments, 1);
		  var bound = function (/* args... */) {
		    var args = partArgs.concat(arraySlice.call(arguments));
		    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
		  };
		  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
		  return bound;
		};

		},{"./_a-function":181,"./_invoke":224,"./_is-object":229}],195:[function(require,module,exports){
		// getting tag from 19.1.3.6 Object.prototype.toString()
		var cof = require('./_cof');
		var TAG = require('./_wks')('toStringTag');
		// ES3 wrong here
		var ARG = cof(function () { return arguments; }()) == 'Arguments';

		// fallback for IE11 Script Access Denied error
		var tryGet = function (it, key) {
		  try {
		    return it[key];
		  } catch (e) { /* empty */ }
		};

		module.exports = function (it) {
		  var O, T, B;
		  return it === undefined ? 'Undefined' : it === null ? 'Null'
		    // @@toStringTag case
		    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
		    // builtinTag case
		    : ARG ? cof(O)
		    // ES3 arguments fallback
		    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
		};

		},{"./_cof":196,"./_wks":304}],196:[function(require,module,exports){
		var toString = {}.toString;

		module.exports = function (it) {
		  return toString.call(it).slice(8, -1);
		};

		},{}],197:[function(require,module,exports){
		'use strict';
		var dP = require('./_object-dp').f;
		var create = require('./_object-create');
		var redefineAll = require('./_redefine-all');
		var ctx = require('./_ctx');
		var anInstance = require('./_an-instance');
		var forOf = require('./_for-of');
		var $iterDefine = require('./_iter-define');
		var step = require('./_iter-step');
		var setSpecies = require('./_set-species');
		var DESCRIPTORS = require('./_descriptors');
		var fastKey = require('./_meta').fastKey;
		var validate = require('./_validate-collection');
		var SIZE = DESCRIPTORS ? '_s' : 'size';

		var getEntry = function (that, key) {
		  // fast case
		  var index = fastKey(key);
		  var entry;
		  if (index !== 'F') return that._i[index];
		  // frozen object case
		  for (entry = that._f; entry; entry = entry.n) {
		    if (entry.k == key) return entry;
		  }
		};

		module.exports = {
		  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
		    var C = wrapper(function (that, iterable) {
		      anInstance(that, C, NAME, '_i');
		      that._t = NAME;         // collection type
		      that._i = create(null); // index
		      that._f = undefined;    // first entry
		      that._l = undefined;    // last entry
		      that[SIZE] = 0;         // size
		      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
		    });
		    redefineAll(C.prototype, {
		      // 23.1.3.1 Map.prototype.clear()
		      // 23.2.3.2 Set.prototype.clear()
		      clear: function clear() {
		        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
		          entry.r = true;
		          if (entry.p) entry.p = entry.p.n = undefined;
		          delete data[entry.i];
		        }
		        that._f = that._l = undefined;
		        that[SIZE] = 0;
		      },
		      // 23.1.3.3 Map.prototype.delete(key)
		      // 23.2.3.4 Set.prototype.delete(value)
		      'delete': function (key) {
		        var that = validate(this, NAME);
		        var entry = getEntry(that, key);
		        if (entry) {
		          var next = entry.n;
		          var prev = entry.p;
		          delete that._i[entry.i];
		          entry.r = true;
		          if (prev) prev.n = next;
		          if (next) next.p = prev;
		          if (that._f == entry) that._f = next;
		          if (that._l == entry) that._l = prev;
		          that[SIZE]--;
		        } return !!entry;
		      },
		      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
		      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
		      forEach: function forEach(callbackfn /* , that = undefined */) {
		        validate(this, NAME);
		        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
		        var entry;
		        while (entry = entry ? entry.n : this._f) {
		          f(entry.v, entry.k, this);
		          // revert to the last existing entry
		          while (entry && entry.r) entry = entry.p;
		        }
		      },
		      // 23.1.3.7 Map.prototype.has(key)
		      // 23.2.3.7 Set.prototype.has(value)
		      has: function has(key) {
		        return !!getEntry(validate(this, NAME), key);
		      }
		    });
		    if (DESCRIPTORS) dP(C.prototype, 'size', {
		      get: function () {
		        return validate(this, NAME)[SIZE];
		      }
		    });
		    return C;
		  },
		  def: function (that, key, value) {
		    var entry = getEntry(that, key);
		    var prev, index;
		    // change existing entry
		    if (entry) {
		      entry.v = value;
		    // create new entry
		    } else {
		      that._l = entry = {
		        i: index = fastKey(key, true), // <- index
		        k: key,                        // <- key
		        v: value,                      // <- value
		        p: prev = that._l,             // <- previous entry
		        n: undefined,                  // <- next entry
		        r: false                       // <- removed
		      };
		      if (!that._f) that._f = entry;
		      if (prev) prev.n = entry;
		      that[SIZE]++;
		      // add to index
		      if (index !== 'F') that._i[index] = entry;
		    } return that;
		  },
		  getEntry: getEntry,
		  setStrong: function (C, NAME, IS_MAP) {
		    // add .keys, .values, .entries, [@@iterator]
		    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
		    $iterDefine(C, NAME, function (iterated, kind) {
		      this._t = validate(iterated, NAME); // target
		      this._k = kind;                     // kind
		      this._l = undefined;                // previous
		    }, function () {
		      var that = this;
		      var kind = that._k;
		      var entry = that._l;
		      // revert to the last existing entry
		      while (entry && entry.r) entry = entry.p;
		      // get next entry
		      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
		        // or finish the iteration
		        that._t = undefined;
		        return step(1);
		      }
		      // return step by kind
		      if (kind == 'keys') return step(0, entry.k);
		      if (kind == 'values') return step(0, entry.v);
		      return step(0, [entry.k, entry.v]);
		    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

		    // add [@@species], 23.1.2.2, 23.2.2.2
		    setSpecies(NAME);
		  }
		};

		},{"./_an-instance":184,"./_ctx":203,"./_descriptors":207,"./_for-of":217,"./_iter-define":233,"./_iter-step":235,"./_meta":243,"./_object-create":248,"./_object-dp":249,"./_redefine-all":268,"./_set-species":275,"./_validate-collection":301}],198:[function(require,module,exports){
		// https://github.com/DavidBruant/Map-Set.prototype.toJSON
		var classof = require('./_classof');
		var from = require('./_array-from-iterable');
		module.exports = function (NAME) {
		  return function toJSON() {
		    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
		    return from(this);
		  };
		};

		},{"./_array-from-iterable":188,"./_classof":195}],199:[function(require,module,exports){
		'use strict';
		var redefineAll = require('./_redefine-all');
		var getWeak = require('./_meta').getWeak;
		var anObject = require('./_an-object');
		var isObject = require('./_is-object');
		var anInstance = require('./_an-instance');
		var forOf = require('./_for-of');
		var createArrayMethod = require('./_array-methods');
		var $has = require('./_has');
		var validate = require('./_validate-collection');
		var arrayFind = createArrayMethod(5);
		var arrayFindIndex = createArrayMethod(6);
		var id = 0;

		// fallback for uncaught frozen keys
		var uncaughtFrozenStore = function (that) {
		  return that._l || (that._l = new UncaughtFrozenStore());
		};
		var UncaughtFrozenStore = function () {
		  this.a = [];
		};
		var findUncaughtFrozen = function (store, key) {
		  return arrayFind(store.a, function (it) {
		    return it[0] === key;
		  });
		};
		UncaughtFrozenStore.prototype = {
		  get: function (key) {
		    var entry = findUncaughtFrozen(this, key);
		    if (entry) return entry[1];
		  },
		  has: function (key) {
		    return !!findUncaughtFrozen(this, key);
		  },
		  set: function (key, value) {
		    var entry = findUncaughtFrozen(this, key);
		    if (entry) entry[1] = value;
		    else this.a.push([key, value]);
		  },
		  'delete': function (key) {
		    var index = arrayFindIndex(this.a, function (it) {
		      return it[0] === key;
		    });
		    if (~index) this.a.splice(index, 1);
		    return !!~index;
		  }
		};

		module.exports = {
		  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
		    var C = wrapper(function (that, iterable) {
		      anInstance(that, C, NAME, '_i');
		      that._t = NAME;      // collection type
		      that._i = id++;      // collection id
		      that._l = undefined; // leak store for uncaught frozen objects
		      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
		    });
		    redefineAll(C.prototype, {
		      // 23.3.3.2 WeakMap.prototype.delete(key)
		      // 23.4.3.3 WeakSet.prototype.delete(value)
		      'delete': function (key) {
		        if (!isObject(key)) return false;
		        var data = getWeak(key);
		        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
		        return data && $has(data, this._i) && delete data[this._i];
		      },
		      // 23.3.3.4 WeakMap.prototype.has(key)
		      // 23.4.3.4 WeakSet.prototype.has(value)
		      has: function has(key) {
		        if (!isObject(key)) return false;
		        var data = getWeak(key);
		        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
		        return data && $has(data, this._i);
		      }
		    });
		    return C;
		  },
		  def: function (that, key, value) {
		    var data = getWeak(anObject(key), true);
		    if (data === true) uncaughtFrozenStore(that).set(key, value);
		    else data[that._i] = value;
		    return that;
		  },
		  ufstore: uncaughtFrozenStore
		};

		},{"./_an-instance":184,"./_an-object":185,"./_array-methods":190,"./_for-of":217,"./_has":219,"./_is-object":229,"./_meta":243,"./_redefine-all":268,"./_validate-collection":301}],200:[function(require,module,exports){
		'use strict';
		var global = require('./_global');
		var $export = require('./_export');
		var redefine = require('./_redefine');
		var redefineAll = require('./_redefine-all');
		var meta = require('./_meta');
		var forOf = require('./_for-of');
		var anInstance = require('./_an-instance');
		var isObject = require('./_is-object');
		var fails = require('./_fails');
		var $iterDetect = require('./_iter-detect');
		var setToStringTag = require('./_set-to-string-tag');
		var inheritIfRequired = require('./_inherit-if-required');

		module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
		  var Base = global[NAME];
		  var C = Base;
		  var ADDER = IS_MAP ? 'set' : 'add';
		  var proto = C && C.prototype;
		  var O = {};
		  var fixMethod = function (KEY) {
		    var fn = proto[KEY];
		    redefine(proto, KEY,
		      KEY == 'delete' ? function (a) {
		        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
		      } : KEY == 'has' ? function has(a) {
		        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
		      } : KEY == 'get' ? function get(a) {
		        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
		      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
		        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
		    );
		  };
		  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
		    new C().entries().next();
		  }))) {
		    // create collection constructor
		    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
		    redefineAll(C.prototype, methods);
		    meta.NEED = true;
		  } else {
		    var instance = new C();
		    // early implementations not supports chaining
		    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
		    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
		    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
		    // most early implementations doesn't supports iterables, most modern - not close it correctly
		    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
		    // for early implementations -0 and +0 not the same
		    var BUGGY_ZERO = !IS_WEAK && fails(function () {
		      // V8 ~ Chromium 42- fails only with 5+ elements
		      var $instance = new C();
		      var index = 5;
		      while (index--) $instance[ADDER](index, index);
		      return !$instance.has(-0);
		    });
		    if (!ACCEPT_ITERABLES) {
		      C = wrapper(function (target, iterable) {
		        anInstance(target, C, NAME);
		        var that = inheritIfRequired(new Base(), target, C);
		        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
		        return that;
		      });
		      C.prototype = proto;
		      proto.constructor = C;
		    }
		    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
		      fixMethod('delete');
		      fixMethod('has');
		      IS_MAP && fixMethod('get');
		    }
		    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
		    // weak collections should not contains .clear method
		    if (IS_WEAK && proto.clear) delete proto.clear;
		  }

		  setToStringTag(C, NAME);

		  O[NAME] = C;
		  $export($export.G + $export.W + $export.F * (C != Base), O);

		  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

		  return C;
		};

		},{"./_an-instance":184,"./_export":211,"./_fails":213,"./_for-of":217,"./_global":218,"./_inherit-if-required":223,"./_is-object":229,"./_iter-detect":234,"./_meta":243,"./_redefine":269,"./_redefine-all":268,"./_set-to-string-tag":276}],201:[function(require,module,exports){
		var core = module.exports = { version: '2.5.5' };
		if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

		},{}],202:[function(require,module,exports){
		'use strict';
		var $defineProperty = require('./_object-dp');
		var createDesc = require('./_property-desc');

		module.exports = function (object, index, value) {
		  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
		  else object[index] = value;
		};

		},{"./_object-dp":249,"./_property-desc":267}],203:[function(require,module,exports){
		// optional / simple context binding
		var aFunction = require('./_a-function');
		module.exports = function (fn, that, length) {
		  aFunction(fn);
		  if (that === undefined) return fn;
		  switch (length) {
		    case 1: return function (a) {
		      return fn.call(that, a);
		    };
		    case 2: return function (a, b) {
		      return fn.call(that, a, b);
		    };
		    case 3: return function (a, b, c) {
		      return fn.call(that, a, b, c);
		    };
		  }
		  return function (/* ...args */) {
		    return fn.apply(that, arguments);
		  };
		};

		},{"./_a-function":181}],204:[function(require,module,exports){
		'use strict';
		// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
		var fails = require('./_fails');
		var getTime = Date.prototype.getTime;
		var $toISOString = Date.prototype.toISOString;

		var lz = function (num) {
		  return num > 9 ? num : '0' + num;
		};

		// PhantomJS / old WebKit has a broken implementations
		module.exports = (fails(function () {
		  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
		}) || !fails(function () {
		  $toISOString.call(new Date(NaN));
		})) ? function toISOString() {
		  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
		  var d = this;
		  var y = d.getUTCFullYear();
		  var m = d.getUTCMilliseconds();
		  var s = y < 0 ? '-' : y > 9999 ? '+' : '';
		  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
		    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
		    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
		    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
		} : $toISOString;

		},{"./_fails":213}],205:[function(require,module,exports){
		'use strict';
		var anObject = require('./_an-object');
		var toPrimitive = require('./_to-primitive');
		var NUMBER = 'number';

		module.exports = function (hint) {
		  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
		  return toPrimitive(anObject(this), hint != NUMBER);
		};

		},{"./_an-object":185,"./_to-primitive":295}],206:[function(require,module,exports){
		// 7.2.1 RequireObjectCoercible(argument)
		module.exports = function (it) {
		  if (it == undefined) throw TypeError("Can't call method on  " + it);
		  return it;
		};

		},{}],207:[function(require,module,exports){
		// Thank's IE8 for his funny defineProperty
		module.exports = !require('./_fails')(function () {
		  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
		});

		},{"./_fails":213}],208:[function(require,module,exports){
		var isObject = require('./_is-object');
		var document = require('./_global').document;
		// typeof document.createElement is 'object' in old IE
		var is = isObject(document) && isObject(document.createElement);
		module.exports = function (it) {
		  return is ? document.createElement(it) : {};
		};

		},{"./_global":218,"./_is-object":229}],209:[function(require,module,exports){
		// IE 8- don't enum bug keys
		module.exports = (
		  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
		).split(',');

		},{}],210:[function(require,module,exports){
		// all enumerable object keys, includes symbols
		var getKeys = require('./_object-keys');
		var gOPS = require('./_object-gops');
		var pIE = require('./_object-pie');
		module.exports = function (it) {
		  var result = getKeys(it);
		  var getSymbols = gOPS.f;
		  if (getSymbols) {
		    var symbols = getSymbols(it);
		    var isEnum = pIE.f;
		    var i = 0;
		    var key;
		    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
		  } return result;
		};

		},{"./_object-gops":255,"./_object-keys":258,"./_object-pie":259}],211:[function(require,module,exports){
		var global = require('./_global');
		var core = require('./_core');
		var hide = require('./_hide');
		var redefine = require('./_redefine');
		var ctx = require('./_ctx');
		var PROTOTYPE = 'prototype';

		var $export = function (type, name, source) {
		  var IS_FORCED = type & $export.F;
		  var IS_GLOBAL = type & $export.G;
		  var IS_STATIC = type & $export.S;
		  var IS_PROTO = type & $export.P;
		  var IS_BIND = type & $export.B;
		  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
		  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
		  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
		  var key, own, out, exp;
		  if (IS_GLOBAL) source = name;
		  for (key in source) {
		    // contains in native
		    own = !IS_FORCED && target && target[key] !== undefined;
		    // export native or passed
		    out = (own ? target : source)[key];
		    // bind timers to global for call from export context
		    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
		    // extend global
		    if (target) redefine(target, key, out, type & $export.U);
		    // export
		    if (exports[key] != out) hide(exports, key, exp);
		    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
		  }
		};
		global.core = core;
		// type bitmap
		$export.F = 1;   // forced
		$export.G = 2;   // global
		$export.S = 4;   // static
		$export.P = 8;   // proto
		$export.B = 16;  // bind
		$export.W = 32;  // wrap
		$export.U = 64;  // safe
		$export.R = 128; // real proto method for `library`
		module.exports = $export;

		},{"./_core":201,"./_ctx":203,"./_global":218,"./_hide":220,"./_redefine":269}],212:[function(require,module,exports){
		var MATCH = require('./_wks')('match');
		module.exports = function (KEY) {
		  var re = /./;
		  try {
		    '/./'[KEY](re);
		  } catch (e) {
		    try {
		      re[MATCH] = false;
		      return !'/./'[KEY](re);
		    } catch (f) { /* empty */ }
		  } return true;
		};

		},{"./_wks":304}],213:[function(require,module,exports){
		module.exports = function (exec) {
		  try {
		    return !!exec();
		  } catch (e) {
		    return true;
		  }
		};

		},{}],214:[function(require,module,exports){
		'use strict';
		var hide = require('./_hide');
		var redefine = require('./_redefine');
		var fails = require('./_fails');
		var defined = require('./_defined');
		var wks = require('./_wks');

		module.exports = function (KEY, length, exec) {
		  var SYMBOL = wks(KEY);
		  var fns = exec(defined, SYMBOL, ''[KEY]);
		  var strfn = fns[0];
		  var rxfn = fns[1];
		  if (fails(function () {
		    var O = {};
		    O[SYMBOL] = function () { return 7; };
		    return ''[KEY](O) != 7;
		  })) {
		    redefine(String.prototype, KEY, strfn);
		    hide(RegExp.prototype, SYMBOL, length == 2
		      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
		      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
		      ? function (string, arg) { return rxfn.call(string, this, arg); }
		      // 21.2.5.6 RegExp.prototype[@@match](string)
		      // 21.2.5.9 RegExp.prototype[@@search](string)
		      : function (string) { return rxfn.call(string, this); }
		    );
		  }
		};

		},{"./_defined":206,"./_fails":213,"./_hide":220,"./_redefine":269,"./_wks":304}],215:[function(require,module,exports){
		'use strict';
		// 21.2.5.3 get RegExp.prototype.flags
		var anObject = require('./_an-object');
		module.exports = function () {
		  var that = anObject(this);
		  var result = '';
		  if (that.global) result += 'g';
		  if (that.ignoreCase) result += 'i';
		  if (that.multiline) result += 'm';
		  if (that.unicode) result += 'u';
		  if (that.sticky) result += 'y';
		  return result;
		};

		},{"./_an-object":185}],216:[function(require,module,exports){
		'use strict';
		// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
		var isArray = require('./_is-array');
		var isObject = require('./_is-object');
		var toLength = require('./_to-length');
		var ctx = require('./_ctx');
		var IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');

		function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
		  var targetIndex = start;
		  var sourceIndex = 0;
		  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
		  var element, spreadable;

		  while (sourceIndex < sourceLen) {
		    if (sourceIndex in source) {
		      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

		      spreadable = false;
		      if (isObject(element)) {
		        spreadable = element[IS_CONCAT_SPREADABLE];
		        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
		      }

		      if (spreadable && depth > 0) {
		        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
		      } else {
		        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
		        target[targetIndex] = element;
		      }

		      targetIndex++;
		    }
		    sourceIndex++;
		  }
		  return targetIndex;
		}

		module.exports = flattenIntoArray;

		},{"./_ctx":203,"./_is-array":227,"./_is-object":229,"./_to-length":293,"./_wks":304}],217:[function(require,module,exports){
		var ctx = require('./_ctx');
		var call = require('./_iter-call');
		var isArrayIter = require('./_is-array-iter');
		var anObject = require('./_an-object');
		var toLength = require('./_to-length');
		var getIterFn = require('./core.get-iterator-method');
		var BREAK = {};
		var RETURN = {};
		var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
		  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
		  var f = ctx(fn, that, entries ? 2 : 1);
		  var index = 0;
		  var length, step, iterator, result;
		  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
		  // fast case for arrays with default iterator
		  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
		    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
		    if (result === BREAK || result === RETURN) return result;
		  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
		    result = call(iterator, f, step.value, entries);
		    if (result === BREAK || result === RETURN) return result;
		  }
		};
		exports.BREAK = BREAK;
		exports.RETURN = RETURN;

		},{"./_an-object":185,"./_ctx":203,"./_is-array-iter":226,"./_iter-call":231,"./_to-length":293,"./core.get-iterator-method":305}],218:[function(require,module,exports){
		// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
		var global = module.exports = typeof window != 'undefined' && window.Math == Math
		  ? window : typeof self != 'undefined' && self.Math == Math ? self
		  // eslint-disable-next-line no-new-func
		  : Function('return this')();
		if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

		},{}],219:[function(require,module,exports){
		var hasOwnProperty = {}.hasOwnProperty;
		module.exports = function (it, key) {
		  return hasOwnProperty.call(it, key);
		};

		},{}],220:[function(require,module,exports){
		var dP = require('./_object-dp');
		var createDesc = require('./_property-desc');
		module.exports = require('./_descriptors') ? function (object, key, value) {
		  return dP.f(object, key, createDesc(1, value));
		} : function (object, key, value) {
		  object[key] = value;
		  return object;
		};

		},{"./_descriptors":207,"./_object-dp":249,"./_property-desc":267}],221:[function(require,module,exports){
		var document = require('./_global').document;
		module.exports = document && document.documentElement;

		},{"./_global":218}],222:[function(require,module,exports){
		module.exports = !require('./_descriptors') && !require('./_fails')(function () {
		  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
		});

		},{"./_descriptors":207,"./_dom-create":208,"./_fails":213}],223:[function(require,module,exports){
		var isObject = require('./_is-object');
		var setPrototypeOf = require('./_set-proto').set;
		module.exports = function (that, target, C) {
		  var S = target.constructor;
		  var P;
		  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
		    setPrototypeOf(that, P);
		  } return that;
		};

		},{"./_is-object":229,"./_set-proto":274}],224:[function(require,module,exports){
		// fast apply, http://jsperf.lnkit.com/fast-apply/5
		module.exports = function (fn, args, that) {
		  var un = that === undefined;
		  switch (args.length) {
		    case 0: return un ? fn()
		                      : fn.call(that);
		    case 1: return un ? fn(args[0])
		                      : fn.call(that, args[0]);
		    case 2: return un ? fn(args[0], args[1])
		                      : fn.call(that, args[0], args[1]);
		    case 3: return un ? fn(args[0], args[1], args[2])
		                      : fn.call(that, args[0], args[1], args[2]);
		    case 4: return un ? fn(args[0], args[1], args[2], args[3])
		                      : fn.call(that, args[0], args[1], args[2], args[3]);
		  } return fn.apply(that, args);
		};

		},{}],225:[function(require,module,exports){
		// fallback for non-array-like ES3 and non-enumerable old V8 strings
		var cof = require('./_cof');
		// eslint-disable-next-line no-prototype-builtins
		module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
		  return cof(it) == 'String' ? it.split('') : Object(it);
		};

		},{"./_cof":196}],226:[function(require,module,exports){
		// check on default Array iterator
		var Iterators = require('./_iterators');
		var ITERATOR = require('./_wks')('iterator');
		var ArrayProto = Array.prototype;

		module.exports = function (it) {
		  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
		};

		},{"./_iterators":236,"./_wks":304}],227:[function(require,module,exports){
		// 7.2.2 IsArray(argument)
		var cof = require('./_cof');
		module.exports = Array.isArray || function isArray(arg) {
		  return cof(arg) == 'Array';
		};

		},{"./_cof":196}],228:[function(require,module,exports){
		// 20.1.2.3 Number.isInteger(number)
		var isObject = require('./_is-object');
		var floor = Math.floor;
		module.exports = function isInteger(it) {
		  return !isObject(it) && isFinite(it) && floor(it) === it;
		};

		},{"./_is-object":229}],229:[function(require,module,exports){
		module.exports = function (it) {
		  return typeof it === 'object' ? it !== null : typeof it === 'function';
		};

		},{}],230:[function(require,module,exports){
		// 7.2.8 IsRegExp(argument)
		var isObject = require('./_is-object');
		var cof = require('./_cof');
		var MATCH = require('./_wks')('match');
		module.exports = function (it) {
		  var isRegExp;
		  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
		};

		},{"./_cof":196,"./_is-object":229,"./_wks":304}],231:[function(require,module,exports){
		// call something on iterator step with safe closing on error
		var anObject = require('./_an-object');
		module.exports = function (iterator, fn, value, entries) {
		  try {
		    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
		  // 7.4.6 IteratorClose(iterator, completion)
		  } catch (e) {
		    var ret = iterator['return'];
		    if (ret !== undefined) anObject(ret.call(iterator));
		    throw e;
		  }
		};

		},{"./_an-object":185}],232:[function(require,module,exports){
		'use strict';
		var create = require('./_object-create');
		var descriptor = require('./_property-desc');
		var setToStringTag = require('./_set-to-string-tag');
		var IteratorPrototype = {};

		// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
		require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });

		module.exports = function (Constructor, NAME, next) {
		  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
		  setToStringTag(Constructor, NAME + ' Iterator');
		};

		},{"./_hide":220,"./_object-create":248,"./_property-desc":267,"./_set-to-string-tag":276,"./_wks":304}],233:[function(require,module,exports){
		'use strict';
		var LIBRARY = require('./_library');
		var $export = require('./_export');
		var redefine = require('./_redefine');
		var hide = require('./_hide');
		var Iterators = require('./_iterators');
		var $iterCreate = require('./_iter-create');
		var setToStringTag = require('./_set-to-string-tag');
		var getPrototypeOf = require('./_object-gpo');
		var ITERATOR = require('./_wks')('iterator');
		var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
		var FF_ITERATOR = '@@iterator';
		var KEYS = 'keys';
		var VALUES = 'values';

		var returnThis = function () { return this; };

		module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
		  $iterCreate(Constructor, NAME, next);
		  var getMethod = function (kind) {
		    if (!BUGGY && kind in proto) return proto[kind];
		    switch (kind) {
		      case KEYS: return function keys() { return new Constructor(this, kind); };
		      case VALUES: return function values() { return new Constructor(this, kind); };
		    } return function entries() { return new Constructor(this, kind); };
		  };
		  var TAG = NAME + ' Iterator';
		  var DEF_VALUES = DEFAULT == VALUES;
		  var VALUES_BUG = false;
		  var proto = Base.prototype;
		  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
		  var $default = $native || getMethod(DEFAULT);
		  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
		  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
		  var methods, key, IteratorPrototype;
		  // Fix native
		  if ($anyNative) {
		    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
		    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
		      // Set @@toStringTag to native iterators
		      setToStringTag(IteratorPrototype, TAG, true);
		      // fix for some old engines
		      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
		    }
		  }
		  // fix Array#{values, @@iterator}.name in V8 / FF
		  if (DEF_VALUES && $native && $native.name !== VALUES) {
		    VALUES_BUG = true;
		    $default = function values() { return $native.call(this); };
		  }
		  // Define iterator
		  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
		    hide(proto, ITERATOR, $default);
		  }
		  // Plug for library
		  Iterators[NAME] = $default;
		  Iterators[TAG] = returnThis;
		  if (DEFAULT) {
		    methods = {
		      values: DEF_VALUES ? $default : getMethod(VALUES),
		      keys: IS_SET ? $default : getMethod(KEYS),
		      entries: $entries
		    };
		    if (FORCED) for (key in methods) {
		      if (!(key in proto)) redefine(proto, key, methods[key]);
		    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
		  }
		  return methods;
		};

		},{"./_export":211,"./_hide":220,"./_iter-create":232,"./_iterators":236,"./_library":237,"./_object-gpo":256,"./_redefine":269,"./_set-to-string-tag":276,"./_wks":304}],234:[function(require,module,exports){
		var ITERATOR = require('./_wks')('iterator');
		var SAFE_CLOSING = false;

		try {
		  var riter = [7][ITERATOR]();
		  riter['return'] = function () { SAFE_CLOSING = true; };
		  // eslint-disable-next-line no-throw-literal
		  Array.from(riter, function () { throw 2; });
		} catch (e) { /* empty */ }

		module.exports = function (exec, skipClosing) {
		  if (!skipClosing && !SAFE_CLOSING) return false;
		  var safe = false;
		  try {
		    var arr = [7];
		    var iter = arr[ITERATOR]();
		    iter.next = function () { return { done: safe = true }; };
		    arr[ITERATOR] = function () { return iter; };
		    exec(arr);
		  } catch (e) { /* empty */ }
		  return safe;
		};

		},{"./_wks":304}],235:[function(require,module,exports){
		module.exports = function (done, value) {
		  return { value: value, done: !!done };
		};

		},{}],236:[function(require,module,exports){
		module.exports = {};

		},{}],237:[function(require,module,exports){
		module.exports = false;

		},{}],238:[function(require,module,exports){
		// 20.2.2.14 Math.expm1(x)
		var $expm1 = Math.expm1;
		module.exports = (!$expm1
		  // Old FF bug
		  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
		  // Tor Browser bug
		  || $expm1(-2e-17) != -2e-17
		) ? function expm1(x) {
		  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
		} : $expm1;

		},{}],239:[function(require,module,exports){
		// 20.2.2.16 Math.fround(x)
		var sign = require('./_math-sign');
		var pow = Math.pow;
		var EPSILON = pow(2, -52);
		var EPSILON32 = pow(2, -23);
		var MAX32 = pow(2, 127) * (2 - EPSILON32);
		var MIN32 = pow(2, -126);

		var roundTiesToEven = function (n) {
		  return n + 1 / EPSILON - 1 / EPSILON;
		};

		module.exports = Math.fround || function fround(x) {
		  var $abs = Math.abs(x);
		  var $sign = sign(x);
		  var a, result;
		  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
		  a = (1 + EPSILON32 / EPSILON) * $abs;
		  result = a - (a - $abs);
		  // eslint-disable-next-line no-self-compare
		  if (result > MAX32 || result != result) return $sign * Infinity;
		  return $sign * result;
		};

		},{"./_math-sign":242}],240:[function(require,module,exports){
		// 20.2.2.20 Math.log1p(x)
		module.exports = Math.log1p || function log1p(x) {
		  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
		};

		},{}],241:[function(require,module,exports){
		// https://rwaldron.github.io/proposal-math-extensions/
		module.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {
		  if (
		    arguments.length === 0
		      // eslint-disable-next-line no-self-compare
		      || x != x
		      // eslint-disable-next-line no-self-compare
		      || inLow != inLow
		      // eslint-disable-next-line no-self-compare
		      || inHigh != inHigh
		      // eslint-disable-next-line no-self-compare
		      || outLow != outLow
		      // eslint-disable-next-line no-self-compare
		      || outHigh != outHigh
		  ) return NaN;
		  if (x === Infinity || x === -Infinity) return x;
		  return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;
		};

		},{}],242:[function(require,module,exports){
		// 20.2.2.28 Math.sign(x)
		module.exports = Math.sign || function sign(x) {
		  // eslint-disable-next-line no-self-compare
		  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
		};

		},{}],243:[function(require,module,exports){
		var META = require('./_uid')('meta');
		var isObject = require('./_is-object');
		var has = require('./_has');
		var setDesc = require('./_object-dp').f;
		var id = 0;
		var isExtensible = Object.isExtensible || function () {
		  return true;
		};
		var FREEZE = !require('./_fails')(function () {
		  return isExtensible(Object.preventExtensions({}));
		});
		var setMeta = function (it) {
		  setDesc(it, META, { value: {
		    i: 'O' + ++id, // object ID
		    w: {}          // weak collections IDs
		  } });
		};
		var fastKey = function (it, create) {
		  // return primitive with prefix
		  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
		  if (!has(it, META)) {
		    // can't set metadata to uncaught frozen object
		    if (!isExtensible(it)) return 'F';
		    // not necessary to add metadata
		    if (!create) return 'E';
		    // add missing metadata
		    setMeta(it);
		  // return object ID
		  } return it[META].i;
		};
		var getWeak = function (it, create) {
		  if (!has(it, META)) {
		    // can't set metadata to uncaught frozen object
		    if (!isExtensible(it)) return true;
		    // not necessary to add metadata
		    if (!create) return false;
		    // add missing metadata
		    setMeta(it);
		  // return hash weak collections IDs
		  } return it[META].w;
		};
		// add metadata on freeze-family methods calling
		var onFreeze = function (it) {
		  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
		  return it;
		};
		var meta = module.exports = {
		  KEY: META,
		  NEED: false,
		  fastKey: fastKey,
		  getWeak: getWeak,
		  onFreeze: onFreeze
		};

		},{"./_fails":213,"./_has":219,"./_is-object":229,"./_object-dp":249,"./_uid":299}],244:[function(require,module,exports){
		var Map = require('./es6.map');
		var $export = require('./_export');
		var shared = require('./_shared')('metadata');
		var store = shared.store || (shared.store = new (require('./es6.weak-map'))());

		var getOrCreateMetadataMap = function (target, targetKey, create) {
		  var targetMetadata = store.get(target);
		  if (!targetMetadata) {
		    if (!create) return undefined;
		    store.set(target, targetMetadata = new Map());
		  }
		  var keyMetadata = targetMetadata.get(targetKey);
		  if (!keyMetadata) {
		    if (!create) return undefined;
		    targetMetadata.set(targetKey, keyMetadata = new Map());
		  } return keyMetadata;
		};
		var ordinaryHasOwnMetadata = function (MetadataKey, O, P) {
		  var metadataMap = getOrCreateMetadataMap(O, P, false);
		  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
		};
		var ordinaryGetOwnMetadata = function (MetadataKey, O, P) {
		  var metadataMap = getOrCreateMetadataMap(O, P, false);
		  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
		};
		var ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {
		  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
		};
		var ordinaryOwnMetadataKeys = function (target, targetKey) {
		  var metadataMap = getOrCreateMetadataMap(target, targetKey, false);
		  var keys = [];
		  if (metadataMap) metadataMap.forEach(function (_, key) { keys.push(key); });
		  return keys;
		};
		var toMetaKey = function (it) {
		  return it === undefined || typeof it == 'symbol' ? it : String(it);
		};
		var exp = function (O) {
		  $export($export.S, 'Reflect', O);
		};

		module.exports = {
		  store: store,
		  map: getOrCreateMetadataMap,
		  has: ordinaryHasOwnMetadata,
		  get: ordinaryGetOwnMetadata,
		  set: ordinaryDefineOwnMetadata,
		  keys: ordinaryOwnMetadataKeys,
		  key: toMetaKey,
		  exp: exp
		};

		},{"./_export":211,"./_shared":278,"./es6.map":336,"./es6.weak-map":442}],245:[function(require,module,exports){
		var global = require('./_global');
		var macrotask = require('./_task').set;
		var Observer = global.MutationObserver || global.WebKitMutationObserver;
		var process = global.process;
		var Promise = global.Promise;
		var isNode = require('./_cof')(process) == 'process';

		module.exports = function () {
		  var head, last, notify;

		  var flush = function () {
		    var parent, fn;
		    if (isNode && (parent = process.domain)) parent.exit();
		    while (head) {
		      fn = head.fn;
		      head = head.next;
		      try {
		        fn();
		      } catch (e) {
		        if (head) notify();
		        else last = undefined;
		        throw e;
		      }
		    } last = undefined;
		    if (parent) parent.enter();
		  };

		  // Node.js
		  if (isNode) {
		    notify = function () {
		      process.nextTick(flush);
		    };
		  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
		  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
		    var toggle = true;
		    var node = document.createTextNode('');
		    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
		    notify = function () {
		      node.data = toggle = !toggle;
		    };
		  // environments with maybe non-completely correct, but existent Promise
		  } else if (Promise && Promise.resolve) {
		    var promise = Promise.resolve();
		    notify = function () {
		      promise.then(flush);
		    };
		  // for other environments - macrotask based on:
		  // - setImmediate
		  // - MessageChannel
		  // - window.postMessag
		  // - onreadystatechange
		  // - setTimeout
		  } else {
		    notify = function () {
		      // strange IE + webpack dev server bug - use .call(global)
		      macrotask.call(global, flush);
		    };
		  }

		  return function (fn) {
		    var task = { fn: fn, next: undefined };
		    if (last) last.next = task;
		    if (!head) {
		      head = task;
		      notify();
		    } last = task;
		  };
		};

		},{"./_cof":196,"./_global":218,"./_task":288}],246:[function(require,module,exports){
		'use strict';
		// 25.4.1.5 NewPromiseCapability(C)
		var aFunction = require('./_a-function');

		function PromiseCapability(C) {
		  var resolve, reject;
		  this.promise = new C(function ($$resolve, $$reject) {
		    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
		    resolve = $$resolve;
		    reject = $$reject;
		  });
		  this.resolve = aFunction(resolve);
		  this.reject = aFunction(reject);
		}

		module.exports.f = function (C) {
		  return new PromiseCapability(C);
		};

		},{"./_a-function":181}],247:[function(require,module,exports){
		'use strict';
		// 19.1.2.1 Object.assign(target, source, ...)
		var getKeys = require('./_object-keys');
		var gOPS = require('./_object-gops');
		var pIE = require('./_object-pie');
		var toObject = require('./_to-object');
		var IObject = require('./_iobject');
		var $assign = Object.assign;

		// should work with symbols and should have deterministic property order (V8 bug)
		module.exports = !$assign || require('./_fails')(function () {
		  var A = {};
		  var B = {};
		  // eslint-disable-next-line no-undef
		  var S = Symbol();
		  var K = 'abcdefghijklmnopqrst';
		  A[S] = 7;
		  K.split('').forEach(function (k) { B[k] = k; });
		  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
		}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
		  var T = toObject(target);
		  var aLen = arguments.length;
		  var index = 1;
		  var getSymbols = gOPS.f;
		  var isEnum = pIE.f;
		  while (aLen > index) {
		    var S = IObject(arguments[index++]);
		    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
		    var length = keys.length;
		    var j = 0;
		    var key;
		    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
		  } return T;
		} : $assign;

		},{"./_fails":213,"./_iobject":225,"./_object-gops":255,"./_object-keys":258,"./_object-pie":259,"./_to-object":294}],248:[function(require,module,exports){
		// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
		var anObject = require('./_an-object');
		var dPs = require('./_object-dps');
		var enumBugKeys = require('./_enum-bug-keys');
		var IE_PROTO = require('./_shared-key')('IE_PROTO');
		var Empty = function () { /* empty */ };
		var PROTOTYPE = 'prototype';

		// Create object with fake `null` prototype: use iframe Object with cleared prototype
		var createDict = function () {
		  // Thrash, waste and sodomy: IE GC bug
		  var iframe = require('./_dom-create')('iframe');
		  var i = enumBugKeys.length;
		  var lt = '<';
		  var gt = '>';
		  var iframeDocument;
		  iframe.style.display = 'none';
		  require('./_html').appendChild(iframe);
		  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
		  // createDict = iframe.contentWindow.Object;
		  // html.removeChild(iframe);
		  iframeDocument = iframe.contentWindow.document;
		  iframeDocument.open();
		  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
		  iframeDocument.close();
		  createDict = iframeDocument.F;
		  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
		  return createDict();
		};

		module.exports = Object.create || function create(O, Properties) {
		  var result;
		  if (O !== null) {
		    Empty[PROTOTYPE] = anObject(O);
		    result = new Empty();
		    Empty[PROTOTYPE] = null;
		    // add "__proto__" for Object.getPrototypeOf polyfill
		    result[IE_PROTO] = O;
		  } else result = createDict();
		  return Properties === undefined ? result : dPs(result, Properties);
		};

		},{"./_an-object":185,"./_dom-create":208,"./_enum-bug-keys":209,"./_html":221,"./_object-dps":250,"./_shared-key":277}],249:[function(require,module,exports){
		var anObject = require('./_an-object');
		var IE8_DOM_DEFINE = require('./_ie8-dom-define');
		var toPrimitive = require('./_to-primitive');
		var dP = Object.defineProperty;

		exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
		  anObject(O);
		  P = toPrimitive(P, true);
		  anObject(Attributes);
		  if (IE8_DOM_DEFINE) try {
		    return dP(O, P, Attributes);
		  } catch (e) { /* empty */ }
		  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
		  if ('value' in Attributes) O[P] = Attributes.value;
		  return O;
		};

		},{"./_an-object":185,"./_descriptors":207,"./_ie8-dom-define":222,"./_to-primitive":295}],250:[function(require,module,exports){
		var dP = require('./_object-dp');
		var anObject = require('./_an-object');
		var getKeys = require('./_object-keys');

		module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
		  anObject(O);
		  var keys = getKeys(Properties);
		  var length = keys.length;
		  var i = 0;
		  var P;
		  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
		  return O;
		};

		},{"./_an-object":185,"./_descriptors":207,"./_object-dp":249,"./_object-keys":258}],251:[function(require,module,exports){
		'use strict';
		// Forced replacement prototype accessors methods
		module.exports = require('./_library') || !require('./_fails')(function () {
		  var K = Math.random();
		  // In FF throws only define methods
		  // eslint-disable-next-line no-undef, no-useless-call
		  __defineSetter__.call(null, K, function () { /* empty */ });
		  delete require('./_global')[K];
		});

		},{"./_fails":213,"./_global":218,"./_library":237}],252:[function(require,module,exports){
		var pIE = require('./_object-pie');
		var createDesc = require('./_property-desc');
		var toIObject = require('./_to-iobject');
		var toPrimitive = require('./_to-primitive');
		var has = require('./_has');
		var IE8_DOM_DEFINE = require('./_ie8-dom-define');
		var gOPD = Object.getOwnPropertyDescriptor;

		exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
		  O = toIObject(O);
		  P = toPrimitive(P, true);
		  if (IE8_DOM_DEFINE) try {
		    return gOPD(O, P);
		  } catch (e) { /* empty */ }
		  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
		};

		},{"./_descriptors":207,"./_has":219,"./_ie8-dom-define":222,"./_object-pie":259,"./_property-desc":267,"./_to-iobject":292,"./_to-primitive":295}],253:[function(require,module,exports){
		// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
		var toIObject = require('./_to-iobject');
		var gOPN = require('./_object-gopn').f;
		var toString = {}.toString;

		var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
		  ? Object.getOwnPropertyNames(window) : [];

		var getWindowNames = function (it) {
		  try {
		    return gOPN(it);
		  } catch (e) {
		    return windowNames.slice();
		  }
		};

		module.exports.f = function getOwnPropertyNames(it) {
		  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
		};

		},{"./_object-gopn":254,"./_to-iobject":292}],254:[function(require,module,exports){
		// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
		var $keys = require('./_object-keys-internal');
		var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

		exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
		  return $keys(O, hiddenKeys);
		};

		},{"./_enum-bug-keys":209,"./_object-keys-internal":257}],255:[function(require,module,exports){
		exports.f = Object.getOwnPropertySymbols;

		},{}],256:[function(require,module,exports){
		// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
		var has = require('./_has');
		var toObject = require('./_to-object');
		var IE_PROTO = require('./_shared-key')('IE_PROTO');
		var ObjectProto = Object.prototype;

		module.exports = Object.getPrototypeOf || function (O) {
		  O = toObject(O);
		  if (has(O, IE_PROTO)) return O[IE_PROTO];
		  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
		    return O.constructor.prototype;
		  } return O instanceof Object ? ObjectProto : null;
		};

		},{"./_has":219,"./_shared-key":277,"./_to-object":294}],257:[function(require,module,exports){
		var has = require('./_has');
		var toIObject = require('./_to-iobject');
		var arrayIndexOf = require('./_array-includes')(false);
		var IE_PROTO = require('./_shared-key')('IE_PROTO');

		module.exports = function (object, names) {
		  var O = toIObject(object);
		  var i = 0;
		  var result = [];
		  var key;
		  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
		  // Don't enum bug & hidden keys
		  while (names.length > i) if (has(O, key = names[i++])) {
		    ~arrayIndexOf(result, key) || result.push(key);
		  }
		  return result;
		};

		},{"./_array-includes":189,"./_has":219,"./_shared-key":277,"./_to-iobject":292}],258:[function(require,module,exports){
		// 19.1.2.14 / 15.2.3.14 Object.keys(O)
		var $keys = require('./_object-keys-internal');
		var enumBugKeys = require('./_enum-bug-keys');

		module.exports = Object.keys || function keys(O) {
		  return $keys(O, enumBugKeys);
		};

		},{"./_enum-bug-keys":209,"./_object-keys-internal":257}],259:[function(require,module,exports){
		exports.f = {}.propertyIsEnumerable;

		},{}],260:[function(require,module,exports){
		// most Object methods by ES6 should accept primitives
		var $export = require('./_export');
		var core = require('./_core');
		var fails = require('./_fails');
		module.exports = function (KEY, exec) {
		  var fn = (core.Object || {})[KEY] || Object[KEY];
		  var exp = {};
		  exp[KEY] = exec(fn);
		  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
		};

		},{"./_core":201,"./_export":211,"./_fails":213}],261:[function(require,module,exports){
		var getKeys = require('./_object-keys');
		var toIObject = require('./_to-iobject');
		var isEnum = require('./_object-pie').f;
		module.exports = function (isEntries) {
		  return function (it) {
		    var O = toIObject(it);
		    var keys = getKeys(O);
		    var length = keys.length;
		    var i = 0;
		    var result = [];
		    var key;
		    while (length > i) if (isEnum.call(O, key = keys[i++])) {
		      result.push(isEntries ? [key, O[key]] : O[key]);
		    } return result;
		  };
		};

		},{"./_object-keys":258,"./_object-pie":259,"./_to-iobject":292}],262:[function(require,module,exports){
		// all object keys, includes non-enumerable and symbols
		var gOPN = require('./_object-gopn');
		var gOPS = require('./_object-gops');
		var anObject = require('./_an-object');
		var Reflect = require('./_global').Reflect;
		module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
		  var keys = gOPN.f(anObject(it));
		  var getSymbols = gOPS.f;
		  return getSymbols ? keys.concat(getSymbols(it)) : keys;
		};

		},{"./_an-object":185,"./_global":218,"./_object-gopn":254,"./_object-gops":255}],263:[function(require,module,exports){
		var $parseFloat = require('./_global').parseFloat;
		var $trim = require('./_string-trim').trim;

		module.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {
		  var string = $trim(String(str), 3);
		  var result = $parseFloat(string);
		  return result === 0 && string.charAt(0) == '-' ? -0 : result;
		} : $parseFloat;

		},{"./_global":218,"./_string-trim":286,"./_string-ws":287}],264:[function(require,module,exports){
		var $parseInt = require('./_global').parseInt;
		var $trim = require('./_string-trim').trim;
		var ws = require('./_string-ws');
		var hex = /^[-+]?0[xX]/;

		module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
		  var string = $trim(String(str), 3);
		  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
		} : $parseInt;

		},{"./_global":218,"./_string-trim":286,"./_string-ws":287}],265:[function(require,module,exports){
		module.exports = function (exec) {
		  try {
		    return { e: false, v: exec() };
		  } catch (e) {
		    return { e: true, v: e };
		  }
		};

		},{}],266:[function(require,module,exports){
		var anObject = require('./_an-object');
		var isObject = require('./_is-object');
		var newPromiseCapability = require('./_new-promise-capability');

		module.exports = function (C, x) {
		  anObject(C);
		  if (isObject(x) && x.constructor === C) return x;
		  var promiseCapability = newPromiseCapability.f(C);
		  var resolve = promiseCapability.resolve;
		  resolve(x);
		  return promiseCapability.promise;
		};

		},{"./_an-object":185,"./_is-object":229,"./_new-promise-capability":246}],267:[function(require,module,exports){
		module.exports = function (bitmap, value) {
		  return {
		    enumerable: !(bitmap & 1),
		    configurable: !(bitmap & 2),
		    writable: !(bitmap & 4),
		    value: value
		  };
		};

		},{}],268:[function(require,module,exports){
		var redefine = require('./_redefine');
		module.exports = function (target, src, safe) {
		  for (var key in src) redefine(target, key, src[key], safe);
		  return target;
		};

		},{"./_redefine":269}],269:[function(require,module,exports){
		var global = require('./_global');
		var hide = require('./_hide');
		var has = require('./_has');
		var SRC = require('./_uid')('src');
		var TO_STRING = 'toString';
		var $toString = Function[TO_STRING];
		var TPL = ('' + $toString).split(TO_STRING);

		require('./_core').inspectSource = function (it) {
		  return $toString.call(it);
		};

		(module.exports = function (O, key, val, safe) {
		  var isFunction = typeof val == 'function';
		  if (isFunction) has(val, 'name') || hide(val, 'name', key);
		  if (O[key] === val) return;
		  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
		  if (O === global) {
		    O[key] = val;
		  } else if (!safe) {
		    delete O[key];
		    hide(O, key, val);
		  } else if (O[key]) {
		    O[key] = val;
		  } else {
		    hide(O, key, val);
		  }
		// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
		})(Function.prototype, TO_STRING, function toString() {
		  return typeof this == 'function' && this[SRC] || $toString.call(this);
		});

		},{"./_core":201,"./_global":218,"./_has":219,"./_hide":220,"./_uid":299}],270:[function(require,module,exports){
		module.exports = function (regExp, replace) {
		  var replacer = replace === Object(replace) ? function (part) {
		    return replace[part];
		  } : replace;
		  return function (it) {
		    return String(it).replace(regExp, replacer);
		  };
		};

		},{}],271:[function(require,module,exports){
		// 7.2.9 SameValue(x, y)
		module.exports = Object.is || function is(x, y) {
		  // eslint-disable-next-line no-self-compare
		  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
		};

		},{}],272:[function(require,module,exports){
		'use strict';
		// https://tc39.github.io/proposal-setmap-offrom/
		var $export = require('./_export');
		var aFunction = require('./_a-function');
		var ctx = require('./_ctx');
		var forOf = require('./_for-of');

		module.exports = function (COLLECTION) {
		  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
		    var mapFn = arguments[1];
		    var mapping, A, n, cb;
		    aFunction(this);
		    mapping = mapFn !== undefined;
		    if (mapping) aFunction(mapFn);
		    if (source == undefined) return new this();
		    A = [];
		    if (mapping) {
		      n = 0;
		      cb = ctx(mapFn, arguments[2], 2);
		      forOf(source, false, function (nextItem) {
		        A.push(cb(nextItem, n++));
		      });
		    } else {
		      forOf(source, false, A.push, A);
		    }
		    return new this(A);
		  } });
		};

		},{"./_a-function":181,"./_ctx":203,"./_export":211,"./_for-of":217}],273:[function(require,module,exports){
		'use strict';
		// https://tc39.github.io/proposal-setmap-offrom/
		var $export = require('./_export');

		module.exports = function (COLLECTION) {
		  $export($export.S, COLLECTION, { of: function of() {
		    var length = arguments.length;
		    var A = new Array(length);
		    while (length--) A[length] = arguments[length];
		    return new this(A);
		  } });
		};

		},{"./_export":211}],274:[function(require,module,exports){
		// Works with __proto__ only. Old v8 can't work with null proto objects.
		/* eslint-disable no-proto */
		var isObject = require('./_is-object');
		var anObject = require('./_an-object');
		var check = function (O, proto) {
		  anObject(O);
		  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
		};
		module.exports = {
		  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
		    function (test, buggy, set) {
		      try {
		        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
		        set(test, []);
		        buggy = !(test instanceof Array);
		      } catch (e) { buggy = true; }
		      return function setPrototypeOf(O, proto) {
		        check(O, proto);
		        if (buggy) O.__proto__ = proto;
		        else set(O, proto);
		        return O;
		      };
		    }({}, false) : undefined),
		  check: check
		};

		},{"./_an-object":185,"./_ctx":203,"./_is-object":229,"./_object-gopd":252}],275:[function(require,module,exports){
		'use strict';
		var global = require('./_global');
		var dP = require('./_object-dp');
		var DESCRIPTORS = require('./_descriptors');
		var SPECIES = require('./_wks')('species');

		module.exports = function (KEY) {
		  var C = global[KEY];
		  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
		    configurable: true,
		    get: function () { return this; }
		  });
		};

		},{"./_descriptors":207,"./_global":218,"./_object-dp":249,"./_wks":304}],276:[function(require,module,exports){
		var def = require('./_object-dp').f;
		var has = require('./_has');
		var TAG = require('./_wks')('toStringTag');

		module.exports = function (it, tag, stat) {
		  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
		};

		},{"./_has":219,"./_object-dp":249,"./_wks":304}],277:[function(require,module,exports){
		var shared = require('./_shared')('keys');
		var uid = require('./_uid');
		module.exports = function (key) {
		  return shared[key] || (shared[key] = uid(key));
		};

		},{"./_shared":278,"./_uid":299}],278:[function(require,module,exports){
		var global = require('./_global');
		var SHARED = '__core-js_shared__';
		var store = global[SHARED] || (global[SHARED] = {});
		module.exports = function (key) {
		  return store[key] || (store[key] = {});
		};

		},{"./_global":218}],279:[function(require,module,exports){
		// 7.3.20 SpeciesConstructor(O, defaultConstructor)
		var anObject = require('./_an-object');
		var aFunction = require('./_a-function');
		var SPECIES = require('./_wks')('species');
		module.exports = function (O, D) {
		  var C = anObject(O).constructor;
		  var S;
		  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
		};

		},{"./_a-function":181,"./_an-object":185,"./_wks":304}],280:[function(require,module,exports){
		'use strict';
		var fails = require('./_fails');

		module.exports = function (method, arg) {
		  return !!method && fails(function () {
		    // eslint-disable-next-line no-useless-call
		    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
		  });
		};

		},{"./_fails":213}],281:[function(require,module,exports){
		var toInteger = require('./_to-integer');
		var defined = require('./_defined');
		// true  -> String#at
		// false -> String#codePointAt
		module.exports = function (TO_STRING) {
		  return function (that, pos) {
		    var s = String(defined(that));
		    var i = toInteger(pos);
		    var l = s.length;
		    var a, b;
		    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
		    a = s.charCodeAt(i);
		    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
		      ? TO_STRING ? s.charAt(i) : a
		      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
		  };
		};

		},{"./_defined":206,"./_to-integer":291}],282:[function(require,module,exports){
		// helper for String#{startsWith, endsWith, includes}
		var isRegExp = require('./_is-regexp');
		var defined = require('./_defined');

		module.exports = function (that, searchString, NAME) {
		  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
		  return String(defined(that));
		};

		},{"./_defined":206,"./_is-regexp":230}],283:[function(require,module,exports){
		var $export = require('./_export');
		var fails = require('./_fails');
		var defined = require('./_defined');
		var quot = /"/g;
		// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
		var createHTML = function (string, tag, attribute, value) {
		  var S = String(defined(string));
		  var p1 = '<' + tag;
		  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
		  return p1 + '>' + S + '</' + tag + '>';
		};
		module.exports = function (NAME, exec) {
		  var O = {};
		  O[NAME] = exec(createHTML);
		  $export($export.P + $export.F * fails(function () {
		    var test = ''[NAME]('"');
		    return test !== test.toLowerCase() || test.split('"').length > 3;
		  }), 'String', O);
		};

		},{"./_defined":206,"./_export":211,"./_fails":213}],284:[function(require,module,exports){
		// https://github.com/tc39/proposal-string-pad-start-end
		var toLength = require('./_to-length');
		var repeat = require('./_string-repeat');
		var defined = require('./_defined');

		module.exports = function (that, maxLength, fillString, left) {
		  var S = String(defined(that));
		  var stringLength = S.length;
		  var fillStr = fillString === undefined ? ' ' : String(fillString);
		  var intMaxLength = toLength(maxLength);
		  if (intMaxLength <= stringLength || fillStr == '') return S;
		  var fillLen = intMaxLength - stringLength;
		  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
		  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
		  return left ? stringFiller + S : S + stringFiller;
		};

		},{"./_defined":206,"./_string-repeat":285,"./_to-length":293}],285:[function(require,module,exports){
		'use strict';
		var toInteger = require('./_to-integer');
		var defined = require('./_defined');

		module.exports = function repeat(count) {
		  var str = String(defined(this));
		  var res = '';
		  var n = toInteger(count);
		  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
		  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
		  return res;
		};

		},{"./_defined":206,"./_to-integer":291}],286:[function(require,module,exports){
		var $export = require('./_export');
		var defined = require('./_defined');
		var fails = require('./_fails');
		var spaces = require('./_string-ws');
		var space = '[' + spaces + ']';
		var non = '\u200b\u0085';
		var ltrim = RegExp('^' + space + space + '*');
		var rtrim = RegExp(space + space + '*$');

		var exporter = function (KEY, exec, ALIAS) {
		  var exp = {};
		  var FORCE = fails(function () {
		    return !!spaces[KEY]() || non[KEY]() != non;
		  });
		  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
		  if (ALIAS) exp[ALIAS] = fn;
		  $export($export.P + $export.F * FORCE, 'String', exp);
		};

		// 1 -> String#trimLeft
		// 2 -> String#trimRight
		// 3 -> String#trim
		var trim = exporter.trim = function (string, TYPE) {
		  string = String(defined(string));
		  if (TYPE & 1) string = string.replace(ltrim, '');
		  if (TYPE & 2) string = string.replace(rtrim, '');
		  return string;
		};

		module.exports = exporter;

		},{"./_defined":206,"./_export":211,"./_fails":213,"./_string-ws":287}],287:[function(require,module,exports){
		module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
		  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

		},{}],288:[function(require,module,exports){
		var ctx = require('./_ctx');
		var invoke = require('./_invoke');
		var html = require('./_html');
		var cel = require('./_dom-create');
		var global = require('./_global');
		var process = global.process;
		var setTask = global.setImmediate;
		var clearTask = global.clearImmediate;
		var MessageChannel = global.MessageChannel;
		var Dispatch = global.Dispatch;
		var counter = 0;
		var queue = {};
		var ONREADYSTATECHANGE = 'onreadystatechange';
		var defer, channel, port;
		var run = function () {
		  var id = +this;
		  // eslint-disable-next-line no-prototype-builtins
		  if (queue.hasOwnProperty(id)) {
		    var fn = queue[id];
		    delete queue[id];
		    fn();
		  }
		};
		var listener = function (event) {
		  run.call(event.data);
		};
		// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
		if (!setTask || !clearTask) {
		  setTask = function setImmediate(fn) {
		    var args = [];
		    var i = 1;
		    while (arguments.length > i) args.push(arguments[i++]);
		    queue[++counter] = function () {
		      // eslint-disable-next-line no-new-func
		      invoke(typeof fn == 'function' ? fn : Function(fn), args);
		    };
		    defer(counter);
		    return counter;
		  };
		  clearTask = function clearImmediate(id) {
		    delete queue[id];
		  };
		  // Node.js 0.8-
		  if (require('./_cof')(process) == 'process') {
		    defer = function (id) {
		      process.nextTick(ctx(run, id, 1));
		    };
		  // Sphere (JS game engine) Dispatch API
		  } else if (Dispatch && Dispatch.now) {
		    defer = function (id) {
		      Dispatch.now(ctx(run, id, 1));
		    };
		  // Browsers with MessageChannel, includes WebWorkers
		  } else if (MessageChannel) {
		    channel = new MessageChannel();
		    port = channel.port2;
		    channel.port1.onmessage = listener;
		    defer = ctx(port.postMessage, port, 1);
		  // Browsers with postMessage, skip WebWorkers
		  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
		  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
		    defer = function (id) {
		      global.postMessage(id + '', '*');
		    };
		    global.addEventListener('message', listener, false);
		  // IE8-
		  } else if (ONREADYSTATECHANGE in cel('script')) {
		    defer = function (id) {
		      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
		        html.removeChild(this);
		        run.call(id);
		      };
		    };
		  // Rest old browsers
		  } else {
		    defer = function (id) {
		      setTimeout(ctx(run, id, 1), 0);
		    };
		  }
		}
		module.exports = {
		  set: setTask,
		  clear: clearTask
		};

		},{"./_cof":196,"./_ctx":203,"./_dom-create":208,"./_global":218,"./_html":221,"./_invoke":224}],289:[function(require,module,exports){
		var toInteger = require('./_to-integer');
		var max = Math.max;
		var min = Math.min;
		module.exports = function (index, length) {
		  index = toInteger(index);
		  return index < 0 ? max(index + length, 0) : min(index, length);
		};

		},{"./_to-integer":291}],290:[function(require,module,exports){
		// https://tc39.github.io/ecma262/#sec-toindex
		var toInteger = require('./_to-integer');
		var toLength = require('./_to-length');
		module.exports = function (it) {
		  if (it === undefined) return 0;
		  var number = toInteger(it);
		  var length = toLength(number);
		  if (number !== length) throw RangeError('Wrong length!');
		  return length;
		};

		},{"./_to-integer":291,"./_to-length":293}],291:[function(require,module,exports){
		// 7.1.4 ToInteger
		var ceil = Math.ceil;
		var floor = Math.floor;
		module.exports = function (it) {
		  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
		};

		},{}],292:[function(require,module,exports){
		// to indexed object, toObject with fallback for non-array-like ES3 strings
		var IObject = require('./_iobject');
		var defined = require('./_defined');
		module.exports = function (it) {
		  return IObject(defined(it));
		};

		},{"./_defined":206,"./_iobject":225}],293:[function(require,module,exports){
		// 7.1.15 ToLength
		var toInteger = require('./_to-integer');
		var min = Math.min;
		module.exports = function (it) {
		  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
		};

		},{"./_to-integer":291}],294:[function(require,module,exports){
		// 7.1.13 ToObject(argument)
		var defined = require('./_defined');
		module.exports = function (it) {
		  return Object(defined(it));
		};

		},{"./_defined":206}],295:[function(require,module,exports){
		// 7.1.1 ToPrimitive(input [, PreferredType])
		var isObject = require('./_is-object');
		// instead of the ES6 spec version, we didn't implement @@toPrimitive case
		// and the second argument - flag - preferred type is a string
		module.exports = function (it, S) {
		  if (!isObject(it)) return it;
		  var fn, val;
		  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
		  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
		  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
		  throw TypeError("Can't convert object to primitive value");
		};

		},{"./_is-object":229}],296:[function(require,module,exports){
		'use strict';
		if (require('./_descriptors')) {
		  var LIBRARY = require('./_library');
		  var global = require('./_global');
		  var fails = require('./_fails');
		  var $export = require('./_export');
		  var $typed = require('./_typed');
		  var $buffer = require('./_typed-buffer');
		  var ctx = require('./_ctx');
		  var anInstance = require('./_an-instance');
		  var propertyDesc = require('./_property-desc');
		  var hide = require('./_hide');
		  var redefineAll = require('./_redefine-all');
		  var toInteger = require('./_to-integer');
		  var toLength = require('./_to-length');
		  var toIndex = require('./_to-index');
		  var toAbsoluteIndex = require('./_to-absolute-index');
		  var toPrimitive = require('./_to-primitive');
		  var has = require('./_has');
		  var classof = require('./_classof');
		  var isObject = require('./_is-object');
		  var toObject = require('./_to-object');
		  var isArrayIter = require('./_is-array-iter');
		  var create = require('./_object-create');
		  var getPrototypeOf = require('./_object-gpo');
		  var gOPN = require('./_object-gopn').f;
		  var getIterFn = require('./core.get-iterator-method');
		  var uid = require('./_uid');
		  var wks = require('./_wks');
		  var createArrayMethod = require('./_array-methods');
		  var createArrayIncludes = require('./_array-includes');
		  var speciesConstructor = require('./_species-constructor');
		  var ArrayIterators = require('./es6.array.iterator');
		  var Iterators = require('./_iterators');
		  var $iterDetect = require('./_iter-detect');
		  var setSpecies = require('./_set-species');
		  var arrayFill = require('./_array-fill');
		  var arrayCopyWithin = require('./_array-copy-within');
		  var $DP = require('./_object-dp');
		  var $GOPD = require('./_object-gopd');
		  var dP = $DP.f;
		  var gOPD = $GOPD.f;
		  var RangeError = global.RangeError;
		  var TypeError = global.TypeError;
		  var Uint8Array = global.Uint8Array;
		  var ARRAY_BUFFER = 'ArrayBuffer';
		  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
		  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
		  var PROTOTYPE = 'prototype';
		  var ArrayProto = Array[PROTOTYPE];
		  var $ArrayBuffer = $buffer.ArrayBuffer;
		  var $DataView = $buffer.DataView;
		  var arrayForEach = createArrayMethod(0);
		  var arrayFilter = createArrayMethod(2);
		  var arraySome = createArrayMethod(3);
		  var arrayEvery = createArrayMethod(4);
		  var arrayFind = createArrayMethod(5);
		  var arrayFindIndex = createArrayMethod(6);
		  var arrayIncludes = createArrayIncludes(true);
		  var arrayIndexOf = createArrayIncludes(false);
		  var arrayValues = ArrayIterators.values;
		  var arrayKeys = ArrayIterators.keys;
		  var arrayEntries = ArrayIterators.entries;
		  var arrayLastIndexOf = ArrayProto.lastIndexOf;
		  var arrayReduce = ArrayProto.reduce;
		  var arrayReduceRight = ArrayProto.reduceRight;
		  var arrayJoin = ArrayProto.join;
		  var arraySort = ArrayProto.sort;
		  var arraySlice = ArrayProto.slice;
		  var arrayToString = ArrayProto.toString;
		  var arrayToLocaleString = ArrayProto.toLocaleString;
		  var ITERATOR = wks('iterator');
		  var TAG = wks('toStringTag');
		  var TYPED_CONSTRUCTOR = uid('typed_constructor');
		  var DEF_CONSTRUCTOR = uid('def_constructor');
		  var ALL_CONSTRUCTORS = $typed.CONSTR;
		  var TYPED_ARRAY = $typed.TYPED;
		  var VIEW = $typed.VIEW;
		  var WRONG_LENGTH = 'Wrong length!';

		  var $map = createArrayMethod(1, function (O, length) {
		    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
		  });

		  var LITTLE_ENDIAN = fails(function () {
		    // eslint-disable-next-line no-undef
		    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
		  });

		  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
		    new Uint8Array(1).set({});
		  });

		  var toOffset = function (it, BYTES) {
		    var offset = toInteger(it);
		    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
		    return offset;
		  };

		  var validate = function (it) {
		    if (isObject(it) && TYPED_ARRAY in it) return it;
		    throw TypeError(it + ' is not a typed array!');
		  };

		  var allocate = function (C, length) {
		    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
		      throw TypeError('It is not a typed array constructor!');
		    } return new C(length);
		  };

		  var speciesFromList = function (O, list) {
		    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
		  };

		  var fromList = function (C, list) {
		    var index = 0;
		    var length = list.length;
		    var result = allocate(C, length);
		    while (length > index) result[index] = list[index++];
		    return result;
		  };

		  var addGetter = function (it, key, internal) {
		    dP(it, key, { get: function () { return this._d[internal]; } });
		  };

		  var $from = function from(source /* , mapfn, thisArg */) {
		    var O = toObject(source);
		    var aLen = arguments.length;
		    var mapfn = aLen > 1 ? arguments[1] : undefined;
		    var mapping = mapfn !== undefined;
		    var iterFn = getIterFn(O);
		    var i, length, values, result, step, iterator;
		    if (iterFn != undefined && !isArrayIter(iterFn)) {
		      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
		        values.push(step.value);
		      } O = values;
		    }
		    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
		    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
		      result[i] = mapping ? mapfn(O[i], i) : O[i];
		    }
		    return result;
		  };

		  var $of = function of(/* ...items */) {
		    var index = 0;
		    var length = arguments.length;
		    var result = allocate(this, length);
		    while (length > index) result[index] = arguments[index++];
		    return result;
		  };

		  // iOS Safari 6.x fails here
		  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

		  var $toLocaleString = function toLocaleString() {
		    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
		  };

		  var proto = {
		    copyWithin: function copyWithin(target, start /* , end */) {
		      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
		    },
		    every: function every(callbackfn /* , thisArg */) {
		      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
		      return arrayFill.apply(validate(this), arguments);
		    },
		    filter: function filter(callbackfn /* , thisArg */) {
		      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
		        arguments.length > 1 ? arguments[1] : undefined));
		    },
		    find: function find(predicate /* , thisArg */) {
		      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    findIndex: function findIndex(predicate /* , thisArg */) {
		      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    forEach: function forEach(callbackfn /* , thisArg */) {
		      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    indexOf: function indexOf(searchElement /* , fromIndex */) {
		      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    includes: function includes(searchElement /* , fromIndex */) {
		      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    join: function join(separator) { // eslint-disable-line no-unused-vars
		      return arrayJoin.apply(validate(this), arguments);
		    },
		    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
		      return arrayLastIndexOf.apply(validate(this), arguments);
		    },
		    map: function map(mapfn /* , thisArg */) {
		      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
		      return arrayReduce.apply(validate(this), arguments);
		    },
		    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
		      return arrayReduceRight.apply(validate(this), arguments);
		    },
		    reverse: function reverse() {
		      var that = this;
		      var length = validate(that).length;
		      var middle = Math.floor(length / 2);
		      var index = 0;
		      var value;
		      while (index < middle) {
		        value = that[index];
		        that[index++] = that[--length];
		        that[length] = value;
		      } return that;
		    },
		    some: function some(callbackfn /* , thisArg */) {
		      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
		    },
		    sort: function sort(comparefn) {
		      return arraySort.call(validate(this), comparefn);
		    },
		    subarray: function subarray(begin, end) {
		      var O = validate(this);
		      var length = O.length;
		      var $begin = toAbsoluteIndex(begin, length);
		      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
		        O.buffer,
		        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
		        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
		      );
		    }
		  };

		  var $slice = function slice(start, end) {
		    return speciesFromList(this, arraySlice.call(validate(this), start, end));
		  };

		  var $set = function set(arrayLike /* , offset */) {
		    validate(this);
		    var offset = toOffset(arguments[1], 1);
		    var length = this.length;
		    var src = toObject(arrayLike);
		    var len = toLength(src.length);
		    var index = 0;
		    if (len + offset > length) throw RangeError(WRONG_LENGTH);
		    while (index < len) this[offset + index] = src[index++];
		  };

		  var $iterators = {
		    entries: function entries() {
		      return arrayEntries.call(validate(this));
		    },
		    keys: function keys() {
		      return arrayKeys.call(validate(this));
		    },
		    values: function values() {
		      return arrayValues.call(validate(this));
		    }
		  };

		  var isTAIndex = function (target, key) {
		    return isObject(target)
		      && target[TYPED_ARRAY]
		      && typeof key != 'symbol'
		      && key in target
		      && String(+key) == String(key);
		  };
		  var $getDesc = function getOwnPropertyDescriptor(target, key) {
		    return isTAIndex(target, key = toPrimitive(key, true))
		      ? propertyDesc(2, target[key])
		      : gOPD(target, key);
		  };
		  var $setDesc = function defineProperty(target, key, desc) {
		    if (isTAIndex(target, key = toPrimitive(key, true))
		      && isObject(desc)
		      && has(desc, 'value')
		      && !has(desc, 'get')
		      && !has(desc, 'set')
		      // TODO: add validation descriptor w/o calling accessors
		      && !desc.configurable
		      && (!has(desc, 'writable') || desc.writable)
		      && (!has(desc, 'enumerable') || desc.enumerable)
		    ) {
		      target[key] = desc.value;
		      return target;
		    } return dP(target, key, desc);
		  };

		  if (!ALL_CONSTRUCTORS) {
		    $GOPD.f = $getDesc;
		    $DP.f = $setDesc;
		  }

		  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
		    getOwnPropertyDescriptor: $getDesc,
		    defineProperty: $setDesc
		  });

		  if (fails(function () { arrayToString.call({}); })) {
		    arrayToString = arrayToLocaleString = function toString() {
		      return arrayJoin.call(this);
		    };
		  }

		  var $TypedArrayPrototype$ = redefineAll({}, proto);
		  redefineAll($TypedArrayPrototype$, $iterators);
		  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
		  redefineAll($TypedArrayPrototype$, {
		    slice: $slice,
		    set: $set,
		    constructor: function () { /* noop */ },
		    toString: arrayToString,
		    toLocaleString: $toLocaleString
		  });
		  addGetter($TypedArrayPrototype$, 'buffer', 'b');
		  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
		  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
		  addGetter($TypedArrayPrototype$, 'length', 'e');
		  dP($TypedArrayPrototype$, TAG, {
		    get: function () { return this[TYPED_ARRAY]; }
		  });

		  // eslint-disable-next-line max-statements
		  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
		    CLAMPED = !!CLAMPED;
		    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
		    var GETTER = 'get' + KEY;
		    var SETTER = 'set' + KEY;
		    var TypedArray = global[NAME];
		    var Base = TypedArray || {};
		    var TAC = TypedArray && getPrototypeOf(TypedArray);
		    var FORCED = !TypedArray || !$typed.ABV;
		    var O = {};
		    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
		    var getter = function (that, index) {
		      var data = that._d;
		      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
		    };
		    var setter = function (that, index, value) {
		      var data = that._d;
		      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
		      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
		    };
		    var addElement = function (that, index) {
		      dP(that, index, {
		        get: function () {
		          return getter(this, index);
		        },
		        set: function (value) {
		          return setter(this, index, value);
		        },
		        enumerable: true
		      });
		    };
		    if (FORCED) {
		      TypedArray = wrapper(function (that, data, $offset, $length) {
		        anInstance(that, TypedArray, NAME, '_d');
		        var index = 0;
		        var offset = 0;
		        var buffer, byteLength, length, klass;
		        if (!isObject(data)) {
		          length = toIndex(data);
		          byteLength = length * BYTES;
		          buffer = new $ArrayBuffer(byteLength);
		        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
		          buffer = data;
		          offset = toOffset($offset, BYTES);
		          var $len = data.byteLength;
		          if ($length === undefined) {
		            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
		            byteLength = $len - offset;
		            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
		          } else {
		            byteLength = toLength($length) * BYTES;
		            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
		          }
		          length = byteLength / BYTES;
		        } else if (TYPED_ARRAY in data) {
		          return fromList(TypedArray, data);
		        } else {
		          return $from.call(TypedArray, data);
		        }
		        hide(that, '_d', {
		          b: buffer,
		          o: offset,
		          l: byteLength,
		          e: length,
		          v: new $DataView(buffer)
		        });
		        while (index < length) addElement(that, index++);
		      });
		      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
		      hide(TypedArrayPrototype, 'constructor', TypedArray);
		    } else if (!fails(function () {
		      TypedArray(1);
		    }) || !fails(function () {
		      new TypedArray(-1); // eslint-disable-line no-new
		    }) || !$iterDetect(function (iter) {
		      new TypedArray(); // eslint-disable-line no-new
		      new TypedArray(null); // eslint-disable-line no-new
		      new TypedArray(1.5); // eslint-disable-line no-new
		      new TypedArray(iter); // eslint-disable-line no-new
		    }, true)) {
		      TypedArray = wrapper(function (that, data, $offset, $length) {
		        anInstance(that, TypedArray, NAME);
		        var klass;
		        // `ws` module bug, temporarily remove validation length for Uint8Array
		        // https://github.com/websockets/ws/pull/645
		        if (!isObject(data)) return new Base(toIndex(data));
		        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
		          return $length !== undefined
		            ? new Base(data, toOffset($offset, BYTES), $length)
		            : $offset !== undefined
		              ? new Base(data, toOffset($offset, BYTES))
		              : new Base(data);
		        }
		        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
		        return $from.call(TypedArray, data);
		      });
		      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
		        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
		      });
		      TypedArray[PROTOTYPE] = TypedArrayPrototype;
		      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
		    }
		    var $nativeIterator = TypedArrayPrototype[ITERATOR];
		    var CORRECT_ITER_NAME = !!$nativeIterator
		      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
		    var $iterator = $iterators.values;
		    hide(TypedArray, TYPED_CONSTRUCTOR, true);
		    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
		    hide(TypedArrayPrototype, VIEW, true);
		    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

		    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
		      dP(TypedArrayPrototype, TAG, {
		        get: function () { return NAME; }
		      });
		    }

		    O[NAME] = TypedArray;

		    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

		    $export($export.S, NAME, {
		      BYTES_PER_ELEMENT: BYTES
		    });

		    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
		      from: $from,
		      of: $of
		    });

		    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

		    $export($export.P, NAME, proto);

		    setSpecies(NAME);

		    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

		    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

		    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

		    $export($export.P + $export.F * fails(function () {
		      new TypedArray(1).slice();
		    }), NAME, { slice: $slice });

		    $export($export.P + $export.F * (fails(function () {
		      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
		    }) || !fails(function () {
		      TypedArrayPrototype.toLocaleString.call([1, 2]);
		    })), NAME, { toLocaleString: $toLocaleString });

		    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
		    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
		  };
		} else module.exports = function () { /* empty */ };

		},{"./_an-instance":184,"./_array-copy-within":186,"./_array-fill":187,"./_array-includes":189,"./_array-methods":190,"./_classof":195,"./_ctx":203,"./_descriptors":207,"./_export":211,"./_fails":213,"./_global":218,"./_has":219,"./_hide":220,"./_is-array-iter":226,"./_is-object":229,"./_iter-detect":234,"./_iterators":236,"./_library":237,"./_object-create":248,"./_object-dp":249,"./_object-gopd":252,"./_object-gopn":254,"./_object-gpo":256,"./_property-desc":267,"./_redefine-all":268,"./_set-species":275,"./_species-constructor":279,"./_to-absolute-index":289,"./_to-index":290,"./_to-integer":291,"./_to-length":293,"./_to-object":294,"./_to-primitive":295,"./_typed":298,"./_typed-buffer":297,"./_uid":299,"./_wks":304,"./core.get-iterator-method":305,"./es6.array.iterator":317}],297:[function(require,module,exports){
		'use strict';
		var global = require('./_global');
		var DESCRIPTORS = require('./_descriptors');
		var LIBRARY = require('./_library');
		var $typed = require('./_typed');
		var hide = require('./_hide');
		var redefineAll = require('./_redefine-all');
		var fails = require('./_fails');
		var anInstance = require('./_an-instance');
		var toInteger = require('./_to-integer');
		var toLength = require('./_to-length');
		var toIndex = require('./_to-index');
		var gOPN = require('./_object-gopn').f;
		var dP = require('./_object-dp').f;
		var arrayFill = require('./_array-fill');
		var setToStringTag = require('./_set-to-string-tag');
		var ARRAY_BUFFER = 'ArrayBuffer';
		var DATA_VIEW = 'DataView';
		var PROTOTYPE = 'prototype';
		var WRONG_LENGTH = 'Wrong length!';
		var WRONG_INDEX = 'Wrong index!';
		var $ArrayBuffer = global[ARRAY_BUFFER];
		var $DataView = global[DATA_VIEW];
		var Math = global.Math;
		var RangeError = global.RangeError;
		// eslint-disable-next-line no-shadow-restricted-names
		var Infinity = global.Infinity;
		var BaseBuffer = $ArrayBuffer;
		var abs = Math.abs;
		var pow = Math.pow;
		var floor = Math.floor;
		var log = Math.log;
		var LN2 = Math.LN2;
		var BUFFER = 'buffer';
		var BYTE_LENGTH = 'byteLength';
		var BYTE_OFFSET = 'byteOffset';
		var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
		var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
		var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

		// IEEE754 conversions based on https://github.com/feross/ieee754
		function packIEEE754(value, mLen, nBytes) {
		  var buffer = new Array(nBytes);
		  var eLen = nBytes * 8 - mLen - 1;
		  var eMax = (1 << eLen) - 1;
		  var eBias = eMax >> 1;
		  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
		  var i = 0;
		  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
		  var e, m, c;
		  value = abs(value);
		  // eslint-disable-next-line no-self-compare
		  if (value != value || value === Infinity) {
		    // eslint-disable-next-line no-self-compare
		    m = value != value ? 1 : 0;
		    e = eMax;
		  } else {
		    e = floor(log(value) / LN2);
		    if (value * (c = pow(2, -e)) < 1) {
		      e--;
		      c *= 2;
		    }
		    if (e + eBias >= 1) {
		      value += rt / c;
		    } else {
		      value += rt * pow(2, 1 - eBias);
		    }
		    if (value * c >= 2) {
		      e++;
		      c /= 2;
		    }
		    if (e + eBias >= eMax) {
		      m = 0;
		      e = eMax;
		    } else if (e + eBias >= 1) {
		      m = (value * c - 1) * pow(2, mLen);
		      e = e + eBias;
		    } else {
		      m = value * pow(2, eBias - 1) * pow(2, mLen);
		      e = 0;
		    }
		  }
		  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
		  e = e << mLen | m;
		  eLen += mLen;
		  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
		  buffer[--i] |= s * 128;
		  return buffer;
		}
		function unpackIEEE754(buffer, mLen, nBytes) {
		  var eLen = nBytes * 8 - mLen - 1;
		  var eMax = (1 << eLen) - 1;
		  var eBias = eMax >> 1;
		  var nBits = eLen - 7;
		  var i = nBytes - 1;
		  var s = buffer[i--];
		  var e = s & 127;
		  var m;
		  s >>= 7;
		  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
		  m = e & (1 << -nBits) - 1;
		  e >>= -nBits;
		  nBits += mLen;
		  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
		  if (e === 0) {
		    e = 1 - eBias;
		  } else if (e === eMax) {
		    return m ? NaN : s ? -Infinity : Infinity;
		  } else {
		    m = m + pow(2, mLen);
		    e = e - eBias;
		  } return (s ? -1 : 1) * m * pow(2, e - mLen);
		}

		function unpackI32(bytes) {
		  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
		}
		function packI8(it) {
		  return [it & 0xff];
		}
		function packI16(it) {
		  return [it & 0xff, it >> 8 & 0xff];
		}
		function packI32(it) {
		  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
		}
		function packF64(it) {
		  return packIEEE754(it, 52, 8);
		}
		function packF32(it) {
		  return packIEEE754(it, 23, 4);
		}

		function addGetter(C, key, internal) {
		  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
		}

		function get(view, bytes, index, isLittleEndian) {
		  var numIndex = +index;
		  var intIndex = toIndex(numIndex);
		  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
		  var store = view[$BUFFER]._b;
		  var start = intIndex + view[$OFFSET];
		  var pack = store.slice(start, start + bytes);
		  return isLittleEndian ? pack : pack.reverse();
		}
		function set(view, bytes, index, conversion, value, isLittleEndian) {
		  var numIndex = +index;
		  var intIndex = toIndex(numIndex);
		  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
		  var store = view[$BUFFER]._b;
		  var start = intIndex + view[$OFFSET];
		  var pack = conversion(+value);
		  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
		}

		if (!$typed.ABV) {
		  $ArrayBuffer = function ArrayBuffer(length) {
		    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
		    var byteLength = toIndex(length);
		    this._b = arrayFill.call(new Array(byteLength), 0);
		    this[$LENGTH] = byteLength;
		  };

		  $DataView = function DataView(buffer, byteOffset, byteLength) {
		    anInstance(this, $DataView, DATA_VIEW);
		    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
		    var bufferLength = buffer[$LENGTH];
		    var offset = toInteger(byteOffset);
		    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
		    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
		    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
		    this[$BUFFER] = buffer;
		    this[$OFFSET] = offset;
		    this[$LENGTH] = byteLength;
		  };

		  if (DESCRIPTORS) {
		    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
		    addGetter($DataView, BUFFER, '_b');
		    addGetter($DataView, BYTE_LENGTH, '_l');
		    addGetter($DataView, BYTE_OFFSET, '_o');
		  }

		  redefineAll($DataView[PROTOTYPE], {
		    getInt8: function getInt8(byteOffset) {
		      return get(this, 1, byteOffset)[0] << 24 >> 24;
		    },
		    getUint8: function getUint8(byteOffset) {
		      return get(this, 1, byteOffset)[0];
		    },
		    getInt16: function getInt16(byteOffset /* , littleEndian */) {
		      var bytes = get(this, 2, byteOffset, arguments[1]);
		      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
		    },
		    getUint16: function getUint16(byteOffset /* , littleEndian */) {
		      var bytes = get(this, 2, byteOffset, arguments[1]);
		      return bytes[1] << 8 | bytes[0];
		    },
		    getInt32: function getInt32(byteOffset /* , littleEndian */) {
		      return unpackI32(get(this, 4, byteOffset, arguments[1]));
		    },
		    getUint32: function getUint32(byteOffset /* , littleEndian */) {
		      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
		    },
		    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
		      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
		    },
		    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
		      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
		    },
		    setInt8: function setInt8(byteOffset, value) {
		      set(this, 1, byteOffset, packI8, value);
		    },
		    setUint8: function setUint8(byteOffset, value) {
		      set(this, 1, byteOffset, packI8, value);
		    },
		    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
		      set(this, 2, byteOffset, packI16, value, arguments[2]);
		    },
		    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
		      set(this, 2, byteOffset, packI16, value, arguments[2]);
		    },
		    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
		      set(this, 4, byteOffset, packI32, value, arguments[2]);
		    },
		    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
		      set(this, 4, byteOffset, packI32, value, arguments[2]);
		    },
		    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
		      set(this, 4, byteOffset, packF32, value, arguments[2]);
		    },
		    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
		      set(this, 8, byteOffset, packF64, value, arguments[2]);
		    }
		  });
		} else {
		  if (!fails(function () {
		    $ArrayBuffer(1);
		  }) || !fails(function () {
		    new $ArrayBuffer(-1); // eslint-disable-line no-new
		  }) || fails(function () {
		    new $ArrayBuffer(); // eslint-disable-line no-new
		    new $ArrayBuffer(1.5); // eslint-disable-line no-new
		    new $ArrayBuffer(NaN); // eslint-disable-line no-new
		    return $ArrayBuffer.name != ARRAY_BUFFER;
		  })) {
		    $ArrayBuffer = function ArrayBuffer(length) {
		      anInstance(this, $ArrayBuffer);
		      return new BaseBuffer(toIndex(length));
		    };
		    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
		    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
		      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
		    }
		    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
		  }
		  // iOS Safari 7.x bug
		  var view = new $DataView(new $ArrayBuffer(2));
		  var $setInt8 = $DataView[PROTOTYPE].setInt8;
		  view.setInt8(0, 2147483648);
		  view.setInt8(1, 2147483649);
		  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
		    setInt8: function setInt8(byteOffset, value) {
		      $setInt8.call(this, byteOffset, value << 24 >> 24);
		    },
		    setUint8: function setUint8(byteOffset, value) {
		      $setInt8.call(this, byteOffset, value << 24 >> 24);
		    }
		  }, true);
		}
		setToStringTag($ArrayBuffer, ARRAY_BUFFER);
		setToStringTag($DataView, DATA_VIEW);
		hide($DataView[PROTOTYPE], $typed.VIEW, true);
		exports[ARRAY_BUFFER] = $ArrayBuffer;
		exports[DATA_VIEW] = $DataView;

		},{"./_an-instance":184,"./_array-fill":187,"./_descriptors":207,"./_fails":213,"./_global":218,"./_hide":220,"./_library":237,"./_object-dp":249,"./_object-gopn":254,"./_redefine-all":268,"./_set-to-string-tag":276,"./_to-index":290,"./_to-integer":291,"./_to-length":293,"./_typed":298}],298:[function(require,module,exports){
		var global = require('./_global');
		var hide = require('./_hide');
		var uid = require('./_uid');
		var TYPED = uid('typed_array');
		var VIEW = uid('view');
		var ABV = !!(global.ArrayBuffer && global.DataView);
		var CONSTR = ABV;
		var i = 0;
		var l = 9;
		var Typed;

		var TypedArrayConstructors = (
		  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
		).split(',');

		while (i < l) {
		  if (Typed = global[TypedArrayConstructors[i++]]) {
		    hide(Typed.prototype, TYPED, true);
		    hide(Typed.prototype, VIEW, true);
		  } else CONSTR = false;
		}

		module.exports = {
		  ABV: ABV,
		  CONSTR: CONSTR,
		  TYPED: TYPED,
		  VIEW: VIEW
		};

		},{"./_global":218,"./_hide":220,"./_uid":299}],299:[function(require,module,exports){
		var id = 0;
		var px = Math.random();
		module.exports = function (key) {
		  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
		};

		},{}],300:[function(require,module,exports){
		var global = require('./_global');
		var navigator = global.navigator;

		module.exports = navigator && navigator.userAgent || '';

		},{"./_global":218}],301:[function(require,module,exports){
		var isObject = require('./_is-object');
		module.exports = function (it, TYPE) {
		  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
		  return it;
		};

		},{"./_is-object":229}],302:[function(require,module,exports){
		var global = require('./_global');
		var core = require('./_core');
		var LIBRARY = require('./_library');
		var wksExt = require('./_wks-ext');
		var defineProperty = require('./_object-dp').f;
		module.exports = function (name) {
		  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
		  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
		};

		},{"./_core":201,"./_global":218,"./_library":237,"./_object-dp":249,"./_wks-ext":303}],303:[function(require,module,exports){
		exports.f = require('./_wks');

		},{"./_wks":304}],304:[function(require,module,exports){
		var store = require('./_shared')('wks');
		var uid = require('./_uid');
		var Symbol = require('./_global').Symbol;
		var USE_SYMBOL = typeof Symbol == 'function';

		var $exports = module.exports = function (name) {
		  return store[name] || (store[name] =
		    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
		};

		$exports.store = store;

		},{"./_global":218,"./_shared":278,"./_uid":299}],305:[function(require,module,exports){
		var classof = require('./_classof');
		var ITERATOR = require('./_wks')('iterator');
		var Iterators = require('./_iterators');
		module.exports = require('./_core').getIteratorMethod = function (it) {
		  if (it != undefined) return it[ITERATOR]
		    || it['@@iterator']
		    || Iterators[classof(it)];
		};

		},{"./_classof":195,"./_core":201,"./_iterators":236,"./_wks":304}],306:[function(require,module,exports){
		// https://github.com/benjamingr/RexExp.escape
		var $export = require('./_export');
		var $re = require('./_replacer')(/[\\^$*+?.()|[\]{}]/g, '\\$&');

		$export($export.S, 'RegExp', { escape: function escape(it) { return $re(it); } });

		},{"./_export":211,"./_replacer":270}],307:[function(require,module,exports){
		// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
		var $export = require('./_export');

		$export($export.P, 'Array', { copyWithin: require('./_array-copy-within') });

		require('./_add-to-unscopables')('copyWithin');

		},{"./_add-to-unscopables":183,"./_array-copy-within":186,"./_export":211}],308:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var $every = require('./_array-methods')(4);

		$export($export.P + $export.F * !require('./_strict-method')([].every, true), 'Array', {
		  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
		  every: function every(callbackfn /* , thisArg */) {
		    return $every(this, callbackfn, arguments[1]);
		  }
		});

		},{"./_array-methods":190,"./_export":211,"./_strict-method":280}],309:[function(require,module,exports){
		// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
		var $export = require('./_export');

		$export($export.P, 'Array', { fill: require('./_array-fill') });

		require('./_add-to-unscopables')('fill');

		},{"./_add-to-unscopables":183,"./_array-fill":187,"./_export":211}],310:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var $filter = require('./_array-methods')(2);

		$export($export.P + $export.F * !require('./_strict-method')([].filter, true), 'Array', {
		  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
		  filter: function filter(callbackfn /* , thisArg */) {
		    return $filter(this, callbackfn, arguments[1]);
		  }
		});

		},{"./_array-methods":190,"./_export":211,"./_strict-method":280}],311:[function(require,module,exports){
		'use strict';
		// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
		var $export = require('./_export');
		var $find = require('./_array-methods')(6);
		var KEY = 'findIndex';
		var forced = true;
		// Shouldn't skip holes
		if (KEY in []) Array(1)[KEY](function () { forced = false; });
		$export($export.P + $export.F * forced, 'Array', {
		  findIndex: function findIndex(callbackfn /* , that = undefined */) {
		    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
		  }
		});
		require('./_add-to-unscopables')(KEY);

		},{"./_add-to-unscopables":183,"./_array-methods":190,"./_export":211}],312:[function(require,module,exports){
		'use strict';
		// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
		var $export = require('./_export');
		var $find = require('./_array-methods')(5);
		var KEY = 'find';
		var forced = true;
		// Shouldn't skip holes
		if (KEY in []) Array(1)[KEY](function () { forced = false; });
		$export($export.P + $export.F * forced, 'Array', {
		  find: function find(callbackfn /* , that = undefined */) {
		    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
		  }
		});
		require('./_add-to-unscopables')(KEY);

		},{"./_add-to-unscopables":183,"./_array-methods":190,"./_export":211}],313:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var $forEach = require('./_array-methods')(0);
		var STRICT = require('./_strict-method')([].forEach, true);

		$export($export.P + $export.F * !STRICT, 'Array', {
		  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
		  forEach: function forEach(callbackfn /* , thisArg */) {
		    return $forEach(this, callbackfn, arguments[1]);
		  }
		});

		},{"./_array-methods":190,"./_export":211,"./_strict-method":280}],314:[function(require,module,exports){
		'use strict';
		var ctx = require('./_ctx');
		var $export = require('./_export');
		var toObject = require('./_to-object');
		var call = require('./_iter-call');
		var isArrayIter = require('./_is-array-iter');
		var toLength = require('./_to-length');
		var createProperty = require('./_create-property');
		var getIterFn = require('./core.get-iterator-method');

		$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {
		  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
		  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
		    var O = toObject(arrayLike);
		    var C = typeof this == 'function' ? this : Array;
		    var aLen = arguments.length;
		    var mapfn = aLen > 1 ? arguments[1] : undefined;
		    var mapping = mapfn !== undefined;
		    var index = 0;
		    var iterFn = getIterFn(O);
		    var length, result, step, iterator;
		    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
		    // if object isn't iterable or it's array with default iterator - use simple case
		    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
		      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
		        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
		      }
		    } else {
		      length = toLength(O.length);
		      for (result = new C(length); length > index; index++) {
		        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
		      }
		    }
		    result.length = index;
		    return result;
		  }
		});

		},{"./_create-property":202,"./_ctx":203,"./_export":211,"./_is-array-iter":226,"./_iter-call":231,"./_iter-detect":234,"./_to-length":293,"./_to-object":294,"./core.get-iterator-method":305}],315:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var $indexOf = require('./_array-includes')(false);
		var $native = [].indexOf;
		var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

		$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
		  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
		  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
		    return NEGATIVE_ZERO
		      // convert -0 to +0
		      ? $native.apply(this, arguments) || 0
		      : $indexOf(this, searchElement, arguments[1]);
		  }
		});

		},{"./_array-includes":189,"./_export":211,"./_strict-method":280}],316:[function(require,module,exports){
		// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
		var $export = require('./_export');

		$export($export.S, 'Array', { isArray: require('./_is-array') });

		},{"./_export":211,"./_is-array":227}],317:[function(require,module,exports){
		'use strict';
		var addToUnscopables = require('./_add-to-unscopables');
		var step = require('./_iter-step');
		var Iterators = require('./_iterators');
		var toIObject = require('./_to-iobject');

		// 22.1.3.4 Array.prototype.entries()
		// 22.1.3.13 Array.prototype.keys()
		// 22.1.3.29 Array.prototype.values()
		// 22.1.3.30 Array.prototype[@@iterator]()
		module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
		  this._t = toIObject(iterated); // target
		  this._i = 0;                   // next index
		  this._k = kind;                // kind
		// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
		}, function () {
		  var O = this._t;
		  var kind = this._k;
		  var index = this._i++;
		  if (!O || index >= O.length) {
		    this._t = undefined;
		    return step(1);
		  }
		  if (kind == 'keys') return step(0, index);
		  if (kind == 'values') return step(0, O[index]);
		  return step(0, [index, O[index]]);
		}, 'values');

		// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
		Iterators.Arguments = Iterators.Array;

		addToUnscopables('keys');
		addToUnscopables('values');
		addToUnscopables('entries');

		},{"./_add-to-unscopables":183,"./_iter-define":233,"./_iter-step":235,"./_iterators":236,"./_to-iobject":292}],318:[function(require,module,exports){
		'use strict';
		// 22.1.3.13 Array.prototype.join(separator)
		var $export = require('./_export');
		var toIObject = require('./_to-iobject');
		var arrayJoin = [].join;

		// fallback for not array-like strings
		$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {
		  join: function join(separator) {
		    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
		  }
		});

		},{"./_export":211,"./_iobject":225,"./_strict-method":280,"./_to-iobject":292}],319:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var toIObject = require('./_to-iobject');
		var toInteger = require('./_to-integer');
		var toLength = require('./_to-length');
		var $native = [].lastIndexOf;
		var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

		$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
		  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
		  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
		    // convert -0 to +0
		    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
		    var O = toIObject(this);
		    var length = toLength(O.length);
		    var index = length - 1;
		    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
		    if (index < 0) index = length + index;
		    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
		    return -1;
		  }
		});

		},{"./_export":211,"./_strict-method":280,"./_to-integer":291,"./_to-iobject":292,"./_to-length":293}],320:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var $map = require('./_array-methods')(1);

		$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {
		  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
		  map: function map(callbackfn /* , thisArg */) {
		    return $map(this, callbackfn, arguments[1]);
		  }
		});

		},{"./_array-methods":190,"./_export":211,"./_strict-method":280}],321:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var createProperty = require('./_create-property');

		// WebKit Array.of isn't generic
		$export($export.S + $export.F * require('./_fails')(function () {
		  function F() { /* empty */ }
		  return !(Array.of.call(F) instanceof F);
		}), 'Array', {
		  // 22.1.2.3 Array.of( ...items)
		  of: function of(/* ...args */) {
		    var index = 0;
		    var aLen = arguments.length;
		    var result = new (typeof this == 'function' ? this : Array)(aLen);
		    while (aLen > index) createProperty(result, index, arguments[index++]);
		    result.length = aLen;
		    return result;
		  }
		});

		},{"./_create-property":202,"./_export":211,"./_fails":213}],322:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var $reduce = require('./_array-reduce');

		$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {
		  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
		  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
		    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
		  }
		});

		},{"./_array-reduce":191,"./_export":211,"./_strict-method":280}],323:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var $reduce = require('./_array-reduce');

		$export($export.P + $export.F * !require('./_strict-method')([].reduce, true), 'Array', {
		  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
		  reduce: function reduce(callbackfn /* , initialValue */) {
		    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
		  }
		});

		},{"./_array-reduce":191,"./_export":211,"./_strict-method":280}],324:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var html = require('./_html');
		var cof = require('./_cof');
		var toAbsoluteIndex = require('./_to-absolute-index');
		var toLength = require('./_to-length');
		var arraySlice = [].slice;

		// fallback for not array-like ES3 strings and DOM objects
		$export($export.P + $export.F * require('./_fails')(function () {
		  if (html) arraySlice.call(html);
		}), 'Array', {
		  slice: function slice(begin, end) {
		    var len = toLength(this.length);
		    var klass = cof(this);
		    end = end === undefined ? len : end;
		    if (klass == 'Array') return arraySlice.call(this, begin, end);
		    var start = toAbsoluteIndex(begin, len);
		    var upTo = toAbsoluteIndex(end, len);
		    var size = toLength(upTo - start);
		    var cloned = new Array(size);
		    var i = 0;
		    for (; i < size; i++) cloned[i] = klass == 'String'
		      ? this.charAt(start + i)
		      : this[start + i];
		    return cloned;
		  }
		});

		},{"./_cof":196,"./_export":211,"./_fails":213,"./_html":221,"./_to-absolute-index":289,"./_to-length":293}],325:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var $some = require('./_array-methods')(3);

		$export($export.P + $export.F * !require('./_strict-method')([].some, true), 'Array', {
		  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
		  some: function some(callbackfn /* , thisArg */) {
		    return $some(this, callbackfn, arguments[1]);
		  }
		});

		},{"./_array-methods":190,"./_export":211,"./_strict-method":280}],326:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var aFunction = require('./_a-function');
		var toObject = require('./_to-object');
		var fails = require('./_fails');
		var $sort = [].sort;
		var test = [1, 2, 3];

		$export($export.P + $export.F * (fails(function () {
		  // IE8-
		  test.sort(undefined);
		}) || !fails(function () {
		  // V8 bug
		  test.sort(null);
		  // Old WebKit
		}) || !require('./_strict-method')($sort)), 'Array', {
		  // 22.1.3.25 Array.prototype.sort(comparefn)
		  sort: function sort(comparefn) {
		    return comparefn === undefined
		      ? $sort.call(toObject(this))
		      : $sort.call(toObject(this), aFunction(comparefn));
		  }
		});

		},{"./_a-function":181,"./_export":211,"./_fails":213,"./_strict-method":280,"./_to-object":294}],327:[function(require,module,exports){
		require('./_set-species')('Array');

		},{"./_set-species":275}],328:[function(require,module,exports){
		// 20.3.3.1 / 15.9.4.4 Date.now()
		var $export = require('./_export');

		$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });

		},{"./_export":211}],329:[function(require,module,exports){
		// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
		var $export = require('./_export');
		var toISOString = require('./_date-to-iso-string');

		// PhantomJS / old WebKit has a broken implementations
		$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
		  toISOString: toISOString
		});

		},{"./_date-to-iso-string":204,"./_export":211}],330:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var toObject = require('./_to-object');
		var toPrimitive = require('./_to-primitive');

		$export($export.P + $export.F * require('./_fails')(function () {
		  return new Date(NaN).toJSON() !== null
		    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
		}), 'Date', {
		  // eslint-disable-next-line no-unused-vars
		  toJSON: function toJSON(key) {
		    var O = toObject(this);
		    var pv = toPrimitive(O);
		    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
		  }
		});

		},{"./_export":211,"./_fails":213,"./_to-object":294,"./_to-primitive":295}],331:[function(require,module,exports){
		var TO_PRIMITIVE = require('./_wks')('toPrimitive');
		var proto = Date.prototype;

		if (!(TO_PRIMITIVE in proto)) require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));

		},{"./_date-to-primitive":205,"./_hide":220,"./_wks":304}],332:[function(require,module,exports){
		var DateProto = Date.prototype;
		var INVALID_DATE = 'Invalid Date';
		var TO_STRING = 'toString';
		var $toString = DateProto[TO_STRING];
		var getTime = DateProto.getTime;
		if (new Date(NaN) + '' != INVALID_DATE) {
		  require('./_redefine')(DateProto, TO_STRING, function toString() {
		    var value = getTime.call(this);
		    // eslint-disable-next-line no-self-compare
		    return value === value ? $toString.call(this) : INVALID_DATE;
		  });
		}

		},{"./_redefine":269}],333:[function(require,module,exports){
		// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
		var $export = require('./_export');

		$export($export.P, 'Function', { bind: require('./_bind') });

		},{"./_bind":194,"./_export":211}],334:[function(require,module,exports){
		'use strict';
		var isObject = require('./_is-object');
		var getPrototypeOf = require('./_object-gpo');
		var HAS_INSTANCE = require('./_wks')('hasInstance');
		var FunctionProto = Function.prototype;
		// 19.2.3.6 Function.prototype[@@hasInstance](V)
		if (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {
		  if (typeof this != 'function' || !isObject(O)) return false;
		  if (!isObject(this.prototype)) return O instanceof this;
		  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
		  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
		  return false;
		} });

		},{"./_is-object":229,"./_object-dp":249,"./_object-gpo":256,"./_wks":304}],335:[function(require,module,exports){
		var dP = require('./_object-dp').f;
		var FProto = Function.prototype;
		var nameRE = /^\s*function ([^ (]*)/;
		var NAME = 'name';

		// 19.2.4.2 name
		NAME in FProto || require('./_descriptors') && dP(FProto, NAME, {
		  configurable: true,
		  get: function () {
		    try {
		      return ('' + this).match(nameRE)[1];
		    } catch (e) {
		      return '';
		    }
		  }
		});

		},{"./_descriptors":207,"./_object-dp":249}],336:[function(require,module,exports){
		'use strict';
		var strong = require('./_collection-strong');
		var validate = require('./_validate-collection');
		var MAP = 'Map';

		// 23.1 Map Objects
		module.exports = require('./_collection')(MAP, function (get) {
		  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
		}, {
		  // 23.1.3.6 Map.prototype.get(key)
		  get: function get(key) {
		    var entry = strong.getEntry(validate(this, MAP), key);
		    return entry && entry.v;
		  },
		  // 23.1.3.9 Map.prototype.set(key, value)
		  set: function set(key, value) {
		    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
		  }
		}, strong, true);

		},{"./_collection":200,"./_collection-strong":197,"./_validate-collection":301}],337:[function(require,module,exports){
		// 20.2.2.3 Math.acosh(x)
		var $export = require('./_export');
		var log1p = require('./_math-log1p');
		var sqrt = Math.sqrt;
		var $acosh = Math.acosh;

		$export($export.S + $export.F * !($acosh
		  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
		  && Math.floor($acosh(Number.MAX_VALUE)) == 710
		  // Tor Browser bug: Math.acosh(Infinity) -> NaN
		  && $acosh(Infinity) == Infinity
		), 'Math', {
		  acosh: function acosh(x) {
		    return (x = +x) < 1 ? NaN : x > 94906265.62425156
		      ? Math.log(x) + Math.LN2
		      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
		  }
		});

		},{"./_export":211,"./_math-log1p":240}],338:[function(require,module,exports){
		// 20.2.2.5 Math.asinh(x)
		var $export = require('./_export');
		var $asinh = Math.asinh;

		function asinh(x) {
		  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
		}

		// Tor Browser bug: Math.asinh(0) -> -0
		$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });

		},{"./_export":211}],339:[function(require,module,exports){
		// 20.2.2.7 Math.atanh(x)
		var $export = require('./_export');
		var $atanh = Math.atanh;

		// Tor Browser bug: Math.atanh(-0) -> 0
		$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
		  atanh: function atanh(x) {
		    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
		  }
		});

		},{"./_export":211}],340:[function(require,module,exports){
		// 20.2.2.9 Math.cbrt(x)
		var $export = require('./_export');
		var sign = require('./_math-sign');

		$export($export.S, 'Math', {
		  cbrt: function cbrt(x) {
		    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
		  }
		});

		},{"./_export":211,"./_math-sign":242}],341:[function(require,module,exports){
		// 20.2.2.11 Math.clz32(x)
		var $export = require('./_export');

		$export($export.S, 'Math', {
		  clz32: function clz32(x) {
		    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
		  }
		});

		},{"./_export":211}],342:[function(require,module,exports){
		// 20.2.2.12 Math.cosh(x)
		var $export = require('./_export');
		var exp = Math.exp;

		$export($export.S, 'Math', {
		  cosh: function cosh(x) {
		    return (exp(x = +x) + exp(-x)) / 2;
		  }
		});

		},{"./_export":211}],343:[function(require,module,exports){
		// 20.2.2.14 Math.expm1(x)
		var $export = require('./_export');
		var $expm1 = require('./_math-expm1');

		$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });

		},{"./_export":211,"./_math-expm1":238}],344:[function(require,module,exports){
		// 20.2.2.16 Math.fround(x)
		var $export = require('./_export');

		$export($export.S, 'Math', { fround: require('./_math-fround') });

		},{"./_export":211,"./_math-fround":239}],345:[function(require,module,exports){
		// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
		var $export = require('./_export');
		var abs = Math.abs;

		$export($export.S, 'Math', {
		  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
		    var sum = 0;
		    var i = 0;
		    var aLen = arguments.length;
		    var larg = 0;
		    var arg, div;
		    while (i < aLen) {
		      arg = abs(arguments[i++]);
		      if (larg < arg) {
		        div = larg / arg;
		        sum = sum * div * div + 1;
		        larg = arg;
		      } else if (arg > 0) {
		        div = arg / larg;
		        sum += div * div;
		      } else sum += arg;
		    }
		    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
		  }
		});

		},{"./_export":211}],346:[function(require,module,exports){
		// 20.2.2.18 Math.imul(x, y)
		var $export = require('./_export');
		var $imul = Math.imul;

		// some WebKit versions fails with big numbers, some has wrong arity
		$export($export.S + $export.F * require('./_fails')(function () {
		  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
		}), 'Math', {
		  imul: function imul(x, y) {
		    var UINT16 = 0xffff;
		    var xn = +x;
		    var yn = +y;
		    var xl = UINT16 & xn;
		    var yl = UINT16 & yn;
		    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
		  }
		});

		},{"./_export":211,"./_fails":213}],347:[function(require,module,exports){
		// 20.2.2.21 Math.log10(x)
		var $export = require('./_export');

		$export($export.S, 'Math', {
		  log10: function log10(x) {
		    return Math.log(x) * Math.LOG10E;
		  }
		});

		},{"./_export":211}],348:[function(require,module,exports){
		// 20.2.2.20 Math.log1p(x)
		var $export = require('./_export');

		$export($export.S, 'Math', { log1p: require('./_math-log1p') });

		},{"./_export":211,"./_math-log1p":240}],349:[function(require,module,exports){
		// 20.2.2.22 Math.log2(x)
		var $export = require('./_export');

		$export($export.S, 'Math', {
		  log2: function log2(x) {
		    return Math.log(x) / Math.LN2;
		  }
		});

		},{"./_export":211}],350:[function(require,module,exports){
		// 20.2.2.28 Math.sign(x)
		var $export = require('./_export');

		$export($export.S, 'Math', { sign: require('./_math-sign') });

		},{"./_export":211,"./_math-sign":242}],351:[function(require,module,exports){
		// 20.2.2.30 Math.sinh(x)
		var $export = require('./_export');
		var expm1 = require('./_math-expm1');
		var exp = Math.exp;

		// V8 near Chromium 38 has a problem with very small numbers
		$export($export.S + $export.F * require('./_fails')(function () {
		  return !Math.sinh(-2e-17) != -2e-17;
		}), 'Math', {
		  sinh: function sinh(x) {
		    return Math.abs(x = +x) < 1
		      ? (expm1(x) - expm1(-x)) / 2
		      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
		  }
		});

		},{"./_export":211,"./_fails":213,"./_math-expm1":238}],352:[function(require,module,exports){
		// 20.2.2.33 Math.tanh(x)
		var $export = require('./_export');
		var expm1 = require('./_math-expm1');
		var exp = Math.exp;

		$export($export.S, 'Math', {
		  tanh: function tanh(x) {
		    var a = expm1(x = +x);
		    var b = expm1(-x);
		    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
		  }
		});

		},{"./_export":211,"./_math-expm1":238}],353:[function(require,module,exports){
		// 20.2.2.34 Math.trunc(x)
		var $export = require('./_export');

		$export($export.S, 'Math', {
		  trunc: function trunc(it) {
		    return (it > 0 ? Math.floor : Math.ceil)(it);
		  }
		});

		},{"./_export":211}],354:[function(require,module,exports){
		'use strict';
		var global = require('./_global');
		var has = require('./_has');
		var cof = require('./_cof');
		var inheritIfRequired = require('./_inherit-if-required');
		var toPrimitive = require('./_to-primitive');
		var fails = require('./_fails');
		var gOPN = require('./_object-gopn').f;
		var gOPD = require('./_object-gopd').f;
		var dP = require('./_object-dp').f;
		var $trim = require('./_string-trim').trim;
		var NUMBER = 'Number';
		var $Number = global[NUMBER];
		var Base = $Number;
		var proto = $Number.prototype;
		// Opera ~12 has broken Object#toString
		var BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;
		var TRIM = 'trim' in String.prototype;

		// 7.1.3 ToNumber(argument)
		var toNumber = function (argument) {
		  var it = toPrimitive(argument, false);
		  if (typeof it == 'string' && it.length > 2) {
		    it = TRIM ? it.trim() : $trim(it, 3);
		    var first = it.charCodeAt(0);
		    var third, radix, maxCode;
		    if (first === 43 || first === 45) {
		      third = it.charCodeAt(2);
		      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
		    } else if (first === 48) {
		      switch (it.charCodeAt(1)) {
		        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
		        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
		        default: return +it;
		      }
		      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
		        code = digits.charCodeAt(i);
		        // parseInt parses a string to a first unavailable symbol
		        // but ToNumber should return NaN if a string contains unavailable symbols
		        if (code < 48 || code > maxCode) return NaN;
		      } return parseInt(digits, radix);
		    }
		  } return +it;
		};

		if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
		  $Number = function Number(value) {
		    var it = arguments.length < 1 ? 0 : value;
		    var that = this;
		    return that instanceof $Number
		      // check on 1..constructor(foo) case
		      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
		        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
		  };
		  for (var keys = require('./_descriptors') ? gOPN(Base) : (
		    // ES3:
		    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
		    // ES6 (in case, if modules with ES6 Number statics required before):
		    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
		    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
		  ).split(','), j = 0, key; keys.length > j; j++) {
		    if (has(Base, key = keys[j]) && !has($Number, key)) {
		      dP($Number, key, gOPD(Base, key));
		    }
		  }
		  $Number.prototype = proto;
		  proto.constructor = $Number;
		  require('./_redefine')(global, NUMBER, $Number);
		}

		},{"./_cof":196,"./_descriptors":207,"./_fails":213,"./_global":218,"./_has":219,"./_inherit-if-required":223,"./_object-create":248,"./_object-dp":249,"./_object-gopd":252,"./_object-gopn":254,"./_redefine":269,"./_string-trim":286,"./_to-primitive":295}],355:[function(require,module,exports){
		// 20.1.2.1 Number.EPSILON
		var $export = require('./_export');

		$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });

		},{"./_export":211}],356:[function(require,module,exports){
		// 20.1.2.2 Number.isFinite(number)
		var $export = require('./_export');
		var _isFinite = require('./_global').isFinite;

		$export($export.S, 'Number', {
		  isFinite: function isFinite(it) {
		    return typeof it == 'number' && _isFinite(it);
		  }
		});

		},{"./_export":211,"./_global":218}],357:[function(require,module,exports){
		// 20.1.2.3 Number.isInteger(number)
		var $export = require('./_export');

		$export($export.S, 'Number', { isInteger: require('./_is-integer') });

		},{"./_export":211,"./_is-integer":228}],358:[function(require,module,exports){
		// 20.1.2.4 Number.isNaN(number)
		var $export = require('./_export');

		$export($export.S, 'Number', {
		  isNaN: function isNaN(number) {
		    // eslint-disable-next-line no-self-compare
		    return number != number;
		  }
		});

		},{"./_export":211}],359:[function(require,module,exports){
		// 20.1.2.5 Number.isSafeInteger(number)
		var $export = require('./_export');
		var isInteger = require('./_is-integer');
		var abs = Math.abs;

		$export($export.S, 'Number', {
		  isSafeInteger: function isSafeInteger(number) {
		    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
		  }
		});

		},{"./_export":211,"./_is-integer":228}],360:[function(require,module,exports){
		// 20.1.2.6 Number.MAX_SAFE_INTEGER
		var $export = require('./_export');

		$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });

		},{"./_export":211}],361:[function(require,module,exports){
		// 20.1.2.10 Number.MIN_SAFE_INTEGER
		var $export = require('./_export');

		$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });

		},{"./_export":211}],362:[function(require,module,exports){
		var $export = require('./_export');
		var $parseFloat = require('./_parse-float');
		// 20.1.2.12 Number.parseFloat(string)
		$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });

		},{"./_export":211,"./_parse-float":263}],363:[function(require,module,exports){
		var $export = require('./_export');
		var $parseInt = require('./_parse-int');
		// 20.1.2.13 Number.parseInt(string, radix)
		$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });

		},{"./_export":211,"./_parse-int":264}],364:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var toInteger = require('./_to-integer');
		var aNumberValue = require('./_a-number-value');
		var repeat = require('./_string-repeat');
		var $toFixed = 1.0.toFixed;
		var floor = Math.floor;
		var data = [0, 0, 0, 0, 0, 0];
		var ERROR = 'Number.toFixed: incorrect invocation!';
		var ZERO = '0';

		var multiply = function (n, c) {
		  var i = -1;
		  var c2 = c;
		  while (++i < 6) {
		    c2 += n * data[i];
		    data[i] = c2 % 1e7;
		    c2 = floor(c2 / 1e7);
		  }
		};
		var divide = function (n) {
		  var i = 6;
		  var c = 0;
		  while (--i >= 0) {
		    c += data[i];
		    data[i] = floor(c / n);
		    c = (c % n) * 1e7;
		  }
		};
		var numToString = function () {
		  var i = 6;
		  var s = '';
		  while (--i >= 0) {
		    if (s !== '' || i === 0 || data[i] !== 0) {
		      var t = String(data[i]);
		      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
		    }
		  } return s;
		};
		var pow = function (x, n, acc) {
		  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
		};
		var log = function (x) {
		  var n = 0;
		  var x2 = x;
		  while (x2 >= 4096) {
		    n += 12;
		    x2 /= 4096;
		  }
		  while (x2 >= 2) {
		    n += 1;
		    x2 /= 2;
		  } return n;
		};

		$export($export.P + $export.F * (!!$toFixed && (
		  0.00008.toFixed(3) !== '0.000' ||
		  0.9.toFixed(0) !== '1' ||
		  1.255.toFixed(2) !== '1.25' ||
		  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
		) || !require('./_fails')(function () {
		  // V8 ~ Android 4.3-
		  $toFixed.call({});
		})), 'Number', {
		  toFixed: function toFixed(fractionDigits) {
		    var x = aNumberValue(this, ERROR);
		    var f = toInteger(fractionDigits);
		    var s = '';
		    var m = ZERO;
		    var e, z, j, k;
		    if (f < 0 || f > 20) throw RangeError(ERROR);
		    // eslint-disable-next-line no-self-compare
		    if (x != x) return 'NaN';
		    if (x <= -1e21 || x >= 1e21) return String(x);
		    if (x < 0) {
		      s = '-';
		      x = -x;
		    }
		    if (x > 1e-21) {
		      e = log(x * pow(2, 69, 1)) - 69;
		      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
		      z *= 0x10000000000000;
		      e = 52 - e;
		      if (e > 0) {
		        multiply(0, z);
		        j = f;
		        while (j >= 7) {
		          multiply(1e7, 0);
		          j -= 7;
		        }
		        multiply(pow(10, j, 1), 0);
		        j = e - 1;
		        while (j >= 23) {
		          divide(1 << 23);
		          j -= 23;
		        }
		        divide(1 << j);
		        multiply(1, 1);
		        divide(2);
		        m = numToString();
		      } else {
		        multiply(0, z);
		        multiply(1 << -e, 0);
		        m = numToString() + repeat.call(ZERO, f);
		      }
		    }
		    if (f > 0) {
		      k = m.length;
		      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
		    } else {
		      m = s + m;
		    } return m;
		  }
		});

		},{"./_a-number-value":182,"./_export":211,"./_fails":213,"./_string-repeat":285,"./_to-integer":291}],365:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var $fails = require('./_fails');
		var aNumberValue = require('./_a-number-value');
		var $toPrecision = 1.0.toPrecision;

		$export($export.P + $export.F * ($fails(function () {
		  // IE7-
		  return $toPrecision.call(1, undefined) !== '1';
		}) || !$fails(function () {
		  // V8 ~ Android 4.3-
		  $toPrecision.call({});
		})), 'Number', {
		  toPrecision: function toPrecision(precision) {
		    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
		    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
		  }
		});

		},{"./_a-number-value":182,"./_export":211,"./_fails":213}],366:[function(require,module,exports){
		// 19.1.3.1 Object.assign(target, source)
		var $export = require('./_export');

		$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });

		},{"./_export":211,"./_object-assign":247}],367:[function(require,module,exports){
		var $export = require('./_export');
		// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
		$export($export.S, 'Object', { create: require('./_object-create') });

		},{"./_export":211,"./_object-create":248}],368:[function(require,module,exports){
		var $export = require('./_export');
		// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
		$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });

		},{"./_descriptors":207,"./_export":211,"./_object-dps":250}],369:[function(require,module,exports){
		var $export = require('./_export');
		// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
		$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });

		},{"./_descriptors":207,"./_export":211,"./_object-dp":249}],370:[function(require,module,exports){
		// 19.1.2.5 Object.freeze(O)
		var isObject = require('./_is-object');
		var meta = require('./_meta').onFreeze;

		require('./_object-sap')('freeze', function ($freeze) {
		  return function freeze(it) {
		    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
		  };
		});

		},{"./_is-object":229,"./_meta":243,"./_object-sap":260}],371:[function(require,module,exports){
		// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
		var toIObject = require('./_to-iobject');
		var $getOwnPropertyDescriptor = require('./_object-gopd').f;

		require('./_object-sap')('getOwnPropertyDescriptor', function () {
		  return function getOwnPropertyDescriptor(it, key) {
		    return $getOwnPropertyDescriptor(toIObject(it), key);
		  };
		});

		},{"./_object-gopd":252,"./_object-sap":260,"./_to-iobject":292}],372:[function(require,module,exports){
		// 19.1.2.7 Object.getOwnPropertyNames(O)
		require('./_object-sap')('getOwnPropertyNames', function () {
		  return require('./_object-gopn-ext').f;
		});

		},{"./_object-gopn-ext":253,"./_object-sap":260}],373:[function(require,module,exports){
		// 19.1.2.9 Object.getPrototypeOf(O)
		var toObject = require('./_to-object');
		var $getPrototypeOf = require('./_object-gpo');

		require('./_object-sap')('getPrototypeOf', function () {
		  return function getPrototypeOf(it) {
		    return $getPrototypeOf(toObject(it));
		  };
		});

		},{"./_object-gpo":256,"./_object-sap":260,"./_to-object":294}],374:[function(require,module,exports){
		// 19.1.2.11 Object.isExtensible(O)
		var isObject = require('./_is-object');

		require('./_object-sap')('isExtensible', function ($isExtensible) {
		  return function isExtensible(it) {
		    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
		  };
		});

		},{"./_is-object":229,"./_object-sap":260}],375:[function(require,module,exports){
		// 19.1.2.12 Object.isFrozen(O)
		var isObject = require('./_is-object');

		require('./_object-sap')('isFrozen', function ($isFrozen) {
		  return function isFrozen(it) {
		    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
		  };
		});

		},{"./_is-object":229,"./_object-sap":260}],376:[function(require,module,exports){
		// 19.1.2.13 Object.isSealed(O)
		var isObject = require('./_is-object');

		require('./_object-sap')('isSealed', function ($isSealed) {
		  return function isSealed(it) {
		    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
		  };
		});

		},{"./_is-object":229,"./_object-sap":260}],377:[function(require,module,exports){
		// 19.1.3.10 Object.is(value1, value2)
		var $export = require('./_export');
		$export($export.S, 'Object', { is: require('./_same-value') });

		},{"./_export":211,"./_same-value":271}],378:[function(require,module,exports){
		// 19.1.2.14 Object.keys(O)
		var toObject = require('./_to-object');
		var $keys = require('./_object-keys');

		require('./_object-sap')('keys', function () {
		  return function keys(it) {
		    return $keys(toObject(it));
		  };
		});

		},{"./_object-keys":258,"./_object-sap":260,"./_to-object":294}],379:[function(require,module,exports){
		// 19.1.2.15 Object.preventExtensions(O)
		var isObject = require('./_is-object');
		var meta = require('./_meta').onFreeze;

		require('./_object-sap')('preventExtensions', function ($preventExtensions) {
		  return function preventExtensions(it) {
		    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
		  };
		});

		},{"./_is-object":229,"./_meta":243,"./_object-sap":260}],380:[function(require,module,exports){
		// 19.1.2.17 Object.seal(O)
		var isObject = require('./_is-object');
		var meta = require('./_meta').onFreeze;

		require('./_object-sap')('seal', function ($seal) {
		  return function seal(it) {
		    return $seal && isObject(it) ? $seal(meta(it)) : it;
		  };
		});

		},{"./_is-object":229,"./_meta":243,"./_object-sap":260}],381:[function(require,module,exports){
		// 19.1.3.19 Object.setPrototypeOf(O, proto)
		var $export = require('./_export');
		$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });

		},{"./_export":211,"./_set-proto":274}],382:[function(require,module,exports){
		'use strict';
		// 19.1.3.6 Object.prototype.toString()
		var classof = require('./_classof');
		var test = {};
		test[require('./_wks')('toStringTag')] = 'z';
		if (test + '' != '[object z]') {
		  require('./_redefine')(Object.prototype, 'toString', function toString() {
		    return '[object ' + classof(this) + ']';
		  }, true);
		}

		},{"./_classof":195,"./_redefine":269,"./_wks":304}],383:[function(require,module,exports){
		var $export = require('./_export');
		var $parseFloat = require('./_parse-float');
		// 18.2.4 parseFloat(string)
		$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });

		},{"./_export":211,"./_parse-float":263}],384:[function(require,module,exports){
		var $export = require('./_export');
		var $parseInt = require('./_parse-int');
		// 18.2.5 parseInt(string, radix)
		$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });

		},{"./_export":211,"./_parse-int":264}],385:[function(require,module,exports){
		'use strict';
		var LIBRARY = require('./_library');
		var global = require('./_global');
		var ctx = require('./_ctx');
		var classof = require('./_classof');
		var $export = require('./_export');
		var isObject = require('./_is-object');
		var aFunction = require('./_a-function');
		var anInstance = require('./_an-instance');
		var forOf = require('./_for-of');
		var speciesConstructor = require('./_species-constructor');
		var task = require('./_task').set;
		var microtask = require('./_microtask')();
		var newPromiseCapabilityModule = require('./_new-promise-capability');
		var perform = require('./_perform');
		var promiseResolve = require('./_promise-resolve');
		var PROMISE = 'Promise';
		var TypeError = global.TypeError;
		var process = global.process;
		var $Promise = global[PROMISE];
		var isNode = classof(process) == 'process';
		var empty = function () { /* empty */ };
		var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
		var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

		var USE_NATIVE = !!function () {
		  try {
		    // correct subclassing with @@species support
		    var promise = $Promise.resolve(1);
		    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {
		      exec(empty, empty);
		    };
		    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
		    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
		  } catch (e) { /* empty */ }
		}();

		// helpers
		var isThenable = function (it) {
		  var then;
		  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
		};
		var notify = function (promise, isReject) {
		  if (promise._n) return;
		  promise._n = true;
		  var chain = promise._c;
		  microtask(function () {
		    var value = promise._v;
		    var ok = promise._s == 1;
		    var i = 0;
		    var run = function (reaction) {
		      var handler = ok ? reaction.ok : reaction.fail;
		      var resolve = reaction.resolve;
		      var reject = reaction.reject;
		      var domain = reaction.domain;
		      var result, then, exited;
		      try {
		        if (handler) {
		          if (!ok) {
		            if (promise._h == 2) onHandleUnhandled(promise);
		            promise._h = 1;
		          }
		          if (handler === true) result = value;
		          else {
		            if (domain) domain.enter();
		            result = handler(value); // may throw
		            if (domain) {
		              domain.exit();
		              exited = true;
		            }
		          }
		          if (result === reaction.promise) {
		            reject(TypeError('Promise-chain cycle'));
		          } else if (then = isThenable(result)) {
		            then.call(result, resolve, reject);
		          } else resolve(result);
		        } else reject(value);
		      } catch (e) {
		        if (domain && !exited) domain.exit();
		        reject(e);
		      }
		    };
		    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
		    promise._c = [];
		    promise._n = false;
		    if (isReject && !promise._h) onUnhandled(promise);
		  });
		};
		var onUnhandled = function (promise) {
		  task.call(global, function () {
		    var value = promise._v;
		    var unhandled = isUnhandled(promise);
		    var result, handler, console;
		    if (unhandled) {
		      result = perform(function () {
		        if (isNode) {
		          process.emit('unhandledRejection', value, promise);
		        } else if (handler = global.onunhandledrejection) {
		          handler({ promise: promise, reason: value });
		        } else if ((console = global.console) && console.error) {
		          console.error('Unhandled promise rejection', value);
		        }
		      });
		      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
		      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
		    } promise._a = undefined;
		    if (unhandled && result.e) throw result.v;
		  });
		};
		var isUnhandled = function (promise) {
		  return promise._h !== 1 && (promise._a || promise._c).length === 0;
		};
		var onHandleUnhandled = function (promise) {
		  task.call(global, function () {
		    var handler;
		    if (isNode) {
		      process.emit('rejectionHandled', promise);
		    } else if (handler = global.onrejectionhandled) {
		      handler({ promise: promise, reason: promise._v });
		    }
		  });
		};
		var $reject = function (value) {
		  var promise = this;
		  if (promise._d) return;
		  promise._d = true;
		  promise = promise._w || promise; // unwrap
		  promise._v = value;
		  promise._s = 2;
		  if (!promise._a) promise._a = promise._c.slice();
		  notify(promise, true);
		};
		var $resolve = function (value) {
		  var promise = this;
		  var then;
		  if (promise._d) return;
		  promise._d = true;
		  promise = promise._w || promise; // unwrap
		  try {
		    if (promise === value) throw TypeError("Promise can't be resolved itself");
		    if (then = isThenable(value)) {
		      microtask(function () {
		        var wrapper = { _w: promise, _d: false }; // wrap
		        try {
		          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
		        } catch (e) {
		          $reject.call(wrapper, e);
		        }
		      });
		    } else {
		      promise._v = value;
		      promise._s = 1;
		      notify(promise, false);
		    }
		  } catch (e) {
		    $reject.call({ _w: promise, _d: false }, e); // wrap
		  }
		};

		// constructor polyfill
		if (!USE_NATIVE) {
		  // 25.4.3.1 Promise(executor)
		  $Promise = function Promise(executor) {
		    anInstance(this, $Promise, PROMISE, '_h');
		    aFunction(executor);
		    Internal.call(this);
		    try {
		      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
		    } catch (err) {
		      $reject.call(this, err);
		    }
		  };
		  // eslint-disable-next-line no-unused-vars
		  Internal = function Promise(executor) {
		    this._c = [];             // <- awaiting reactions
		    this._a = undefined;      // <- checked in isUnhandled reactions
		    this._s = 0;              // <- state
		    this._d = false;          // <- done
		    this._v = undefined;      // <- value
		    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
		    this._n = false;          // <- notify
		  };
		  Internal.prototype = require('./_redefine-all')($Promise.prototype, {
		    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
		    then: function then(onFulfilled, onRejected) {
		      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
		      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
		      reaction.fail = typeof onRejected == 'function' && onRejected;
		      reaction.domain = isNode ? process.domain : undefined;
		      this._c.push(reaction);
		      if (this._a) this._a.push(reaction);
		      if (this._s) notify(this, false);
		      return reaction.promise;
		    },
		    // 25.4.5.1 Promise.prototype.catch(onRejected)
		    'catch': function (onRejected) {
		      return this.then(undefined, onRejected);
		    }
		  });
		  OwnPromiseCapability = function () {
		    var promise = new Internal();
		    this.promise = promise;
		    this.resolve = ctx($resolve, promise, 1);
		    this.reject = ctx($reject, promise, 1);
		  };
		  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
		    return C === $Promise || C === Wrapper
		      ? new OwnPromiseCapability(C)
		      : newGenericPromiseCapability(C);
		  };
		}

		$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
		require('./_set-to-string-tag')($Promise, PROMISE);
		require('./_set-species')(PROMISE);
		Wrapper = require('./_core')[PROMISE];

		// statics
		$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
		  // 25.4.4.5 Promise.reject(r)
		  reject: function reject(r) {
		    var capability = newPromiseCapability(this);
		    var $$reject = capability.reject;
		    $$reject(r);
		    return capability.promise;
		  }
		});
		$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
		  // 25.4.4.6 Promise.resolve(x)
		  resolve: function resolve(x) {
		    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
		  }
		});
		$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {
		  $Promise.all(iter)['catch'](empty);
		})), PROMISE, {
		  // 25.4.4.1 Promise.all(iterable)
		  all: function all(iterable) {
		    var C = this;
		    var capability = newPromiseCapability(C);
		    var resolve = capability.resolve;
		    var reject = capability.reject;
		    var result = perform(function () {
		      var values = [];
		      var index = 0;
		      var remaining = 1;
		      forOf(iterable, false, function (promise) {
		        var $index = index++;
		        var alreadyCalled = false;
		        values.push(undefined);
		        remaining++;
		        C.resolve(promise).then(function (value) {
		          if (alreadyCalled) return;
		          alreadyCalled = true;
		          values[$index] = value;
		          --remaining || resolve(values);
		        }, reject);
		      });
		      --remaining || resolve(values);
		    });
		    if (result.e) reject(result.v);
		    return capability.promise;
		  },
		  // 25.4.4.4 Promise.race(iterable)
		  race: function race(iterable) {
		    var C = this;
		    var capability = newPromiseCapability(C);
		    var reject = capability.reject;
		    var result = perform(function () {
		      forOf(iterable, false, function (promise) {
		        C.resolve(promise).then(capability.resolve, reject);
		      });
		    });
		    if (result.e) reject(result.v);
		    return capability.promise;
		  }
		});

		},{"./_a-function":181,"./_an-instance":184,"./_classof":195,"./_core":201,"./_ctx":203,"./_export":211,"./_for-of":217,"./_global":218,"./_is-object":229,"./_iter-detect":234,"./_library":237,"./_microtask":245,"./_new-promise-capability":246,"./_perform":265,"./_promise-resolve":266,"./_redefine-all":268,"./_set-species":275,"./_set-to-string-tag":276,"./_species-constructor":279,"./_task":288,"./_wks":304}],386:[function(require,module,exports){
		// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
		var $export = require('./_export');
		var aFunction = require('./_a-function');
		var anObject = require('./_an-object');
		var rApply = (require('./_global').Reflect || {}).apply;
		var fApply = Function.apply;
		// MS Edge argumentsList argument is optional
		$export($export.S + $export.F * !require('./_fails')(function () {
		  rApply(function () { /* empty */ });
		}), 'Reflect', {
		  apply: function apply(target, thisArgument, argumentsList) {
		    var T = aFunction(target);
		    var L = anObject(argumentsList);
		    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
		  }
		});

		},{"./_a-function":181,"./_an-object":185,"./_export":211,"./_fails":213,"./_global":218}],387:[function(require,module,exports){
		// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
		var $export = require('./_export');
		var create = require('./_object-create');
		var aFunction = require('./_a-function');
		var anObject = require('./_an-object');
		var isObject = require('./_is-object');
		var fails = require('./_fails');
		var bind = require('./_bind');
		var rConstruct = (require('./_global').Reflect || {}).construct;

		// MS Edge supports only 2 arguments and argumentsList argument is optional
		// FF Nightly sets third argument as `new.target`, but does not create `this` from it
		var NEW_TARGET_BUG = fails(function () {
		  function F() { /* empty */ }
		  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
		});
		var ARGS_BUG = !fails(function () {
		  rConstruct(function () { /* empty */ });
		});

		$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
		  construct: function construct(Target, args /* , newTarget */) {
		    aFunction(Target);
		    anObject(args);
		    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
		    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
		    if (Target == newTarget) {
		      // w/o altered newTarget, optimization for 0-4 arguments
		      switch (args.length) {
		        case 0: return new Target();
		        case 1: return new Target(args[0]);
		        case 2: return new Target(args[0], args[1]);
		        case 3: return new Target(args[0], args[1], args[2]);
		        case 4: return new Target(args[0], args[1], args[2], args[3]);
		      }
		      // w/o altered newTarget, lot of arguments case
		      var $args = [null];
		      $args.push.apply($args, args);
		      return new (bind.apply(Target, $args))();
		    }
		    // with altered newTarget, not support built-in constructors
		    var proto = newTarget.prototype;
		    var instance = create(isObject(proto) ? proto : Object.prototype);
		    var result = Function.apply.call(Target, instance, args);
		    return isObject(result) ? result : instance;
		  }
		});

		},{"./_a-function":181,"./_an-object":185,"./_bind":194,"./_export":211,"./_fails":213,"./_global":218,"./_is-object":229,"./_object-create":248}],388:[function(require,module,exports){
		// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
		var dP = require('./_object-dp');
		var $export = require('./_export');
		var anObject = require('./_an-object');
		var toPrimitive = require('./_to-primitive');

		// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
		$export($export.S + $export.F * require('./_fails')(function () {
		  // eslint-disable-next-line no-undef
		  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
		}), 'Reflect', {
		  defineProperty: function defineProperty(target, propertyKey, attributes) {
		    anObject(target);
		    propertyKey = toPrimitive(propertyKey, true);
		    anObject(attributes);
		    try {
		      dP.f(target, propertyKey, attributes);
		      return true;
		    } catch (e) {
		      return false;
		    }
		  }
		});

		},{"./_an-object":185,"./_export":211,"./_fails":213,"./_object-dp":249,"./_to-primitive":295}],389:[function(require,module,exports){
		// 26.1.4 Reflect.deleteProperty(target, propertyKey)
		var $export = require('./_export');
		var gOPD = require('./_object-gopd').f;
		var anObject = require('./_an-object');

		$export($export.S, 'Reflect', {
		  deleteProperty: function deleteProperty(target, propertyKey) {
		    var desc = gOPD(anObject(target), propertyKey);
		    return desc && !desc.configurable ? false : delete target[propertyKey];
		  }
		});

		},{"./_an-object":185,"./_export":211,"./_object-gopd":252}],390:[function(require,module,exports){
		'use strict';
		// 26.1.5 Reflect.enumerate(target)
		var $export = require('./_export');
		var anObject = require('./_an-object');
		var Enumerate = function (iterated) {
		  this._t = anObject(iterated); // target
		  this._i = 0;                  // next index
		  var keys = this._k = [];      // keys
		  var key;
		  for (key in iterated) keys.push(key);
		};
		require('./_iter-create')(Enumerate, 'Object', function () {
		  var that = this;
		  var keys = that._k;
		  var key;
		  do {
		    if (that._i >= keys.length) return { value: undefined, done: true };
		  } while (!((key = keys[that._i++]) in that._t));
		  return { value: key, done: false };
		});

		$export($export.S, 'Reflect', {
		  enumerate: function enumerate(target) {
		    return new Enumerate(target);
		  }
		});

		},{"./_an-object":185,"./_export":211,"./_iter-create":232}],391:[function(require,module,exports){
		// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
		var gOPD = require('./_object-gopd');
		var $export = require('./_export');
		var anObject = require('./_an-object');

		$export($export.S, 'Reflect', {
		  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
		    return gOPD.f(anObject(target), propertyKey);
		  }
		});

		},{"./_an-object":185,"./_export":211,"./_object-gopd":252}],392:[function(require,module,exports){
		// 26.1.8 Reflect.getPrototypeOf(target)
		var $export = require('./_export');
		var getProto = require('./_object-gpo');
		var anObject = require('./_an-object');

		$export($export.S, 'Reflect', {
		  getPrototypeOf: function getPrototypeOf(target) {
		    return getProto(anObject(target));
		  }
		});

		},{"./_an-object":185,"./_export":211,"./_object-gpo":256}],393:[function(require,module,exports){
		// 26.1.6 Reflect.get(target, propertyKey [, receiver])
		var gOPD = require('./_object-gopd');
		var getPrototypeOf = require('./_object-gpo');
		var has = require('./_has');
		var $export = require('./_export');
		var isObject = require('./_is-object');
		var anObject = require('./_an-object');

		function get(target, propertyKey /* , receiver */) {
		  var receiver = arguments.length < 3 ? target : arguments[2];
		  var desc, proto;
		  if (anObject(target) === receiver) return target[propertyKey];
		  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
		    ? desc.value
		    : desc.get !== undefined
		      ? desc.get.call(receiver)
		      : undefined;
		  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
		}

		$export($export.S, 'Reflect', { get: get });

		},{"./_an-object":185,"./_export":211,"./_has":219,"./_is-object":229,"./_object-gopd":252,"./_object-gpo":256}],394:[function(require,module,exports){
		// 26.1.9 Reflect.has(target, propertyKey)
		var $export = require('./_export');

		$export($export.S, 'Reflect', {
		  has: function has(target, propertyKey) {
		    return propertyKey in target;
		  }
		});

		},{"./_export":211}],395:[function(require,module,exports){
		// 26.1.10 Reflect.isExtensible(target)
		var $export = require('./_export');
		var anObject = require('./_an-object');
		var $isExtensible = Object.isExtensible;

		$export($export.S, 'Reflect', {
		  isExtensible: function isExtensible(target) {
		    anObject(target);
		    return $isExtensible ? $isExtensible(target) : true;
		  }
		});

		},{"./_an-object":185,"./_export":211}],396:[function(require,module,exports){
		// 26.1.11 Reflect.ownKeys(target)
		var $export = require('./_export');

		$export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });

		},{"./_export":211,"./_own-keys":262}],397:[function(require,module,exports){
		// 26.1.12 Reflect.preventExtensions(target)
		var $export = require('./_export');
		var anObject = require('./_an-object');
		var $preventExtensions = Object.preventExtensions;

		$export($export.S, 'Reflect', {
		  preventExtensions: function preventExtensions(target) {
		    anObject(target);
		    try {
		      if ($preventExtensions) $preventExtensions(target);
		      return true;
		    } catch (e) {
		      return false;
		    }
		  }
		});

		},{"./_an-object":185,"./_export":211}],398:[function(require,module,exports){
		// 26.1.14 Reflect.setPrototypeOf(target, proto)
		var $export = require('./_export');
		var setProto = require('./_set-proto');

		if (setProto) $export($export.S, 'Reflect', {
		  setPrototypeOf: function setPrototypeOf(target, proto) {
		    setProto.check(target, proto);
		    try {
		      setProto.set(target, proto);
		      return true;
		    } catch (e) {
		      return false;
		    }
		  }
		});

		},{"./_export":211,"./_set-proto":274}],399:[function(require,module,exports){
		// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
		var dP = require('./_object-dp');
		var gOPD = require('./_object-gopd');
		var getPrototypeOf = require('./_object-gpo');
		var has = require('./_has');
		var $export = require('./_export');
		var createDesc = require('./_property-desc');
		var anObject = require('./_an-object');
		var isObject = require('./_is-object');

		function set(target, propertyKey, V /* , receiver */) {
		  var receiver = arguments.length < 4 ? target : arguments[3];
		  var ownDesc = gOPD.f(anObject(target), propertyKey);
		  var existingDescriptor, proto;
		  if (!ownDesc) {
		    if (isObject(proto = getPrototypeOf(target))) {
		      return set(proto, propertyKey, V, receiver);
		    }
		    ownDesc = createDesc(0);
		  }
		  if (has(ownDesc, 'value')) {
		    if (ownDesc.writable === false || !isObject(receiver)) return false;
		    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
		      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
		      existingDescriptor.value = V;
		      dP.f(receiver, propertyKey, existingDescriptor);
		    } else dP.f(receiver, propertyKey, createDesc(0, V));
		    return true;
		  }
		  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
		}

		$export($export.S, 'Reflect', { set: set });

		},{"./_an-object":185,"./_export":211,"./_has":219,"./_is-object":229,"./_object-dp":249,"./_object-gopd":252,"./_object-gpo":256,"./_property-desc":267}],400:[function(require,module,exports){
		var global = require('./_global');
		var inheritIfRequired = require('./_inherit-if-required');
		var dP = require('./_object-dp').f;
		var gOPN = require('./_object-gopn').f;
		var isRegExp = require('./_is-regexp');
		var $flags = require('./_flags');
		var $RegExp = global.RegExp;
		var Base = $RegExp;
		var proto = $RegExp.prototype;
		var re1 = /a/g;
		var re2 = /a/g;
		// "new" creates a new object, old webkit buggy here
		var CORRECT_NEW = new $RegExp(re1) !== re1;

		if (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {
		  re2[require('./_wks')('match')] = false;
		  // RegExp constructor can alter flags and IsRegExp works correct with @@match
		  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
		}))) {
		  $RegExp = function RegExp(p, f) {
		    var tiRE = this instanceof $RegExp;
		    var piRE = isRegExp(p);
		    var fiU = f === undefined;
		    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
		      : inheritIfRequired(CORRECT_NEW
		        ? new Base(piRE && !fiU ? p.source : p, f)
		        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
		      , tiRE ? this : proto, $RegExp);
		  };
		  var proxy = function (key) {
		    key in $RegExp || dP($RegExp, key, {
		      configurable: true,
		      get: function () { return Base[key]; },
		      set: function (it) { Base[key] = it; }
		    });
		  };
		  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
		  proto.constructor = $RegExp;
		  $RegExp.prototype = proto;
		  require('./_redefine')(global, 'RegExp', $RegExp);
		}

		require('./_set-species')('RegExp');

		},{"./_descriptors":207,"./_fails":213,"./_flags":215,"./_global":218,"./_inherit-if-required":223,"./_is-regexp":230,"./_object-dp":249,"./_object-gopn":254,"./_redefine":269,"./_set-species":275,"./_wks":304}],401:[function(require,module,exports){
		// 21.2.5.3 get RegExp.prototype.flags()
		if (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {
		  configurable: true,
		  get: require('./_flags')
		});

		},{"./_descriptors":207,"./_flags":215,"./_object-dp":249}],402:[function(require,module,exports){
		// @@match logic
		require('./_fix-re-wks')('match', 1, function (defined, MATCH, $match) {
		  // 21.1.3.11 String.prototype.match(regexp)
		  return [function match(regexp) {
		    'use strict';
		    var O = defined(this);
		    var fn = regexp == undefined ? undefined : regexp[MATCH];
		    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
		  }, $match];
		});

		},{"./_fix-re-wks":214}],403:[function(require,module,exports){
		// @@replace logic
		require('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace) {
		  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
		  return [function replace(searchValue, replaceValue) {
		    'use strict';
		    var O = defined(this);
		    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
		    return fn !== undefined
		      ? fn.call(searchValue, O, replaceValue)
		      : $replace.call(String(O), searchValue, replaceValue);
		  }, $replace];
		});

		},{"./_fix-re-wks":214}],404:[function(require,module,exports){
		// @@search logic
		require('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search) {
		  // 21.1.3.15 String.prototype.search(regexp)
		  return [function search(regexp) {
		    'use strict';
		    var O = defined(this);
		    var fn = regexp == undefined ? undefined : regexp[SEARCH];
		    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
		  }, $search];
		});

		},{"./_fix-re-wks":214}],405:[function(require,module,exports){
		// @@split logic
		require('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {
		  'use strict';
		  var isRegExp = require('./_is-regexp');
		  var _split = $split;
		  var $push = [].push;
		  var $SPLIT = 'split';
		  var LENGTH = 'length';
		  var LAST_INDEX = 'lastIndex';
		  if (
		    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
		    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
		    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
		    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
		    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
		    ''[$SPLIT](/.?/)[LENGTH]
		  ) {
		    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
		    // based on es5-shim implementation, need to rework it
		    $split = function (separator, limit) {
		      var string = String(this);
		      if (separator === undefined && limit === 0) return [];
		      // If `separator` is not a regex, use native split
		      if (!isRegExp(separator)) return _split.call(string, separator, limit);
		      var output = [];
		      var flags = (separator.ignoreCase ? 'i' : '') +
		                  (separator.multiline ? 'm' : '') +
		                  (separator.unicode ? 'u' : '') +
		                  (separator.sticky ? 'y' : '');
		      var lastLastIndex = 0;
		      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
		      // Make `global` and avoid `lastIndex` issues by working with a copy
		      var separatorCopy = new RegExp(separator.source, flags + 'g');
		      var separator2, match, lastIndex, lastLength, i;
		      // Doesn't need flags gy, but they don't hurt
		      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
		      while (match = separatorCopy.exec(string)) {
		        // `separatorCopy.lastIndex` is not reliable cross-browser
		        lastIndex = match.index + match[0][LENGTH];
		        if (lastIndex > lastLastIndex) {
		          output.push(string.slice(lastLastIndex, match.index));
		          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
		          // eslint-disable-next-line no-loop-func
		          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {
		            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;
		          });
		          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
		          lastLength = match[0][LENGTH];
		          lastLastIndex = lastIndex;
		          if (output[LENGTH] >= splitLimit) break;
		        }
		        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
		      }
		      if (lastLastIndex === string[LENGTH]) {
		        if (lastLength || !separatorCopy.test('')) output.push('');
		      } else output.push(string.slice(lastLastIndex));
		      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
		    };
		  // Chakra, V8
		  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
		    $split = function (separator, limit) {
		      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
		    };
		  }
		  // 21.1.3.17 String.prototype.split(separator, limit)
		  return [function split(separator, limit) {
		    var O = defined(this);
		    var fn = separator == undefined ? undefined : separator[SPLIT];
		    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
		  }, $split];
		});

		},{"./_fix-re-wks":214,"./_is-regexp":230}],406:[function(require,module,exports){
		'use strict';
		require('./es6.regexp.flags');
		var anObject = require('./_an-object');
		var $flags = require('./_flags');
		var DESCRIPTORS = require('./_descriptors');
		var TO_STRING = 'toString';
		var $toString = /./[TO_STRING];

		var define = function (fn) {
		  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);
		};

		// 21.2.5.14 RegExp.prototype.toString()
		if (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
		  define(function toString() {
		    var R = anObject(this);
		    return '/'.concat(R.source, '/',
		      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
		  });
		// FF44- RegExp#toString has a wrong name
		} else if ($toString.name != TO_STRING) {
		  define(function toString() {
		    return $toString.call(this);
		  });
		}

		},{"./_an-object":185,"./_descriptors":207,"./_fails":213,"./_flags":215,"./_redefine":269,"./es6.regexp.flags":401}],407:[function(require,module,exports){
		'use strict';
		var strong = require('./_collection-strong');
		var validate = require('./_validate-collection');
		var SET = 'Set';

		// 23.2 Set Objects
		module.exports = require('./_collection')(SET, function (get) {
		  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
		}, {
		  // 23.2.3.1 Set.prototype.add(value)
		  add: function add(value) {
		    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
		  }
		}, strong);

		},{"./_collection":200,"./_collection-strong":197,"./_validate-collection":301}],408:[function(require,module,exports){
		'use strict';
		// B.2.3.2 String.prototype.anchor(name)
		require('./_string-html')('anchor', function (createHTML) {
		  return function anchor(name) {
		    return createHTML(this, 'a', 'name', name);
		  };
		});

		},{"./_string-html":283}],409:[function(require,module,exports){
		'use strict';
		// B.2.3.3 String.prototype.big()
		require('./_string-html')('big', function (createHTML) {
		  return function big() {
		    return createHTML(this, 'big', '', '');
		  };
		});

		},{"./_string-html":283}],410:[function(require,module,exports){
		'use strict';
		// B.2.3.4 String.prototype.blink()
		require('./_string-html')('blink', function (createHTML) {
		  return function blink() {
		    return createHTML(this, 'blink', '', '');
		  };
		});

		},{"./_string-html":283}],411:[function(require,module,exports){
		'use strict';
		// B.2.3.5 String.prototype.bold()
		require('./_string-html')('bold', function (createHTML) {
		  return function bold() {
		    return createHTML(this, 'b', '', '');
		  };
		});

		},{"./_string-html":283}],412:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var $at = require('./_string-at')(false);
		$export($export.P, 'String', {
		  // 21.1.3.3 String.prototype.codePointAt(pos)
		  codePointAt: function codePointAt(pos) {
		    return $at(this, pos);
		  }
		});

		},{"./_export":211,"./_string-at":281}],413:[function(require,module,exports){
		// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
		'use strict';
		var $export = require('./_export');
		var toLength = require('./_to-length');
		var context = require('./_string-context');
		var ENDS_WITH = 'endsWith';
		var $endsWith = ''[ENDS_WITH];

		$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {
		  endsWith: function endsWith(searchString /* , endPosition = @length */) {
		    var that = context(this, searchString, ENDS_WITH);
		    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
		    var len = toLength(that.length);
		    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
		    var search = String(searchString);
		    return $endsWith
		      ? $endsWith.call(that, search, end)
		      : that.slice(end - search.length, end) === search;
		  }
		});

		},{"./_export":211,"./_fails-is-regexp":212,"./_string-context":282,"./_to-length":293}],414:[function(require,module,exports){
		'use strict';
		// B.2.3.6 String.prototype.fixed()
		require('./_string-html')('fixed', function (createHTML) {
		  return function fixed() {
		    return createHTML(this, 'tt', '', '');
		  };
		});

		},{"./_string-html":283}],415:[function(require,module,exports){
		'use strict';
		// B.2.3.7 String.prototype.fontcolor(color)
		require('./_string-html')('fontcolor', function (createHTML) {
		  return function fontcolor(color) {
		    return createHTML(this, 'font', 'color', color);
		  };
		});

		},{"./_string-html":283}],416:[function(require,module,exports){
		'use strict';
		// B.2.3.8 String.prototype.fontsize(size)
		require('./_string-html')('fontsize', function (createHTML) {
		  return function fontsize(size) {
		    return createHTML(this, 'font', 'size', size);
		  };
		});

		},{"./_string-html":283}],417:[function(require,module,exports){
		var $export = require('./_export');
		var toAbsoluteIndex = require('./_to-absolute-index');
		var fromCharCode = String.fromCharCode;
		var $fromCodePoint = String.fromCodePoint;

		// length should be 1, old FF problem
		$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
		  // 21.1.2.2 String.fromCodePoint(...codePoints)
		  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
		    var res = [];
		    var aLen = arguments.length;
		    var i = 0;
		    var code;
		    while (aLen > i) {
		      code = +arguments[i++];
		      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
		      res.push(code < 0x10000
		        ? fromCharCode(code)
		        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
		      );
		    } return res.join('');
		  }
		});

		},{"./_export":211,"./_to-absolute-index":289}],418:[function(require,module,exports){
		// 21.1.3.7 String.prototype.includes(searchString, position = 0)
		'use strict';
		var $export = require('./_export');
		var context = require('./_string-context');
		var INCLUDES = 'includes';

		$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {
		  includes: function includes(searchString /* , position = 0 */) {
		    return !!~context(this, searchString, INCLUDES)
		      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
		  }
		});

		},{"./_export":211,"./_fails-is-regexp":212,"./_string-context":282}],419:[function(require,module,exports){
		'use strict';
		// B.2.3.9 String.prototype.italics()
		require('./_string-html')('italics', function (createHTML) {
		  return function italics() {
		    return createHTML(this, 'i', '', '');
		  };
		});

		},{"./_string-html":283}],420:[function(require,module,exports){
		'use strict';
		var $at = require('./_string-at')(true);

		// 21.1.3.27 String.prototype[@@iterator]()
		require('./_iter-define')(String, 'String', function (iterated) {
		  this._t = String(iterated); // target
		  this._i = 0;                // next index
		// 21.1.5.2.1 %StringIteratorPrototype%.next()
		}, function () {
		  var O = this._t;
		  var index = this._i;
		  var point;
		  if (index >= O.length) return { value: undefined, done: true };
		  point = $at(O, index);
		  this._i += point.length;
		  return { value: point, done: false };
		});

		},{"./_iter-define":233,"./_string-at":281}],421:[function(require,module,exports){
		'use strict';
		// B.2.3.10 String.prototype.link(url)
		require('./_string-html')('link', function (createHTML) {
		  return function link(url) {
		    return createHTML(this, 'a', 'href', url);
		  };
		});

		},{"./_string-html":283}],422:[function(require,module,exports){
		var $export = require('./_export');
		var toIObject = require('./_to-iobject');
		var toLength = require('./_to-length');

		$export($export.S, 'String', {
		  // 21.1.2.4 String.raw(callSite, ...substitutions)
		  raw: function raw(callSite) {
		    var tpl = toIObject(callSite.raw);
		    var len = toLength(tpl.length);
		    var aLen = arguments.length;
		    var res = [];
		    var i = 0;
		    while (len > i) {
		      res.push(String(tpl[i++]));
		      if (i < aLen) res.push(String(arguments[i]));
		    } return res.join('');
		  }
		});

		},{"./_export":211,"./_to-iobject":292,"./_to-length":293}],423:[function(require,module,exports){
		var $export = require('./_export');

		$export($export.P, 'String', {
		  // 21.1.3.13 String.prototype.repeat(count)
		  repeat: require('./_string-repeat')
		});

		},{"./_export":211,"./_string-repeat":285}],424:[function(require,module,exports){
		'use strict';
		// B.2.3.11 String.prototype.small()
		require('./_string-html')('small', function (createHTML) {
		  return function small() {
		    return createHTML(this, 'small', '', '');
		  };
		});

		},{"./_string-html":283}],425:[function(require,module,exports){
		// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
		'use strict';
		var $export = require('./_export');
		var toLength = require('./_to-length');
		var context = require('./_string-context');
		var STARTS_WITH = 'startsWith';
		var $startsWith = ''[STARTS_WITH];

		$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {
		  startsWith: function startsWith(searchString /* , position = 0 */) {
		    var that = context(this, searchString, STARTS_WITH);
		    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
		    var search = String(searchString);
		    return $startsWith
		      ? $startsWith.call(that, search, index)
		      : that.slice(index, index + search.length) === search;
		  }
		});

		},{"./_export":211,"./_fails-is-regexp":212,"./_string-context":282,"./_to-length":293}],426:[function(require,module,exports){
		'use strict';
		// B.2.3.12 String.prototype.strike()
		require('./_string-html')('strike', function (createHTML) {
		  return function strike() {
		    return createHTML(this, 'strike', '', '');
		  };
		});

		},{"./_string-html":283}],427:[function(require,module,exports){
		'use strict';
		// B.2.3.13 String.prototype.sub()
		require('./_string-html')('sub', function (createHTML) {
		  return function sub() {
		    return createHTML(this, 'sub', '', '');
		  };
		});

		},{"./_string-html":283}],428:[function(require,module,exports){
		'use strict';
		// B.2.3.14 String.prototype.sup()
		require('./_string-html')('sup', function (createHTML) {
		  return function sup() {
		    return createHTML(this, 'sup', '', '');
		  };
		});

		},{"./_string-html":283}],429:[function(require,module,exports){
		'use strict';
		// 21.1.3.25 String.prototype.trim()
		require('./_string-trim')('trim', function ($trim) {
		  return function trim() {
		    return $trim(this, 3);
		  };
		});

		},{"./_string-trim":286}],430:[function(require,module,exports){
		'use strict';
		// ECMAScript 6 symbols shim
		var global = require('./_global');
		var has = require('./_has');
		var DESCRIPTORS = require('./_descriptors');
		var $export = require('./_export');
		var redefine = require('./_redefine');
		var META = require('./_meta').KEY;
		var $fails = require('./_fails');
		var shared = require('./_shared');
		var setToStringTag = require('./_set-to-string-tag');
		var uid = require('./_uid');
		var wks = require('./_wks');
		var wksExt = require('./_wks-ext');
		var wksDefine = require('./_wks-define');
		var enumKeys = require('./_enum-keys');
		var isArray = require('./_is-array');
		var anObject = require('./_an-object');
		var isObject = require('./_is-object');
		var toIObject = require('./_to-iobject');
		var toPrimitive = require('./_to-primitive');
		var createDesc = require('./_property-desc');
		var _create = require('./_object-create');
		var gOPNExt = require('./_object-gopn-ext');
		var $GOPD = require('./_object-gopd');
		var $DP = require('./_object-dp');
		var $keys = require('./_object-keys');
		var gOPD = $GOPD.f;
		var dP = $DP.f;
		var gOPN = gOPNExt.f;
		var $Symbol = global.Symbol;
		var $JSON = global.JSON;
		var _stringify = $JSON && $JSON.stringify;
		var PROTOTYPE = 'prototype';
		var HIDDEN = wks('_hidden');
		var TO_PRIMITIVE = wks('toPrimitive');
		var isEnum = {}.propertyIsEnumerable;
		var SymbolRegistry = shared('symbol-registry');
		var AllSymbols = shared('symbols');
		var OPSymbols = shared('op-symbols');
		var ObjectProto = Object[PROTOTYPE];
		var USE_NATIVE = typeof $Symbol == 'function';
		var QObject = global.QObject;
		// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
		var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

		// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
		var setSymbolDesc = DESCRIPTORS && $fails(function () {
		  return _create(dP({}, 'a', {
		    get: function () { return dP(this, 'a', { value: 7 }).a; }
		  })).a != 7;
		}) ? function (it, key, D) {
		  var protoDesc = gOPD(ObjectProto, key);
		  if (protoDesc) delete ObjectProto[key];
		  dP(it, key, D);
		  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
		} : dP;

		var wrap = function (tag) {
		  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
		  sym._k = tag;
		  return sym;
		};

		var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
		  return typeof it == 'symbol';
		} : function (it) {
		  return it instanceof $Symbol;
		};

		var $defineProperty = function defineProperty(it, key, D) {
		  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
		  anObject(it);
		  key = toPrimitive(key, true);
		  anObject(D);
		  if (has(AllSymbols, key)) {
		    if (!D.enumerable) {
		      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
		      it[HIDDEN][key] = true;
		    } else {
		      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
		      D = _create(D, { enumerable: createDesc(0, false) });
		    } return setSymbolDesc(it, key, D);
		  } return dP(it, key, D);
		};
		var $defineProperties = function defineProperties(it, P) {
		  anObject(it);
		  var keys = enumKeys(P = toIObject(P));
		  var i = 0;
		  var l = keys.length;
		  var key;
		  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
		  return it;
		};
		var $create = function create(it, P) {
		  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
		};
		var $propertyIsEnumerable = function propertyIsEnumerable(key) {
		  var E = isEnum.call(this, key = toPrimitive(key, true));
		  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
		  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
		};
		var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
		  it = toIObject(it);
		  key = toPrimitive(key, true);
		  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
		  var D = gOPD(it, key);
		  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
		  return D;
		};
		var $getOwnPropertyNames = function getOwnPropertyNames(it) {
		  var names = gOPN(toIObject(it));
		  var result = [];
		  var i = 0;
		  var key;
		  while (names.length > i) {
		    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
		  } return result;
		};
		var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
		  var IS_OP = it === ObjectProto;
		  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
		  var result = [];
		  var i = 0;
		  var key;
		  while (names.length > i) {
		    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
		  } return result;
		};

		// 19.4.1.1 Symbol([description])
		if (!USE_NATIVE) {
		  $Symbol = function Symbol() {
		    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
		    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
		    var $set = function (value) {
		      if (this === ObjectProto) $set.call(OPSymbols, value);
		      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
		      setSymbolDesc(this, tag, createDesc(1, value));
		    };
		    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
		    return wrap(tag);
		  };
		  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
		    return this._k;
		  });

		  $GOPD.f = $getOwnPropertyDescriptor;
		  $DP.f = $defineProperty;
		  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
		  require('./_object-pie').f = $propertyIsEnumerable;
		  require('./_object-gops').f = $getOwnPropertySymbols;

		  if (DESCRIPTORS && !require('./_library')) {
		    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
		  }

		  wksExt.f = function (name) {
		    return wrap(wks(name));
		  };
		}

		$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

		for (var es6Symbols = (
		  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
		  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
		).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

		for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

		$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
		  // 19.4.2.1 Symbol.for(key)
		  'for': function (key) {
		    return has(SymbolRegistry, key += '')
		      ? SymbolRegistry[key]
		      : SymbolRegistry[key] = $Symbol(key);
		  },
		  // 19.4.2.5 Symbol.keyFor(sym)
		  keyFor: function keyFor(sym) {
		    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
		    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
		  },
		  useSetter: function () { setter = true; },
		  useSimple: function () { setter = false; }
		});

		$export($export.S + $export.F * !USE_NATIVE, 'Object', {
		  // 19.1.2.2 Object.create(O [, Properties])
		  create: $create,
		  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
		  defineProperty: $defineProperty,
		  // 19.1.2.3 Object.defineProperties(O, Properties)
		  defineProperties: $defineProperties,
		  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
		  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
		  // 19.1.2.7 Object.getOwnPropertyNames(O)
		  getOwnPropertyNames: $getOwnPropertyNames,
		  // 19.1.2.8 Object.getOwnPropertySymbols(O)
		  getOwnPropertySymbols: $getOwnPropertySymbols
		});

		// 24.3.2 JSON.stringify(value [, replacer [, space]])
		$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
		  var S = $Symbol();
		  // MS Edge converts symbol values to JSON as {}
		  // WebKit converts symbol values to JSON as null
		  // V8 throws on boxed symbols
		  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
		})), 'JSON', {
		  stringify: function stringify(it) {
		    var args = [it];
		    var i = 1;
		    var replacer, $replacer;
		    while (arguments.length > i) args.push(arguments[i++]);
		    $replacer = replacer = args[1];
		    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
		    if (!isArray(replacer)) replacer = function (key, value) {
		      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
		      if (!isSymbol(value)) return value;
		    };
		    args[1] = replacer;
		    return _stringify.apply($JSON, args);
		  }
		});

		// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
		$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
		// 19.4.3.5 Symbol.prototype[@@toStringTag]
		setToStringTag($Symbol, 'Symbol');
		// 20.2.1.9 Math[@@toStringTag]
		setToStringTag(Math, 'Math', true);
		// 24.3.3 JSON[@@toStringTag]
		setToStringTag(global.JSON, 'JSON', true);

		},{"./_an-object":185,"./_descriptors":207,"./_enum-keys":210,"./_export":211,"./_fails":213,"./_global":218,"./_has":219,"./_hide":220,"./_is-array":227,"./_is-object":229,"./_library":237,"./_meta":243,"./_object-create":248,"./_object-dp":249,"./_object-gopd":252,"./_object-gopn":254,"./_object-gopn-ext":253,"./_object-gops":255,"./_object-keys":258,"./_object-pie":259,"./_property-desc":267,"./_redefine":269,"./_set-to-string-tag":276,"./_shared":278,"./_to-iobject":292,"./_to-primitive":295,"./_uid":299,"./_wks":304,"./_wks-define":302,"./_wks-ext":303}],431:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var $typed = require('./_typed');
		var buffer = require('./_typed-buffer');
		var anObject = require('./_an-object');
		var toAbsoluteIndex = require('./_to-absolute-index');
		var toLength = require('./_to-length');
		var isObject = require('./_is-object');
		var ArrayBuffer = require('./_global').ArrayBuffer;
		var speciesConstructor = require('./_species-constructor');
		var $ArrayBuffer = buffer.ArrayBuffer;
		var $DataView = buffer.DataView;
		var $isView = $typed.ABV && ArrayBuffer.isView;
		var $slice = $ArrayBuffer.prototype.slice;
		var VIEW = $typed.VIEW;
		var ARRAY_BUFFER = 'ArrayBuffer';

		$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });

		$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
		  // 24.1.3.1 ArrayBuffer.isView(arg)
		  isView: function isView(it) {
		    return $isView && $isView(it) || isObject(it) && VIEW in it;
		  }
		});

		$export($export.P + $export.U + $export.F * require('./_fails')(function () {
		  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
		}), ARRAY_BUFFER, {
		  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
		  slice: function slice(start, end) {
		    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
		    var len = anObject(this).byteLength;
		    var first = toAbsoluteIndex(start, len);
		    var final = toAbsoluteIndex(end === undefined ? len : end, len);
		    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first));
		    var viewS = new $DataView(this);
		    var viewT = new $DataView(result);
		    var index = 0;
		    while (first < final) {
		      viewT.setUint8(index++, viewS.getUint8(first++));
		    } return result;
		  }
		});

		require('./_set-species')(ARRAY_BUFFER);

		},{"./_an-object":185,"./_export":211,"./_fails":213,"./_global":218,"./_is-object":229,"./_set-species":275,"./_species-constructor":279,"./_to-absolute-index":289,"./_to-length":293,"./_typed":298,"./_typed-buffer":297}],432:[function(require,module,exports){
		var $export = require('./_export');
		$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {
		  DataView: require('./_typed-buffer').DataView
		});

		},{"./_export":211,"./_typed":298,"./_typed-buffer":297}],433:[function(require,module,exports){
		require('./_typed-array')('Float32', 4, function (init) {
		  return function Float32Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});

		},{"./_typed-array":296}],434:[function(require,module,exports){
		require('./_typed-array')('Float64', 8, function (init) {
		  return function Float64Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});

		},{"./_typed-array":296}],435:[function(require,module,exports){
		require('./_typed-array')('Int16', 2, function (init) {
		  return function Int16Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});

		},{"./_typed-array":296}],436:[function(require,module,exports){
		require('./_typed-array')('Int32', 4, function (init) {
		  return function Int32Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});

		},{"./_typed-array":296}],437:[function(require,module,exports){
		require('./_typed-array')('Int8', 1, function (init) {
		  return function Int8Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});

		},{"./_typed-array":296}],438:[function(require,module,exports){
		require('./_typed-array')('Uint16', 2, function (init) {
		  return function Uint16Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});

		},{"./_typed-array":296}],439:[function(require,module,exports){
		require('./_typed-array')('Uint32', 4, function (init) {
		  return function Uint32Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});

		},{"./_typed-array":296}],440:[function(require,module,exports){
		require('./_typed-array')('Uint8', 1, function (init) {
		  return function Uint8Array(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		});

		},{"./_typed-array":296}],441:[function(require,module,exports){
		require('./_typed-array')('Uint8', 1, function (init) {
		  return function Uint8ClampedArray(data, byteOffset, length) {
		    return init(this, data, byteOffset, length);
		  };
		}, true);

		},{"./_typed-array":296}],442:[function(require,module,exports){
		'use strict';
		var each = require('./_array-methods')(0);
		var redefine = require('./_redefine');
		var meta = require('./_meta');
		var assign = require('./_object-assign');
		var weak = require('./_collection-weak');
		var isObject = require('./_is-object');
		var fails = require('./_fails');
		var validate = require('./_validate-collection');
		var WEAK_MAP = 'WeakMap';
		var getWeak = meta.getWeak;
		var isExtensible = Object.isExtensible;
		var uncaughtFrozenStore = weak.ufstore;
		var tmp = {};
		var InternalMap;

		var wrapper = function (get) {
		  return function WeakMap() {
		    return get(this, arguments.length > 0 ? arguments[0] : undefined);
		  };
		};

		var methods = {
		  // 23.3.3.3 WeakMap.prototype.get(key)
		  get: function get(key) {
		    if (isObject(key)) {
		      var data = getWeak(key);
		      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
		      return data ? data[this._i] : undefined;
		    }
		  },
		  // 23.3.3.5 WeakMap.prototype.set(key, value)
		  set: function set(key, value) {
		    return weak.def(validate(this, WEAK_MAP), key, value);
		  }
		};

		// 23.3 WeakMap Objects
		var $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);

		// IE11 WeakMap frozen keys fix
		if (fails(function () { return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7; })) {
		  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
		  assign(InternalMap.prototype, methods);
		  meta.NEED = true;
		  each(['delete', 'has', 'get', 'set'], function (key) {
		    var proto = $WeakMap.prototype;
		    var method = proto[key];
		    redefine(proto, key, function (a, b) {
		      // store frozen objects on internal weakmap shim
		      if (isObject(a) && !isExtensible(a)) {
		        if (!this._f) this._f = new InternalMap();
		        var result = this._f[key](a, b);
		        return key == 'set' ? this : result;
		      // store all the rest on native weakmap
		      } return method.call(this, a, b);
		    });
		  });
		}

		},{"./_array-methods":190,"./_collection":200,"./_collection-weak":199,"./_fails":213,"./_is-object":229,"./_meta":243,"./_object-assign":247,"./_redefine":269,"./_validate-collection":301}],443:[function(require,module,exports){
		'use strict';
		var weak = require('./_collection-weak');
		var validate = require('./_validate-collection');
		var WEAK_SET = 'WeakSet';

		// 23.4 WeakSet Objects
		require('./_collection')(WEAK_SET, function (get) {
		  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
		}, {
		  // 23.4.3.1 WeakSet.prototype.add(value)
		  add: function add(value) {
		    return weak.def(validate(this, WEAK_SET), value, true);
		  }
		}, weak, false, true);

		},{"./_collection":200,"./_collection-weak":199,"./_validate-collection":301}],444:[function(require,module,exports){
		'use strict';
		// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
		var $export = require('./_export');
		var flattenIntoArray = require('./_flatten-into-array');
		var toObject = require('./_to-object');
		var toLength = require('./_to-length');
		var aFunction = require('./_a-function');
		var arraySpeciesCreate = require('./_array-species-create');

		$export($export.P, 'Array', {
		  flatMap: function flatMap(callbackfn /* , thisArg */) {
		    var O = toObject(this);
		    var sourceLen, A;
		    aFunction(callbackfn);
		    sourceLen = toLength(O.length);
		    A = arraySpeciesCreate(O, 0);
		    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
		    return A;
		  }
		});

		require('./_add-to-unscopables')('flatMap');

		},{"./_a-function":181,"./_add-to-unscopables":183,"./_array-species-create":193,"./_export":211,"./_flatten-into-array":216,"./_to-length":293,"./_to-object":294}],445:[function(require,module,exports){
		'use strict';
		// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten
		var $export = require('./_export');
		var flattenIntoArray = require('./_flatten-into-array');
		var toObject = require('./_to-object');
		var toLength = require('./_to-length');
		var toInteger = require('./_to-integer');
		var arraySpeciesCreate = require('./_array-species-create');

		$export($export.P, 'Array', {
		  flatten: function flatten(/* depthArg = 1 */) {
		    var depthArg = arguments[0];
		    var O = toObject(this);
		    var sourceLen = toLength(O.length);
		    var A = arraySpeciesCreate(O, 0);
		    flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
		    return A;
		  }
		});

		require('./_add-to-unscopables')('flatten');

		},{"./_add-to-unscopables":183,"./_array-species-create":193,"./_export":211,"./_flatten-into-array":216,"./_to-integer":291,"./_to-length":293,"./_to-object":294}],446:[function(require,module,exports){
		'use strict';
		// https://github.com/tc39/Array.prototype.includes
		var $export = require('./_export');
		var $includes = require('./_array-includes')(true);

		$export($export.P, 'Array', {
		  includes: function includes(el /* , fromIndex = 0 */) {
		    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
		  }
		});

		require('./_add-to-unscopables')('includes');

		},{"./_add-to-unscopables":183,"./_array-includes":189,"./_export":211}],447:[function(require,module,exports){
		// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
		var $export = require('./_export');
		var microtask = require('./_microtask')();
		var process = require('./_global').process;
		var isNode = require('./_cof')(process) == 'process';

		$export($export.G, {
		  asap: function asap(fn) {
		    var domain = isNode && process.domain;
		    microtask(domain ? domain.bind(fn) : fn);
		  }
		});

		},{"./_cof":196,"./_export":211,"./_global":218,"./_microtask":245}],448:[function(require,module,exports){
		// https://github.com/ljharb/proposal-is-error
		var $export = require('./_export');
		var cof = require('./_cof');

		$export($export.S, 'Error', {
		  isError: function isError(it) {
		    return cof(it) === 'Error';
		  }
		});

		},{"./_cof":196,"./_export":211}],449:[function(require,module,exports){
		// https://github.com/tc39/proposal-global
		var $export = require('./_export');

		$export($export.G, { global: require('./_global') });

		},{"./_export":211,"./_global":218}],450:[function(require,module,exports){
		// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
		require('./_set-collection-from')('Map');

		},{"./_set-collection-from":272}],451:[function(require,module,exports){
		// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
		require('./_set-collection-of')('Map');

		},{"./_set-collection-of":273}],452:[function(require,module,exports){
		// https://github.com/DavidBruant/Map-Set.prototype.toJSON
		var $export = require('./_export');

		$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });

		},{"./_collection-to-json":198,"./_export":211}],453:[function(require,module,exports){
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = require('./_export');

		$export($export.S, 'Math', {
		  clamp: function clamp(x, lower, upper) {
		    return Math.min(upper, Math.max(lower, x));
		  }
		});

		},{"./_export":211}],454:[function(require,module,exports){
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = require('./_export');

		$export($export.S, 'Math', { DEG_PER_RAD: Math.PI / 180 });

		},{"./_export":211}],455:[function(require,module,exports){
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = require('./_export');
		var RAD_PER_DEG = 180 / Math.PI;

		$export($export.S, 'Math', {
		  degrees: function degrees(radians) {
		    return radians * RAD_PER_DEG;
		  }
		});

		},{"./_export":211}],456:[function(require,module,exports){
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = require('./_export');
		var scale = require('./_math-scale');
		var fround = require('./_math-fround');

		$export($export.S, 'Math', {
		  fscale: function fscale(x, inLow, inHigh, outLow, outHigh) {
		    return fround(scale(x, inLow, inHigh, outLow, outHigh));
		  }
		});

		},{"./_export":211,"./_math-fround":239,"./_math-scale":241}],457:[function(require,module,exports){
		// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
		var $export = require('./_export');

		$export($export.S, 'Math', {
		  iaddh: function iaddh(x0, x1, y0, y1) {
		    var $x0 = x0 >>> 0;
		    var $x1 = x1 >>> 0;
		    var $y0 = y0 >>> 0;
		    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
		  }
		});

		},{"./_export":211}],458:[function(require,module,exports){
		// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
		var $export = require('./_export');

		$export($export.S, 'Math', {
		  imulh: function imulh(u, v) {
		    var UINT16 = 0xffff;
		    var $u = +u;
		    var $v = +v;
		    var u0 = $u & UINT16;
		    var v0 = $v & UINT16;
		    var u1 = $u >> 16;
		    var v1 = $v >> 16;
		    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
		    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
		  }
		});

		},{"./_export":211}],459:[function(require,module,exports){
		// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
		var $export = require('./_export');

		$export($export.S, 'Math', {
		  isubh: function isubh(x0, x1, y0, y1) {
		    var $x0 = x0 >>> 0;
		    var $x1 = x1 >>> 0;
		    var $y0 = y0 >>> 0;
		    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
		  }
		});

		},{"./_export":211}],460:[function(require,module,exports){
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = require('./_export');

		$export($export.S, 'Math', { RAD_PER_DEG: 180 / Math.PI });

		},{"./_export":211}],461:[function(require,module,exports){
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = require('./_export');
		var DEG_PER_RAD = Math.PI / 180;

		$export($export.S, 'Math', {
		  radians: function radians(degrees) {
		    return degrees * DEG_PER_RAD;
		  }
		});

		},{"./_export":211}],462:[function(require,module,exports){
		// https://rwaldron.github.io/proposal-math-extensions/
		var $export = require('./_export');

		$export($export.S, 'Math', { scale: require('./_math-scale') });

		},{"./_export":211,"./_math-scale":241}],463:[function(require,module,exports){
		// http://jfbastien.github.io/papers/Math.signbit.html
		var $export = require('./_export');

		$export($export.S, 'Math', { signbit: function signbit(x) {
		  // eslint-disable-next-line no-self-compare
		  return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;
		} });

		},{"./_export":211}],464:[function(require,module,exports){
		// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
		var $export = require('./_export');

		$export($export.S, 'Math', {
		  umulh: function umulh(u, v) {
		    var UINT16 = 0xffff;
		    var $u = +u;
		    var $v = +v;
		    var u0 = $u & UINT16;
		    var v0 = $v & UINT16;
		    var u1 = $u >>> 16;
		    var v1 = $v >>> 16;
		    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
		    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
		  }
		});

		},{"./_export":211}],465:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var toObject = require('./_to-object');
		var aFunction = require('./_a-function');
		var $defineProperty = require('./_object-dp');

		// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
		require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
		  __defineGetter__: function __defineGetter__(P, getter) {
		    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
		  }
		});

		},{"./_a-function":181,"./_descriptors":207,"./_export":211,"./_object-dp":249,"./_object-forced-pam":251,"./_to-object":294}],466:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var toObject = require('./_to-object');
		var aFunction = require('./_a-function');
		var $defineProperty = require('./_object-dp');

		// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
		require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
		  __defineSetter__: function __defineSetter__(P, setter) {
		    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
		  }
		});

		},{"./_a-function":181,"./_descriptors":207,"./_export":211,"./_object-dp":249,"./_object-forced-pam":251,"./_to-object":294}],467:[function(require,module,exports){
		// https://github.com/tc39/proposal-object-values-entries
		var $export = require('./_export');
		var $entries = require('./_object-to-array')(true);

		$export($export.S, 'Object', {
		  entries: function entries(it) {
		    return $entries(it);
		  }
		});

		},{"./_export":211,"./_object-to-array":261}],468:[function(require,module,exports){
		// https://github.com/tc39/proposal-object-getownpropertydescriptors
		var $export = require('./_export');
		var ownKeys = require('./_own-keys');
		var toIObject = require('./_to-iobject');
		var gOPD = require('./_object-gopd');
		var createProperty = require('./_create-property');

		$export($export.S, 'Object', {
		  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
		    var O = toIObject(object);
		    var getDesc = gOPD.f;
		    var keys = ownKeys(O);
		    var result = {};
		    var i = 0;
		    var key, desc;
		    while (keys.length > i) {
		      desc = getDesc(O, key = keys[i++]);
		      if (desc !== undefined) createProperty(result, key, desc);
		    }
		    return result;
		  }
		});

		},{"./_create-property":202,"./_export":211,"./_object-gopd":252,"./_own-keys":262,"./_to-iobject":292}],469:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var toObject = require('./_to-object');
		var toPrimitive = require('./_to-primitive');
		var getPrototypeOf = require('./_object-gpo');
		var getOwnPropertyDescriptor = require('./_object-gopd').f;

		// B.2.2.4 Object.prototype.__lookupGetter__(P)
		require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
		  __lookupGetter__: function __lookupGetter__(P) {
		    var O = toObject(this);
		    var K = toPrimitive(P, true);
		    var D;
		    do {
		      if (D = getOwnPropertyDescriptor(O, K)) return D.get;
		    } while (O = getPrototypeOf(O));
		  }
		});

		},{"./_descriptors":207,"./_export":211,"./_object-forced-pam":251,"./_object-gopd":252,"./_object-gpo":256,"./_to-object":294,"./_to-primitive":295}],470:[function(require,module,exports){
		'use strict';
		var $export = require('./_export');
		var toObject = require('./_to-object');
		var toPrimitive = require('./_to-primitive');
		var getPrototypeOf = require('./_object-gpo');
		var getOwnPropertyDescriptor = require('./_object-gopd').f;

		// B.2.2.5 Object.prototype.__lookupSetter__(P)
		require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
		  __lookupSetter__: function __lookupSetter__(P) {
		    var O = toObject(this);
		    var K = toPrimitive(P, true);
		    var D;
		    do {
		      if (D = getOwnPropertyDescriptor(O, K)) return D.set;
		    } while (O = getPrototypeOf(O));
		  }
		});

		},{"./_descriptors":207,"./_export":211,"./_object-forced-pam":251,"./_object-gopd":252,"./_object-gpo":256,"./_to-object":294,"./_to-primitive":295}],471:[function(require,module,exports){
		// https://github.com/tc39/proposal-object-values-entries
		var $export = require('./_export');
		var $values = require('./_object-to-array')(false);

		$export($export.S, 'Object', {
		  values: function values(it) {
		    return $values(it);
		  }
		});

		},{"./_export":211,"./_object-to-array":261}],472:[function(require,module,exports){
		'use strict';
		// https://github.com/zenparsing/es-observable
		var $export = require('./_export');
		var global = require('./_global');
		var core = require('./_core');
		var microtask = require('./_microtask')();
		var OBSERVABLE = require('./_wks')('observable');
		var aFunction = require('./_a-function');
		var anObject = require('./_an-object');
		var anInstance = require('./_an-instance');
		var redefineAll = require('./_redefine-all');
		var hide = require('./_hide');
		var forOf = require('./_for-of');
		var RETURN = forOf.RETURN;

		var getMethod = function (fn) {
		  return fn == null ? undefined : aFunction(fn);
		};

		var cleanupSubscription = function (subscription) {
		  var cleanup = subscription._c;
		  if (cleanup) {
		    subscription._c = undefined;
		    cleanup();
		  }
		};

		var subscriptionClosed = function (subscription) {
		  return subscription._o === undefined;
		};

		var closeSubscription = function (subscription) {
		  if (!subscriptionClosed(subscription)) {
		    subscription._o = undefined;
		    cleanupSubscription(subscription);
		  }
		};

		var Subscription = function (observer, subscriber) {
		  anObject(observer);
		  this._c = undefined;
		  this._o = observer;
		  observer = new SubscriptionObserver(this);
		  try {
		    var cleanup = subscriber(observer);
		    var subscription = cleanup;
		    if (cleanup != null) {
		      if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };
		      else aFunction(cleanup);
		      this._c = cleanup;
		    }
		  } catch (e) {
		    observer.error(e);
		    return;
		  } if (subscriptionClosed(this)) cleanupSubscription(this);
		};

		Subscription.prototype = redefineAll({}, {
		  unsubscribe: function unsubscribe() { closeSubscription(this); }
		});

		var SubscriptionObserver = function (subscription) {
		  this._s = subscription;
		};

		SubscriptionObserver.prototype = redefineAll({}, {
		  next: function next(value) {
		    var subscription = this._s;
		    if (!subscriptionClosed(subscription)) {
		      var observer = subscription._o;
		      try {
		        var m = getMethod(observer.next);
		        if (m) return m.call(observer, value);
		      } catch (e) {
		        try {
		          closeSubscription(subscription);
		        } finally {
		          throw e;
		        }
		      }
		    }
		  },
		  error: function error(value) {
		    var subscription = this._s;
		    if (subscriptionClosed(subscription)) throw value;
		    var observer = subscription._o;
		    subscription._o = undefined;
		    try {
		      var m = getMethod(observer.error);
		      if (!m) throw value;
		      value = m.call(observer, value);
		    } catch (e) {
		      try {
		        cleanupSubscription(subscription);
		      } finally {
		        throw e;
		      }
		    } cleanupSubscription(subscription);
		    return value;
		  },
		  complete: function complete(value) {
		    var subscription = this._s;
		    if (!subscriptionClosed(subscription)) {
		      var observer = subscription._o;
		      subscription._o = undefined;
		      try {
		        var m = getMethod(observer.complete);
		        value = m ? m.call(observer, value) : undefined;
		      } catch (e) {
		        try {
		          cleanupSubscription(subscription);
		        } finally {
		          throw e;
		        }
		      } cleanupSubscription(subscription);
		      return value;
		    }
		  }
		});

		var $Observable = function Observable(subscriber) {
		  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
		};

		redefineAll($Observable.prototype, {
		  subscribe: function subscribe(observer) {
		    return new Subscription(observer, this._f);
		  },
		  forEach: function forEach(fn) {
		    var that = this;
		    return new (core.Promise || global.Promise)(function (resolve, reject) {
		      aFunction(fn);
		      var subscription = that.subscribe({
		        next: function (value) {
		          try {
		            return fn(value);
		          } catch (e) {
		            reject(e);
		            subscription.unsubscribe();
		          }
		        },
		        error: reject,
		        complete: resolve
		      });
		    });
		  }
		});

		redefineAll($Observable, {
		  from: function from(x) {
		    var C = typeof this === 'function' ? this : $Observable;
		    var method = getMethod(anObject(x)[OBSERVABLE]);
		    if (method) {
		      var observable = anObject(method.call(x));
		      return observable.constructor === C ? observable : new C(function (observer) {
		        return observable.subscribe(observer);
		      });
		    }
		    return new C(function (observer) {
		      var done = false;
		      microtask(function () {
		        if (!done) {
		          try {
		            if (forOf(x, false, function (it) {
		              observer.next(it);
		              if (done) return RETURN;
		            }) === RETURN) return;
		          } catch (e) {
		            if (done) throw e;
		            observer.error(e);
		            return;
		          } observer.complete();
		        }
		      });
		      return function () { done = true; };
		    });
		  },
		  of: function of() {
		    for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];
		    return new (typeof this === 'function' ? this : $Observable)(function (observer) {
		      var done = false;
		      microtask(function () {
		        if (!done) {
		          for (var j = 0; j < items.length; ++j) {
		            observer.next(items[j]);
		            if (done) return;
		          } observer.complete();
		        }
		      });
		      return function () { done = true; };
		    });
		  }
		});

		hide($Observable.prototype, OBSERVABLE, function () { return this; });

		$export($export.G, { Observable: $Observable });

		require('./_set-species')('Observable');

		},{"./_a-function":181,"./_an-instance":184,"./_an-object":185,"./_core":201,"./_export":211,"./_for-of":217,"./_global":218,"./_hide":220,"./_microtask":245,"./_redefine-all":268,"./_set-species":275,"./_wks":304}],473:[function(require,module,exports){
		// https://github.com/tc39/proposal-promise-finally
		'use strict';
		var $export = require('./_export');
		var core = require('./_core');
		var global = require('./_global');
		var speciesConstructor = require('./_species-constructor');
		var promiseResolve = require('./_promise-resolve');

		$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
		  var C = speciesConstructor(this, core.Promise || global.Promise);
		  var isFunction = typeof onFinally == 'function';
		  return this.then(
		    isFunction ? function (x) {
		      return promiseResolve(C, onFinally()).then(function () { return x; });
		    } : onFinally,
		    isFunction ? function (e) {
		      return promiseResolve(C, onFinally()).then(function () { throw e; });
		    } : onFinally
		  );
		} });

		},{"./_core":201,"./_export":211,"./_global":218,"./_promise-resolve":266,"./_species-constructor":279}],474:[function(require,module,exports){
		'use strict';
		// https://github.com/tc39/proposal-promise-try
		var $export = require('./_export');
		var newPromiseCapability = require('./_new-promise-capability');
		var perform = require('./_perform');

		$export($export.S, 'Promise', { 'try': function (callbackfn) {
		  var promiseCapability = newPromiseCapability.f(this);
		  var result = perform(callbackfn);
		  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
		  return promiseCapability.promise;
		} });

		},{"./_export":211,"./_new-promise-capability":246,"./_perform":265}],475:[function(require,module,exports){
		var metadata = require('./_metadata');
		var anObject = require('./_an-object');
		var toMetaKey = metadata.key;
		var ordinaryDefineOwnMetadata = metadata.set;

		metadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
		  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
		} });

		},{"./_an-object":185,"./_metadata":244}],476:[function(require,module,exports){
		var metadata = require('./_metadata');
		var anObject = require('./_an-object');
		var toMetaKey = metadata.key;
		var getOrCreateMetadataMap = metadata.map;
		var store = metadata.store;

		metadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {
		  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);
		  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
		  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;
		  if (metadataMap.size) return true;
		  var targetMetadata = store.get(target);
		  targetMetadata['delete'](targetKey);
		  return !!targetMetadata.size || store['delete'](target);
		} });

		},{"./_an-object":185,"./_metadata":244}],477:[function(require,module,exports){
		var Set = require('./es6.set');
		var from = require('./_array-from-iterable');
		var metadata = require('./_metadata');
		var anObject = require('./_an-object');
		var getPrototypeOf = require('./_object-gpo');
		var ordinaryOwnMetadataKeys = metadata.keys;
		var toMetaKey = metadata.key;

		var ordinaryMetadataKeys = function (O, P) {
		  var oKeys = ordinaryOwnMetadataKeys(O, P);
		  var parent = getPrototypeOf(O);
		  if (parent === null) return oKeys;
		  var pKeys = ordinaryMetadataKeys(parent, P);
		  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
		};

		metadata.exp({ getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {
		  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
		} });

		},{"./_an-object":185,"./_array-from-iterable":188,"./_metadata":244,"./_object-gpo":256,"./es6.set":407}],478:[function(require,module,exports){
		var metadata = require('./_metadata');
		var anObject = require('./_an-object');
		var getPrototypeOf = require('./_object-gpo');
		var ordinaryHasOwnMetadata = metadata.has;
		var ordinaryGetOwnMetadata = metadata.get;
		var toMetaKey = metadata.key;

		var ordinaryGetMetadata = function (MetadataKey, O, P) {
		  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
		  if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
		  var parent = getPrototypeOf(O);
		  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
		};

		metadata.exp({ getMetadata: function getMetadata(metadataKey, target /* , targetKey */) {
		  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
		} });

		},{"./_an-object":185,"./_metadata":244,"./_object-gpo":256}],479:[function(require,module,exports){
		var metadata = require('./_metadata');
		var anObject = require('./_an-object');
		var ordinaryOwnMetadataKeys = metadata.keys;
		var toMetaKey = metadata.key;

		metadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /* , targetKey */) {
		  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
		} });

		},{"./_an-object":185,"./_metadata":244}],480:[function(require,module,exports){
		var metadata = require('./_metadata');
		var anObject = require('./_an-object');
		var ordinaryGetOwnMetadata = metadata.get;
		var toMetaKey = metadata.key;

		metadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /* , targetKey */) {
		  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
		    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
		} });

		},{"./_an-object":185,"./_metadata":244}],481:[function(require,module,exports){
		var metadata = require('./_metadata');
		var anObject = require('./_an-object');
		var getPrototypeOf = require('./_object-gpo');
		var ordinaryHasOwnMetadata = metadata.has;
		var toMetaKey = metadata.key;

		var ordinaryHasMetadata = function (MetadataKey, O, P) {
		  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
		  if (hasOwn) return true;
		  var parent = getPrototypeOf(O);
		  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
		};

		metadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /* , targetKey */) {
		  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
		} });

		},{"./_an-object":185,"./_metadata":244,"./_object-gpo":256}],482:[function(require,module,exports){
		var metadata = require('./_metadata');
		var anObject = require('./_an-object');
		var ordinaryHasOwnMetadata = metadata.has;
		var toMetaKey = metadata.key;

		metadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */) {
		  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
		    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
		} });

		},{"./_an-object":185,"./_metadata":244}],483:[function(require,module,exports){
		var $metadata = require('./_metadata');
		var anObject = require('./_an-object');
		var aFunction = require('./_a-function');
		var toMetaKey = $metadata.key;
		var ordinaryDefineOwnMetadata = $metadata.set;

		$metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {
		  return function decorator(target, targetKey) {
		    ordinaryDefineOwnMetadata(
		      metadataKey, metadataValue,
		      (targetKey !== undefined ? anObject : aFunction)(target),
		      toMetaKey(targetKey)
		    );
		  };
		} });

		},{"./_a-function":181,"./_an-object":185,"./_metadata":244}],484:[function(require,module,exports){
		// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
		require('./_set-collection-from')('Set');

		},{"./_set-collection-from":272}],485:[function(require,module,exports){
		// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
		require('./_set-collection-of')('Set');

		},{"./_set-collection-of":273}],486:[function(require,module,exports){
		// https://github.com/DavidBruant/Map-Set.prototype.toJSON
		var $export = require('./_export');

		$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });

		},{"./_collection-to-json":198,"./_export":211}],487:[function(require,module,exports){
		'use strict';
		// https://github.com/mathiasbynens/String.prototype.at
		var $export = require('./_export');
		var $at = require('./_string-at')(true);

		$export($export.P, 'String', {
		  at: function at(pos) {
		    return $at(this, pos);
		  }
		});

		},{"./_export":211,"./_string-at":281}],488:[function(require,module,exports){
		'use strict';
		// https://tc39.github.io/String.prototype.matchAll/
		var $export = require('./_export');
		var defined = require('./_defined');
		var toLength = require('./_to-length');
		var isRegExp = require('./_is-regexp');
		var getFlags = require('./_flags');
		var RegExpProto = RegExp.prototype;

		var $RegExpStringIterator = function (regexp, string) {
		  this._r = regexp;
		  this._s = string;
		};

		require('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {
		  var match = this._r.exec(this._s);
		  return { value: match, done: match === null };
		});

		$export($export.P, 'String', {
		  matchAll: function matchAll(regexp) {
		    defined(this);
		    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
		    var S = String(this);
		    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);
		    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
		    rx.lastIndex = toLength(regexp.lastIndex);
		    return new $RegExpStringIterator(rx, S);
		  }
		});

		},{"./_defined":206,"./_export":211,"./_flags":215,"./_is-regexp":230,"./_iter-create":232,"./_to-length":293}],489:[function(require,module,exports){
		'use strict';
		// https://github.com/tc39/proposal-string-pad-start-end
		var $export = require('./_export');
		var $pad = require('./_string-pad');
		var userAgent = require('./_user-agent');

		// https://github.com/zloirock/core-js/issues/280
		$export($export.P + $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent), 'String', {
		  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
		    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
		  }
		});

		},{"./_export":211,"./_string-pad":284,"./_user-agent":300}],490:[function(require,module,exports){
		'use strict';
		// https://github.com/tc39/proposal-string-pad-start-end
		var $export = require('./_export');
		var $pad = require('./_string-pad');
		var userAgent = require('./_user-agent');

		// https://github.com/zloirock/core-js/issues/280
		$export($export.P + $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent), 'String', {
		  padStart: function padStart(maxLength /* , fillString = ' ' */) {
		    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
		  }
		});

		},{"./_export":211,"./_string-pad":284,"./_user-agent":300}],491:[function(require,module,exports){
		'use strict';
		// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
		require('./_string-trim')('trimLeft', function ($trim) {
		  return function trimLeft() {
		    return $trim(this, 1);
		  };
		}, 'trimStart');

		},{"./_string-trim":286}],492:[function(require,module,exports){
		'use strict';
		// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
		require('./_string-trim')('trimRight', function ($trim) {
		  return function trimRight() {
		    return $trim(this, 2);
		  };
		}, 'trimEnd');

		},{"./_string-trim":286}],493:[function(require,module,exports){
		require('./_wks-define')('asyncIterator');

		},{"./_wks-define":302}],494:[function(require,module,exports){
		require('./_wks-define')('observable');

		},{"./_wks-define":302}],495:[function(require,module,exports){
		// https://github.com/tc39/proposal-global
		var $export = require('./_export');

		$export($export.S, 'System', { global: require('./_global') });

		},{"./_export":211,"./_global":218}],496:[function(require,module,exports){
		// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from
		require('./_set-collection-from')('WeakMap');

		},{"./_set-collection-from":272}],497:[function(require,module,exports){
		// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of
		require('./_set-collection-of')('WeakMap');

		},{"./_set-collection-of":273}],498:[function(require,module,exports){
		// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from
		require('./_set-collection-from')('WeakSet');

		},{"./_set-collection-from":272}],499:[function(require,module,exports){
		// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of
		require('./_set-collection-of')('WeakSet');

		},{"./_set-collection-of":273}],500:[function(require,module,exports){
		var $iterators = require('./es6.array.iterator');
		var getKeys = require('./_object-keys');
		var redefine = require('./_redefine');
		var global = require('./_global');
		var hide = require('./_hide');
		var Iterators = require('./_iterators');
		var wks = require('./_wks');
		var ITERATOR = wks('iterator');
		var TO_STRING_TAG = wks('toStringTag');
		var ArrayValues = Iterators.Array;

		var DOMIterables = {
		  CSSRuleList: true, // TODO: Not spec compliant, should be false.
		  CSSStyleDeclaration: false,
		  CSSValueList: false,
		  ClientRectList: false,
		  DOMRectList: false,
		  DOMStringList: false,
		  DOMTokenList: true,
		  DataTransferItemList: false,
		  FileList: false,
		  HTMLAllCollection: false,
		  HTMLCollection: false,
		  HTMLFormElement: false,
		  HTMLSelectElement: false,
		  MediaList: true, // TODO: Not spec compliant, should be false.
		  MimeTypeArray: false,
		  NamedNodeMap: false,
		  NodeList: true,
		  PaintRequestList: false,
		  Plugin: false,
		  PluginArray: false,
		  SVGLengthList: false,
		  SVGNumberList: false,
		  SVGPathSegList: false,
		  SVGPointList: false,
		  SVGStringList: false,
		  SVGTransformList: false,
		  SourceBufferList: false,
		  StyleSheetList: true, // TODO: Not spec compliant, should be false.
		  TextTrackCueList: false,
		  TextTrackList: false,
		  TouchList: false
		};

		for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
		  var NAME = collections[i];
		  var explicit = DOMIterables[NAME];
		  var Collection = global[NAME];
		  var proto = Collection && Collection.prototype;
		  var key;
		  if (proto) {
		    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
		    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
		    Iterators[NAME] = ArrayValues;
		    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
		  }
		}

		},{"./_global":218,"./_hide":220,"./_iterators":236,"./_object-keys":258,"./_redefine":269,"./_wks":304,"./es6.array.iterator":317}],501:[function(require,module,exports){
		var $export = require('./_export');
		var $task = require('./_task');
		$export($export.G + $export.B, {
		  setImmediate: $task.set,
		  clearImmediate: $task.clear
		});

		},{"./_export":211,"./_task":288}],502:[function(require,module,exports){
		// ie9- setTimeout & setInterval additional parameters fix
		var global = require('./_global');
		var $export = require('./_export');
		var userAgent = require('./_user-agent');
		var slice = [].slice;
		var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
		var wrap = function (set) {
		  return function (fn, time /* , ...args */) {
		    var boundArgs = arguments.length > 2;
		    var args = boundArgs ? slice.call(arguments, 2) : false;
		    return set(boundArgs ? function () {
		      // eslint-disable-next-line no-new-func
		      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
		    } : fn, time);
		  };
		};
		$export($export.G + $export.B + $export.F * MSIE, {
		  setTimeout: wrap(global.setTimeout),
		  setInterval: wrap(global.setInterval)
		});

		},{"./_export":211,"./_global":218,"./_user-agent":300}],503:[function(require,module,exports){
		require('./modules/es6.symbol');
		require('./modules/es6.object.create');
		require('./modules/es6.object.define-property');
		require('./modules/es6.object.define-properties');
		require('./modules/es6.object.get-own-property-descriptor');
		require('./modules/es6.object.get-prototype-of');
		require('./modules/es6.object.keys');
		require('./modules/es6.object.get-own-property-names');
		require('./modules/es6.object.freeze');
		require('./modules/es6.object.seal');
		require('./modules/es6.object.prevent-extensions');
		require('./modules/es6.object.is-frozen');
		require('./modules/es6.object.is-sealed');
		require('./modules/es6.object.is-extensible');
		require('./modules/es6.object.assign');
		require('./modules/es6.object.is');
		require('./modules/es6.object.set-prototype-of');
		require('./modules/es6.object.to-string');
		require('./modules/es6.function.bind');
		require('./modules/es6.function.name');
		require('./modules/es6.function.has-instance');
		require('./modules/es6.parse-int');
		require('./modules/es6.parse-float');
		require('./modules/es6.number.constructor');
		require('./modules/es6.number.to-fixed');
		require('./modules/es6.number.to-precision');
		require('./modules/es6.number.epsilon');
		require('./modules/es6.number.is-finite');
		require('./modules/es6.number.is-integer');
		require('./modules/es6.number.is-nan');
		require('./modules/es6.number.is-safe-integer');
		require('./modules/es6.number.max-safe-integer');
		require('./modules/es6.number.min-safe-integer');
		require('./modules/es6.number.parse-float');
		require('./modules/es6.number.parse-int');
		require('./modules/es6.math.acosh');
		require('./modules/es6.math.asinh');
		require('./modules/es6.math.atanh');
		require('./modules/es6.math.cbrt');
		require('./modules/es6.math.clz32');
		require('./modules/es6.math.cosh');
		require('./modules/es6.math.expm1');
		require('./modules/es6.math.fround');
		require('./modules/es6.math.hypot');
		require('./modules/es6.math.imul');
		require('./modules/es6.math.log10');
		require('./modules/es6.math.log1p');
		require('./modules/es6.math.log2');
		require('./modules/es6.math.sign');
		require('./modules/es6.math.sinh');
		require('./modules/es6.math.tanh');
		require('./modules/es6.math.trunc');
		require('./modules/es6.string.from-code-point');
		require('./modules/es6.string.raw');
		require('./modules/es6.string.trim');
		require('./modules/es6.string.iterator');
		require('./modules/es6.string.code-point-at');
		require('./modules/es6.string.ends-with');
		require('./modules/es6.string.includes');
		require('./modules/es6.string.repeat');
		require('./modules/es6.string.starts-with');
		require('./modules/es6.string.anchor');
		require('./modules/es6.string.big');
		require('./modules/es6.string.blink');
		require('./modules/es6.string.bold');
		require('./modules/es6.string.fixed');
		require('./modules/es6.string.fontcolor');
		require('./modules/es6.string.fontsize');
		require('./modules/es6.string.italics');
		require('./modules/es6.string.link');
		require('./modules/es6.string.small');
		require('./modules/es6.string.strike');
		require('./modules/es6.string.sub');
		require('./modules/es6.string.sup');
		require('./modules/es6.date.now');
		require('./modules/es6.date.to-json');
		require('./modules/es6.date.to-iso-string');
		require('./modules/es6.date.to-string');
		require('./modules/es6.date.to-primitive');
		require('./modules/es6.array.is-array');
		require('./modules/es6.array.from');
		require('./modules/es6.array.of');
		require('./modules/es6.array.join');
		require('./modules/es6.array.slice');
		require('./modules/es6.array.sort');
		require('./modules/es6.array.for-each');
		require('./modules/es6.array.map');
		require('./modules/es6.array.filter');
		require('./modules/es6.array.some');
		require('./modules/es6.array.every');
		require('./modules/es6.array.reduce');
		require('./modules/es6.array.reduce-right');
		require('./modules/es6.array.index-of');
		require('./modules/es6.array.last-index-of');
		require('./modules/es6.array.copy-within');
		require('./modules/es6.array.fill');
		require('./modules/es6.array.find');
		require('./modules/es6.array.find-index');
		require('./modules/es6.array.species');
		require('./modules/es6.array.iterator');
		require('./modules/es6.regexp.constructor');
		require('./modules/es6.regexp.to-string');
		require('./modules/es6.regexp.flags');
		require('./modules/es6.regexp.match');
		require('./modules/es6.regexp.replace');
		require('./modules/es6.regexp.search');
		require('./modules/es6.regexp.split');
		require('./modules/es6.promise');
		require('./modules/es6.map');
		require('./modules/es6.set');
		require('./modules/es6.weak-map');
		require('./modules/es6.weak-set');
		require('./modules/es6.typed.array-buffer');
		require('./modules/es6.typed.data-view');
		require('./modules/es6.typed.int8-array');
		require('./modules/es6.typed.uint8-array');
		require('./modules/es6.typed.uint8-clamped-array');
		require('./modules/es6.typed.int16-array');
		require('./modules/es6.typed.uint16-array');
		require('./modules/es6.typed.int32-array');
		require('./modules/es6.typed.uint32-array');
		require('./modules/es6.typed.float32-array');
		require('./modules/es6.typed.float64-array');
		require('./modules/es6.reflect.apply');
		require('./modules/es6.reflect.construct');
		require('./modules/es6.reflect.define-property');
		require('./modules/es6.reflect.delete-property');
		require('./modules/es6.reflect.enumerate');
		require('./modules/es6.reflect.get');
		require('./modules/es6.reflect.get-own-property-descriptor');
		require('./modules/es6.reflect.get-prototype-of');
		require('./modules/es6.reflect.has');
		require('./modules/es6.reflect.is-extensible');
		require('./modules/es6.reflect.own-keys');
		require('./modules/es6.reflect.prevent-extensions');
		require('./modules/es6.reflect.set');
		require('./modules/es6.reflect.set-prototype-of');
		require('./modules/es7.array.includes');
		require('./modules/es7.array.flat-map');
		require('./modules/es7.array.flatten');
		require('./modules/es7.string.at');
		require('./modules/es7.string.pad-start');
		require('./modules/es7.string.pad-end');
		require('./modules/es7.string.trim-left');
		require('./modules/es7.string.trim-right');
		require('./modules/es7.string.match-all');
		require('./modules/es7.symbol.async-iterator');
		require('./modules/es7.symbol.observable');
		require('./modules/es7.object.get-own-property-descriptors');
		require('./modules/es7.object.values');
		require('./modules/es7.object.entries');
		require('./modules/es7.object.define-getter');
		require('./modules/es7.object.define-setter');
		require('./modules/es7.object.lookup-getter');
		require('./modules/es7.object.lookup-setter');
		require('./modules/es7.map.to-json');
		require('./modules/es7.set.to-json');
		require('./modules/es7.map.of');
		require('./modules/es7.set.of');
		require('./modules/es7.weak-map.of');
		require('./modules/es7.weak-set.of');
		require('./modules/es7.map.from');
		require('./modules/es7.set.from');
		require('./modules/es7.weak-map.from');
		require('./modules/es7.weak-set.from');
		require('./modules/es7.global');
		require('./modules/es7.system.global');
		require('./modules/es7.error.is-error');
		require('./modules/es7.math.clamp');
		require('./modules/es7.math.deg-per-rad');
		require('./modules/es7.math.degrees');
		require('./modules/es7.math.fscale');
		require('./modules/es7.math.iaddh');
		require('./modules/es7.math.isubh');
		require('./modules/es7.math.imulh');
		require('./modules/es7.math.rad-per-deg');
		require('./modules/es7.math.radians');
		require('./modules/es7.math.scale');
		require('./modules/es7.math.umulh');
		require('./modules/es7.math.signbit');
		require('./modules/es7.promise.finally');
		require('./modules/es7.promise.try');
		require('./modules/es7.reflect.define-metadata');
		require('./modules/es7.reflect.delete-metadata');
		require('./modules/es7.reflect.get-metadata');
		require('./modules/es7.reflect.get-metadata-keys');
		require('./modules/es7.reflect.get-own-metadata');
		require('./modules/es7.reflect.get-own-metadata-keys');
		require('./modules/es7.reflect.has-metadata');
		require('./modules/es7.reflect.has-own-metadata');
		require('./modules/es7.reflect.metadata');
		require('./modules/es7.asap');
		require('./modules/es7.observable');
		require('./modules/web.timers');
		require('./modules/web.immediate');
		require('./modules/web.dom.iterable');
		module.exports = require('./modules/_core');

		},{"./modules/_core":201,"./modules/es6.array.copy-within":307,"./modules/es6.array.every":308,"./modules/es6.array.fill":309,"./modules/es6.array.filter":310,"./modules/es6.array.find":312,"./modules/es6.array.find-index":311,"./modules/es6.array.for-each":313,"./modules/es6.array.from":314,"./modules/es6.array.index-of":315,"./modules/es6.array.is-array":316,"./modules/es6.array.iterator":317,"./modules/es6.array.join":318,"./modules/es6.array.last-index-of":319,"./modules/es6.array.map":320,"./modules/es6.array.of":321,"./modules/es6.array.reduce":323,"./modules/es6.array.reduce-right":322,"./modules/es6.array.slice":324,"./modules/es6.array.some":325,"./modules/es6.array.sort":326,"./modules/es6.array.species":327,"./modules/es6.date.now":328,"./modules/es6.date.to-iso-string":329,"./modules/es6.date.to-json":330,"./modules/es6.date.to-primitive":331,"./modules/es6.date.to-string":332,"./modules/es6.function.bind":333,"./modules/es6.function.has-instance":334,"./modules/es6.function.name":335,"./modules/es6.map":336,"./modules/es6.math.acosh":337,"./modules/es6.math.asinh":338,"./modules/es6.math.atanh":339,"./modules/es6.math.cbrt":340,"./modules/es6.math.clz32":341,"./modules/es6.math.cosh":342,"./modules/es6.math.expm1":343,"./modules/es6.math.fround":344,"./modules/es6.math.hypot":345,"./modules/es6.math.imul":346,"./modules/es6.math.log10":347,"./modules/es6.math.log1p":348,"./modules/es6.math.log2":349,"./modules/es6.math.sign":350,"./modules/es6.math.sinh":351,"./modules/es6.math.tanh":352,"./modules/es6.math.trunc":353,"./modules/es6.number.constructor":354,"./modules/es6.number.epsilon":355,"./modules/es6.number.is-finite":356,"./modules/es6.number.is-integer":357,"./modules/es6.number.is-nan":358,"./modules/es6.number.is-safe-integer":359,"./modules/es6.number.max-safe-integer":360,"./modules/es6.number.min-safe-integer":361,"./modules/es6.number.parse-float":362,"./modules/es6.number.parse-int":363,"./modules/es6.number.to-fixed":364,"./modules/es6.number.to-precision":365,"./modules/es6.object.assign":366,"./modules/es6.object.create":367,"./modules/es6.object.define-properties":368,"./modules/es6.object.define-property":369,"./modules/es6.object.freeze":370,"./modules/es6.object.get-own-property-descriptor":371,"./modules/es6.object.get-own-property-names":372,"./modules/es6.object.get-prototype-of":373,"./modules/es6.object.is":377,"./modules/es6.object.is-extensible":374,"./modules/es6.object.is-frozen":375,"./modules/es6.object.is-sealed":376,"./modules/es6.object.keys":378,"./modules/es6.object.prevent-extensions":379,"./modules/es6.object.seal":380,"./modules/es6.object.set-prototype-of":381,"./modules/es6.object.to-string":382,"./modules/es6.parse-float":383,"./modules/es6.parse-int":384,"./modules/es6.promise":385,"./modules/es6.reflect.apply":386,"./modules/es6.reflect.construct":387,"./modules/es6.reflect.define-property":388,"./modules/es6.reflect.delete-property":389,"./modules/es6.reflect.enumerate":390,"./modules/es6.reflect.get":393,"./modules/es6.reflect.get-own-property-descriptor":391,"./modules/es6.reflect.get-prototype-of":392,"./modules/es6.reflect.has":394,"./modules/es6.reflect.is-extensible":395,"./modules/es6.reflect.own-keys":396,"./modules/es6.reflect.prevent-extensions":397,"./modules/es6.reflect.set":399,"./modules/es6.reflect.set-prototype-of":398,"./modules/es6.regexp.constructor":400,"./modules/es6.regexp.flags":401,"./modules/es6.regexp.match":402,"./modules/es6.regexp.replace":403,"./modules/es6.regexp.search":404,"./modules/es6.regexp.split":405,"./modules/es6.regexp.to-string":406,"./modules/es6.set":407,"./modules/es6.string.anchor":408,"./modules/es6.string.big":409,"./modules/es6.string.blink":410,"./modules/es6.string.bold":411,"./modules/es6.string.code-point-at":412,"./modules/es6.string.ends-with":413,"./modules/es6.string.fixed":414,"./modules/es6.string.fontcolor":415,"./modules/es6.string.fontsize":416,"./modules/es6.string.from-code-point":417,"./modules/es6.string.includes":418,"./modules/es6.string.italics":419,"./modules/es6.string.iterator":420,"./modules/es6.string.link":421,"./modules/es6.string.raw":422,"./modules/es6.string.repeat":423,"./modules/es6.string.small":424,"./modules/es6.string.starts-with":425,"./modules/es6.string.strike":426,"./modules/es6.string.sub":427,"./modules/es6.string.sup":428,"./modules/es6.string.trim":429,"./modules/es6.symbol":430,"./modules/es6.typed.array-buffer":431,"./modules/es6.typed.data-view":432,"./modules/es6.typed.float32-array":433,"./modules/es6.typed.float64-array":434,"./modules/es6.typed.int16-array":435,"./modules/es6.typed.int32-array":436,"./modules/es6.typed.int8-array":437,"./modules/es6.typed.uint16-array":438,"./modules/es6.typed.uint32-array":439,"./modules/es6.typed.uint8-array":440,"./modules/es6.typed.uint8-clamped-array":441,"./modules/es6.weak-map":442,"./modules/es6.weak-set":443,"./modules/es7.array.flat-map":444,"./modules/es7.array.flatten":445,"./modules/es7.array.includes":446,"./modules/es7.asap":447,"./modules/es7.error.is-error":448,"./modules/es7.global":449,"./modules/es7.map.from":450,"./modules/es7.map.of":451,"./modules/es7.map.to-json":452,"./modules/es7.math.clamp":453,"./modules/es7.math.deg-per-rad":454,"./modules/es7.math.degrees":455,"./modules/es7.math.fscale":456,"./modules/es7.math.iaddh":457,"./modules/es7.math.imulh":458,"./modules/es7.math.isubh":459,"./modules/es7.math.rad-per-deg":460,"./modules/es7.math.radians":461,"./modules/es7.math.scale":462,"./modules/es7.math.signbit":463,"./modules/es7.math.umulh":464,"./modules/es7.object.define-getter":465,"./modules/es7.object.define-setter":466,"./modules/es7.object.entries":467,"./modules/es7.object.get-own-property-descriptors":468,"./modules/es7.object.lookup-getter":469,"./modules/es7.object.lookup-setter":470,"./modules/es7.object.values":471,"./modules/es7.observable":472,"./modules/es7.promise.finally":473,"./modules/es7.promise.try":474,"./modules/es7.reflect.define-metadata":475,"./modules/es7.reflect.delete-metadata":476,"./modules/es7.reflect.get-metadata":478,"./modules/es7.reflect.get-metadata-keys":477,"./modules/es7.reflect.get-own-metadata":480,"./modules/es7.reflect.get-own-metadata-keys":479,"./modules/es7.reflect.has-metadata":481,"./modules/es7.reflect.has-own-metadata":482,"./modules/es7.reflect.metadata":483,"./modules/es7.set.from":484,"./modules/es7.set.of":485,"./modules/es7.set.to-json":486,"./modules/es7.string.at":487,"./modules/es7.string.match-all":488,"./modules/es7.string.pad-end":489,"./modules/es7.string.pad-start":490,"./modules/es7.string.trim-left":491,"./modules/es7.string.trim-right":492,"./modules/es7.symbol.async-iterator":493,"./modules/es7.symbol.observable":494,"./modules/es7.system.global":495,"./modules/es7.weak-map.from":496,"./modules/es7.weak-map.of":497,"./modules/es7.weak-set.from":498,"./modules/es7.weak-set.of":499,"./modules/web.dom.iterable":500,"./modules/web.immediate":501,"./modules/web.timers":502}],504:[function(require,module,exports){
		(function (global){
		/**
		 * Copyright (c) 2014, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
		 * additional grant of patent rights can be found in the PATENTS file in
		 * the same directory.
		 */

		!(function(global) {
		  "use strict";

		  var Op = Object.prototype;
		  var hasOwn = Op.hasOwnProperty;
		  var undefined; // More compressible than void 0.
		  var $Symbol = typeof Symbol === "function" ? Symbol : {};
		  var iteratorSymbol = $Symbol.iterator || "@@iterator";
		  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
		  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

		  var inModule = typeof module === "object";
		  var runtime = global.regeneratorRuntime;
		  if (runtime) {
		    if (inModule) {
		      // If regeneratorRuntime is defined globally and we're in a module,
		      // make the exports object identical to regeneratorRuntime.
		      module.exports = runtime;
		    }
		    // Don't bother evaluating the rest of this file if the runtime was
		    // already defined globally.
		    return;
		  }

		  // Define the runtime globally (as expected by generated code) as either
		  // module.exports (if we're in a module) or a new, empty object.
		  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

		  function wrap(innerFn, outerFn, self, tryLocsList) {
		    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
		    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
		    var generator = Object.create(protoGenerator.prototype);
		    var context = new Context(tryLocsList || []);

		    // The ._invoke method unifies the implementations of the .next,
		    // .throw, and .return methods.
		    generator._invoke = makeInvokeMethod(innerFn, self, context);

		    return generator;
		  }
		  runtime.wrap = wrap;

		  // Try/catch helper to minimize deoptimizations. Returns a completion
		  // record like context.tryEntries[i].completion. This interface could
		  // have been (and was previously) designed to take a closure to be
		  // invoked without arguments, but in all the cases we care about we
		  // already have an existing method we want to call, so there's no need
		  // to create a new function object. We can even get away with assuming
		  // the method takes exactly one argument, since that happens to be true
		  // in every case, so we don't have to touch the arguments object. The
		  // only additional allocation required is the completion record, which
		  // has a stable shape and so hopefully should be cheap to allocate.
		  function tryCatch(fn, obj, arg) {
		    try {
		      return { type: "normal", arg: fn.call(obj, arg) };
		    } catch (err) {
		      return { type: "throw", arg: err };
		    }
		  }

		  var GenStateSuspendedStart = "suspendedStart";
		  var GenStateSuspendedYield = "suspendedYield";
		  var GenStateExecuting = "executing";
		  var GenStateCompleted = "completed";

		  // Returning this object from the innerFn has the same effect as
		  // breaking out of the dispatch switch statement.
		  var ContinueSentinel = {};

		  // Dummy constructor functions that we use as the .constructor and
		  // .constructor.prototype properties for functions that return Generator
		  // objects. For full spec compliance, you may wish to configure your
		  // minifier not to mangle the names of these two functions.
		  function Generator() {}
		  function GeneratorFunction() {}
		  function GeneratorFunctionPrototype() {}

		  // This is a polyfill for %IteratorPrototype% for environments that
		  // don't natively support it.
		  var IteratorPrototype = {};
		  IteratorPrototype[iteratorSymbol] = function () {
		    return this;
		  };

		  var getProto = Object.getPrototypeOf;
		  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
		  if (NativeIteratorPrototype &&
		      NativeIteratorPrototype !== Op &&
		      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
		    // This environment has a native %IteratorPrototype%; use it instead
		    // of the polyfill.
		    IteratorPrototype = NativeIteratorPrototype;
		  }

		  var Gp = GeneratorFunctionPrototype.prototype =
		    Generator.prototype = Object.create(IteratorPrototype);
		  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
		  GeneratorFunctionPrototype.constructor = GeneratorFunction;
		  GeneratorFunctionPrototype[toStringTagSymbol] =
		    GeneratorFunction.displayName = "GeneratorFunction";

		  // Helper for defining the .next, .throw, and .return methods of the
		  // Iterator interface in terms of a single ._invoke method.
		  function defineIteratorMethods(prototype) {
		    ["next", "throw", "return"].forEach(function(method) {
		      prototype[method] = function(arg) {
		        return this._invoke(method, arg);
		      };
		    });
		  }

		  runtime.isGeneratorFunction = function(genFun) {
		    var ctor = typeof genFun === "function" && genFun.constructor;
		    return ctor
		      ? ctor === GeneratorFunction ||
		        // For the native GeneratorFunction constructor, the best we can
		        // do is to check its .name property.
		        (ctor.displayName || ctor.name) === "GeneratorFunction"
		      : false;
		  };

		  runtime.mark = function(genFun) {
		    if (Object.setPrototypeOf) {
		      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
		    } else {
		      genFun.__proto__ = GeneratorFunctionPrototype;
		      if (!(toStringTagSymbol in genFun)) {
		        genFun[toStringTagSymbol] = "GeneratorFunction";
		      }
		    }
		    genFun.prototype = Object.create(Gp);
		    return genFun;
		  };

		  // Within the body of any async function, `await x` is transformed to
		  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
		  // `hasOwn.call(value, "__await")` to determine if the yielded value is
		  // meant to be awaited.
		  runtime.awrap = function(arg) {
		    return { __await: arg };
		  };

		  function AsyncIterator(generator) {
		    function invoke(method, arg, resolve, reject) {
		      var record = tryCatch(generator[method], generator, arg);
		      if (record.type === "throw") {
		        reject(record.arg);
		      } else {
		        var result = record.arg;
		        var value = result.value;
		        if (value &&
		            typeof value === "object" &&
		            hasOwn.call(value, "__await")) {
		          return Promise.resolve(value.__await).then(function(value) {
		            invoke("next", value, resolve, reject);
		          }, function(err) {
		            invoke("throw", err, resolve, reject);
		          });
		        }

		        return Promise.resolve(value).then(function(unwrapped) {
		          // When a yielded Promise is resolved, its final value becomes
		          // the .value of the Promise<{value,done}> result for the
		          // current iteration. If the Promise is rejected, however, the
		          // result for this iteration will be rejected with the same
		          // reason. Note that rejections of yielded Promises are not
		          // thrown back into the generator function, as is the case
		          // when an awaited Promise is rejected. This difference in
		          // behavior between yield and await is important, because it
		          // allows the consumer to decide what to do with the yielded
		          // rejection (swallow it and continue, manually .throw it back
		          // into the generator, abandon iteration, whatever). With
		          // await, by contrast, there is no opportunity to examine the
		          // rejection reason outside the generator function, so the
		          // only option is to throw it from the await expression, and
		          // let the generator function handle the exception.
		          result.value = unwrapped;
		          resolve(result);
		        }, reject);
		      }
		    }

		    if (typeof global.process === "object" && global.process.domain) {
		      invoke = global.process.domain.bind(invoke);
		    }

		    var previousPromise;

		    function enqueue(method, arg) {
		      function callInvokeWithMethodAndArg() {
		        return new Promise(function(resolve, reject) {
		          invoke(method, arg, resolve, reject);
		        });
		      }

		      return previousPromise =
		        // If enqueue has been called before, then we want to wait until
		        // all previous Promises have been resolved before calling invoke,
		        // so that results are always delivered in the correct order. If
		        // enqueue has not been called before, then it is important to
		        // call invoke immediately, without waiting on a callback to fire,
		        // so that the async generator function has the opportunity to do
		        // any necessary setup in a predictable way. This predictability
		        // is why the Promise constructor synchronously invokes its
		        // executor callback, and why async functions synchronously
		        // execute code before the first await. Since we implement simple
		        // async functions in terms of async generators, it is especially
		        // important to get this right, even though it requires care.
		        previousPromise ? previousPromise.then(
		          callInvokeWithMethodAndArg,
		          // Avoid propagating failures to Promises returned by later
		          // invocations of the iterator.
		          callInvokeWithMethodAndArg
		        ) : callInvokeWithMethodAndArg();
		    }

		    // Define the unified helper method that is used to implement .next,
		    // .throw, and .return (see defineIteratorMethods).
		    this._invoke = enqueue;
		  }

		  defineIteratorMethods(AsyncIterator.prototype);
		  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
		    return this;
		  };
		  runtime.AsyncIterator = AsyncIterator;

		  // Note that simple async functions are implemented on top of
		  // AsyncIterator objects; they just return a Promise for the value of
		  // the final result produced by the iterator.
		  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
		    var iter = new AsyncIterator(
		      wrap(innerFn, outerFn, self, tryLocsList)
		    );

		    return runtime.isGeneratorFunction(outerFn)
		      ? iter // If outerFn is a generator, return the full iterator.
		      : iter.next().then(function(result) {
		          return result.done ? result.value : iter.next();
		        });
		  };

		  function makeInvokeMethod(innerFn, self, context) {
		    var state = GenStateSuspendedStart;

		    return function invoke(method, arg) {
		      if (state === GenStateExecuting) {
		        throw new Error("Generator is already running");
		      }

		      if (state === GenStateCompleted) {
		        if (method === "throw") {
		          throw arg;
		        }

		        // Be forgiving, per 25.3.3.3.3 of the spec:
		        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
		        return doneResult();
		      }

		      context.method = method;
		      context.arg = arg;

		      while (true) {
		        var delegate = context.delegate;
		        if (delegate) {
		          var delegateResult = maybeInvokeDelegate(delegate, context);
		          if (delegateResult) {
		            if (delegateResult === ContinueSentinel) continue;
		            return delegateResult;
		          }
		        }

		        if (context.method === "next") {
		          // Setting context._sent for legacy support of Babel's
		          // function.sent implementation.
		          context.sent = context._sent = context.arg;

		        } else if (context.method === "throw") {
		          if (state === GenStateSuspendedStart) {
		            state = GenStateCompleted;
		            throw context.arg;
		          }

		          context.dispatchException(context.arg);

		        } else if (context.method === "return") {
		          context.abrupt("return", context.arg);
		        }

		        state = GenStateExecuting;

		        var record = tryCatch(innerFn, self, context);
		        if (record.type === "normal") {
		          // If an exception is thrown from innerFn, we leave state ===
		          // GenStateExecuting and loop back for another invocation.
		          state = context.done
		            ? GenStateCompleted
		            : GenStateSuspendedYield;

		          if (record.arg === ContinueSentinel) {
		            continue;
		          }

		          return {
		            value: record.arg,
		            done: context.done
		          };

		        } else if (record.type === "throw") {
		          state = GenStateCompleted;
		          // Dispatch the exception by looping back around to the
		          // context.dispatchException(context.arg) call above.
		          context.method = "throw";
		          context.arg = record.arg;
		        }
		      }
		    };
		  }

		  // Call delegate.iterator[context.method](context.arg) and handle the
		  // result, either by returning a { value, done } result from the
		  // delegate iterator, or by modifying context.method and context.arg,
		  // setting context.delegate to null, and returning the ContinueSentinel.
		  function maybeInvokeDelegate(delegate, context) {
		    var method = delegate.iterator[context.method];
		    if (method === undefined) {
		      // A .throw or .return when the delegate iterator has no .throw
		      // method always terminates the yield* loop.
		      context.delegate = null;

		      if (context.method === "throw") {
		        if (delegate.iterator.return) {
		          // If the delegate iterator has a return method, give it a
		          // chance to clean up.
		          context.method = "return";
		          context.arg = undefined;
		          maybeInvokeDelegate(delegate, context);

		          if (context.method === "throw") {
		            // If maybeInvokeDelegate(context) changed context.method from
		            // "return" to "throw", let that override the TypeError below.
		            return ContinueSentinel;
		          }
		        }

		        context.method = "throw";
		        context.arg = new TypeError(
		          "The iterator does not provide a 'throw' method");
		      }

		      return ContinueSentinel;
		    }

		    var record = tryCatch(method, delegate.iterator, context.arg);

		    if (record.type === "throw") {
		      context.method = "throw";
		      context.arg = record.arg;
		      context.delegate = null;
		      return ContinueSentinel;
		    }

		    var info = record.arg;

		    if (! info) {
		      context.method = "throw";
		      context.arg = new TypeError("iterator result is not an object");
		      context.delegate = null;
		      return ContinueSentinel;
		    }

		    if (info.done) {
		      // Assign the result of the finished delegate to the temporary
		      // variable specified by delegate.resultName (see delegateYield).
		      context[delegate.resultName] = info.value;

		      // Resume execution at the desired location (see delegateYield).
		      context.next = delegate.nextLoc;

		      // If context.method was "throw" but the delegate handled the
		      // exception, let the outer generator proceed normally. If
		      // context.method was "next", forget context.arg since it has been
		      // "consumed" by the delegate iterator. If context.method was
		      // "return", allow the original .return call to continue in the
		      // outer generator.
		      if (context.method !== "return") {
		        context.method = "next";
		        context.arg = undefined;
		      }

		    } else {
		      // Re-yield the result returned by the delegate method.
		      return info;
		    }

		    // The delegate iterator is finished, so forget it and continue with
		    // the outer generator.
		    context.delegate = null;
		    return ContinueSentinel;
		  }

		  // Define Generator.prototype.{next,throw,return} in terms of the
		  // unified ._invoke helper method.
		  defineIteratorMethods(Gp);

		  Gp[toStringTagSymbol] = "Generator";

		  // A Generator should always return itself as the iterator object when the
		  // @@iterator function is called on it. Some browsers' implementations of the
		  // iterator prototype chain incorrectly implement this, causing the Generator
		  // object to not be returned from this call. This ensures that doesn't happen.
		  // See https://github.com/facebook/regenerator/issues/274 for more details.
		  Gp[iteratorSymbol] = function() {
		    return this;
		  };

		  Gp.toString = function() {
		    return "[object Generator]";
		  };

		  function pushTryEntry(locs) {
		    var entry = { tryLoc: locs[0] };

		    if (1 in locs) {
		      entry.catchLoc = locs[1];
		    }

		    if (2 in locs) {
		      entry.finallyLoc = locs[2];
		      entry.afterLoc = locs[3];
		    }

		    this.tryEntries.push(entry);
		  }

		  function resetTryEntry(entry) {
		    var record = entry.completion || {};
		    record.type = "normal";
		    delete record.arg;
		    entry.completion = record;
		  }

		  function Context(tryLocsList) {
		    // The root entry object (effectively a try statement without a catch
		    // or a finally block) gives us a place to store values thrown from
		    // locations where there is no enclosing try statement.
		    this.tryEntries = [{ tryLoc: "root" }];
		    tryLocsList.forEach(pushTryEntry, this);
		    this.reset(true);
		  }

		  runtime.keys = function(object) {
		    var keys = [];
		    for (var key in object) {
		      keys.push(key);
		    }
		    keys.reverse();

		    // Rather than returning an object with a next method, we keep
		    // things simple and return the next function itself.
		    return function next() {
		      while (keys.length) {
		        var key = keys.pop();
		        if (key in object) {
		          next.value = key;
		          next.done = false;
		          return next;
		        }
		      }

		      // To avoid creating an additional object, we just hang the .value
		      // and .done properties off the next function object itself. This
		      // also ensures that the minifier will not anonymize the function.
		      next.done = true;
		      return next;
		    };
		  };

		  function values(iterable) {
		    if (iterable) {
		      var iteratorMethod = iterable[iteratorSymbol];
		      if (iteratorMethod) {
		        return iteratorMethod.call(iterable);
		      }

		      if (typeof iterable.next === "function") {
		        return iterable;
		      }

		      if (!isNaN(iterable.length)) {
		        var i = -1, next = function next() {
		          while (++i < iterable.length) {
		            if (hasOwn.call(iterable, i)) {
		              next.value = iterable[i];
		              next.done = false;
		              return next;
		            }
		          }

		          next.value = undefined;
		          next.done = true;

		          return next;
		        };

		        return next.next = next;
		      }
		    }

		    // Return an iterator with no values.
		    return { next: doneResult };
		  }
		  runtime.values = values;

		  function doneResult() {
		    return { value: undefined, done: true };
		  }

		  Context.prototype = {
		    constructor: Context,

		    reset: function(skipTempReset) {
		      this.prev = 0;
		      this.next = 0;
		      // Resetting context._sent for legacy support of Babel's
		      // function.sent implementation.
		      this.sent = this._sent = undefined;
		      this.done = false;
		      this.delegate = null;

		      this.method = "next";
		      this.arg = undefined;

		      this.tryEntries.forEach(resetTryEntry);

		      if (!skipTempReset) {
		        for (var name in this) {
		          // Not sure about the optimal order of these conditions:
		          if (name.charAt(0) === "t" &&
		              hasOwn.call(this, name) &&
		              !isNaN(+name.slice(1))) {
		            this[name] = undefined;
		          }
		        }
		      }
		    },

		    stop: function() {
		      this.done = true;

		      var rootEntry = this.tryEntries[0];
		      var rootRecord = rootEntry.completion;
		      if (rootRecord.type === "throw") {
		        throw rootRecord.arg;
		      }

		      return this.rval;
		    },

		    dispatchException: function(exception) {
		      if (this.done) {
		        throw exception;
		      }

		      var context = this;
		      function handle(loc, caught) {
		        record.type = "throw";
		        record.arg = exception;
		        context.next = loc;

		        if (caught) {
		          // If the dispatched exception was caught by a catch block,
		          // then let that catch block handle the exception normally.
		          context.method = "next";
		          context.arg = undefined;
		        }

		        return !! caught;
		      }

		      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
		        var entry = this.tryEntries[i];
		        var record = entry.completion;

		        if (entry.tryLoc === "root") {
		          // Exception thrown outside of any try block that could handle
		          // it, so set the completion value of the entire function to
		          // throw the exception.
		          return handle("end");
		        }

		        if (entry.tryLoc <= this.prev) {
		          var hasCatch = hasOwn.call(entry, "catchLoc");
		          var hasFinally = hasOwn.call(entry, "finallyLoc");

		          if (hasCatch && hasFinally) {
		            if (this.prev < entry.catchLoc) {
		              return handle(entry.catchLoc, true);
		            } else if (this.prev < entry.finallyLoc) {
		              return handle(entry.finallyLoc);
		            }

		          } else if (hasCatch) {
		            if (this.prev < entry.catchLoc) {
		              return handle(entry.catchLoc, true);
		            }

		          } else if (hasFinally) {
		            if (this.prev < entry.finallyLoc) {
		              return handle(entry.finallyLoc);
		            }

		          } else {
		            throw new Error("try statement without catch or finally");
		          }
		        }
		      }
		    },

		    abrupt: function(type, arg) {
		      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
		        var entry = this.tryEntries[i];
		        if (entry.tryLoc <= this.prev &&
		            hasOwn.call(entry, "finallyLoc") &&
		            this.prev < entry.finallyLoc) {
		          var finallyEntry = entry;
		          break;
		        }
		      }

		      if (finallyEntry &&
		          (type === "break" ||
		           type === "continue") &&
		          finallyEntry.tryLoc <= arg &&
		          arg <= finallyEntry.finallyLoc) {
		        // Ignore the finally entry if control is not jumping to a
		        // location outside the try/catch block.
		        finallyEntry = null;
		      }

		      var record = finallyEntry ? finallyEntry.completion : {};
		      record.type = type;
		      record.arg = arg;

		      if (finallyEntry) {
		        this.method = "next";
		        this.next = finallyEntry.finallyLoc;
		        return ContinueSentinel;
		      }

		      return this.complete(record);
		    },

		    complete: function(record, afterLoc) {
		      if (record.type === "throw") {
		        throw record.arg;
		      }

		      if (record.type === "break" ||
		          record.type === "continue") {
		        this.next = record.arg;
		      } else if (record.type === "return") {
		        this.rval = this.arg = record.arg;
		        this.method = "return";
		        this.next = "end";
		      } else if (record.type === "normal" && afterLoc) {
		        this.next = afterLoc;
		      }

		      return ContinueSentinel;
		    },

		    finish: function(finallyLoc) {
		      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
		        var entry = this.tryEntries[i];
		        if (entry.finallyLoc === finallyLoc) {
		          this.complete(entry.completion, entry.afterLoc);
		          resetTryEntry(entry);
		          return ContinueSentinel;
		        }
		      }
		    },

		    "catch": function(tryLoc) {
		      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
		        var entry = this.tryEntries[i];
		        if (entry.tryLoc === tryLoc) {
		          var record = entry.completion;
		          if (record.type === "throw") {
		            var thrown = record.arg;
		            resetTryEntry(entry);
		          }
		          return thrown;
		        }
		      }

		      // The context.catch method must only be called with a location
		      // argument that corresponds to a known catch block.
		      throw new Error("illegal catch attempt");
		    },

		    delegateYield: function(iterable, resultName, nextLoc) {
		      this.delegate = {
		        iterator: values(iterable),
		        resultName: resultName,
		        nextLoc: nextLoc
		      };

		      if (this.method === "next") {
		        // Deliberately forget the last sent value so that we don't
		        // accidentally pass it on to the delegate.
		        this.arg = undefined;
		      }

		      return ContinueSentinel;
		    }
		  };
		})(
		  // Among the various tricks for obtaining a reference to the global
		  // object, this seems to be the most reliable technique that does not
		  // use indirect eval (which violates Content Security Policy).
		  typeof global === "object" ? global :
		  typeof window === "object" ? window :
		  typeof self === "object" ? self : this
		);

		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{}],505:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/array/from"), __esModule: true };
		},{"core-js/library/fn/array/from":527}],506:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/json/stringify"), __esModule: true };
		},{"core-js/library/fn/json/stringify":528}],507:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/map"), __esModule: true };
		},{"core-js/library/fn/map":529}],508:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/number/is-nan"), __esModule: true };
		},{"core-js/library/fn/number/is-nan":530}],509:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/number/min-safe-integer"), __esModule: true };
		},{"core-js/library/fn/number/min-safe-integer":531}],510:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/object/assign"), __esModule: true };
		},{"core-js/library/fn/object/assign":532}],511:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/object/create"), __esModule: true };
		},{"core-js/library/fn/object/create":533}],512:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/object/define-property"), __esModule: true };
		},{"core-js/library/fn/object/define-property":534}],513:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/object/get-prototype-of"), __esModule: true };
		},{"core-js/library/fn/object/get-prototype-of":535}],514:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/object/keys"), __esModule: true };
		},{"core-js/library/fn/object/keys":536}],515:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/object/set-prototype-of"), __esModule: true };
		},{"core-js/library/fn/object/set-prototype-of":537}],516:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/symbol"), __esModule: true };
		},{"core-js/library/fn/symbol":538}],517:[function(require,module,exports){
		module.exports = { "default": require("core-js/library/fn/symbol/iterator"), __esModule: true };
		},{"core-js/library/fn/symbol/iterator":539}],518:[function(require,module,exports){
		"use strict";

		exports.__esModule = true;

		exports.default = function (instance, Constructor) {
		  if (!(instance instanceof Constructor)) {
		    throw new TypeError("Cannot call a class as a function");
		  }
		};
		},{}],519:[function(require,module,exports){
		"use strict";

		exports.__esModule = true;

		var _defineProperty = require("../core-js/object/define-property");

		var _defineProperty2 = _interopRequireDefault(_defineProperty);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.default = function () {
		  function defineProperties(target, props) {
		    for (var i = 0; i < props.length; i++) {
		      var descriptor = props[i];
		      descriptor.enumerable = descriptor.enumerable || false;
		      descriptor.configurable = true;
		      if ("value" in descriptor) descriptor.writable = true;
		      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
		    }
		  }

		  return function (Constructor, protoProps, staticProps) {
		    if (protoProps) defineProperties(Constructor.prototype, protoProps);
		    if (staticProps) defineProperties(Constructor, staticProps);
		    return Constructor;
		  };
		}();
		},{"../core-js/object/define-property":512}],520:[function(require,module,exports){
		"use strict";

		exports.__esModule = true;

		var _defineProperty = require("../core-js/object/define-property");

		var _defineProperty2 = _interopRequireDefault(_defineProperty);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.default = function (obj, key, value) {
		  if (key in obj) {
		    (0, _defineProperty2.default)(obj, key, {
		      value: value,
		      enumerable: true,
		      configurable: true,
		      writable: true
		    });
		  } else {
		    obj[key] = value;
		  }

		  return obj;
		};
		},{"../core-js/object/define-property":512}],521:[function(require,module,exports){
		"use strict";

		exports.__esModule = true;

		var _assign = require("../core-js/object/assign");

		var _assign2 = _interopRequireDefault(_assign);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.default = _assign2.default || function (target) {
		  for (var i = 1; i < arguments.length; i++) {
		    var source = arguments[i];

		    for (var key in source) {
		      if (Object.prototype.hasOwnProperty.call(source, key)) {
		        target[key] = source[key];
		      }
		    }
		  }

		  return target;
		};
		},{"../core-js/object/assign":510}],522:[function(require,module,exports){
		"use strict";

		exports.__esModule = true;

		var _setPrototypeOf = require("../core-js/object/set-prototype-of");

		var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

		var _create = require("../core-js/object/create");

		var _create2 = _interopRequireDefault(_create);

		var _typeof2 = require("../helpers/typeof");

		var _typeof3 = _interopRequireDefault(_typeof2);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.default = function (subClass, superClass) {
		  if (typeof superClass !== "function" && superClass !== null) {
		    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
		  }

		  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
		    constructor: {
		      value: subClass,
		      enumerable: false,
		      writable: true,
		      configurable: true
		    }
		  });
		  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
		};
		},{"../core-js/object/create":511,"../core-js/object/set-prototype-of":515,"../helpers/typeof":526}],523:[function(require,module,exports){
		"use strict";

		exports.__esModule = true;

		exports.default = function (obj, keys) {
		  var target = {};

		  for (var i in obj) {
		    if (keys.indexOf(i) >= 0) continue;
		    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
		    target[i] = obj[i];
		  }

		  return target;
		};
		},{}],524:[function(require,module,exports){
		"use strict";

		exports.__esModule = true;

		var _typeof2 = require("../helpers/typeof");

		var _typeof3 = _interopRequireDefault(_typeof2);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.default = function (self, call) {
		  if (!self) {
		    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		  }

		  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
		};
		},{"../helpers/typeof":526}],525:[function(require,module,exports){
		"use strict";

		exports.__esModule = true;

		var _from = require("../core-js/array/from");

		var _from2 = _interopRequireDefault(_from);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.default = function (arr) {
		  if (Array.isArray(arr)) {
		    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
		      arr2[i] = arr[i];
		    }

		    return arr2;
		  } else {
		    return (0, _from2.default)(arr);
		  }
		};
		},{"../core-js/array/from":505}],526:[function(require,module,exports){
		"use strict";

		exports.__esModule = true;

		var _iterator = require("../core-js/symbol/iterator");

		var _iterator2 = _interopRequireDefault(_iterator);

		var _symbol = require("../core-js/symbol");

		var _symbol2 = _interopRequireDefault(_symbol);

		var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
		  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
		} : function (obj) {
		  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
		};
		},{"../core-js/symbol":516,"../core-js/symbol/iterator":517}],527:[function(require,module,exports){
		require('../../modules/es6.string.iterator');
		require('../../modules/es6.array.from');
		module.exports = require('../../modules/_core').Array.from;

		},{"../../modules/_core":554,"../../modules/es6.array.from":618,"../../modules/es6.string.iterator":630}],528:[function(require,module,exports){
		var core = require('../../modules/_core');
		var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
		module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
		  return $JSON.stringify.apply($JSON, arguments);
		};

		},{"../../modules/_core":554}],529:[function(require,module,exports){
		require('../modules/es6.object.to-string');
		require('../modules/es6.string.iterator');
		require('../modules/web.dom.iterable');
		require('../modules/es6.map');
		require('../modules/es7.map.to-json');
		require('../modules/es7.map.of');
		require('../modules/es7.map.from');
		module.exports = require('../modules/_core').Map;

		},{"../modules/_core":554,"../modules/es6.map":620,"../modules/es6.object.to-string":629,"../modules/es6.string.iterator":630,"../modules/es7.map.from":632,"../modules/es7.map.of":633,"../modules/es7.map.to-json":634,"../modules/web.dom.iterable":637}],530:[function(require,module,exports){
		require('../../modules/es6.number.is-nan');
		module.exports = require('../../modules/_core').Number.isNaN;

		},{"../../modules/_core":554,"../../modules/es6.number.is-nan":621}],531:[function(require,module,exports){
		require('../../modules/es6.number.min-safe-integer');
		module.exports = -0x1fffffffffffff;

		},{"../../modules/es6.number.min-safe-integer":622}],532:[function(require,module,exports){
		require('../../modules/es6.object.assign');
		module.exports = require('../../modules/_core').Object.assign;

		},{"../../modules/_core":554,"../../modules/es6.object.assign":623}],533:[function(require,module,exports){
		require('../../modules/es6.object.create');
		var $Object = require('../../modules/_core').Object;
		module.exports = function create(P, D) {
		  return $Object.create(P, D);
		};

		},{"../../modules/_core":554,"../../modules/es6.object.create":624}],534:[function(require,module,exports){
		require('../../modules/es6.object.define-property');
		var $Object = require('../../modules/_core').Object;
		module.exports = function defineProperty(it, key, desc) {
		  return $Object.defineProperty(it, key, desc);
		};

		},{"../../modules/_core":554,"../../modules/es6.object.define-property":625}],535:[function(require,module,exports){
		require('../../modules/es6.object.get-prototype-of');
		module.exports = require('../../modules/_core').Object.getPrototypeOf;

		},{"../../modules/_core":554,"../../modules/es6.object.get-prototype-of":626}],536:[function(require,module,exports){
		require('../../modules/es6.object.keys');
		module.exports = require('../../modules/_core').Object.keys;

		},{"../../modules/_core":554,"../../modules/es6.object.keys":627}],537:[function(require,module,exports){
		require('../../modules/es6.object.set-prototype-of');
		module.exports = require('../../modules/_core').Object.setPrototypeOf;

		},{"../../modules/_core":554,"../../modules/es6.object.set-prototype-of":628}],538:[function(require,module,exports){
		require('../../modules/es6.symbol');
		require('../../modules/es6.object.to-string');
		require('../../modules/es7.symbol.async-iterator');
		require('../../modules/es7.symbol.observable');
		module.exports = require('../../modules/_core').Symbol;

		},{"../../modules/_core":554,"../../modules/es6.object.to-string":629,"../../modules/es6.symbol":631,"../../modules/es7.symbol.async-iterator":635,"../../modules/es7.symbol.observable":636}],539:[function(require,module,exports){
		require('../../modules/es6.string.iterator');
		require('../../modules/web.dom.iterable');
		module.exports = require('../../modules/_wks-ext').f('iterator');

		},{"../../modules/_wks-ext":615,"../../modules/es6.string.iterator":630,"../../modules/web.dom.iterable":637}],540:[function(require,module,exports){
		arguments[4][181][0].apply(exports,arguments)
		},{"dup":181}],541:[function(require,module,exports){
		module.exports = function () { /* empty */ };

		},{}],542:[function(require,module,exports){
		arguments[4][184][0].apply(exports,arguments)
		},{"dup":184}],543:[function(require,module,exports){
		arguments[4][185][0].apply(exports,arguments)
		},{"./_is-object":573,"dup":185}],544:[function(require,module,exports){
		arguments[4][188][0].apply(exports,arguments)
		},{"./_for-of":564,"dup":188}],545:[function(require,module,exports){
		arguments[4][189][0].apply(exports,arguments)
		},{"./_to-absolute-index":606,"./_to-iobject":608,"./_to-length":609,"dup":189}],546:[function(require,module,exports){
		arguments[4][190][0].apply(exports,arguments)
		},{"./_array-species-create":548,"./_ctx":556,"./_iobject":570,"./_to-length":609,"./_to-object":610,"dup":190}],547:[function(require,module,exports){
		arguments[4][192][0].apply(exports,arguments)
		},{"./_is-array":572,"./_is-object":573,"./_wks":616,"dup":192}],548:[function(require,module,exports){
		arguments[4][193][0].apply(exports,arguments)
		},{"./_array-species-constructor":547,"dup":193}],549:[function(require,module,exports){
		arguments[4][195][0].apply(exports,arguments)
		},{"./_cof":550,"./_wks":616,"dup":195}],550:[function(require,module,exports){
		arguments[4][196][0].apply(exports,arguments)
		},{"dup":196}],551:[function(require,module,exports){
		arguments[4][197][0].apply(exports,arguments)
		},{"./_an-instance":542,"./_ctx":556,"./_descriptors":558,"./_for-of":564,"./_iter-define":576,"./_iter-step":578,"./_meta":581,"./_object-create":583,"./_object-dp":584,"./_redefine-all":596,"./_set-species":601,"./_validate-collection":613,"dup":197}],552:[function(require,module,exports){
		arguments[4][198][0].apply(exports,arguments)
		},{"./_array-from-iterable":544,"./_classof":549,"dup":198}],553:[function(require,module,exports){
		'use strict';
		var global = require('./_global');
		var $export = require('./_export');
		var meta = require('./_meta');
		var fails = require('./_fails');
		var hide = require('./_hide');
		var redefineAll = require('./_redefine-all');
		var forOf = require('./_for-of');
		var anInstance = require('./_an-instance');
		var isObject = require('./_is-object');
		var setToStringTag = require('./_set-to-string-tag');
		var dP = require('./_object-dp').f;
		var each = require('./_array-methods')(0);
		var DESCRIPTORS = require('./_descriptors');

		module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
		  var Base = global[NAME];
		  var C = Base;
		  var ADDER = IS_MAP ? 'set' : 'add';
		  var proto = C && C.prototype;
		  var O = {};
		  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
		    new C().entries().next();
		  }))) {
		    // create collection constructor
		    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
		    redefineAll(C.prototype, methods);
		    meta.NEED = true;
		  } else {
		    C = wrapper(function (target, iterable) {
		      anInstance(target, C, NAME, '_c');
		      target._c = new Base();
		      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);
		    });
		    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {
		      var IS_ADDER = KEY == 'add' || KEY == 'set';
		      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {
		        anInstance(this, C, KEY);
		        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
		        var result = this._c[KEY](a === 0 ? 0 : a, b);
		        return IS_ADDER ? this : result;
		      });
		    });
		    IS_WEAK || dP(C.prototype, 'size', {
		      get: function () {
		        return this._c.size;
		      }
		    });
		  }

		  setToStringTag(C, NAME);

		  O[NAME] = C;
		  $export($export.G + $export.W + $export.F, O);

		  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

		  return C;
		};

		},{"./_an-instance":542,"./_array-methods":546,"./_descriptors":558,"./_export":562,"./_fails":563,"./_for-of":564,"./_global":565,"./_hide":567,"./_is-object":573,"./_meta":581,"./_object-dp":584,"./_redefine-all":596,"./_set-to-string-tag":602}],554:[function(require,module,exports){
		var core = module.exports = { version: '2.5.4' };
		if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

		},{}],555:[function(require,module,exports){
		arguments[4][202][0].apply(exports,arguments)
		},{"./_object-dp":584,"./_property-desc":595,"dup":202}],556:[function(require,module,exports){
		arguments[4][203][0].apply(exports,arguments)
		},{"./_a-function":540,"dup":203}],557:[function(require,module,exports){
		arguments[4][206][0].apply(exports,arguments)
		},{"dup":206}],558:[function(require,module,exports){
		arguments[4][207][0].apply(exports,arguments)
		},{"./_fails":563,"dup":207}],559:[function(require,module,exports){
		arguments[4][208][0].apply(exports,arguments)
		},{"./_global":565,"./_is-object":573,"dup":208}],560:[function(require,module,exports){
		arguments[4][209][0].apply(exports,arguments)
		},{"dup":209}],561:[function(require,module,exports){
		arguments[4][210][0].apply(exports,arguments)
		},{"./_object-gops":589,"./_object-keys":592,"./_object-pie":593,"dup":210}],562:[function(require,module,exports){
		var global = require('./_global');
		var core = require('./_core');
		var ctx = require('./_ctx');
		var hide = require('./_hide');
		var has = require('./_has');
		var PROTOTYPE = 'prototype';

		var $export = function (type, name, source) {
		  var IS_FORCED = type & $export.F;
		  var IS_GLOBAL = type & $export.G;
		  var IS_STATIC = type & $export.S;
		  var IS_PROTO = type & $export.P;
		  var IS_BIND = type & $export.B;
		  var IS_WRAP = type & $export.W;
		  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
		  var expProto = exports[PROTOTYPE];
		  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
		  var key, own, out;
		  if (IS_GLOBAL) source = name;
		  for (key in source) {
		    // contains in native
		    own = !IS_FORCED && target && target[key] !== undefined;
		    if (own && has(exports, key)) continue;
		    // export native or passed
		    out = own ? target[key] : source[key];
		    // prevent global pollution for namespaces
		    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
		    // bind timers to global for call from export context
		    : IS_BIND && own ? ctx(out, global)
		    // wrap global constructors for prevent change them in library
		    : IS_WRAP && target[key] == out ? (function (C) {
		      var F = function (a, b, c) {
		        if (this instanceof C) {
		          switch (arguments.length) {
		            case 0: return new C();
		            case 1: return new C(a);
		            case 2: return new C(a, b);
		          } return new C(a, b, c);
		        } return C.apply(this, arguments);
		      };
		      F[PROTOTYPE] = C[PROTOTYPE];
		      return F;
		    // make static versions for prototype methods
		    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
		    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
		    if (IS_PROTO) {
		      (exports.virtual || (exports.virtual = {}))[key] = out;
		      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
		      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
		    }
		  }
		};
		// type bitmap
		$export.F = 1;   // forced
		$export.G = 2;   // global
		$export.S = 4;   // static
		$export.P = 8;   // proto
		$export.B = 16;  // bind
		$export.W = 32;  // wrap
		$export.U = 64;  // safe
		$export.R = 128; // real proto method for `library`
		module.exports = $export;

		},{"./_core":554,"./_ctx":556,"./_global":565,"./_has":566,"./_hide":567}],563:[function(require,module,exports){
		arguments[4][213][0].apply(exports,arguments)
		},{"dup":213}],564:[function(require,module,exports){
		arguments[4][217][0].apply(exports,arguments)
		},{"./_an-object":543,"./_ctx":556,"./_is-array-iter":571,"./_iter-call":574,"./_to-length":609,"./core.get-iterator-method":617,"dup":217}],565:[function(require,module,exports){
		arguments[4][218][0].apply(exports,arguments)
		},{"dup":218}],566:[function(require,module,exports){
		arguments[4][219][0].apply(exports,arguments)
		},{"dup":219}],567:[function(require,module,exports){
		arguments[4][220][0].apply(exports,arguments)
		},{"./_descriptors":558,"./_object-dp":584,"./_property-desc":595,"dup":220}],568:[function(require,module,exports){
		arguments[4][221][0].apply(exports,arguments)
		},{"./_global":565,"dup":221}],569:[function(require,module,exports){
		arguments[4][222][0].apply(exports,arguments)
		},{"./_descriptors":558,"./_dom-create":559,"./_fails":563,"dup":222}],570:[function(require,module,exports){
		arguments[4][225][0].apply(exports,arguments)
		},{"./_cof":550,"dup":225}],571:[function(require,module,exports){
		arguments[4][226][0].apply(exports,arguments)
		},{"./_iterators":579,"./_wks":616,"dup":226}],572:[function(require,module,exports){
		arguments[4][227][0].apply(exports,arguments)
		},{"./_cof":550,"dup":227}],573:[function(require,module,exports){
		arguments[4][229][0].apply(exports,arguments)
		},{"dup":229}],574:[function(require,module,exports){
		arguments[4][231][0].apply(exports,arguments)
		},{"./_an-object":543,"dup":231}],575:[function(require,module,exports){
		arguments[4][232][0].apply(exports,arguments)
		},{"./_hide":567,"./_object-create":583,"./_property-desc":595,"./_set-to-string-tag":602,"./_wks":616,"dup":232}],576:[function(require,module,exports){
		arguments[4][233][0].apply(exports,arguments)
		},{"./_export":562,"./_hide":567,"./_iter-create":575,"./_iterators":579,"./_library":580,"./_object-gpo":590,"./_redefine":597,"./_set-to-string-tag":602,"./_wks":616,"dup":233}],577:[function(require,module,exports){
		arguments[4][234][0].apply(exports,arguments)
		},{"./_wks":616,"dup":234}],578:[function(require,module,exports){
		arguments[4][235][0].apply(exports,arguments)
		},{"dup":235}],579:[function(require,module,exports){
		arguments[4][236][0].apply(exports,arguments)
		},{"dup":236}],580:[function(require,module,exports){
		module.exports = true;

		},{}],581:[function(require,module,exports){
		arguments[4][243][0].apply(exports,arguments)
		},{"./_fails":563,"./_has":566,"./_is-object":573,"./_object-dp":584,"./_uid":612,"dup":243}],582:[function(require,module,exports){
		arguments[4][247][0].apply(exports,arguments)
		},{"./_fails":563,"./_iobject":570,"./_object-gops":589,"./_object-keys":592,"./_object-pie":593,"./_to-object":610,"dup":247}],583:[function(require,module,exports){
		arguments[4][248][0].apply(exports,arguments)
		},{"./_an-object":543,"./_dom-create":559,"./_enum-bug-keys":560,"./_html":568,"./_object-dps":585,"./_shared-key":603,"dup":248}],584:[function(require,module,exports){
		arguments[4][249][0].apply(exports,arguments)
		},{"./_an-object":543,"./_descriptors":558,"./_ie8-dom-define":569,"./_to-primitive":611,"dup":249}],585:[function(require,module,exports){
		arguments[4][250][0].apply(exports,arguments)
		},{"./_an-object":543,"./_descriptors":558,"./_object-dp":584,"./_object-keys":592,"dup":250}],586:[function(require,module,exports){
		arguments[4][252][0].apply(exports,arguments)
		},{"./_descriptors":558,"./_has":566,"./_ie8-dom-define":569,"./_object-pie":593,"./_property-desc":595,"./_to-iobject":608,"./_to-primitive":611,"dup":252}],587:[function(require,module,exports){
		arguments[4][253][0].apply(exports,arguments)
		},{"./_object-gopn":588,"./_to-iobject":608,"dup":253}],588:[function(require,module,exports){
		arguments[4][254][0].apply(exports,arguments)
		},{"./_enum-bug-keys":560,"./_object-keys-internal":591,"dup":254}],589:[function(require,module,exports){
		arguments[4][255][0].apply(exports,arguments)
		},{"dup":255}],590:[function(require,module,exports){
		arguments[4][256][0].apply(exports,arguments)
		},{"./_has":566,"./_shared-key":603,"./_to-object":610,"dup":256}],591:[function(require,module,exports){
		arguments[4][257][0].apply(exports,arguments)
		},{"./_array-includes":545,"./_has":566,"./_shared-key":603,"./_to-iobject":608,"dup":257}],592:[function(require,module,exports){
		arguments[4][258][0].apply(exports,arguments)
		},{"./_enum-bug-keys":560,"./_object-keys-internal":591,"dup":258}],593:[function(require,module,exports){
		arguments[4][259][0].apply(exports,arguments)
		},{"dup":259}],594:[function(require,module,exports){
		arguments[4][260][0].apply(exports,arguments)
		},{"./_core":554,"./_export":562,"./_fails":563,"dup":260}],595:[function(require,module,exports){
		arguments[4][267][0].apply(exports,arguments)
		},{"dup":267}],596:[function(require,module,exports){
		var hide = require('./_hide');
		module.exports = function (target, src, safe) {
		  for (var key in src) {
		    if (safe && target[key]) target[key] = src[key];
		    else hide(target, key, src[key]);
		  } return target;
		};

		},{"./_hide":567}],597:[function(require,module,exports){
		module.exports = require('./_hide');

		},{"./_hide":567}],598:[function(require,module,exports){
		arguments[4][272][0].apply(exports,arguments)
		},{"./_a-function":540,"./_ctx":556,"./_export":562,"./_for-of":564,"dup":272}],599:[function(require,module,exports){
		arguments[4][273][0].apply(exports,arguments)
		},{"./_export":562,"dup":273}],600:[function(require,module,exports){
		arguments[4][274][0].apply(exports,arguments)
		},{"./_an-object":543,"./_ctx":556,"./_is-object":573,"./_object-gopd":586,"dup":274}],601:[function(require,module,exports){
		'use strict';
		var global = require('./_global');
		var core = require('./_core');
		var dP = require('./_object-dp');
		var DESCRIPTORS = require('./_descriptors');
		var SPECIES = require('./_wks')('species');

		module.exports = function (KEY) {
		  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
		  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
		    configurable: true,
		    get: function () { return this; }
		  });
		};

		},{"./_core":554,"./_descriptors":558,"./_global":565,"./_object-dp":584,"./_wks":616}],602:[function(require,module,exports){
		arguments[4][276][0].apply(exports,arguments)
		},{"./_has":566,"./_object-dp":584,"./_wks":616,"dup":276}],603:[function(require,module,exports){
		arguments[4][277][0].apply(exports,arguments)
		},{"./_shared":604,"./_uid":612,"dup":277}],604:[function(require,module,exports){
		arguments[4][278][0].apply(exports,arguments)
		},{"./_global":565,"dup":278}],605:[function(require,module,exports){
		arguments[4][281][0].apply(exports,arguments)
		},{"./_defined":557,"./_to-integer":607,"dup":281}],606:[function(require,module,exports){
		arguments[4][289][0].apply(exports,arguments)
		},{"./_to-integer":607,"dup":289}],607:[function(require,module,exports){
		arguments[4][291][0].apply(exports,arguments)
		},{"dup":291}],608:[function(require,module,exports){
		arguments[4][292][0].apply(exports,arguments)
		},{"./_defined":557,"./_iobject":570,"dup":292}],609:[function(require,module,exports){
		arguments[4][293][0].apply(exports,arguments)
		},{"./_to-integer":607,"dup":293}],610:[function(require,module,exports){
		arguments[4][294][0].apply(exports,arguments)
		},{"./_defined":557,"dup":294}],611:[function(require,module,exports){
		arguments[4][295][0].apply(exports,arguments)
		},{"./_is-object":573,"dup":295}],612:[function(require,module,exports){
		arguments[4][299][0].apply(exports,arguments)
		},{"dup":299}],613:[function(require,module,exports){
		arguments[4][301][0].apply(exports,arguments)
		},{"./_is-object":573,"dup":301}],614:[function(require,module,exports){
		arguments[4][302][0].apply(exports,arguments)
		},{"./_core":554,"./_global":565,"./_library":580,"./_object-dp":584,"./_wks-ext":615,"dup":302}],615:[function(require,module,exports){
		arguments[4][303][0].apply(exports,arguments)
		},{"./_wks":616,"dup":303}],616:[function(require,module,exports){
		arguments[4][304][0].apply(exports,arguments)
		},{"./_global":565,"./_shared":604,"./_uid":612,"dup":304}],617:[function(require,module,exports){
		arguments[4][305][0].apply(exports,arguments)
		},{"./_classof":549,"./_core":554,"./_iterators":579,"./_wks":616,"dup":305}],618:[function(require,module,exports){
		arguments[4][314][0].apply(exports,arguments)
		},{"./_create-property":555,"./_ctx":556,"./_export":562,"./_is-array-iter":571,"./_iter-call":574,"./_iter-detect":577,"./_to-length":609,"./_to-object":610,"./core.get-iterator-method":617,"dup":314}],619:[function(require,module,exports){
		arguments[4][317][0].apply(exports,arguments)
		},{"./_add-to-unscopables":541,"./_iter-define":576,"./_iter-step":578,"./_iterators":579,"./_to-iobject":608,"dup":317}],620:[function(require,module,exports){
		arguments[4][336][0].apply(exports,arguments)
		},{"./_collection":553,"./_collection-strong":551,"./_validate-collection":613,"dup":336}],621:[function(require,module,exports){
		arguments[4][358][0].apply(exports,arguments)
		},{"./_export":562,"dup":358}],622:[function(require,module,exports){
		arguments[4][361][0].apply(exports,arguments)
		},{"./_export":562,"dup":361}],623:[function(require,module,exports){
		arguments[4][366][0].apply(exports,arguments)
		},{"./_export":562,"./_object-assign":582,"dup":366}],624:[function(require,module,exports){
		arguments[4][367][0].apply(exports,arguments)
		},{"./_export":562,"./_object-create":583,"dup":367}],625:[function(require,module,exports){
		arguments[4][369][0].apply(exports,arguments)
		},{"./_descriptors":558,"./_export":562,"./_object-dp":584,"dup":369}],626:[function(require,module,exports){
		arguments[4][373][0].apply(exports,arguments)
		},{"./_object-gpo":590,"./_object-sap":594,"./_to-object":610,"dup":373}],627:[function(require,module,exports){
		arguments[4][378][0].apply(exports,arguments)
		},{"./_object-keys":592,"./_object-sap":594,"./_to-object":610,"dup":378}],628:[function(require,module,exports){
		arguments[4][381][0].apply(exports,arguments)
		},{"./_export":562,"./_set-proto":600,"dup":381}],629:[function(require,module,exports){

		},{}],630:[function(require,module,exports){
		arguments[4][420][0].apply(exports,arguments)
		},{"./_iter-define":576,"./_string-at":605,"dup":420}],631:[function(require,module,exports){
		arguments[4][430][0].apply(exports,arguments)
		},{"./_an-object":543,"./_descriptors":558,"./_enum-keys":561,"./_export":562,"./_fails":563,"./_global":565,"./_has":566,"./_hide":567,"./_is-array":572,"./_is-object":573,"./_library":580,"./_meta":581,"./_object-create":583,"./_object-dp":584,"./_object-gopd":586,"./_object-gopn":588,"./_object-gopn-ext":587,"./_object-gops":589,"./_object-keys":592,"./_object-pie":593,"./_property-desc":595,"./_redefine":597,"./_set-to-string-tag":602,"./_shared":604,"./_to-iobject":608,"./_to-primitive":611,"./_uid":612,"./_wks":616,"./_wks-define":614,"./_wks-ext":615,"dup":430}],632:[function(require,module,exports){
		arguments[4][450][0].apply(exports,arguments)
		},{"./_set-collection-from":598,"dup":450}],633:[function(require,module,exports){
		arguments[4][451][0].apply(exports,arguments)
		},{"./_set-collection-of":599,"dup":451}],634:[function(require,module,exports){
		arguments[4][452][0].apply(exports,arguments)
		},{"./_collection-to-json":552,"./_export":562,"dup":452}],635:[function(require,module,exports){
		arguments[4][493][0].apply(exports,arguments)
		},{"./_wks-define":614,"dup":493}],636:[function(require,module,exports){
		arguments[4][494][0].apply(exports,arguments)
		},{"./_wks-define":614,"dup":494}],637:[function(require,module,exports){
		require('./es6.array.iterator');
		var global = require('./_global');
		var hide = require('./_hide');
		var Iterators = require('./_iterators');
		var TO_STRING_TAG = require('./_wks')('toStringTag');

		var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
		  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
		  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
		  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
		  'TextTrackList,TouchList').split(',');

		for (var i = 0; i < DOMIterables.length; i++) {
		  var NAME = DOMIterables[i];
		  var Collection = global[NAME];
		  var proto = Collection && Collection.prototype;
		  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
		  Iterators[NAME] = Iterators.Array;
		}

		},{"./_global":565,"./_hide":567,"./_iterators":579,"./_wks":616,"./es6.array.iterator":619}],638:[function(require,module,exports){
		'use strict'

		exports.byteLength = byteLength
		exports.toByteArray = toByteArray
		exports.fromByteArray = fromByteArray

		var lookup = []
		var revLookup = []
		var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

		var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
		for (var i = 0, len = code.length; i < len; ++i) {
		  lookup[i] = code[i]
		  revLookup[code.charCodeAt(i)] = i
		}

		// Support decoding URL-safe base64 strings, as Node.js does.
		// See: https://en.wikipedia.org/wiki/Base64#URL_applications
		revLookup['-'.charCodeAt(0)] = 62
		revLookup['_'.charCodeAt(0)] = 63

		function placeHoldersCount (b64) {
		  var len = b64.length
		  if (len % 4 > 0) {
		    throw new Error('Invalid string. Length must be a multiple of 4')
		  }

		  // the number of equal signs (place holders)
		  // if there are two placeholders, than the two characters before it
		  // represent one byte
		  // if there is only one, then the three characters before it represent 2 bytes
		  // this is just a cheap hack to not do indexOf twice
		  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
		}

		function byteLength (b64) {
		  // base64 is 4/3 + up to two characters of the original data
		  return (b64.length * 3 / 4) - placeHoldersCount(b64)
		}

		function toByteArray (b64) {
		  var i, l, tmp, placeHolders, arr
		  var len = b64.length
		  placeHolders = placeHoldersCount(b64)

		  arr = new Arr((len * 3 / 4) - placeHolders)

		  // if there are placeholders, only get up to the last complete 4 chars
		  l = placeHolders > 0 ? len - 4 : len

		  var L = 0

		  for (i = 0; i < l; i += 4) {
		    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
		    arr[L++] = (tmp >> 16) & 0xFF
		    arr[L++] = (tmp >> 8) & 0xFF
		    arr[L++] = tmp & 0xFF
		  }

		  if (placeHolders === 2) {
		    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
		    arr[L++] = tmp & 0xFF
		  } else if (placeHolders === 1) {
		    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
		    arr[L++] = (tmp >> 8) & 0xFF
		    arr[L++] = tmp & 0xFF
		  }

		  return arr
		}

		function tripletToBase64 (num) {
		  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
		}

		function encodeChunk (uint8, start, end) {
		  var tmp
		  var output = []
		  for (var i = start; i < end; i += 3) {
		    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)
		    output.push(tripletToBase64(tmp))
		  }
		  return output.join('')
		}

		function fromByteArray (uint8) {
		  var tmp
		  var len = uint8.length
		  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
		  var output = ''
		  var parts = []
		  var maxChunkLength = 16383 // must be multiple of 3

		  // go through the array every three bytes, we'll deal with trailing stuff later
		  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
		    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
		  }

		  // pad the end with zeros, but make sure to not forget the extra bytes
		  if (extraBytes === 1) {
		    tmp = uint8[len - 1]
		    output += lookup[tmp >> 2]
		    output += lookup[(tmp << 4) & 0x3F]
		    output += '=='
		  } else if (extraBytes === 2) {
		    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
		    output += lookup[tmp >> 10]
		    output += lookup[(tmp >> 4) & 0x3F]
		    output += lookup[(tmp << 2) & 0x3F]
		    output += '='
		  }

		  parts.push(output)

		  return parts.join('')
		}

		},{}],639:[function(require,module,exports){
		function createBroadcast (initialState) {
		  var listeners = {};
		  var id = 1;
		  var _state = initialState;

		  function getState () {
		    return _state
		  }

		  function setState (state) {
		    _state = state;
		    var keys = Object.keys(listeners);
		    var i = 0;
		    var len = keys.length;
		    for (; i < len; i++) {
		      // if a listener gets unsubscribed during setState we just skip it
		      if (listeners[keys[i]]) { listeners[keys[i]](state); }
		    }
		  }

		  // subscribe to changes and return the subscriptionId
		  function subscribe (listener) {
		    if (typeof listener !== 'function') {
		      throw new Error('listener must be a function.')
		    }
		    var currentId = id;
		    listeners[currentId] = listener;
		    id += 1;
		    return currentId
		  }

		  // remove subscription by removing the listener function
		  function unsubscribe (id) {
		    listeners[id] = undefined;
		  }

		  return { getState: getState, setState: setState, subscribe: subscribe, unsubscribe: unsubscribe }
		}

		module.exports = createBroadcast;

		},{}],640:[function(require,module,exports){
		arguments[4][629][0].apply(exports,arguments)
		},{"dup":629}],641:[function(require,module,exports){
		/*!
		 * The buffer module from node.js, for the browser.
		 *
		 * @author   Feross Aboukhadijeh <https://feross.org>
		 * @license  MIT
		 */
		/* eslint-disable no-proto */

		'use strict'

		var base64 = require('base64-js')
		var ieee754 = require('ieee754')

		exports.Buffer = Buffer
		exports.SlowBuffer = SlowBuffer
		exports.INSPECT_MAX_BYTES = 50

		var K_MAX_LENGTH = 0x7fffffff
		exports.kMaxLength = K_MAX_LENGTH

		/**
		 * If `Buffer.TYPED_ARRAY_SUPPORT`:
		 *   === true    Use Uint8Array implementation (fastest)
		 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
		 *               implementation (most compatible, even IE6)
		 *
		 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
		 * Opera 11.6+, iOS 4.2+.
		 *
		 * We report that the browser does not support typed arrays if the are not subclassable
		 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
		 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
		 * for __proto__ and has a buggy typed array implementation.
		 */
		Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

		if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
		    typeof console.error === 'function') {
		  console.error(
		    'This browser lacks typed array (Uint8Array) support which is required by ' +
		    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
		  )
		}

		function typedArraySupport () {
		  // Can typed array instances can be augmented?
		  try {
		    var arr = new Uint8Array(1)
		    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
		    return arr.foo() === 42
		  } catch (e) {
		    return false
		  }
		}

		Object.defineProperty(Buffer.prototype, 'parent', {
		  get: function () {
		    if (!(this instanceof Buffer)) {
		      return undefined
		    }
		    return this.buffer
		  }
		})

		Object.defineProperty(Buffer.prototype, 'offset', {
		  get: function () {
		    if (!(this instanceof Buffer)) {
		      return undefined
		    }
		    return this.byteOffset
		  }
		})

		function createBuffer (length) {
		  if (length > K_MAX_LENGTH) {
		    throw new RangeError('Invalid typed array length')
		  }
		  // Return an augmented `Uint8Array` instance
		  var buf = new Uint8Array(length)
		  buf.__proto__ = Buffer.prototype
		  return buf
		}

		/**
		 * The Buffer constructor returns instances of `Uint8Array` that have their
		 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
		 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
		 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
		 * returns a single octet.
		 *
		 * The `Uint8Array` prototype remains unmodified.
		 */

		function Buffer (arg, encodingOrOffset, length) {
		  // Common case.
		  if (typeof arg === 'number') {
		    if (typeof encodingOrOffset === 'string') {
		      throw new Error(
		        'If encoding is specified then the first argument must be a string'
		      )
		    }
		    return allocUnsafe(arg)
		  }
		  return from(arg, encodingOrOffset, length)
		}

		// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
		if (typeof Symbol !== 'undefined' && Symbol.species &&
		    Buffer[Symbol.species] === Buffer) {
		  Object.defineProperty(Buffer, Symbol.species, {
		    value: null,
		    configurable: true,
		    enumerable: false,
		    writable: false
		  })
		}

		Buffer.poolSize = 8192 // not used by this implementation

		function from (value, encodingOrOffset, length) {
		  if (typeof value === 'number') {
		    throw new TypeError('"value" argument must not be a number')
		  }

		  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {
		    return fromArrayBuffer(value, encodingOrOffset, length)
		  }

		  if (typeof value === 'string') {
		    return fromString(value, encodingOrOffset)
		  }

		  return fromObject(value)
		}

		/**
		 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
		 * if value is a number.
		 * Buffer.from(str[, encoding])
		 * Buffer.from(array)
		 * Buffer.from(buffer)
		 * Buffer.from(arrayBuffer[, byteOffset[, length]])
		 **/
		Buffer.from = function (value, encodingOrOffset, length) {
		  return from(value, encodingOrOffset, length)
		}

		// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
		// https://github.com/feross/buffer/pull/148
		Buffer.prototype.__proto__ = Uint8Array.prototype
		Buffer.__proto__ = Uint8Array

		function assertSize (size) {
		  if (typeof size !== 'number') {
		    throw new TypeError('"size" argument must be of type number')
		  } else if (size < 0) {
		    throw new RangeError('"size" argument must not be negative')
		  }
		}

		function alloc (size, fill, encoding) {
		  assertSize(size)
		  if (size <= 0) {
		    return createBuffer(size)
		  }
		  if (fill !== undefined) {
		    // Only pay attention to encoding if it's a string. This
		    // prevents accidentally sending in a number that would
		    // be interpretted as a start offset.
		    return typeof encoding === 'string'
		      ? createBuffer(size).fill(fill, encoding)
		      : createBuffer(size).fill(fill)
		  }
		  return createBuffer(size)
		}

		/**
		 * Creates a new filled Buffer instance.
		 * alloc(size[, fill[, encoding]])
		 **/
		Buffer.alloc = function (size, fill, encoding) {
		  return alloc(size, fill, encoding)
		}

		function allocUnsafe (size) {
		  assertSize(size)
		  return createBuffer(size < 0 ? 0 : checked(size) | 0)
		}

		/**
		 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
		 * */
		Buffer.allocUnsafe = function (size) {
		  return allocUnsafe(size)
		}
		/**
		 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
		 */
		Buffer.allocUnsafeSlow = function (size) {
		  return allocUnsafe(size)
		}

		function fromString (string, encoding) {
		  if (typeof encoding !== 'string' || encoding === '') {
		    encoding = 'utf8'
		  }

		  if (!Buffer.isEncoding(encoding)) {
		    throw new TypeError('Unknown encoding: ' + encoding)
		  }

		  var length = byteLength(string, encoding) | 0
		  var buf = createBuffer(length)

		  var actual = buf.write(string, encoding)

		  if (actual !== length) {
		    // Writing a hex string, for example, that contains invalid characters will
		    // cause everything after the first invalid character to be ignored. (e.g.
		    // 'abxxcd' will be treated as 'ab')
		    buf = buf.slice(0, actual)
		  }

		  return buf
		}

		function fromArrayLike (array) {
		  var length = array.length < 0 ? 0 : checked(array.length) | 0
		  var buf = createBuffer(length)
		  for (var i = 0; i < length; i += 1) {
		    buf[i] = array[i] & 255
		  }
		  return buf
		}

		function fromArrayBuffer (array, byteOffset, length) {
		  if (byteOffset < 0 || array.byteLength < byteOffset) {
		    throw new RangeError('"offset" is outside of buffer bounds')
		  }

		  if (array.byteLength < byteOffset + (length || 0)) {
		    throw new RangeError('"length" is outside of buffer bounds')
		  }

		  var buf
		  if (byteOffset === undefined && length === undefined) {
		    buf = new Uint8Array(array)
		  } else if (length === undefined) {
		    buf = new Uint8Array(array, byteOffset)
		  } else {
		    buf = new Uint8Array(array, byteOffset, length)
		  }

		  // Return an augmented `Uint8Array` instance
		  buf.__proto__ = Buffer.prototype
		  return buf
		}

		function fromObject (obj) {
		  if (Buffer.isBuffer(obj)) {
		    var len = checked(obj.length) | 0
		    var buf = createBuffer(len)

		    if (buf.length === 0) {
		      return buf
		    }

		    obj.copy(buf, 0, 0, len)
		    return buf
		  }

		  if (obj) {
		    if (ArrayBuffer.isView(obj) || 'length' in obj) {
		      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
		        return createBuffer(0)
		      }
		      return fromArrayLike(obj)
		    }

		    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
		      return fromArrayLike(obj.data)
		    }
		  }

		  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')
		}

		function checked (length) {
		  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
		  // length is NaN (which is otherwise coerced to zero.)
		  if (length >= K_MAX_LENGTH) {
		    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
		                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
		  }
		  return length | 0
		}

		function SlowBuffer (length) {
		  if (+length != length) { // eslint-disable-line eqeqeq
		    length = 0
		  }
		  return Buffer.alloc(+length)
		}

		Buffer.isBuffer = function isBuffer (b) {
		  return b != null && b._isBuffer === true
		}

		Buffer.compare = function compare (a, b) {
		  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
		    throw new TypeError('Arguments must be Buffers')
		  }

		  if (a === b) return 0

		  var x = a.length
		  var y = b.length

		  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
		    if (a[i] !== b[i]) {
		      x = a[i]
		      y = b[i]
		      break
		    }
		  }

		  if (x < y) return -1
		  if (y < x) return 1
		  return 0
		}

		Buffer.isEncoding = function isEncoding (encoding) {
		  switch (String(encoding).toLowerCase()) {
		    case 'hex':
		    case 'utf8':
		    case 'utf-8':
		    case 'ascii':
		    case 'latin1':
		    case 'binary':
		    case 'base64':
		    case 'ucs2':
		    case 'ucs-2':
		    case 'utf16le':
		    case 'utf-16le':
		      return true
		    default:
		      return false
		  }
		}

		Buffer.concat = function concat (list, length) {
		  if (!Array.isArray(list)) {
		    throw new TypeError('"list" argument must be an Array of Buffers')
		  }

		  if (list.length === 0) {
		    return Buffer.alloc(0)
		  }

		  var i
		  if (length === undefined) {
		    length = 0
		    for (i = 0; i < list.length; ++i) {
		      length += list[i].length
		    }
		  }

		  var buffer = Buffer.allocUnsafe(length)
		  var pos = 0
		  for (i = 0; i < list.length; ++i) {
		    var buf = list[i]
		    if (ArrayBuffer.isView(buf)) {
		      buf = Buffer.from(buf)
		    }
		    if (!Buffer.isBuffer(buf)) {
		      throw new TypeError('"list" argument must be an Array of Buffers')
		    }
		    buf.copy(buffer, pos)
		    pos += buf.length
		  }
		  return buffer
		}

		function byteLength (string, encoding) {
		  if (Buffer.isBuffer(string)) {
		    return string.length
		  }
		  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {
		    return string.byteLength
		  }
		  if (typeof string !== 'string') {
		    string = '' + string
		  }

		  var len = string.length
		  if (len === 0) return 0

		  // Use a for loop to avoid recursion
		  var loweredCase = false
		  for (;;) {
		    switch (encoding) {
		      case 'ascii':
		      case 'latin1':
		      case 'binary':
		        return len
		      case 'utf8':
		      case 'utf-8':
		      case undefined:
		        return utf8ToBytes(string).length
		      case 'ucs2':
		      case 'ucs-2':
		      case 'utf16le':
		      case 'utf-16le':
		        return len * 2
		      case 'hex':
		        return len >>> 1
		      case 'base64':
		        return base64ToBytes(string).length
		      default:
		        if (loweredCase) return utf8ToBytes(string).length // assume utf8
		        encoding = ('' + encoding).toLowerCase()
		        loweredCase = true
		    }
		  }
		}
		Buffer.byteLength = byteLength

		function slowToString (encoding, start, end) {
		  var loweredCase = false

		  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
		  // property of a typed array.

		  // This behaves neither like String nor Uint8Array in that we set start/end
		  // to their upper/lower bounds if the value passed is out of range.
		  // undefined is handled specially as per ECMA-262 6th Edition,
		  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
		  if (start === undefined || start < 0) {
		    start = 0
		  }
		  // Return early if start > this.length. Done here to prevent potential uint32
		  // coercion fail below.
		  if (start > this.length) {
		    return ''
		  }

		  if (end === undefined || end > this.length) {
		    end = this.length
		  }

		  if (end <= 0) {
		    return ''
		  }

		  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
		  end >>>= 0
		  start >>>= 0

		  if (end <= start) {
		    return ''
		  }

		  if (!encoding) encoding = 'utf8'

		  while (true) {
		    switch (encoding) {
		      case 'hex':
		        return hexSlice(this, start, end)

		      case 'utf8':
		      case 'utf-8':
		        return utf8Slice(this, start, end)

		      case 'ascii':
		        return asciiSlice(this, start, end)

		      case 'latin1':
		      case 'binary':
		        return latin1Slice(this, start, end)

		      case 'base64':
		        return base64Slice(this, start, end)

		      case 'ucs2':
		      case 'ucs-2':
		      case 'utf16le':
		      case 'utf-16le':
		        return utf16leSlice(this, start, end)

		      default:
		        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
		        encoding = (encoding + '').toLowerCase()
		        loweredCase = true
		    }
		  }
		}

		// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
		// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
		// reliably in a browserify context because there could be multiple different
		// copies of the 'buffer' package in use. This method works even for Buffer
		// instances that were created from another copy of the `buffer` package.
		// See: https://github.com/feross/buffer/issues/154
		Buffer.prototype._isBuffer = true

		function swap (b, n, m) {
		  var i = b[n]
		  b[n] = b[m]
		  b[m] = i
		}

		Buffer.prototype.swap16 = function swap16 () {
		  var len = this.length
		  if (len % 2 !== 0) {
		    throw new RangeError('Buffer size must be a multiple of 16-bits')
		  }
		  for (var i = 0; i < len; i += 2) {
		    swap(this, i, i + 1)
		  }
		  return this
		}

		Buffer.prototype.swap32 = function swap32 () {
		  var len = this.length
		  if (len % 4 !== 0) {
		    throw new RangeError('Buffer size must be a multiple of 32-bits')
		  }
		  for (var i = 0; i < len; i += 4) {
		    swap(this, i, i + 3)
		    swap(this, i + 1, i + 2)
		  }
		  return this
		}

		Buffer.prototype.swap64 = function swap64 () {
		  var len = this.length
		  if (len % 8 !== 0) {
		    throw new RangeError('Buffer size must be a multiple of 64-bits')
		  }
		  for (var i = 0; i < len; i += 8) {
		    swap(this, i, i + 7)
		    swap(this, i + 1, i + 6)
		    swap(this, i + 2, i + 5)
		    swap(this, i + 3, i + 4)
		  }
		  return this
		}

		Buffer.prototype.toString = function toString () {
		  var length = this.length
		  if (length === 0) return ''
		  if (arguments.length === 0) return utf8Slice(this, 0, length)
		  return slowToString.apply(this, arguments)
		}

		Buffer.prototype.toLocaleString = Buffer.prototype.toString

		Buffer.prototype.equals = function equals (b) {
		  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
		  if (this === b) return true
		  return Buffer.compare(this, b) === 0
		}

		Buffer.prototype.inspect = function inspect () {
		  var str = ''
		  var max = exports.INSPECT_MAX_BYTES
		  if (this.length > 0) {
		    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
		    if (this.length > max) str += ' ... '
		  }
		  return '<Buffer ' + str + '>'
		}

		Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
		  if (!Buffer.isBuffer(target)) {
		    throw new TypeError('Argument must be a Buffer')
		  }

		  if (start === undefined) {
		    start = 0
		  }
		  if (end === undefined) {
		    end = target ? target.length : 0
		  }
		  if (thisStart === undefined) {
		    thisStart = 0
		  }
		  if (thisEnd === undefined) {
		    thisEnd = this.length
		  }

		  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
		    throw new RangeError('out of range index')
		  }

		  if (thisStart >= thisEnd && start >= end) {
		    return 0
		  }
		  if (thisStart >= thisEnd) {
		    return -1
		  }
		  if (start >= end) {
		    return 1
		  }

		  start >>>= 0
		  end >>>= 0
		  thisStart >>>= 0
		  thisEnd >>>= 0

		  if (this === target) return 0

		  var x = thisEnd - thisStart
		  var y = end - start
		  var len = Math.min(x, y)

		  var thisCopy = this.slice(thisStart, thisEnd)
		  var targetCopy = target.slice(start, end)

		  for (var i = 0; i < len; ++i) {
		    if (thisCopy[i] !== targetCopy[i]) {
		      x = thisCopy[i]
		      y = targetCopy[i]
		      break
		    }
		  }

		  if (x < y) return -1
		  if (y < x) return 1
		  return 0
		}

		// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
		// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
		//
		// Arguments:
		// - buffer - a Buffer to search
		// - val - a string, Buffer, or number
		// - byteOffset - an index into `buffer`; will be clamped to an int32
		// - encoding - an optional encoding, relevant is val is a string
		// - dir - true for indexOf, false for lastIndexOf
		function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
		  // Empty buffer means no match
		  if (buffer.length === 0) return -1

		  // Normalize byteOffset
		  if (typeof byteOffset === 'string') {
		    encoding = byteOffset
		    byteOffset = 0
		  } else if (byteOffset > 0x7fffffff) {
		    byteOffset = 0x7fffffff
		  } else if (byteOffset < -0x80000000) {
		    byteOffset = -0x80000000
		  }
		  byteOffset = +byteOffset  // Coerce to Number.
		  if (numberIsNaN(byteOffset)) {
		    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
		    byteOffset = dir ? 0 : (buffer.length - 1)
		  }

		  // Normalize byteOffset: negative offsets start from the end of the buffer
		  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
		  if (byteOffset >= buffer.length) {
		    if (dir) return -1
		    else byteOffset = buffer.length - 1
		  } else if (byteOffset < 0) {
		    if (dir) byteOffset = 0
		    else return -1
		  }

		  // Normalize val
		  if (typeof val === 'string') {
		    val = Buffer.from(val, encoding)
		  }

		  // Finally, search either indexOf (if dir is true) or lastIndexOf
		  if (Buffer.isBuffer(val)) {
		    // Special case: looking for empty string/buffer always fails
		    if (val.length === 0) {
		      return -1
		    }
		    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
		  } else if (typeof val === 'number') {
		    val = val & 0xFF // Search for a byte value [0-255]
		    if (typeof Uint8Array.prototype.indexOf === 'function') {
		      if (dir) {
		        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
		      } else {
		        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
		      }
		    }
		    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
		  }

		  throw new TypeError('val must be string, number or Buffer')
		}

		function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
		  var indexSize = 1
		  var arrLength = arr.length
		  var valLength = val.length

		  if (encoding !== undefined) {
		    encoding = String(encoding).toLowerCase()
		    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
		        encoding === 'utf16le' || encoding === 'utf-16le') {
		      if (arr.length < 2 || val.length < 2) {
		        return -1
		      }
		      indexSize = 2
		      arrLength /= 2
		      valLength /= 2
		      byteOffset /= 2
		    }
		  }

		  function read (buf, i) {
		    if (indexSize === 1) {
		      return buf[i]
		    } else {
		      return buf.readUInt16BE(i * indexSize)
		    }
		  }

		  var i
		  if (dir) {
		    var foundIndex = -1
		    for (i = byteOffset; i < arrLength; i++) {
		      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
		        if (foundIndex === -1) foundIndex = i
		        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
		      } else {
		        if (foundIndex !== -1) i -= i - foundIndex
		        foundIndex = -1
		      }
		    }
		  } else {
		    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
		    for (i = byteOffset; i >= 0; i--) {
		      var found = true
		      for (var j = 0; j < valLength; j++) {
		        if (read(arr, i + j) !== read(val, j)) {
		          found = false
		          break
		        }
		      }
		      if (found) return i
		    }
		  }

		  return -1
		}

		Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
		  return this.indexOf(val, byteOffset, encoding) !== -1
		}

		Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
		  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
		}

		Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
		  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
		}

		function hexWrite (buf, string, offset, length) {
		  offset = Number(offset) || 0
		  var remaining = buf.length - offset
		  if (!length) {
		    length = remaining
		  } else {
		    length = Number(length)
		    if (length > remaining) {
		      length = remaining
		    }
		  }

		  var strLen = string.length

		  if (length > strLen / 2) {
		    length = strLen / 2
		  }
		  for (var i = 0; i < length; ++i) {
		    var parsed = parseInt(string.substr(i * 2, 2), 16)
		    if (numberIsNaN(parsed)) return i
		    buf[offset + i] = parsed
		  }
		  return i
		}

		function utf8Write (buf, string, offset, length) {
		  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
		}

		function asciiWrite (buf, string, offset, length) {
		  return blitBuffer(asciiToBytes(string), buf, offset, length)
		}

		function latin1Write (buf, string, offset, length) {
		  return asciiWrite(buf, string, offset, length)
		}

		function base64Write (buf, string, offset, length) {
		  return blitBuffer(base64ToBytes(string), buf, offset, length)
		}

		function ucs2Write (buf, string, offset, length) {
		  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
		}

		Buffer.prototype.write = function write (string, offset, length, encoding) {
		  // Buffer#write(string)
		  if (offset === undefined) {
		    encoding = 'utf8'
		    length = this.length
		    offset = 0
		  // Buffer#write(string, encoding)
		  } else if (length === undefined && typeof offset === 'string') {
		    encoding = offset
		    length = this.length
		    offset = 0
		  // Buffer#write(string, offset[, length][, encoding])
		  } else if (isFinite(offset)) {
		    offset = offset >>> 0
		    if (isFinite(length)) {
		      length = length >>> 0
		      if (encoding === undefined) encoding = 'utf8'
		    } else {
		      encoding = length
		      length = undefined
		    }
		  } else {
		    throw new Error(
		      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
		    )
		  }

		  var remaining = this.length - offset
		  if (length === undefined || length > remaining) length = remaining

		  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
		    throw new RangeError('Attempt to write outside buffer bounds')
		  }

		  if (!encoding) encoding = 'utf8'

		  var loweredCase = false
		  for (;;) {
		    switch (encoding) {
		      case 'hex':
		        return hexWrite(this, string, offset, length)

		      case 'utf8':
		      case 'utf-8':
		        return utf8Write(this, string, offset, length)

		      case 'ascii':
		        return asciiWrite(this, string, offset, length)

		      case 'latin1':
		      case 'binary':
		        return latin1Write(this, string, offset, length)

		      case 'base64':
		        // Warning: maxLength not taken into account in base64Write
		        return base64Write(this, string, offset, length)

		      case 'ucs2':
		      case 'ucs-2':
		      case 'utf16le':
		      case 'utf-16le':
		        return ucs2Write(this, string, offset, length)

		      default:
		        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
		        encoding = ('' + encoding).toLowerCase()
		        loweredCase = true
		    }
		  }
		}

		Buffer.prototype.toJSON = function toJSON () {
		  return {
		    type: 'Buffer',
		    data: Array.prototype.slice.call(this._arr || this, 0)
		  }
		}

		function base64Slice (buf, start, end) {
		  if (start === 0 && end === buf.length) {
		    return base64.fromByteArray(buf)
		  } else {
		    return base64.fromByteArray(buf.slice(start, end))
		  }
		}

		function utf8Slice (buf, start, end) {
		  end = Math.min(buf.length, end)
		  var res = []

		  var i = start
		  while (i < end) {
		    var firstByte = buf[i]
		    var codePoint = null
		    var bytesPerSequence = (firstByte > 0xEF) ? 4
		      : (firstByte > 0xDF) ? 3
		      : (firstByte > 0xBF) ? 2
		      : 1

		    if (i + bytesPerSequence <= end) {
		      var secondByte, thirdByte, fourthByte, tempCodePoint

		      switch (bytesPerSequence) {
		        case 1:
		          if (firstByte < 0x80) {
		            codePoint = firstByte
		          }
		          break
		        case 2:
		          secondByte = buf[i + 1]
		          if ((secondByte & 0xC0) === 0x80) {
		            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
		            if (tempCodePoint > 0x7F) {
		              codePoint = tempCodePoint
		            }
		          }
		          break
		        case 3:
		          secondByte = buf[i + 1]
		          thirdByte = buf[i + 2]
		          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
		            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
		            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
		              codePoint = tempCodePoint
		            }
		          }
		          break
		        case 4:
		          secondByte = buf[i + 1]
		          thirdByte = buf[i + 2]
		          fourthByte = buf[i + 3]
		          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
		            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
		            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
		              codePoint = tempCodePoint
		            }
		          }
		      }
		    }

		    if (codePoint === null) {
		      // we did not generate a valid codePoint so insert a
		      // replacement char (U+FFFD) and advance only 1 byte
		      codePoint = 0xFFFD
		      bytesPerSequence = 1
		    } else if (codePoint > 0xFFFF) {
		      // encode to utf16 (surrogate pair dance)
		      codePoint -= 0x10000
		      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
		      codePoint = 0xDC00 | codePoint & 0x3FF
		    }

		    res.push(codePoint)
		    i += bytesPerSequence
		  }

		  return decodeCodePointsArray(res)
		}

		// Based on http://stackoverflow.com/a/22747272/680742, the browser with
		// the lowest limit is Chrome, with 0x10000 args.
		// We go 1 magnitude less, for safety
		var MAX_ARGUMENTS_LENGTH = 0x1000

		function decodeCodePointsArray (codePoints) {
		  var len = codePoints.length
		  if (len <= MAX_ARGUMENTS_LENGTH) {
		    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
		  }

		  // Decode in chunks to avoid "call stack size exceeded".
		  var res = ''
		  var i = 0
		  while (i < len) {
		    res += String.fromCharCode.apply(
		      String,
		      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
		    )
		  }
		  return res
		}

		function asciiSlice (buf, start, end) {
		  var ret = ''
		  end = Math.min(buf.length, end)

		  for (var i = start; i < end; ++i) {
		    ret += String.fromCharCode(buf[i] & 0x7F)
		  }
		  return ret
		}

		function latin1Slice (buf, start, end) {
		  var ret = ''
		  end = Math.min(buf.length, end)

		  for (var i = start; i < end; ++i) {
		    ret += String.fromCharCode(buf[i])
		  }
		  return ret
		}

		function hexSlice (buf, start, end) {
		  var len = buf.length

		  if (!start || start < 0) start = 0
		  if (!end || end < 0 || end > len) end = len

		  var out = ''
		  for (var i = start; i < end; ++i) {
		    out += toHex(buf[i])
		  }
		  return out
		}

		function utf16leSlice (buf, start, end) {
		  var bytes = buf.slice(start, end)
		  var res = ''
		  for (var i = 0; i < bytes.length; i += 2) {
		    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
		  }
		  return res
		}

		Buffer.prototype.slice = function slice (start, end) {
		  var len = this.length
		  start = ~~start
		  end = end === undefined ? len : ~~end

		  if (start < 0) {
		    start += len
		    if (start < 0) start = 0
		  } else if (start > len) {
		    start = len
		  }

		  if (end < 0) {
		    end += len
		    if (end < 0) end = 0
		  } else if (end > len) {
		    end = len
		  }

		  if (end < start) end = start

		  var newBuf = this.subarray(start, end)
		  // Return an augmented `Uint8Array` instance
		  newBuf.__proto__ = Buffer.prototype
		  return newBuf
		}

		/*
		 * Need to make sure that buffer isn't trying to write out of bounds.
		 */
		function checkOffset (offset, ext, length) {
		  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
		  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
		}

		Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
		  offset = offset >>> 0
		  byteLength = byteLength >>> 0
		  if (!noAssert) checkOffset(offset, byteLength, this.length)

		  var val = this[offset]
		  var mul = 1
		  var i = 0
		  while (++i < byteLength && (mul *= 0x100)) {
		    val += this[offset + i] * mul
		  }

		  return val
		}

		Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
		  offset = offset >>> 0
		  byteLength = byteLength >>> 0
		  if (!noAssert) {
		    checkOffset(offset, byteLength, this.length)
		  }

		  var val = this[offset + --byteLength]
		  var mul = 1
		  while (byteLength > 0 && (mul *= 0x100)) {
		    val += this[offset + --byteLength] * mul
		  }

		  return val
		}

		Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 1, this.length)
		  return this[offset]
		}

		Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 2, this.length)
		  return this[offset] | (this[offset + 1] << 8)
		}

		Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 2, this.length)
		  return (this[offset] << 8) | this[offset + 1]
		}

		Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 4, this.length)

		  return ((this[offset]) |
		      (this[offset + 1] << 8) |
		      (this[offset + 2] << 16)) +
		      (this[offset + 3] * 0x1000000)
		}

		Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 4, this.length)

		  return (this[offset] * 0x1000000) +
		    ((this[offset + 1] << 16) |
		    (this[offset + 2] << 8) |
		    this[offset + 3])
		}

		Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
		  offset = offset >>> 0
		  byteLength = byteLength >>> 0
		  if (!noAssert) checkOffset(offset, byteLength, this.length)

		  var val = this[offset]
		  var mul = 1
		  var i = 0
		  while (++i < byteLength && (mul *= 0x100)) {
		    val += this[offset + i] * mul
		  }
		  mul *= 0x80

		  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

		  return val
		}

		Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
		  offset = offset >>> 0
		  byteLength = byteLength >>> 0
		  if (!noAssert) checkOffset(offset, byteLength, this.length)

		  var i = byteLength
		  var mul = 1
		  var val = this[offset + --i]
		  while (i > 0 && (mul *= 0x100)) {
		    val += this[offset + --i] * mul
		  }
		  mul *= 0x80

		  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

		  return val
		}

		Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 1, this.length)
		  if (!(this[offset] & 0x80)) return (this[offset])
		  return ((0xff - this[offset] + 1) * -1)
		}

		Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 2, this.length)
		  var val = this[offset] | (this[offset + 1] << 8)
		  return (val & 0x8000) ? val | 0xFFFF0000 : val
		}

		Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 2, this.length)
		  var val = this[offset + 1] | (this[offset] << 8)
		  return (val & 0x8000) ? val | 0xFFFF0000 : val
		}

		Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 4, this.length)

		  return (this[offset]) |
		    (this[offset + 1] << 8) |
		    (this[offset + 2] << 16) |
		    (this[offset + 3] << 24)
		}

		Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 4, this.length)

		  return (this[offset] << 24) |
		    (this[offset + 1] << 16) |
		    (this[offset + 2] << 8) |
		    (this[offset + 3])
		}

		Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 4, this.length)
		  return ieee754.read(this, offset, true, 23, 4)
		}

		Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 4, this.length)
		  return ieee754.read(this, offset, false, 23, 4)
		}

		Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 8, this.length)
		  return ieee754.read(this, offset, true, 52, 8)
		}

		Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
		  offset = offset >>> 0
		  if (!noAssert) checkOffset(offset, 8, this.length)
		  return ieee754.read(this, offset, false, 52, 8)
		}

		function checkInt (buf, value, offset, ext, max, min) {
		  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
		  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
		  if (offset + ext > buf.length) throw new RangeError('Index out of range')
		}

		Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  byteLength = byteLength >>> 0
		  if (!noAssert) {
		    var maxBytes = Math.pow(2, 8 * byteLength) - 1
		    checkInt(this, value, offset, byteLength, maxBytes, 0)
		  }

		  var mul = 1
		  var i = 0
		  this[offset] = value & 0xFF
		  while (++i < byteLength && (mul *= 0x100)) {
		    this[offset + i] = (value / mul) & 0xFF
		  }

		  return offset + byteLength
		}

		Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  byteLength = byteLength >>> 0
		  if (!noAssert) {
		    var maxBytes = Math.pow(2, 8 * byteLength) - 1
		    checkInt(this, value, offset, byteLength, maxBytes, 0)
		  }

		  var i = byteLength - 1
		  var mul = 1
		  this[offset + i] = value & 0xFF
		  while (--i >= 0 && (mul *= 0x100)) {
		    this[offset + i] = (value / mul) & 0xFF
		  }

		  return offset + byteLength
		}

		Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
		  this[offset] = (value & 0xff)
		  return offset + 1
		}

		Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
		  this[offset] = (value & 0xff)
		  this[offset + 1] = (value >>> 8)
		  return offset + 2
		}

		Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
		  this[offset] = (value >>> 8)
		  this[offset + 1] = (value & 0xff)
		  return offset + 2
		}

		Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
		  this[offset + 3] = (value >>> 24)
		  this[offset + 2] = (value >>> 16)
		  this[offset + 1] = (value >>> 8)
		  this[offset] = (value & 0xff)
		  return offset + 4
		}

		Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
		  this[offset] = (value >>> 24)
		  this[offset + 1] = (value >>> 16)
		  this[offset + 2] = (value >>> 8)
		  this[offset + 3] = (value & 0xff)
		  return offset + 4
		}

		Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) {
		    var limit = Math.pow(2, (8 * byteLength) - 1)

		    checkInt(this, value, offset, byteLength, limit - 1, -limit)
		  }

		  var i = 0
		  var mul = 1
		  var sub = 0
		  this[offset] = value & 0xFF
		  while (++i < byteLength && (mul *= 0x100)) {
		    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
		      sub = 1
		    }
		    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
		  }

		  return offset + byteLength
		}

		Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) {
		    var limit = Math.pow(2, (8 * byteLength) - 1)

		    checkInt(this, value, offset, byteLength, limit - 1, -limit)
		  }

		  var i = byteLength - 1
		  var mul = 1
		  var sub = 0
		  this[offset + i] = value & 0xFF
		  while (--i >= 0 && (mul *= 0x100)) {
		    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
		      sub = 1
		    }
		    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
		  }

		  return offset + byteLength
		}

		Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
		  if (value < 0) value = 0xff + value + 1
		  this[offset] = (value & 0xff)
		  return offset + 1
		}

		Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
		  this[offset] = (value & 0xff)
		  this[offset + 1] = (value >>> 8)
		  return offset + 2
		}

		Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
		  this[offset] = (value >>> 8)
		  this[offset + 1] = (value & 0xff)
		  return offset + 2
		}

		Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
		  this[offset] = (value & 0xff)
		  this[offset + 1] = (value >>> 8)
		  this[offset + 2] = (value >>> 16)
		  this[offset + 3] = (value >>> 24)
		  return offset + 4
		}

		Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
		  if (value < 0) value = 0xffffffff + value + 1
		  this[offset] = (value >>> 24)
		  this[offset + 1] = (value >>> 16)
		  this[offset + 2] = (value >>> 8)
		  this[offset + 3] = (value & 0xff)
		  return offset + 4
		}

		function checkIEEE754 (buf, value, offset, ext, max, min) {
		  if (offset + ext > buf.length) throw new RangeError('Index out of range')
		  if (offset < 0) throw new RangeError('Index out of range')
		}

		function writeFloat (buf, value, offset, littleEndian, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) {
		    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
		  }
		  ieee754.write(buf, value, offset, littleEndian, 23, 4)
		  return offset + 4
		}

		Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
		  return writeFloat(this, value, offset, true, noAssert)
		}

		Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
		  return writeFloat(this, value, offset, false, noAssert)
		}

		function writeDouble (buf, value, offset, littleEndian, noAssert) {
		  value = +value
		  offset = offset >>> 0
		  if (!noAssert) {
		    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
		  }
		  ieee754.write(buf, value, offset, littleEndian, 52, 8)
		  return offset + 8
		}

		Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
		  return writeDouble(this, value, offset, true, noAssert)
		}

		Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
		  return writeDouble(this, value, offset, false, noAssert)
		}

		// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
		Buffer.prototype.copy = function copy (target, targetStart, start, end) {
		  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
		  if (!start) start = 0
		  if (!end && end !== 0) end = this.length
		  if (targetStart >= target.length) targetStart = target.length
		  if (!targetStart) targetStart = 0
		  if (end > 0 && end < start) end = start

		  // Copy 0 bytes; we're done
		  if (end === start) return 0
		  if (target.length === 0 || this.length === 0) return 0

		  // Fatal error conditions
		  if (targetStart < 0) {
		    throw new RangeError('targetStart out of bounds')
		  }
		  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
		  if (end < 0) throw new RangeError('sourceEnd out of bounds')

		  // Are we oob?
		  if (end > this.length) end = this.length
		  if (target.length - targetStart < end - start) {
		    end = target.length - targetStart + start
		  }

		  var len = end - start

		  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
		    // Use built-in when available, missing from IE11
		    this.copyWithin(targetStart, start, end)
		  } else if (this === target && start < targetStart && targetStart < end) {
		    // descending copy from end
		    for (var i = len - 1; i >= 0; --i) {
		      target[i + targetStart] = this[i + start]
		    }
		  } else {
		    Uint8Array.prototype.set.call(
		      target,
		      this.subarray(start, end),
		      targetStart
		    )
		  }

		  return len
		}

		// Usage:
//		    buffer.fill(number[, offset[, end]])
//		    buffer.fill(buffer[, offset[, end]])
//		    buffer.fill(string[, offset[, end]][, encoding])
		Buffer.prototype.fill = function fill (val, start, end, encoding) {
		  // Handle string cases:
		  if (typeof val === 'string') {
		    if (typeof start === 'string') {
		      encoding = start
		      start = 0
		      end = this.length
		    } else if (typeof end === 'string') {
		      encoding = end
		      end = this.length
		    }
		    if (encoding !== undefined && typeof encoding !== 'string') {
		      throw new TypeError('encoding must be a string')
		    }
		    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
		      throw new TypeError('Unknown encoding: ' + encoding)
		    }
		    if (val.length === 1) {
		      var code = val.charCodeAt(0)
		      if ((encoding === 'utf8' && code < 128) ||
		          encoding === 'latin1') {
		        // Fast path: If `val` fits into a single byte, use that numeric value.
		        val = code
		      }
		    }
		  } else if (typeof val === 'number') {
		    val = val & 255
		  }

		  // Invalid ranges are not set to a default, so can range check early.
		  if (start < 0 || this.length < start || this.length < end) {
		    throw new RangeError('Out of range index')
		  }

		  if (end <= start) {
		    return this
		  }

		  start = start >>> 0
		  end = end === undefined ? this.length : end >>> 0

		  if (!val) val = 0

		  var i
		  if (typeof val === 'number') {
		    for (i = start; i < end; ++i) {
		      this[i] = val
		    }
		  } else {
		    var bytes = Buffer.isBuffer(val)
		      ? val
		      : new Buffer(val, encoding)
		    var len = bytes.length
		    if (len === 0) {
		      throw new TypeError('The value "' + val +
		        '" is invalid for argument "value"')
		    }
		    for (i = 0; i < end - start; ++i) {
		      this[i + start] = bytes[i % len]
		    }
		  }

		  return this
		}

		// HELPER FUNCTIONS
		// ================

		var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

		function base64clean (str) {
		  // Node takes equal signs as end of the Base64 encoding
		  str = str.split('=')[0]
		  // Node strips out invalid characters like \n and \t from the string, base64-js does not
		  str = str.trim().replace(INVALID_BASE64_RE, '')
		  // Node converts strings with length < 2 to ''
		  if (str.length < 2) return ''
		  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
		  while (str.length % 4 !== 0) {
		    str = str + '='
		  }
		  return str
		}

		function toHex (n) {
		  if (n < 16) return '0' + n.toString(16)
		  return n.toString(16)
		}

		function utf8ToBytes (string, units) {
		  units = units || Infinity
		  var codePoint
		  var length = string.length
		  var leadSurrogate = null
		  var bytes = []

		  for (var i = 0; i < length; ++i) {
		    codePoint = string.charCodeAt(i)

		    // is surrogate component
		    if (codePoint > 0xD7FF && codePoint < 0xE000) {
		      // last char was a lead
		      if (!leadSurrogate) {
		        // no lead yet
		        if (codePoint > 0xDBFF) {
		          // unexpected trail
		          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
		          continue
		        } else if (i + 1 === length) {
		          // unpaired lead
		          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
		          continue
		        }

		        // valid lead
		        leadSurrogate = codePoint

		        continue
		      }

		      // 2 leads in a row
		      if (codePoint < 0xDC00) {
		        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
		        leadSurrogate = codePoint
		        continue
		      }

		      // valid surrogate pair
		      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
		    } else if (leadSurrogate) {
		      // valid bmp char, but last char was a lead
		      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
		    }

		    leadSurrogate = null

		    // encode utf8
		    if (codePoint < 0x80) {
		      if ((units -= 1) < 0) break
		      bytes.push(codePoint)
		    } else if (codePoint < 0x800) {
		      if ((units -= 2) < 0) break
		      bytes.push(
		        codePoint >> 0x6 | 0xC0,
		        codePoint & 0x3F | 0x80
		      )
		    } else if (codePoint < 0x10000) {
		      if ((units -= 3) < 0) break
		      bytes.push(
		        codePoint >> 0xC | 0xE0,
		        codePoint >> 0x6 & 0x3F | 0x80,
		        codePoint & 0x3F | 0x80
		      )
		    } else if (codePoint < 0x110000) {
		      if ((units -= 4) < 0) break
		      bytes.push(
		        codePoint >> 0x12 | 0xF0,
		        codePoint >> 0xC & 0x3F | 0x80,
		        codePoint >> 0x6 & 0x3F | 0x80,
		        codePoint & 0x3F | 0x80
		      )
		    } else {
		      throw new Error('Invalid code point')
		    }
		  }

		  return bytes
		}

		function asciiToBytes (str) {
		  var byteArray = []
		  for (var i = 0; i < str.length; ++i) {
		    // Node's code seems to be doing this and not & 0x7F..
		    byteArray.push(str.charCodeAt(i) & 0xFF)
		  }
		  return byteArray
		}

		function utf16leToBytes (str, units) {
		  var c, hi, lo
		  var byteArray = []
		  for (var i = 0; i < str.length; ++i) {
		    if ((units -= 2) < 0) break

		    c = str.charCodeAt(i)
		    hi = c >> 8
		    lo = c % 256
		    byteArray.push(lo)
		    byteArray.push(hi)
		  }

		  return byteArray
		}

		function base64ToBytes (str) {
		  return base64.toByteArray(base64clean(str))
		}

		function blitBuffer (src, dst, offset, length) {
		  for (var i = 0; i < length; ++i) {
		    if ((i + offset >= dst.length) || (i >= src.length)) break
		    dst[i + offset] = src[i]
		  }
		  return i
		}

		// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check
		// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166
		function isArrayBuffer (obj) {
		  return obj instanceof ArrayBuffer ||
		    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&
		      typeof obj.byteLength === 'number')
		}

		function numberIsNaN (obj) {
		  return obj !== obj // eslint-disable-line no-self-compare
		}

		},{"base64-js":638,"ieee754":685}],642:[function(require,module,exports){
		/*!
		  Copyright (c) 2016 Jed Watson.
		  Licensed under the MIT License (MIT), see
		  http://jedwatson.github.io/classnames
		*/
		/* global define */

		(function () {
			'use strict';

			var hasOwn = {}.hasOwnProperty;

			function classNames () {
				var classes = [];

				for (var i = 0; i < arguments.length; i++) {
					var arg = arguments[i];
					if (!arg) continue;

					var argType = typeof arg;

					if (argType === 'string' || argType === 'number') {
						classes.push(arg);
					} else if (Array.isArray(arg)) {
						classes.push(classNames.apply(null, arg));
					} else if (argType === 'object') {
						for (var key in arg) {
							if (hasOwn.call(arg, key) && arg[key]) {
								classes.push(key);
							}
						}
					}
				}

				return classes.join(' ');
			}

			if (typeof module !== 'undefined' && module.exports) {
				module.exports = classNames;
			} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
				// register as 'classnames', consistent with npm package name
				define('classnames', [], function () {
					return classNames;
				});
			} else {
				window.classNames = classNames;
			}
		}());

		},{}],643:[function(require,module,exports){

		/**
		 * slice() reference.
		 */

		var slice = Array.prototype.slice;

		/**
		 * Expose `co`.
		 */

		module.exports = co['default'] = co.co = co;

		/**
		 * Wrap the given generator `fn` into a
		 * function that returns a promise.
		 * This is a separate function so that
		 * every `co()` call doesn't create a new,
		 * unnecessary closure.
		 *
		 * @param {GeneratorFunction} fn
		 * @return {Function}
		 * @api public
		 */

		co.wrap = function (fn) {
		  createPromise.__generatorFunction__ = fn;
		  return createPromise;
		  function createPromise() {
		    return co.call(this, fn.apply(this, arguments));
		  }
		};

		/**
		 * Execute the generator function or a generator
		 * and return a promise.
		 *
		 * @param {Function} fn
		 * @return {Promise}
		 * @api public
		 */

		function co(gen) {
		  var ctx = this;
		  var args = slice.call(arguments, 1)

		  // we wrap everything in a promise to avoid promise chaining,
		  // which leads to memory leak errors.
		  // see https://github.com/tj/co/issues/180
		  return new Promise(function(resolve, reject) {
		    if (typeof gen === 'function') gen = gen.apply(ctx, args);
		    if (!gen || typeof gen.next !== 'function') return resolve(gen);

		    onFulfilled();

		    /**
		     * @param {Mixed} res
		     * @return {Promise}
		     * @api private
		     */

		    function onFulfilled(res) {
		      var ret;
		      try {
		        ret = gen.next(res);
		      } catch (e) {
		        return reject(e);
		      }
		      next(ret);
		    }

		    /**
		     * @param {Error} err
		     * @return {Promise}
		     * @api private
		     */

		    function onRejected(err) {
		      var ret;
		      try {
		        ret = gen.throw(err);
		      } catch (e) {
		        return reject(e);
		      }
		      next(ret);
		    }

		    /**
		     * Get the next value in the generator,
		     * return a promise.
		     *
		     * @param {Object} ret
		     * @return {Promise}
		     * @api private
		     */

		    function next(ret) {
		      if (ret.done) return resolve(ret.value);
		      var value = toPromise.call(ctx, ret.value);
		      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);
		      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '
		        + 'but the following object was passed: "' + String(ret.value) + '"'));
		    }
		  });
		}

		/**
		 * Convert a `yield`ed value into a promise.
		 *
		 * @param {Mixed} obj
		 * @return {Promise}
		 * @api private
		 */

		function toPromise(obj) {
		  if (!obj) return obj;
		  if (isPromise(obj)) return obj;
		  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);
		  if ('function' == typeof obj) return thunkToPromise.call(this, obj);
		  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);
		  if (isObject(obj)) return objectToPromise.call(this, obj);
		  return obj;
		}

		/**
		 * Convert a thunk to a promise.
		 *
		 * @param {Function}
		 * @return {Promise}
		 * @api private
		 */

		function thunkToPromise(fn) {
		  var ctx = this;
		  return new Promise(function (resolve, reject) {
		    fn.call(ctx, function (err, res) {
		      if (err) return reject(err);
		      if (arguments.length > 2) res = slice.call(arguments, 1);
		      resolve(res);
		    });
		  });
		}

		/**
		 * Convert an array of "yieldables" to a promise.
		 * Uses `Promise.all()` internally.
		 *
		 * @param {Array} obj
		 * @return {Promise}
		 * @api private
		 */

		function arrayToPromise(obj) {
		  return Promise.all(obj.map(toPromise, this));
		}

		/**
		 * Convert an object of "yieldables" to a promise.
		 * Uses `Promise.all()` internally.
		 *
		 * @param {Object} obj
		 * @return {Promise}
		 * @api private
		 */

		function objectToPromise(obj){
		  var results = new obj.constructor();
		  var keys = Object.keys(obj);
		  var promises = [];
		  for (var i = 0; i < keys.length; i++) {
		    var key = keys[i];
		    var promise = toPromise.call(this, obj[key]);
		    if (promise && isPromise(promise)) defer(promise, key);
		    else results[key] = obj[key];
		  }
		  return Promise.all(promises).then(function () {
		    return results;
		  });

		  function defer(promise, key) {
		    // predefine the key in the result
		    results[key] = undefined;
		    promises.push(promise.then(function (res) {
		      results[key] = res;
		    }));
		  }
		}

		/**
		 * Check if `obj` is a promise.
		 *
		 * @param {Object} obj
		 * @return {Boolean}
		 * @api private
		 */

		function isPromise(obj) {
		  return 'function' == typeof obj.then;
		}

		/**
		 * Check if `obj` is a generator.
		 *
		 * @param {Mixed} obj
		 * @return {Boolean}
		 * @api private
		 */

		function isGenerator(obj) {
		  return 'function' == typeof obj.next && 'function' == typeof obj.throw;
		}

		/**
		 * Check if `obj` is a generator function.
		 *
		 * @param {Mixed} obj
		 * @return {Boolean}
		 * @api private
		 */
		function isGeneratorFunction(obj) {
		  var constructor = obj.constructor;
		  if (!constructor) return false;
		  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;
		  return isGenerator(constructor.prototype);
		}

		/**
		 * Check for plain object.
		 *
		 * @param {Mixed} val
		 * @return {Boolean}
		 * @api private
		 */

		function isObject(val) {
		  return Object == val.constructor;
		}

		},{}],644:[function(require,module,exports){
		(function (Buffer){
		// Copyright Joyent, Inc. and other Node contributors.
		//
		// Permission is hereby granted, free of charge, to any person obtaining a
		// copy of this software and associated documentation files (the
		// "Software"), to deal in the Software without restriction, including
		// without limitation the rights to use, copy, modify, merge, publish,
		// distribute, sublicense, and/or sell copies of the Software, and to permit
		// persons to whom the Software is furnished to do so, subject to the
		// following conditions:
		//
		// The above copyright notice and this permission notice shall be included
		// in all copies or substantial portions of the Software.
		//
		// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
		// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
		// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
		// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
		// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
		// USE OR OTHER DEALINGS IN THE SOFTWARE.

		// NOTE: These type checking functions intentionally don't use `instanceof`
		// because it is fragile and can be easily faked with `Object.create()`.

		function isArray(arg) {
		  if (Array.isArray) {
		    return Array.isArray(arg);
		  }
		  return objectToString(arg) === '[object Array]';
		}
		exports.isArray = isArray;

		function isBoolean(arg) {
		  return typeof arg === 'boolean';
		}
		exports.isBoolean = isBoolean;

		function isNull(arg) {
		  return arg === null;
		}
		exports.isNull = isNull;

		function isNullOrUndefined(arg) {
		  return arg == null;
		}
		exports.isNullOrUndefined = isNullOrUndefined;

		function isNumber(arg) {
		  return typeof arg === 'number';
		}
		exports.isNumber = isNumber;

		function isString(arg) {
		  return typeof arg === 'string';
		}
		exports.isString = isString;

		function isSymbol(arg) {
		  return typeof arg === 'symbol';
		}
		exports.isSymbol = isSymbol;

		function isUndefined(arg) {
		  return arg === void 0;
		}
		exports.isUndefined = isUndefined;

		function isRegExp(re) {
		  return objectToString(re) === '[object RegExp]';
		}
		exports.isRegExp = isRegExp;

		function isObject(arg) {
		  return typeof arg === 'object' && arg !== null;
		}
		exports.isObject = isObject;

		function isDate(d) {
		  return objectToString(d) === '[object Date]';
		}
		exports.isDate = isDate;

		function isError(e) {
		  return (objectToString(e) === '[object Error]' || e instanceof Error);
		}
		exports.isError = isError;

		function isFunction(arg) {
		  return typeof arg === 'function';
		}
		exports.isFunction = isFunction;

		function isPrimitive(arg) {
		  return arg === null ||
		         typeof arg === 'boolean' ||
		         typeof arg === 'number' ||
		         typeof arg === 'string' ||
		         typeof arg === 'symbol' ||  // ES6 symbol
		         typeof arg === 'undefined';
		}
		exports.isPrimitive = isPrimitive;

		exports.isBuffer = Buffer.isBuffer;

		function objectToString(o) {
		  return Object.prototype.toString.call(o);
		}

		}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
		},{"../../is-buffer/index.js":688}],645:[function(require,module,exports){
		(function (process){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 */

		'use strict';

		var _assign = require('object-assign');

		var emptyObject = require('fbjs/lib/emptyObject');
		var _invariant = require('fbjs/lib/invariant');

		if (process.env.NODE_ENV !== 'production') {
		  var warning = require('fbjs/lib/warning');
		}

		var MIXINS_KEY = 'mixins';

		// Helper function to allow the creation of anonymous functions which do not
		// have .name set to the name of the variable being assigned to.
		function identity(fn) {
		  return fn;
		}

		var ReactPropTypeLocationNames;
		if (process.env.NODE_ENV !== 'production') {
		  ReactPropTypeLocationNames = {
		    prop: 'prop',
		    context: 'context',
		    childContext: 'child context'
		  };
		} else {
		  ReactPropTypeLocationNames = {};
		}

		function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
		  /**
		   * Policies that describe methods in `ReactClassInterface`.
		   */

		  var injectedMixins = [];

		  /**
		   * Composite components are higher-level components that compose other composite
		   * or host components.
		   *
		   * To create a new type of `ReactClass`, pass a specification of
		   * your new class to `React.createClass`. The only requirement of your class
		   * specification is that you implement a `render` method.
		   *
		   *   var MyComponent = React.createClass({
		   *     render: function() {
		   *       return <div>Hello World</div>;
		   *     }
		   *   });
		   *
		   * The class specification supports a specific protocol of methods that have
		   * special meaning (e.g. `render`). See `ReactClassInterface` for
		   * more the comprehensive protocol. Any other properties and methods in the
		   * class specification will be available on the prototype.
		   *
		   * @interface ReactClassInterface
		   * @internal
		   */
		  var ReactClassInterface = {
		    /**
		     * An array of Mixin objects to include when defining your component.
		     *
		     * @type {array}
		     * @optional
		     */
		    mixins: 'DEFINE_MANY',

		    /**
		     * An object containing properties and methods that should be defined on
		     * the component's constructor instead of its prototype (static methods).
		     *
		     * @type {object}
		     * @optional
		     */
		    statics: 'DEFINE_MANY',

		    /**
		     * Definition of prop types for this component.
		     *
		     * @type {object}
		     * @optional
		     */
		    propTypes: 'DEFINE_MANY',

		    /**
		     * Definition of context types for this component.
		     *
		     * @type {object}
		     * @optional
		     */
		    contextTypes: 'DEFINE_MANY',

		    /**
		     * Definition of context types this component sets for its children.
		     *
		     * @type {object}
		     * @optional
		     */
		    childContextTypes: 'DEFINE_MANY',

		    // ==== Definition methods ====

		    /**
		     * Invoked when the component is mounted. Values in the mapping will be set on
		     * `this.props` if that prop is not specified (i.e. using an `in` check).
		     *
		     * This method is invoked before `getInitialState` and therefore cannot rely
		     * on `this.state` or use `this.setState`.
		     *
		     * @return {object}
		     * @optional
		     */
		    getDefaultProps: 'DEFINE_MANY_MERGED',

		    /**
		     * Invoked once before the component is mounted. The return value will be used
		     * as the initial value of `this.state`.
		     *
		     *   getInitialState: function() {
		     *     return {
		     *       isOn: false,
		     *       fooBaz: new BazFoo()
		     *     }
		     *   }
		     *
		     * @return {object}
		     * @optional
		     */
		    getInitialState: 'DEFINE_MANY_MERGED',

		    /**
		     * @return {object}
		     * @optional
		     */
		    getChildContext: 'DEFINE_MANY_MERGED',

		    /**
		     * Uses props from `this.props` and state from `this.state` to render the
		     * structure of the component.
		     *
		     * No guarantees are made about when or how often this method is invoked, so
		     * it must not have side effects.
		     *
		     *   render: function() {
		     *     var name = this.props.name;
		     *     return <div>Hello, {name}!</div>;
		     *   }
		     *
		     * @return {ReactComponent}
		     * @required
		     */
		    render: 'DEFINE_ONCE',

		    // ==== Delegate methods ====

		    /**
		     * Invoked when the component is initially created and about to be mounted.
		     * This may have side effects, but any external subscriptions or data created
		     * by this method must be cleaned up in `componentWillUnmount`.
		     *
		     * @optional
		     */
		    componentWillMount: 'DEFINE_MANY',

		    /**
		     * Invoked when the component has been mounted and has a DOM representation.
		     * However, there is no guarantee that the DOM node is in the document.
		     *
		     * Use this as an opportunity to operate on the DOM when the component has
		     * been mounted (initialized and rendered) for the first time.
		     *
		     * @param {DOMElement} rootNode DOM element representing the component.
		     * @optional
		     */
		    componentDidMount: 'DEFINE_MANY',

		    /**
		     * Invoked before the component receives new props.
		     *
		     * Use this as an opportunity to react to a prop transition by updating the
		     * state using `this.setState`. Current props are accessed via `this.props`.
		     *
		     *   componentWillReceiveProps: function(nextProps, nextContext) {
		     *     this.setState({
		     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
		     *     });
		     *   }
		     *
		     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
		     * transition may cause a state change, but the opposite is not true. If you
		     * need it, you are probably looking for `componentWillUpdate`.
		     *
		     * @param {object} nextProps
		     * @optional
		     */
		    componentWillReceiveProps: 'DEFINE_MANY',

		    /**
		     * Invoked while deciding if the component should be updated as a result of
		     * receiving new props, state and/or context.
		     *
		     * Use this as an opportunity to `return false` when you're certain that the
		     * transition to the new props/state/context will not require a component
		     * update.
		     *
		     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
		     *     return !equal(nextProps, this.props) ||
		     *       !equal(nextState, this.state) ||
		     *       !equal(nextContext, this.context);
		     *   }
		     *
		     * @param {object} nextProps
		     * @param {?object} nextState
		     * @param {?object} nextContext
		     * @return {boolean} True if the component should update.
		     * @optional
		     */
		    shouldComponentUpdate: 'DEFINE_ONCE',

		    /**
		     * Invoked when the component is about to update due to a transition from
		     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
		     * and `nextContext`.
		     *
		     * Use this as an opportunity to perform preparation before an update occurs.
		     *
		     * NOTE: You **cannot** use `this.setState()` in this method.
		     *
		     * @param {object} nextProps
		     * @param {?object} nextState
		     * @param {?object} nextContext
		     * @param {ReactReconcileTransaction} transaction
		     * @optional
		     */
		    componentWillUpdate: 'DEFINE_MANY',

		    /**
		     * Invoked when the component's DOM representation has been updated.
		     *
		     * Use this as an opportunity to operate on the DOM when the component has
		     * been updated.
		     *
		     * @param {object} prevProps
		     * @param {?object} prevState
		     * @param {?object} prevContext
		     * @param {DOMElement} rootNode DOM element representing the component.
		     * @optional
		     */
		    componentDidUpdate: 'DEFINE_MANY',

		    /**
		     * Invoked when the component is about to be removed from its parent and have
		     * its DOM representation destroyed.
		     *
		     * Use this as an opportunity to deallocate any external resources.
		     *
		     * NOTE: There is no `componentDidUnmount` since your component will have been
		     * destroyed by that point.
		     *
		     * @optional
		     */
		    componentWillUnmount: 'DEFINE_MANY',

		    /**
		     * Replacement for (deprecated) `componentWillMount`.
		     *
		     * @optional
		     */
		    UNSAFE_componentWillMount: 'DEFINE_MANY',

		    /**
		     * Replacement for (deprecated) `componentWillReceiveProps`.
		     *
		     * @optional
		     */
		    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',

		    /**
		     * Replacement for (deprecated) `componentWillUpdate`.
		     *
		     * @optional
		     */
		    UNSAFE_componentWillUpdate: 'DEFINE_MANY',

		    // ==== Advanced methods ====

		    /**
		     * Updates the component's currently mounted DOM representation.
		     *
		     * By default, this implements React's rendering and reconciliation algorithm.
		     * Sophisticated clients may wish to override this.
		     *
		     * @param {ReactReconcileTransaction} transaction
		     * @internal
		     * @overridable
		     */
		    updateComponent: 'OVERRIDE_BASE'
		  };

		  /**
		   * Similar to ReactClassInterface but for static methods.
		   */
		  var ReactClassStaticInterface = {
		    /**
		     * This method is invoked after a component is instantiated and when it
		     * receives new props. Return an object to update state in response to
		     * prop changes. Return null to indicate no change to state.
		     *
		     * If an object is returned, its keys will be merged into the existing state.
		     *
		     * @return {object || null}
		     * @optional
		     */
		    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
		  };

		  /**
		   * Mapping from class specification keys to special processing functions.
		   *
		   * Although these are declared like instance properties in the specification
		   * when defining classes using `React.createClass`, they are actually static
		   * and are accessible on the constructor instead of the prototype. Despite
		   * being static, they must be defined outside of the "statics" key under
		   * which all other static methods are defined.
		   */
		  var RESERVED_SPEC_KEYS = {
		    displayName: function(Constructor, displayName) {
		      Constructor.displayName = displayName;
		    },
		    mixins: function(Constructor, mixins) {
		      if (mixins) {
		        for (var i = 0; i < mixins.length; i++) {
		          mixSpecIntoComponent(Constructor, mixins[i]);
		        }
		      }
		    },
		    childContextTypes: function(Constructor, childContextTypes) {
		      if (process.env.NODE_ENV !== 'production') {
		        validateTypeDef(Constructor, childContextTypes, 'childContext');
		      }
		      Constructor.childContextTypes = _assign(
		        {},
		        Constructor.childContextTypes,
		        childContextTypes
		      );
		    },
		    contextTypes: function(Constructor, contextTypes) {
		      if (process.env.NODE_ENV !== 'production') {
		        validateTypeDef(Constructor, contextTypes, 'context');
		      }
		      Constructor.contextTypes = _assign(
		        {},
		        Constructor.contextTypes,
		        contextTypes
		      );
		    },
		    /**
		     * Special case getDefaultProps which should move into statics but requires
		     * automatic merging.
		     */
		    getDefaultProps: function(Constructor, getDefaultProps) {
		      if (Constructor.getDefaultProps) {
		        Constructor.getDefaultProps = createMergedResultFunction(
		          Constructor.getDefaultProps,
		          getDefaultProps
		        );
		      } else {
		        Constructor.getDefaultProps = getDefaultProps;
		      }
		    },
		    propTypes: function(Constructor, propTypes) {
		      if (process.env.NODE_ENV !== 'production') {
		        validateTypeDef(Constructor, propTypes, 'prop');
		      }
		      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
		    },
		    statics: function(Constructor, statics) {
		      mixStaticSpecIntoComponent(Constructor, statics);
		    },
		    autobind: function() {}
		  };

		  function validateTypeDef(Constructor, typeDef, location) {
		    for (var propName in typeDef) {
		      if (typeDef.hasOwnProperty(propName)) {
		        // use a warning instead of an _invariant so components
		        // don't show up in prod but only in __DEV__
		        if (process.env.NODE_ENV !== 'production') {
		          warning(
		            typeof typeDef[propName] === 'function',
		            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
		              'React.PropTypes.',
		            Constructor.displayName || 'ReactClass',
		            ReactPropTypeLocationNames[location],
		            propName
		          );
		        }
		      }
		    }
		  }

		  function validateMethodOverride(isAlreadyDefined, name) {
		    var specPolicy = ReactClassInterface.hasOwnProperty(name)
		      ? ReactClassInterface[name]
		      : null;

		    // Disallow overriding of base class methods unless explicitly allowed.
		    if (ReactClassMixin.hasOwnProperty(name)) {
		      _invariant(
		        specPolicy === 'OVERRIDE_BASE',
		        'ReactClassInterface: You are attempting to override ' +
		          '`%s` from your class specification. Ensure that your method names ' +
		          'do not overlap with React methods.',
		        name
		      );
		    }

		    // Disallow defining methods more than once unless explicitly allowed.
		    if (isAlreadyDefined) {
		      _invariant(
		        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
		        'ReactClassInterface: You are attempting to define ' +
		          '`%s` on your component more than once. This conflict may be due ' +
		          'to a mixin.',
		        name
		      );
		    }
		  }

		  /**
		   * Mixin helper which handles policy validation and reserved
		   * specification keys when building React classes.
		   */
		  function mixSpecIntoComponent(Constructor, spec) {
		    if (!spec) {
		      if (process.env.NODE_ENV !== 'production') {
		        var typeofSpec = typeof spec;
		        var isMixinValid = typeofSpec === 'object' && spec !== null;

		        if (process.env.NODE_ENV !== 'production') {
		          warning(
		            isMixinValid,
		            "%s: You're attempting to include a mixin that is either null " +
		              'or not an object. Check the mixins included by the component, ' +
		              'as well as any mixins they include themselves. ' +
		              'Expected object but got %s.',
		            Constructor.displayName || 'ReactClass',
		            spec === null ? null : typeofSpec
		          );
		        }
		      }

		      return;
		    }

		    _invariant(
		      typeof spec !== 'function',
		      "ReactClass: You're attempting to " +
		        'use a component class or function as a mixin. Instead, just use a ' +
		        'regular object.'
		    );
		    _invariant(
		      !isValidElement(spec),
		      "ReactClass: You're attempting to " +
		        'use a component as a mixin. Instead, just use a regular object.'
		    );

		    var proto = Constructor.prototype;
		    var autoBindPairs = proto.__reactAutoBindPairs;

		    // By handling mixins before any other properties, we ensure the same
		    // chaining order is applied to methods with DEFINE_MANY policy, whether
		    // mixins are listed before or after these methods in the spec.
		    if (spec.hasOwnProperty(MIXINS_KEY)) {
		      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
		    }

		    for (var name in spec) {
		      if (!spec.hasOwnProperty(name)) {
		        continue;
		      }

		      if (name === MIXINS_KEY) {
		        // We have already handled mixins in a special case above.
		        continue;
		      }

		      var property = spec[name];
		      var isAlreadyDefined = proto.hasOwnProperty(name);
		      validateMethodOverride(isAlreadyDefined, name);

		      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
		        RESERVED_SPEC_KEYS[name](Constructor, property);
		      } else {
		        // Setup methods on prototype:
		        // The following member methods should not be automatically bound:
		        // 1. Expected ReactClass methods (in the "interface").
		        // 2. Overridden methods (that were mixed in).
		        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
		        var isFunction = typeof property === 'function';
		        var shouldAutoBind =
		          isFunction &&
		          !isReactClassMethod &&
		          !isAlreadyDefined &&
		          spec.autobind !== false;

		        if (shouldAutoBind) {
		          autoBindPairs.push(name, property);
		          proto[name] = property;
		        } else {
		          if (isAlreadyDefined) {
		            var specPolicy = ReactClassInterface[name];

		            // These cases should already be caught by validateMethodOverride.
		            _invariant(
		              isReactClassMethod &&
		                (specPolicy === 'DEFINE_MANY_MERGED' ||
		                  specPolicy === 'DEFINE_MANY'),
		              'ReactClass: Unexpected spec policy %s for key %s ' +
		                'when mixing in component specs.',
		              specPolicy,
		              name
		            );

		            // For methods which are defined more than once, call the existing
		            // methods before calling the new property, merging if appropriate.
		            if (specPolicy === 'DEFINE_MANY_MERGED') {
		              proto[name] = createMergedResultFunction(proto[name], property);
		            } else if (specPolicy === 'DEFINE_MANY') {
		              proto[name] = createChainedFunction(proto[name], property);
		            }
		          } else {
		            proto[name] = property;
		            if (process.env.NODE_ENV !== 'production') {
		              // Add verbose displayName to the function, which helps when looking
		              // at profiling tools.
		              if (typeof property === 'function' && spec.displayName) {
		                proto[name].displayName = spec.displayName + '_' + name;
		              }
		            }
		          }
		        }
		      }
		    }
		  }

		  function mixStaticSpecIntoComponent(Constructor, statics) {
		    if (!statics) {
		      return;
		    }

		    for (var name in statics) {
		      var property = statics[name];
		      if (!statics.hasOwnProperty(name)) {
		        continue;
		      }

		      var isReserved = name in RESERVED_SPEC_KEYS;
		      _invariant(
		        !isReserved,
		        'ReactClass: You are attempting to define a reserved ' +
		          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
		          'as an instance property instead; it will still be accessible on the ' +
		          'constructor.',
		        name
		      );

		      var isAlreadyDefined = name in Constructor;
		      if (isAlreadyDefined) {
		        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)
		          ? ReactClassStaticInterface[name]
		          : null;

		        _invariant(
		          specPolicy === 'DEFINE_MANY_MERGED',
		          'ReactClass: You are attempting to define ' +
		            '`%s` on your component more than once. This conflict may be ' +
		            'due to a mixin.',
		          name
		        );

		        Constructor[name] = createMergedResultFunction(Constructor[name], property);

		        return;
		      }

		      Constructor[name] = property;
		    }
		  }

		  /**
		   * Merge two objects, but throw if both contain the same key.
		   *
		   * @param {object} one The first object, which is mutated.
		   * @param {object} two The second object
		   * @return {object} one after it has been mutated to contain everything in two.
		   */
		  function mergeIntoWithNoDuplicateKeys(one, two) {
		    _invariant(
		      one && two && typeof one === 'object' && typeof two === 'object',
		      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
		    );

		    for (var key in two) {
		      if (two.hasOwnProperty(key)) {
		        _invariant(
		          one[key] === undefined,
		          'mergeIntoWithNoDuplicateKeys(): ' +
		            'Tried to merge two objects with the same key: `%s`. This conflict ' +
		            'may be due to a mixin; in particular, this may be caused by two ' +
		            'getInitialState() or getDefaultProps() methods returning objects ' +
		            'with clashing keys.',
		          key
		        );
		        one[key] = two[key];
		      }
		    }
		    return one;
		  }

		  /**
		   * Creates a function that invokes two functions and merges their return values.
		   *
		   * @param {function} one Function to invoke first.
		   * @param {function} two Function to invoke second.
		   * @return {function} Function that invokes the two argument functions.
		   * @private
		   */
		  function createMergedResultFunction(one, two) {
		    return function mergedResult() {
		      var a = one.apply(this, arguments);
		      var b = two.apply(this, arguments);
		      if (a == null) {
		        return b;
		      } else if (b == null) {
		        return a;
		      }
		      var c = {};
		      mergeIntoWithNoDuplicateKeys(c, a);
		      mergeIntoWithNoDuplicateKeys(c, b);
		      return c;
		    };
		  }

		  /**
		   * Creates a function that invokes two functions and ignores their return vales.
		   *
		   * @param {function} one Function to invoke first.
		   * @param {function} two Function to invoke second.
		   * @return {function} Function that invokes the two argument functions.
		   * @private
		   */
		  function createChainedFunction(one, two) {
		    return function chainedFunction() {
		      one.apply(this, arguments);
		      two.apply(this, arguments);
		    };
		  }

		  /**
		   * Binds a method to the component.
		   *
		   * @param {object} component Component whose method is going to be bound.
		   * @param {function} method Method to be bound.
		   * @return {function} The bound method.
		   */
		  function bindAutoBindMethod(component, method) {
		    var boundMethod = method.bind(component);
		    if (process.env.NODE_ENV !== 'production') {
		      boundMethod.__reactBoundContext = component;
		      boundMethod.__reactBoundMethod = method;
		      boundMethod.__reactBoundArguments = null;
		      var componentName = component.constructor.displayName;
		      var _bind = boundMethod.bind;
		      boundMethod.bind = function(newThis) {
		        for (
		          var _len = arguments.length,
		            args = Array(_len > 1 ? _len - 1 : 0),
		            _key = 1;
		          _key < _len;
		          _key++
		        ) {
		          args[_key - 1] = arguments[_key];
		        }

		        // User is trying to bind() an autobound method; we effectively will
		        // ignore the value of "this" that the user is trying to use, so
		        // let's warn.
		        if (newThis !== component && newThis !== null) {
		          if (process.env.NODE_ENV !== 'production') {
		            warning(
		              false,
		              'bind(): React component methods may only be bound to the ' +
		                'component instance. See %s',
		              componentName
		            );
		          }
		        } else if (!args.length) {
		          if (process.env.NODE_ENV !== 'production') {
		            warning(
		              false,
		              'bind(): You are binding a component method to the component. ' +
		                'React does this for you automatically in a high-performance ' +
		                'way, so you can safely remove this call. See %s',
		              componentName
		            );
		          }
		          return boundMethod;
		        }
		        var reboundMethod = _bind.apply(boundMethod, arguments);
		        reboundMethod.__reactBoundContext = component;
		        reboundMethod.__reactBoundMethod = method;
		        reboundMethod.__reactBoundArguments = args;
		        return reboundMethod;
		      };
		    }
		    return boundMethod;
		  }

		  /**
		   * Binds all auto-bound methods in a component.
		   *
		   * @param {object} component Component whose method is going to be bound.
		   */
		  function bindAutoBindMethods(component) {
		    var pairs = component.__reactAutoBindPairs;
		    for (var i = 0; i < pairs.length; i += 2) {
		      var autoBindKey = pairs[i];
		      var method = pairs[i + 1];
		      component[autoBindKey] = bindAutoBindMethod(component, method);
		    }
		  }

		  var IsMountedPreMixin = {
		    componentDidMount: function() {
		      this.__isMounted = true;
		    }
		  };

		  var IsMountedPostMixin = {
		    componentWillUnmount: function() {
		      this.__isMounted = false;
		    }
		  };

		  /**
		   * Add more to the ReactClass base class. These are all legacy features and
		   * therefore not already part of the modern ReactComponent.
		   */
		  var ReactClassMixin = {
		    /**
		     * TODO: This will be deprecated because state should always keep a consistent
		     * type signature and the only use case for this, is to avoid that.
		     */
		    replaceState: function(newState, callback) {
		      this.updater.enqueueReplaceState(this, newState, callback);
		    },

		    /**
		     * Checks whether or not this composite component is mounted.
		     * @return {boolean} True if mounted, false otherwise.
		     * @protected
		     * @final
		     */
		    isMounted: function() {
		      if (process.env.NODE_ENV !== 'production') {
		        warning(
		          this.__didWarnIsMounted,
		          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
		            'subscriptions and pending requests in componentWillUnmount to ' +
		            'prevent memory leaks.',
		          (this.constructor && this.constructor.displayName) ||
		            this.name ||
		            'Component'
		        );
		        this.__didWarnIsMounted = true;
		      }
		      return !!this.__isMounted;
		    }
		  };

		  var ReactClassComponent = function() {};
		  _assign(
		    ReactClassComponent.prototype,
		    ReactComponent.prototype,
		    ReactClassMixin
		  );

		  /**
		   * Creates a composite component class given a class specification.
		   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
		   *
		   * @param {object} spec Class specification (which must define `render`).
		   * @return {function} Component constructor function.
		   * @public
		   */
		  function createClass(spec) {
		    // To keep our warnings more understandable, we'll use a little hack here to
		    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
		    // unnecessarily identify a class without displayName as 'Constructor'.
		    var Constructor = identity(function(props, context, updater) {
		      // This constructor gets overridden by mocks. The argument is used
		      // by mocks to assert on what gets mounted.

		      if (process.env.NODE_ENV !== 'production') {
		        warning(
		          this instanceof Constructor,
		          'Something is calling a React component directly. Use a factory or ' +
		            'JSX instead. See: https://fb.me/react-legacyfactory'
		        );
		      }

		      // Wire up auto-binding
		      if (this.__reactAutoBindPairs.length) {
		        bindAutoBindMethods(this);
		      }

		      this.props = props;
		      this.context = context;
		      this.refs = emptyObject;
		      this.updater = updater || ReactNoopUpdateQueue;

		      this.state = null;

		      // ReactClasses doesn't have constructors. Instead, they use the
		      // getInitialState and componentWillMount methods for initialization.

		      var initialState = this.getInitialState ? this.getInitialState() : null;
		      if (process.env.NODE_ENV !== 'production') {
		        // We allow auto-mocks to proceed as if they're returning null.
		        if (
		          initialState === undefined &&
		          this.getInitialState._isMockFunction
		        ) {
		          // This is probably bad practice. Consider warning here and
		          // deprecating this convenience.
		          initialState = null;
		        }
		      }
		      _invariant(
		        typeof initialState === 'object' && !Array.isArray(initialState),
		        '%s.getInitialState(): must return an object or null',
		        Constructor.displayName || 'ReactCompositeComponent'
		      );

		      this.state = initialState;
		    });
		    Constructor.prototype = new ReactClassComponent();
		    Constructor.prototype.constructor = Constructor;
		    Constructor.prototype.__reactAutoBindPairs = [];

		    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

		    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
		    mixSpecIntoComponent(Constructor, spec);
		    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

		    // Initialize the defaultProps property after all mixins have been merged.
		    if (Constructor.getDefaultProps) {
		      Constructor.defaultProps = Constructor.getDefaultProps();
		    }

		    if (process.env.NODE_ENV !== 'production') {
		      // This is a tag to indicate that the use of these method names is ok,
		      // since it's used with createClass. If it's not, then it's likely a
		      // mistake so we'll warn you to use the static property, property
		      // initializer or constructor respectively.
		      if (Constructor.getDefaultProps) {
		        Constructor.getDefaultProps.isReactClassApproved = {};
		      }
		      if (Constructor.prototype.getInitialState) {
		        Constructor.prototype.getInitialState.isReactClassApproved = {};
		      }
		    }

		    _invariant(
		      Constructor.prototype.render,
		      'createClass(...): Class specification must implement a `render` method.'
		    );

		    if (process.env.NODE_ENV !== 'production') {
		      warning(
		        !Constructor.prototype.componentShouldUpdate,
		        '%s has a method called ' +
		          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
		          'The name is phrased as a question because the function is ' +
		          'expected to return a value.',
		        spec.displayName || 'A component'
		      );
		      warning(
		        !Constructor.prototype.componentWillRecieveProps,
		        '%s has a method called ' +
		          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
		        spec.displayName || 'A component'
		      );
		      warning(
		        !Constructor.prototype.UNSAFE_componentWillRecieveProps,
		        '%s has a method called UNSAFE_componentWillRecieveProps(). ' +
		          'Did you mean UNSAFE_componentWillReceiveProps()?',
		        spec.displayName || 'A component'
		      );
		    }

		    // Reduce time spent doing lookups by setting these on the prototype.
		    for (var methodName in ReactClassInterface) {
		      if (!Constructor.prototype[methodName]) {
		        Constructor.prototype[methodName] = null;
		      }
		    }

		    return Constructor;
		  }

		  return createClass;
		}

		module.exports = factory;

		}).call(this,require('_process'))
		},{"_process":957,"fbjs/lib/emptyObject":671,"fbjs/lib/invariant":676,"fbjs/lib/warning":681,"object-assign":954}],646:[function(require,module,exports){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 */

		'use strict';

		var React = require('react');
		var factory = require('./factory');

		if (typeof React === 'undefined') {
		  throw Error(
		    'create-react-class could not find the React object. If you are using script tags, ' +
		      'make sure that React is being loaded before create-react-class.'
		  );
		}

		// Hack to grab NoopUpdateQueue from isomorphic React
		var ReactNoopUpdateQueue = new React.Component().updater;

		module.exports = factory(
		  React.Component,
		  React.isValidElement,
		  ReactNoopUpdateQueue
		);

		},{"./factory":645,"react":1016}],647:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports['default'] = camelize;
		var regExp = /[-\s]+(.)?/g;

		/**
		 * Convert dash separated strings to camel cased.
		 *
		 * @param {String} str
		 * @return {String}
		 */
		function camelize(str) {
		  return str.replace(regExp, toUpper);
		}

		function toUpper(match, c) {
		  return c ? c.toUpperCase() : '';
		}
		},{}],648:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.supportedValue = exports.supportedProperty = exports.prefix = undefined;

		var _prefix = require('./prefix');

		var _prefix2 = _interopRequireDefault(_prefix);

		var _supportedProperty = require('./supported-property');

		var _supportedProperty2 = _interopRequireDefault(_supportedProperty);

		var _supportedValue = require('./supported-value');

		var _supportedValue2 = _interopRequireDefault(_supportedValue);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		exports['default'] = {
		  prefix: _prefix2['default'],
		  supportedProperty: _supportedProperty2['default'],
		  supportedValue: _supportedValue2['default']
		}; /**
		    * CSS Vendor prefix detection and property feature testing.
		    *
		    * @copyright Oleg Slobodskoi 2015
		    * @website https://github.com/jsstyles/css-vendor
		    * @license MIT
		    */

		exports.prefix = _prefix2['default'];
		exports.supportedProperty = _supportedProperty2['default'];
		exports.supportedValue = _supportedValue2['default'];
		},{"./prefix":649,"./supported-property":650,"./supported-value":651}],649:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _isInBrowser = require('is-in-browser');

		var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		var js = ''; /**
		              * Export javascript style and css style vendor prefixes.
		              * Based on "transform" support test.
		              */

		var css = '';

		// We should not do anything if required serverside.
		if (_isInBrowser2['default']) {
		  // Order matters. We need to check Webkit the last one because
		  // other vendors use to add Webkit prefixes to some properties
		  var jsCssMap = {
		    Moz: '-moz-',
		    // IE did it wrong again ...
		    ms: '-ms-',
		    O: '-o-',
		    Webkit: '-webkit-'
		  };
		  var style = document.createElement('p').style;
		  var testProp = 'Transform';

		  for (var key in jsCssMap) {
		    if (key + testProp in style) {
		      js = key;
		      css = jsCssMap[key];
		      break;
		    }
		  }
		}

		/**
		 * Vendor prefix string for the current browser.
		 *
		 * @type {{js: String, css: String}}
		 * @api public
		 */
		exports['default'] = { js: js, css: css };
		},{"is-in-browser":689}],650:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports['default'] = supportedProperty;

		var _isInBrowser = require('is-in-browser');

		var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

		var _prefix = require('./prefix');

		var _prefix2 = _interopRequireDefault(_prefix);

		var _camelize = require('./camelize');

		var _camelize2 = _interopRequireDefault(_camelize);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		var el = void 0;
		var cache = {};

		if (_isInBrowser2['default']) {
		  el = document.createElement('p');

		  /**
		   * We test every property on vendor prefix requirement.
		   * Once tested, result is cached. It gives us up to 70% perf boost.
		   * http://jsperf.com/element-style-object-access-vs-plain-object
		   *
		   * Prefill cache with known css properties to reduce amount of
		   * properties we need to feature test at runtime.
		   * http://davidwalsh.name/vendor-prefix
		   */
		  var computed = window.getComputedStyle(document.documentElement, '');
		  for (var key in computed) {
		    if (!isNaN(key)) cache[computed[key]] = computed[key];
		  }
		}

		/**
		 * Test if a property is supported, returns supported property with vendor
		 * prefix if required. Returns `false` if not supported.
		 *
		 * @param {String} prop dash separated
		 * @return {String|Boolean}
		 * @api public
		 */
		function supportedProperty(prop) {
		  // For server-side rendering.
		  if (!el) return prop;

		  // We have not tested this prop yet, lets do the test.
		  if (cache[prop] != null) return cache[prop];

		  // Camelization is required because we can't test using
		  // css syntax for e.g. in FF.
		  // Test if property is supported as it is.
		  if ((0, _camelize2['default'])(prop) in el.style) {
		    cache[prop] = prop;
		  }
		  // Test if property is supported with vendor prefix.
		  else if (_prefix2['default'].js + (0, _camelize2['default'])('-' + prop) in el.style) {
		      cache[prop] = _prefix2['default'].css + prop;
		    } else {
		      cache[prop] = false;
		    }

		  return cache[prop];
		}
		},{"./camelize":647,"./prefix":649,"is-in-browser":689}],651:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports['default'] = supportedValue;

		var _isInBrowser = require('is-in-browser');

		var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

		var _prefix = require('./prefix');

		var _prefix2 = _interopRequireDefault(_prefix);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		var cache = {};
		var el = void 0;

		if (_isInBrowser2['default']) el = document.createElement('p');

		/**
		 * Returns prefixed value if needed. Returns `false` if value is not supported.
		 *
		 * @param {String} property
		 * @param {String} value
		 * @return {String|Boolean}
		 * @api public
		 */
		function supportedValue(property, value) {
		  // For server-side rendering.
		  if (!el) return value;

		  // It is a string or a number as a string like '1'.
		  // We want only prefixable values here.
		  if (typeof value !== 'string' || !isNaN(parseInt(value, 10))) return value;

		  var cacheKey = property + value;

		  if (cache[cacheKey] != null) return cache[cacheKey];

		  // IE can even throw an error in some cases, for e.g. style.content = 'bar'
		  try {
		    // Test value as it is.
		    el.style[property] = value;
		  } catch (err) {
		    cache[cacheKey] = false;
		    return false;
		  }

		  // Value is supported as it is.
		  if (el.style[property] !== '') {
		    cache[cacheKey] = value;
		  } else {
		    // Test value with vendor prefix.
		    value = _prefix2['default'].css + value;

		    // Hardcode test to convert "flex" to "-ms-flexbox" for IE10.
		    if (value === '-ms-flex') value = '-ms-flexbox';

		    el.style[property] = value;

		    // Value is supported with vendor prefix.
		    if (el.style[property] !== '') cache[cacheKey] = value;
		  }

		  if (!cache[cacheKey]) cache[cacheKey] = false;

		  // Reset style value.
		  el.style[property] = '';

		  return cache[cacheKey];
		}
		},{"./prefix":649,"is-in-browser":689}],652:[function(require,module,exports){
		(function (global, factory) {
			typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
			typeof define === 'function' && define.amd ? define(factory) :
			(global.deepmerge = factory());
		}(this, (function () { 'use strict';

		var isMergeableObject = function isMergeableObject(value) {
			return isNonNullObject(value)
				&& !isSpecial(value)
		};

		function isNonNullObject(value) {
			return !!value && typeof value === 'object'
		}

		function isSpecial(value) {
			var stringValue = Object.prototype.toString.call(value);

			return stringValue === '[object RegExp]'
				|| stringValue === '[object Date]'
				|| isReactElement(value)
		}

		// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
		var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
		var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

		function isReactElement(value) {
			return value.$$typeof === REACT_ELEMENT_TYPE
		}

		function emptyTarget(val) {
			return Array.isArray(val) ? [] : {}
		}

		function cloneUnlessOtherwiseSpecified(value, options) {
			return (options.clone !== false && options.isMergeableObject(value))
				? deepmerge(emptyTarget(value), value, options)
				: value
		}

		function defaultArrayMerge(target, source, options) {
			return target.concat(source).map(function(element) {
				return cloneUnlessOtherwiseSpecified(element, options)
			})
		}

		function mergeObject(target, source, options) {
			var destination = {};
			if (options.isMergeableObject(target)) {
				Object.keys(target).forEach(function(key) {
					destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
				});
			}
			Object.keys(source).forEach(function(key) {
				if (!options.isMergeableObject(source[key]) || !target[key]) {
					destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
				} else {
					destination[key] = deepmerge(target[key], source[key], options);
				}
			});
			return destination
		}

		function deepmerge(target, source, options) {
			options = options || {};
			options.arrayMerge = options.arrayMerge || defaultArrayMerge;
			options.isMergeableObject = options.isMergeableObject || isMergeableObject;

			var sourceIsArray = Array.isArray(source);
			var targetIsArray = Array.isArray(target);
			var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

			if (!sourceAndTargetTypesMatch) {
				return cloneUnlessOtherwiseSpecified(source, options)
			} else if (sourceIsArray) {
				return options.arrayMerge(target, source, options)
			} else {
				return mergeObject(target, source, options)
			}
		}

		deepmerge.all = function deepmergeAll(array, options) {
			if (!Array.isArray(array)) {
				throw new Error('first argument should be an array')
			}

			return array.reduce(function(prev, next) {
				return deepmerge(prev, next, options)
			}, {})
		};

		var deepmerge_1 = deepmerge;

		return deepmerge_1;

		})));

		},{}],653:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.default = activeElement;

		var _ownerDocument = require('./ownerDocument');

		var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function activeElement() {
		  var doc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _ownerDocument2.default)();

		  try {
		    return doc.activeElement;
		  } catch (e) {/* ie throws if no active element */}
		}
		module.exports = exports['default'];
		},{"./ownerDocument":659}],654:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.default = addClass;

		var _hasClass = require('./hasClass');

		var _hasClass2 = _interopRequireDefault(_hasClass);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function addClass(element, className) {
		  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);
		}
		module.exports = exports['default'];
		},{"./hasClass":655}],655:[function(require,module,exports){
		"use strict";

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.default = hasClass;
		function hasClass(element, className) {
		  if (element.classList) return !!className && element.classList.contains(className);else return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
		}
		module.exports = exports["default"];
		},{}],656:[function(require,module,exports){
		'use strict';

		function replaceClassName(origClass, classToRemove) {
		  return origClass.replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
		}

		module.exports = function removeClass(element, className) {
		  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
		};
		},{}],657:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _inDOM = require('../util/inDOM');

		var _inDOM2 = _interopRequireDefault(_inDOM);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var off = function off() {};
		if (_inDOM2.default) {
		  off = function () {
		    if (document.addEventListener) return function (node, eventName, handler, capture) {
		      return node.removeEventListener(eventName, handler, capture || false);
		    };else if (document.attachEvent) return function (node, eventName, handler) {
		      return node.detachEvent('on' + eventName, handler);
		    };
		  }();
		}

		exports.default = off;
		module.exports = exports['default'];
		},{"../util/inDOM":662}],658:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _inDOM = require('../util/inDOM');

		var _inDOM2 = _interopRequireDefault(_inDOM);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var on = function on() {};
		if (_inDOM2.default) {
		  on = function () {

		    if (document.addEventListener) return function (node, eventName, handler, capture) {
		      return node.addEventListener(eventName, handler, capture || false);
		    };else if (document.attachEvent) return function (node, eventName, handler) {
		      return node.attachEvent('on' + eventName, function (e) {
		        e = e || window.event;
		        e.target = e.target || e.srcElement;
		        e.currentTarget = node;
		        handler.call(node, e);
		      });
		    };
		  }();
		}

		exports.default = on;
		module.exports = exports['default'];
		},{"../util/inDOM":662}],659:[function(require,module,exports){
		"use strict";

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.default = ownerDocument;
		function ownerDocument(node) {
		  return node && node.ownerDocument || document;
		}
		module.exports = exports["default"];
		},{}],660:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _inDOM = require('../util/inDOM');

		var _inDOM2 = _interopRequireDefault(_inDOM);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.default = function () {
		  // HTML DOM and SVG DOM may have different support levels,
		  // so we need to check on context instead of a document root element.
		  return _inDOM2.default ? function (context, node) {
		    if (context.contains) {
		      return context.contains(node);
		    } else if (context.compareDocumentPosition) {
		      return context === node || !!(context.compareDocumentPosition(node) & 16);
		    } else {
		      return fallback(context, node);
		    }
		  } : fallback;
		}();

		function fallback(context, node) {
		  if (node) do {
		    if (node === context) return true;
		  } while (node = node.parentNode);

		  return false;
		}
		module.exports = exports['default'];
		},{"../util/inDOM":662}],661:[function(require,module,exports){
		"use strict";

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.default = getWindow;
		function getWindow(node) {
		  return node === node.window ? node : node.nodeType === 9 ? node.defaultView || node.parentWindow : false;
		}
		module.exports = exports["default"];
		},{}],662:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
		module.exports = exports['default'];
		},{}],663:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		exports.default = function (recalc) {
		  if (!size && size !== 0 || recalc) {
		    if (_inDOM2.default) {
		      var scrollDiv = document.createElement('div');

		      scrollDiv.style.position = 'absolute';
		      scrollDiv.style.top = '-9999px';
		      scrollDiv.style.width = '50px';
		      scrollDiv.style.height = '50px';
		      scrollDiv.style.overflow = 'scroll';

		      document.body.appendChild(scrollDiv);
		      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;
		      document.body.removeChild(scrollDiv);
		    }
		  }

		  return size;
		};

		var _inDOM = require('./inDOM');

		var _inDOM2 = _interopRequireDefault(_inDOM);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var size = void 0;

		module.exports = exports['default'];
		},{"./inDOM":662}],664:[function(require,module,exports){
		// Copyright Joyent, Inc. and other Node contributors.
		//
		// Permission is hereby granted, free of charge, to any person obtaining a
		// copy of this software and associated documentation files (the
		// "Software"), to deal in the Software without restriction, including
		// without limitation the rights to use, copy, modify, merge, publish,
		// distribute, sublicense, and/or sell copies of the Software, and to permit
		// persons to whom the Software is furnished to do so, subject to the
		// following conditions:
		//
		// The above copyright notice and this permission notice shall be included
		// in all copies or substantial portions of the Software.
		//
		// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
		// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
		// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
		// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
		// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
		// USE OR OTHER DEALINGS IN THE SOFTWARE.

		function EventEmitter() {
		  this._events = this._events || {};
		  this._maxListeners = this._maxListeners || undefined;
		}
		module.exports = EventEmitter;

		// Backwards-compat with node 0.10.x
		EventEmitter.EventEmitter = EventEmitter;

		EventEmitter.prototype._events = undefined;
		EventEmitter.prototype._maxListeners = undefined;

		// By default EventEmitters will print a warning if more than 10 listeners are
		// added to it. This is a useful default which helps finding memory leaks.
		EventEmitter.defaultMaxListeners = 10;

		// Obviously not all Emitters should be limited to 10. This function allows
		// that to be increased. Set to zero for unlimited.
		EventEmitter.prototype.setMaxListeners = function(n) {
		  if (!isNumber(n) || n < 0 || isNaN(n))
		    throw TypeError('n must be a positive number');
		  this._maxListeners = n;
		  return this;
		};

		EventEmitter.prototype.emit = function(type) {
		  var er, handler, len, args, i, listeners;

		  if (!this._events)
		    this._events = {};

		  // If there is no 'error' event listener then throw.
		  if (type === 'error') {
		    if (!this._events.error ||
		        (isObject(this._events.error) && !this._events.error.length)) {
		      er = arguments[1];
		      if (er instanceof Error) {
		        throw er; // Unhandled 'error' event
		      } else {
		        // At least give some kind of context to the user
		        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
		        err.context = er;
		        throw err;
		      }
		    }
		  }

		  handler = this._events[type];

		  if (isUndefined(handler))
		    return false;

		  if (isFunction(handler)) {
		    switch (arguments.length) {
		      // fast cases
		      case 1:
		        handler.call(this);
		        break;
		      case 2:
		        handler.call(this, arguments[1]);
		        break;
		      case 3:
		        handler.call(this, arguments[1], arguments[2]);
		        break;
		      // slower
		      default:
		        args = Array.prototype.slice.call(arguments, 1);
		        handler.apply(this, args);
		    }
		  } else if (isObject(handler)) {
		    args = Array.prototype.slice.call(arguments, 1);
		    listeners = handler.slice();
		    len = listeners.length;
		    for (i = 0; i < len; i++)
		      listeners[i].apply(this, args);
		  }

		  return true;
		};

		EventEmitter.prototype.addListener = function(type, listener) {
		  var m;

		  if (!isFunction(listener))
		    throw TypeError('listener must be a function');

		  if (!this._events)
		    this._events = {};

		  // To avoid recursion in the case that type === "newListener"! Before
		  // adding it to the listeners, first emit "newListener".
		  if (this._events.newListener)
		    this.emit('newListener', type,
		              isFunction(listener.listener) ?
		              listener.listener : listener);

		  if (!this._events[type])
		    // Optimize the case of one listener. Don't need the extra array object.
		    this._events[type] = listener;
		  else if (isObject(this._events[type]))
		    // If we've already got an array, just append.
		    this._events[type].push(listener);
		  else
		    // Adding the second element, need to change to array.
		    this._events[type] = [this._events[type], listener];

		  // Check for listener leak
		  if (isObject(this._events[type]) && !this._events[type].warned) {
		    if (!isUndefined(this._maxListeners)) {
		      m = this._maxListeners;
		    } else {
		      m = EventEmitter.defaultMaxListeners;
		    }

		    if (m && m > 0 && this._events[type].length > m) {
		      this._events[type].warned = true;
		      console.error('(node) warning: possible EventEmitter memory ' +
		                    'leak detected. %d listeners added. ' +
		                    'Use emitter.setMaxListeners() to increase limit.',
		                    this._events[type].length);
		      if (typeof console.trace === 'function') {
		        // not supported in IE 10
		        console.trace();
		      }
		    }
		  }

		  return this;
		};

		EventEmitter.prototype.on = EventEmitter.prototype.addListener;

		EventEmitter.prototype.once = function(type, listener) {
		  if (!isFunction(listener))
		    throw TypeError('listener must be a function');

		  var fired = false;

		  function g() {
		    this.removeListener(type, g);

		    if (!fired) {
		      fired = true;
		      listener.apply(this, arguments);
		    }
		  }

		  g.listener = listener;
		  this.on(type, g);

		  return this;
		};

		// emits a 'removeListener' event iff the listener was removed
		EventEmitter.prototype.removeListener = function(type, listener) {
		  var list, position, length, i;

		  if (!isFunction(listener))
		    throw TypeError('listener must be a function');

		  if (!this._events || !this._events[type])
		    return this;

		  list = this._events[type];
		  length = list.length;
		  position = -1;

		  if (list === listener ||
		      (isFunction(list.listener) && list.listener === listener)) {
		    delete this._events[type];
		    if (this._events.removeListener)
		      this.emit('removeListener', type, listener);

		  } else if (isObject(list)) {
		    for (i = length; i-- > 0;) {
		      if (list[i] === listener ||
		          (list[i].listener && list[i].listener === listener)) {
		        position = i;
		        break;
		      }
		    }

		    if (position < 0)
		      return this;

		    if (list.length === 1) {
		      list.length = 0;
		      delete this._events[type];
		    } else {
		      list.splice(position, 1);
		    }

		    if (this._events.removeListener)
		      this.emit('removeListener', type, listener);
		  }

		  return this;
		};

		EventEmitter.prototype.removeAllListeners = function(type) {
		  var key, listeners;

		  if (!this._events)
		    return this;

		  // not listening for removeListener, no need to emit
		  if (!this._events.removeListener) {
		    if (arguments.length === 0)
		      this._events = {};
		    else if (this._events[type])
		      delete this._events[type];
		    return this;
		  }

		  // emit removeListener for all listeners on all events
		  if (arguments.length === 0) {
		    for (key in this._events) {
		      if (key === 'removeListener') continue;
		      this.removeAllListeners(key);
		    }
		    this.removeAllListeners('removeListener');
		    this._events = {};
		    return this;
		  }

		  listeners = this._events[type];

		  if (isFunction(listeners)) {
		    this.removeListener(type, listeners);
		  } else if (listeners) {
		    // LIFO order
		    while (listeners.length)
		      this.removeListener(type, listeners[listeners.length - 1]);
		  }
		  delete this._events[type];

		  return this;
		};

		EventEmitter.prototype.listeners = function(type) {
		  var ret;
		  if (!this._events || !this._events[type])
		    ret = [];
		  else if (isFunction(this._events[type]))
		    ret = [this._events[type]];
		  else
		    ret = this._events[type].slice();
		  return ret;
		};

		EventEmitter.prototype.listenerCount = function(type) {
		  if (this._events) {
		    var evlistener = this._events[type];

		    if (isFunction(evlistener))
		      return 1;
		    else if (evlistener)
		      return evlistener.length;
		  }
		  return 0;
		};

		EventEmitter.listenerCount = function(emitter, type) {
		  return emitter.listenerCount(type);
		};

		function isFunction(arg) {
		  return typeof arg === 'function';
		}

		function isNumber(arg) {
		  return typeof arg === 'number';
		}

		function isObject(arg) {
		  return typeof arg === 'object' && arg !== null;
		}

		function isUndefined(arg) {
		  return arg === void 0;
		}

		},{}],665:[function(require,module,exports){
		(function (process){
		'use strict';

		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 * @typechecks
		 */

		var emptyFunction = require('./emptyFunction');

		/**
		 * Upstream version of event listener. Does not take into account specific
		 * nature of platform.
		 */
		var EventListener = {
		  /**
		   * Listen to DOM events during the bubble phase.
		   *
		   * @param {DOMEventTarget} target DOM element to register listener on.
		   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
		   * @param {function} callback Callback function.
		   * @return {object} Object with a `remove` method.
		   */
		  listen: function listen(target, eventType, callback) {
		    if (target.addEventListener) {
		      target.addEventListener(eventType, callback, false);
		      return {
		        remove: function remove() {
		          target.removeEventListener(eventType, callback, false);
		        }
		      };
		    } else if (target.attachEvent) {
		      target.attachEvent('on' + eventType, callback);
		      return {
		        remove: function remove() {
		          target.detachEvent('on' + eventType, callback);
		        }
		      };
		    }
		  },

		  /**
		   * Listen to DOM events during the capture phase.
		   *
		   * @param {DOMEventTarget} target DOM element to register listener on.
		   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
		   * @param {function} callback Callback function.
		   * @return {object} Object with a `remove` method.
		   */
		  capture: function capture(target, eventType, callback) {
		    if (target.addEventListener) {
		      target.addEventListener(eventType, callback, true);
		      return {
		        remove: function remove() {
		          target.removeEventListener(eventType, callback, true);
		        }
		      };
		    } else {
		      if (process.env.NODE_ENV !== 'production') {
		        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
		      }
		      return {
		        remove: emptyFunction
		      };
		    }
		  },

		  registerDefault: function registerDefault() {}
		};

		module.exports = EventListener;
		}).call(this,require('_process'))
		},{"./emptyFunction":670,"_process":957}],666:[function(require,module,exports){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 */

		'use strict';

		var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

		/**
		 * Simple, lightweight module assisting with the detection and context of
		 * Worker. Helps avoid circular dependencies and allows code to reason about
		 * whether or not they are in a Worker, even if they never include the main
		 * `ReactWorker` dependency.
		 */
		var ExecutionEnvironment = {

		  canUseDOM: canUseDOM,

		  canUseWorkers: typeof Worker !== 'undefined',

		  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

		  canUseViewport: canUseDOM && !!window.screen,

		  isInWorker: !canUseDOM // For now, this is true - might change in the future.

		};

		module.exports = ExecutionEnvironment;
		},{}],667:[function(require,module,exports){
		"use strict";

		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 * @typechecks
		 */

		var _hyphenPattern = /-(.)/g;

		/**
		 * Camelcases a hyphenated string, for example:
		 *
		 *   > camelize('background-color')
		 *   < "backgroundColor"
		 *
		 * @param {string} string
		 * @return {string}
		 */
		function camelize(string) {
		  return string.replace(_hyphenPattern, function (_, character) {
		    return character.toUpperCase();
		  });
		}

		module.exports = camelize;
		},{}],668:[function(require,module,exports){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 * @typechecks
		 */

		'use strict';

		var camelize = require('./camelize');

		var msPattern = /^-ms-/;

		/**
		 * Camelcases a hyphenated CSS property name, for example:
		 *
		 *   > camelizeStyleName('background-color')
		 *   < "backgroundColor"
		 *   > camelizeStyleName('-moz-transition')
		 *   < "MozTransition"
		 *   > camelizeStyleName('-ms-transition')
		 *   < "msTransition"
		 *
		 * As Andi Smith suggests
		 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
		 * is converted to lowercase `ms`.
		 *
		 * @param {string} string
		 * @return {string}
		 */
		function camelizeStyleName(string) {
		  return camelize(string.replace(msPattern, 'ms-'));
		}

		module.exports = camelizeStyleName;
		},{"./camelize":667}],669:[function(require,module,exports){
		'use strict';

		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 * 
		 */

		var isTextNode = require('./isTextNode');

		/*eslint-disable no-bitwise */

		/**
		 * Checks if a given DOM node contains or is another DOM node.
		 */
		function containsNode(outerNode, innerNode) {
		  if (!outerNode || !innerNode) {
		    return false;
		  } else if (outerNode === innerNode) {
		    return true;
		  } else if (isTextNode(outerNode)) {
		    return false;
		  } else if (isTextNode(innerNode)) {
		    return containsNode(outerNode, innerNode.parentNode);
		  } else if ('contains' in outerNode) {
		    return outerNode.contains(innerNode);
		  } else if (outerNode.compareDocumentPosition) {
		    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
		  } else {
		    return false;
		  }
		}

		module.exports = containsNode;
		},{"./isTextNode":678}],670:[function(require,module,exports){
		"use strict";

		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 * 
		 */

		function makeEmptyFunction(arg) {
		  return function () {
		    return arg;
		  };
		}

		/**
		 * This function accepts and discards inputs; it has no side effects. This is
		 * primarily useful idiomatically for overridable function endpoints which
		 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
		 */
		var emptyFunction = function emptyFunction() {};

		emptyFunction.thatReturns = makeEmptyFunction;
		emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
		emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
		emptyFunction.thatReturnsNull = makeEmptyFunction(null);
		emptyFunction.thatReturnsThis = function () {
		  return this;
		};
		emptyFunction.thatReturnsArgument = function (arg) {
		  return arg;
		};

		module.exports = emptyFunction;
		},{}],671:[function(require,module,exports){
		(function (process){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 */

		'use strict';

		var emptyObject = {};

		if (process.env.NODE_ENV !== 'production') {
		  Object.freeze(emptyObject);
		}

		module.exports = emptyObject;
		}).call(this,require('_process'))
		},{"_process":957}],672:[function(require,module,exports){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 */

		'use strict';

		/**
		 * @param {DOMElement} node input/textarea to focus
		 */

		function focusNode(node) {
		  // IE8 can throw "Can't move focus to the control because it is invisible,
		  // not enabled, or of a type that does not accept the focus." for all kinds of
		  // reasons that are too expensive and fragile to test.
		  try {
		    node.focus();
		  } catch (e) {}
		}

		module.exports = focusNode;
		},{}],673:[function(require,module,exports){
		'use strict';

		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 * @typechecks
		 */

		/* eslint-disable fb-www/typeof-undefined */

		/**
		 * Same as document.activeElement but wraps in a try-catch block. In IE it is
		 * not safe to call document.activeElement if there is nothing focused.
		 *
		 * The activeElement will be null only if the document or document body is not
		 * yet defined.
		 *
		 * @param {?DOMDocument} doc Defaults to current document.
		 * @return {?DOMElement}
		 */
		function getActiveElement(doc) /*?DOMElement*/{
		  doc = doc || (typeof document !== 'undefined' ? document : undefined);
		  if (typeof doc === 'undefined') {
		    return null;
		  }
		  try {
		    return doc.activeElement || doc.body;
		  } catch (e) {
		    return doc.body;
		  }
		}

		module.exports = getActiveElement;
		},{}],674:[function(require,module,exports){
		'use strict';

		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 * @typechecks
		 */

		var _uppercasePattern = /([A-Z])/g;

		/**
		 * Hyphenates a camelcased string, for example:
		 *
		 *   > hyphenate('backgroundColor')
		 *   < "background-color"
		 *
		 * For CSS style names, use `hyphenateStyleName` instead which works properly
		 * with all vendor prefixes, including `ms`.
		 *
		 * @param {string} string
		 * @return {string}
		 */
		function hyphenate(string) {
		  return string.replace(_uppercasePattern, '-$1').toLowerCase();
		}

		module.exports = hyphenate;
		},{}],675:[function(require,module,exports){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 * @typechecks
		 */

		'use strict';

		var hyphenate = require('./hyphenate');

		var msPattern = /^ms-/;

		/**
		 * Hyphenates a camelcased CSS property name, for example:
		 *
		 *   > hyphenateStyleName('backgroundColor')
		 *   < "background-color"
		 *   > hyphenateStyleName('MozTransition')
		 *   < "-moz-transition"
		 *   > hyphenateStyleName('msTransition')
		 *   < "-ms-transition"
		 *
		 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
		 * is converted to `-ms-`.
		 *
		 * @param {string} string
		 * @return {string}
		 */
		function hyphenateStyleName(string) {
		  return hyphenate(string).replace(msPattern, '-ms-');
		}

		module.exports = hyphenateStyleName;
		},{"./hyphenate":674}],676:[function(require,module,exports){
		(function (process){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 */

		'use strict';

		/**
		 * Use invariant() to assert state which your program assumes to be true.
		 *
		 * Provide sprintf-style format (only %s is supported) and arguments
		 * to provide information about what broke and what you were
		 * expecting.
		 *
		 * The invariant message will be stripped in production, but the invariant
		 * will remain to ensure logic does not differ in production.
		 */

		var validateFormat = function validateFormat(format) {};

		if (process.env.NODE_ENV !== 'production') {
		  validateFormat = function validateFormat(format) {
		    if (format === undefined) {
		      throw new Error('invariant requires an error message argument');
		    }
		  };
		}

		function invariant(condition, format, a, b, c, d, e, f) {
		  validateFormat(format);

		  if (!condition) {
		    var error;
		    if (format === undefined) {
		      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
		    } else {
		      var args = [a, b, c, d, e, f];
		      var argIndex = 0;
		      error = new Error(format.replace(/%s/g, function () {
		        return args[argIndex++];
		      }));
		      error.name = 'Invariant Violation';
		    }

		    error.framesToPop = 1; // we don't care about invariant's own frame
		    throw error;
		  }
		}

		module.exports = invariant;
		}).call(this,require('_process'))
		},{"_process":957}],677:[function(require,module,exports){
		'use strict';

		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 * @typechecks
		 */

		/**
		 * @param {*} object The object to check.
		 * @return {boolean} Whether or not the object is a DOM node.
		 */
		function isNode(object) {
		  var doc = object ? object.ownerDocument || object : document;
		  var defaultView = doc.defaultView || window;
		  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
		}

		module.exports = isNode;
		},{}],678:[function(require,module,exports){
		'use strict';

		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 * @typechecks
		 */

		var isNode = require('./isNode');

		/**
		 * @param {*} object The object to check.
		 * @return {boolean} Whether or not the object is a DOM text node.
		 */
		function isTextNode(object) {
		  return isNode(object) && object.nodeType == 3;
		}

		module.exports = isTextNode;
		},{"./isNode":677}],679:[function(require,module,exports){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 * 
		 * @typechecks static-only
		 */

		'use strict';

		/**
		 * Memoizes the return value of a function that accepts one string argument.
		 */

		function memoizeStringOnly(callback) {
		  var cache = {};
		  return function (string) {
		    if (!cache.hasOwnProperty(string)) {
		      cache[string] = callback.call(this, string);
		    }
		    return cache[string];
		  };
		}

		module.exports = memoizeStringOnly;
		},{}],680:[function(require,module,exports){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 * @typechecks
		 * 
		 */

		/*eslint-disable no-self-compare */

		'use strict';

		var hasOwnProperty = Object.prototype.hasOwnProperty;

		/**
		 * inlined Object.is polyfill to avoid requiring consumers ship their own
		 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		 */
		function is(x, y) {
		  // SameValue algorithm
		  if (x === y) {
		    // Steps 1-5, 7-10
		    // Steps 6.b-6.e: +0 != -0
		    // Added the nonzero y check to make Flow happy, but it is redundant
		    return x !== 0 || y !== 0 || 1 / x === 1 / y;
		  } else {
		    // Step 6.a: NaN == NaN
		    return x !== x && y !== y;
		  }
		}

		/**
		 * Performs equality by iterating through keys on an object and returning false
		 * when any key has values which are not strictly equal between the arguments.
		 * Returns true when the values of all keys are strictly equal.
		 */
		function shallowEqual(objA, objB) {
		  if (is(objA, objB)) {
		    return true;
		  }

		  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
		    return false;
		  }

		  var keysA = Object.keys(objA);
		  var keysB = Object.keys(objB);

		  if (keysA.length !== keysB.length) {
		    return false;
		  }

		  // Test for A's keys different from B.
		  for (var i = 0; i < keysA.length; i++) {
		    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
		      return false;
		    }
		  }

		  return true;
		}

		module.exports = shallowEqual;
		},{}],681:[function(require,module,exports){
		(function (process){
		/**
		 * Copyright (c) 2014-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 *
		 */

		'use strict';

		var emptyFunction = require('./emptyFunction');

		/**
		 * Similar to invariant but only logs a warning if the condition is not met.
		 * This can be used to log issues in development environments in critical
		 * paths. Removing the logging code for production environments will keep the
		 * same logic and follow the same code paths.
		 */

		var warning = emptyFunction;

		if (process.env.NODE_ENV !== 'production') {
		  var printWarning = function printWarning(format) {
		    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		      args[_key - 1] = arguments[_key];
		    }

		    var argIndex = 0;
		    var message = 'Warning: ' + format.replace(/%s/g, function () {
		      return args[argIndex++];
		    });
		    if (typeof console !== 'undefined') {
		      console.error(message);
		    }
		    try {
		      // --- Welcome to debugging React ---
		      // This error was thrown as a convenience so that you can use this stack
		      // to find the callsite that caused this warning to fire.
		      throw new Error(message);
		    } catch (x) {}
		  };

		  warning = function warning(condition, format) {
		    if (format === undefined) {
		      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
		    }

		    if (format.indexOf('Failed Composite propType: ') === 0) {
		      return; // Ignore CompositeComponent proptype check.
		    }

		    if (!condition) {
		      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
		        args[_key2 - 2] = arguments[_key2];
		      }

		      printWarning.apply(undefined, [format].concat(args));
		    }
		  };
		}

		module.exports = warning;
		}).call(this,require('_process'))
		},{"./emptyFunction":670,"_process":957}],682:[function(require,module,exports){
		(function (global){
		var win;

		if (typeof window !== "undefined") {
		    win = window;
		} else if (typeof global !== "undefined") {
		    win = global;
		} else if (typeof self !== "undefined"){
		    win = self;
		} else {
		    win = {};
		}

		module.exports = win;

		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{}],683:[function(require,module,exports){
		/**
		 * Copyright 2015, Yahoo! Inc.
		 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
		 */
		(function (global, factory) {
		    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
		    typeof define === 'function' && define.amd ? define(factory) :
		    (global.hoistNonReactStatics = factory());
		}(this, (function () {
		    'use strict';
		    
		    var REACT_STATICS = {
		        childContextTypes: true,
		        contextTypes: true,
		        defaultProps: true,
		        displayName: true,
		        getDefaultProps: true,
		        getDerivedStateFromProps: true,
		        mixins: true,
		        propTypes: true,
		        type: true
		    };
		    
		    var KNOWN_STATICS = {
		        name: true,
		        length: true,
		        prototype: true,
		        caller: true,
		        callee: true,
		        arguments: true,
		        arity: true
		    };
		    
		    var defineProperty = Object.defineProperty;
		    var getOwnPropertyNames = Object.getOwnPropertyNames;
		    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
		    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
		    var getPrototypeOf = Object.getPrototypeOf;
		    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);
		    
		    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
		        if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
		            
		            if (objectPrototype) {
		                var inheritedComponent = getPrototypeOf(sourceComponent);
		                if (inheritedComponent && inheritedComponent !== objectPrototype) {
		                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
		                }
		            }
		            
		            var keys = getOwnPropertyNames(sourceComponent);
		            
		            if (getOwnPropertySymbols) {
		                keys = keys.concat(getOwnPropertySymbols(sourceComponent));
		            }
		            
		            for (var i = 0; i < keys.length; ++i) {
		                var key = keys[i];
		                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
		                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
		                    try { // Avoid failures from read-only properties
		                        defineProperty(targetComponent, key, descriptor);
		                    } catch (e) {}
		                }
		            }
		            
		            return targetComponent;
		        }
		        
		        return targetComponent;
		    };
		})));

		},{}],684:[function(require,module,exports){
		'use strict';

		var uppercasePattern = /[A-Z]/g;
		var msPattern = /^ms-/;
		var cache = {};

		function hyphenateStyleName(string) {
		    return string in cache
		    ? cache[string]
		    : cache[string] = string
		      .replace(uppercasePattern, '-$&')
		      .toLowerCase()
		      .replace(msPattern, '-ms-');
		}

		module.exports = hyphenateStyleName;

		},{}],685:[function(require,module,exports){
		exports.read = function (buffer, offset, isLE, mLen, nBytes) {
		  var e, m
		  var eLen = (nBytes * 8) - mLen - 1
		  var eMax = (1 << eLen) - 1
		  var eBias = eMax >> 1
		  var nBits = -7
		  var i = isLE ? (nBytes - 1) : 0
		  var d = isLE ? -1 : 1
		  var s = buffer[offset + i]

		  i += d

		  e = s & ((1 << (-nBits)) - 1)
		  s >>= (-nBits)
		  nBits += eLen
		  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

		  m = e & ((1 << (-nBits)) - 1)
		  e >>= (-nBits)
		  nBits += mLen
		  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

		  if (e === 0) {
		    e = 1 - eBias
		  } else if (e === eMax) {
		    return m ? NaN : ((s ? -1 : 1) * Infinity)
		  } else {
		    m = m + Math.pow(2, mLen)
		    e = e - eBias
		  }
		  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
		}

		exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
		  var e, m, c
		  var eLen = (nBytes * 8) - mLen - 1
		  var eMax = (1 << eLen) - 1
		  var eBias = eMax >> 1
		  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
		  var i = isLE ? 0 : (nBytes - 1)
		  var d = isLE ? 1 : -1
		  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

		  value = Math.abs(value)

		  if (isNaN(value) || value === Infinity) {
		    m = isNaN(value) ? 1 : 0
		    e = eMax
		  } else {
		    e = Math.floor(Math.log(value) / Math.LN2)
		    if (value * (c = Math.pow(2, -e)) < 1) {
		      e--
		      c *= 2
		    }
		    if (e + eBias >= 1) {
		      value += rt / c
		    } else {
		      value += rt * Math.pow(2, 1 - eBias)
		    }
		    if (value * c >= 2) {
		      e++
		      c /= 2
		    }

		    if (e + eBias >= eMax) {
		      m = 0
		      e = eMax
		    } else if (e + eBias >= 1) {
		      m = ((value * c) - 1) * Math.pow(2, mLen)
		      e = e + eBias
		    } else {
		      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
		      e = 0
		    }
		  }

		  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

		  e = (e << mLen) | m
		  eLen += mLen
		  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

		  buffer[offset + i - d] |= s * 128
		}

		},{}],686:[function(require,module,exports){
		if (typeof Object.create === 'function') {
		  // implementation from standard node.js 'util' module
		  module.exports = function inherits(ctor, superCtor) {
		    ctor.super_ = superCtor
		    ctor.prototype = Object.create(superCtor.prototype, {
		      constructor: {
		        value: ctor,
		        enumerable: false,
		        writable: true,
		        configurable: true
		      }
		    });
		  };
		} else {
		  // old school shim for old browsers
		  module.exports = function inherits(ctor, superCtor) {
		    ctor.super_ = superCtor
		    var TempCtor = function () {}
		    TempCtor.prototype = superCtor.prototype
		    ctor.prototype = new TempCtor()
		    ctor.prototype.constructor = ctor
		  }
		}

		},{}],687:[function(require,module,exports){
		(function (process){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 */

		'use strict';

		/**
		 * Use invariant() to assert state which your program assumes to be true.
		 *
		 * Provide sprintf-style format (only %s is supported) and arguments
		 * to provide information about what broke and what you were
		 * expecting.
		 *
		 * The invariant message will be stripped in production, but the invariant
		 * will remain to ensure logic does not differ in production.
		 */

		var invariant = function(condition, format, a, b, c, d, e, f) {
		  if (process.env.NODE_ENV !== 'production') {
		    if (format === undefined) {
		      throw new Error('invariant requires an error message argument');
		    }
		  }

		  if (!condition) {
		    var error;
		    if (format === undefined) {
		      error = new Error(
		        'Minified exception occurred; use the non-minified dev environment ' +
		        'for the full error message and additional helpful warnings.'
		      );
		    } else {
		      var args = [a, b, c, d, e, f];
		      var argIndex = 0;
		      error = new Error(
		        format.replace(/%s/g, function() { return args[argIndex++]; })
		      );
		      error.name = 'Invariant Violation';
		    }

		    error.framesToPop = 1; // we don't care about invariant's own frame
		    throw error;
		  }
		};

		module.exports = invariant;

		}).call(this,require('_process'))
		},{"_process":957}],688:[function(require,module,exports){
		/*!
		 * Determine if an object is a Buffer
		 *
		 * @author   Feross Aboukhadijeh <https://feross.org>
		 * @license  MIT
		 */

		// The _isBuffer check is for Safari 5-7 support, because it's missing
		// Object.prototype.constructor. Remove this eventually
		module.exports = function (obj) {
		  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
		}

		function isBuffer (obj) {
		  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
		}

		// For Node v0.10 support. Remove this eventually.
		function isSlowBuffer (obj) {
		  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
		}

		},{}],689:[function(require,module,exports){
		"use strict";

		Object.defineProperty(exports, "__esModule", {
		    value: true
		});

		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

		var isBrowser = exports.isBrowser = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof(document)) === 'object' && document.nodeType === 9;

		exports.default = isBrowser;
		},{}],690:[function(require,module,exports){
		var toString = {}.toString;

		module.exports = Array.isArray || function (arr) {
		  return toString.call(arr) == '[object Array]';
		};

		},{}],691:[function(require,module,exports){
		/*!
		 * jQuery JavaScript Library v3.3.1
		 * https://jquery.com/
		 *
		 * Includes Sizzle.js
		 * https://sizzlejs.com/
		 *
		 * Copyright JS Foundation and other contributors
		 * Released under the MIT license
		 * https://jquery.org/license
		 *
		 * Date: 2018-01-20T17:24Z
		 */
		( function( global, factory ) {

			"use strict";

			if ( typeof module === "object" && typeof module.exports === "object" ) {

				// For CommonJS and CommonJS-like environments where a proper `window`
				// is present, execute the factory and get jQuery.
				// For environments that do not have a `window` with a `document`
				// (such as Node.js), expose a factory as module.exports.
				// This accentuates the need for the creation of a real `window`.
				// e.g. var jQuery = require("jquery")(window);
				// See ticket #14549 for more info.
				module.exports = global.document ?
					factory( global, true ) :
					function( w ) {
						if ( !w.document ) {
							throw new Error( "jQuery requires a window with a document" );
						}
						return factory( w );
					};
			} else {
				factory( global );
			}

		// Pass this if window is not defined yet
		} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

		// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
		// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
		// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
		// enough that all such attempts are guarded in a try block.
		"use strict";

		var arr = [];

		var document = window.document;

		var getProto = Object.getPrototypeOf;

		var slice = arr.slice;

		var concat = arr.concat;

		var push = arr.push;

		var indexOf = arr.indexOf;

		var class2type = {};

		var toString = class2type.toString;

		var hasOwn = class2type.hasOwnProperty;

		var fnToString = hasOwn.toString;

		var ObjectFunctionString = fnToString.call( Object );

		var support = {};

		var isFunction = function isFunction( obj ) {

		      // Support: Chrome <=57, Firefox <=52
		      // In some browsers, typeof returns "function" for HTML <object> elements
		      // (i.e., `typeof document.createElement( "object" ) === "function"`).
		      // We don't want to classify *any* DOM node as a function.
		      return typeof obj === "function" && typeof obj.nodeType !== "number";
		  };


		var isWindow = function isWindow( obj ) {
				return obj != null && obj === obj.window;
			};




			var preservedScriptAttributes = {
				type: true,
				src: true,
				noModule: true
			};

			function DOMEval( code, doc, node ) {
				doc = doc || document;

				var i,
					script = doc.createElement( "script" );

				script.text = code;
				if ( node ) {
					for ( i in preservedScriptAttributes ) {
						if ( node[ i ] ) {
							script[ i ] = node[ i ];
						}
					}
				}
				doc.head.appendChild( script ).parentNode.removeChild( script );
			}


		function toType( obj ) {
			if ( obj == null ) {
				return obj + "";
			}

			// Support: Android <=2.3 only (functionish RegExp)
			return typeof obj === "object" || typeof obj === "function" ?
				class2type[ toString.call( obj ) ] || "object" :
				typeof obj;
		}
		/* global Symbol */
		// Defining this global in .eslintrc.json would create a danger of using the global
		// unguarded in another place, it seems safer to define global only for this module



		var
			version = "3.3.1",

			// Define a local copy of jQuery
			jQuery = function( selector, context ) {

				// The jQuery object is actually just the init constructor 'enhanced'
				// Need init if jQuery is called (just allow error to be thrown if not included)
				return new jQuery.fn.init( selector, context );
			},

			// Support: Android <=4.0 only
			// Make sure we trim BOM and NBSP
			rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

		jQuery.fn = jQuery.prototype = {

			// The current version of jQuery being used
			jquery: version,

			constructor: jQuery,

			// The default length of a jQuery object is 0
			length: 0,

			toArray: function() {
				return slice.call( this );
			},

			// Get the Nth element in the matched element set OR
			// Get the whole matched element set as a clean array
			get: function( num ) {

				// Return all the elements in a clean array
				if ( num == null ) {
					return slice.call( this );
				}

				// Return just the one element from the set
				return num < 0 ? this[ num + this.length ] : this[ num ];
			},

			// Take an array of elements and push it onto the stack
			// (returning the new matched element set)
			pushStack: function( elems ) {

				// Build a new jQuery matched element set
				var ret = jQuery.merge( this.constructor(), elems );

				// Add the old object onto the stack (as a reference)
				ret.prevObject = this;

				// Return the newly-formed element set
				return ret;
			},

			// Execute a callback for every element in the matched set.
			each: function( callback ) {
				return jQuery.each( this, callback );
			},

			map: function( callback ) {
				return this.pushStack( jQuery.map( this, function( elem, i ) {
					return callback.call( elem, i, elem );
				} ) );
			},

			slice: function() {
				return this.pushStack( slice.apply( this, arguments ) );
			},

			first: function() {
				return this.eq( 0 );
			},

			last: function() {
				return this.eq( -1 );
			},

			eq: function( i ) {
				var len = this.length,
					j = +i + ( i < 0 ? len : 0 );
				return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
			},

			end: function() {
				return this.prevObject || this.constructor();
			},

			// For internal use only.
			// Behaves like an Array's method, not like a jQuery method.
			push: push,
			sort: arr.sort,
			splice: arr.splice
		};

		jQuery.extend = jQuery.fn.extend = function() {
			var options, name, src, copy, copyIsArray, clone,
				target = arguments[ 0 ] || {},
				i = 1,
				length = arguments.length,
				deep = false;

			// Handle a deep copy situation
			if ( typeof target === "boolean" ) {
				deep = target;

				// Skip the boolean and the target
				target = arguments[ i ] || {};
				i++;
			}

			// Handle case when target is a string or something (possible in deep copy)
			if ( typeof target !== "object" && !isFunction( target ) ) {
				target = {};
			}

			// Extend jQuery itself if only one argument is passed
			if ( i === length ) {
				target = this;
				i--;
			}

			for ( ; i < length; i++ ) {

				// Only deal with non-null/undefined values
				if ( ( options = arguments[ i ] ) != null ) {

					// Extend the base object
					for ( name in options ) {
						src = target[ name ];
						copy = options[ name ];

						// Prevent never-ending loop
						if ( target === copy ) {
							continue;
						}

						// Recurse if we're merging plain objects or arrays
						if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
							( copyIsArray = Array.isArray( copy ) ) ) ) {

							if ( copyIsArray ) {
								copyIsArray = false;
								clone = src && Array.isArray( src ) ? src : [];

							} else {
								clone = src && jQuery.isPlainObject( src ) ? src : {};
							}

							// Never move original objects, clone them
							target[ name ] = jQuery.extend( deep, clone, copy );

						// Don't bring in undefined values
						} else if ( copy !== undefined ) {
							target[ name ] = copy;
						}
					}
				}
			}

			// Return the modified object
			return target;
		};

		jQuery.extend( {

			// Unique for each copy of jQuery on the page
			expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

			// Assume jQuery is ready without the ready module
			isReady: true,

			error: function( msg ) {
				throw new Error( msg );
			},

			noop: function() {},

			isPlainObject: function( obj ) {
				var proto, Ctor;

				// Detect obvious negatives
				// Use toString instead of jQuery.type to catch host objects
				if ( !obj || toString.call( obj ) !== "[object Object]" ) {
					return false;
				}

				proto = getProto( obj );

				// Objects with no prototype (e.g., `Object.create( null )`) are plain
				if ( !proto ) {
					return true;
				}

				// Objects with prototype are plain iff they were constructed by a global Object function
				Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
				return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
			},

			isEmptyObject: function( obj ) {

				/* eslint-disable no-unused-vars */
				// See https://github.com/eslint/eslint/issues/6125
				var name;

				for ( name in obj ) {
					return false;
				}
				return true;
			},

			// Evaluates a script in a global context
			globalEval: function( code ) {
				DOMEval( code );
			},

			each: function( obj, callback ) {
				var length, i = 0;

				if ( isArrayLike( obj ) ) {
					length = obj.length;
					for ( ; i < length; i++ ) {
						if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
							break;
						}
					}
				} else {
					for ( i in obj ) {
						if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
							break;
						}
					}
				}

				return obj;
			},

			// Support: Android <=4.0 only
			trim: function( text ) {
				return text == null ?
					"" :
					( text + "" ).replace( rtrim, "" );
			},

			// results is for internal usage only
			makeArray: function( arr, results ) {
				var ret = results || [];

				if ( arr != null ) {
					if ( isArrayLike( Object( arr ) ) ) {
						jQuery.merge( ret,
							typeof arr === "string" ?
							[ arr ] : arr
						);
					} else {
						push.call( ret, arr );
					}
				}

				return ret;
			},

			inArray: function( elem, arr, i ) {
				return arr == null ? -1 : indexOf.call( arr, elem, i );
			},

			// Support: Android <=4.0 only, PhantomJS 1 only
			// push.apply(_, arraylike) throws on ancient WebKit
			merge: function( first, second ) {
				var len = +second.length,
					j = 0,
					i = first.length;

				for ( ; j < len; j++ ) {
					first[ i++ ] = second[ j ];
				}

				first.length = i;

				return first;
			},

			grep: function( elems, callback, invert ) {
				var callbackInverse,
					matches = [],
					i = 0,
					length = elems.length,
					callbackExpect = !invert;

				// Go through the array, only saving the items
				// that pass the validator function
				for ( ; i < length; i++ ) {
					callbackInverse = !callback( elems[ i ], i );
					if ( callbackInverse !== callbackExpect ) {
						matches.push( elems[ i ] );
					}
				}

				return matches;
			},

			// arg is for internal usage only
			map: function( elems, callback, arg ) {
				var length, value,
					i = 0,
					ret = [];

				// Go through the array, translating each of the items to their new values
				if ( isArrayLike( elems ) ) {
					length = elems.length;
					for ( ; i < length; i++ ) {
						value = callback( elems[ i ], i, arg );

						if ( value != null ) {
							ret.push( value );
						}
					}

				// Go through every key on the object,
				} else {
					for ( i in elems ) {
						value = callback( elems[ i ], i, arg );

						if ( value != null ) {
							ret.push( value );
						}
					}
				}

				// Flatten any nested arrays
				return concat.apply( [], ret );
			},

			// A global GUID counter for objects
			guid: 1,

			// jQuery.support is not used in Core but other projects attach their
			// properties to it so it needs to exist.
			support: support
		} );

		if ( typeof Symbol === "function" ) {
			jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
		}

		// Populate the class2type map
		jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
		function( i, name ) {
			class2type[ "[object " + name + "]" ] = name.toLowerCase();
		} );

		function isArrayLike( obj ) {

			// Support: real iOS 8.2 only (not reproducible in simulator)
			// `in` check used to prevent JIT error (gh-2145)
			// hasOwn isn't used here due to false negatives
			// regarding Nodelist length in IE
			var length = !!obj && "length" in obj && obj.length,
				type = toType( obj );

			if ( isFunction( obj ) || isWindow( obj ) ) {
				return false;
			}

			return type === "array" || length === 0 ||
				typeof length === "number" && length > 0 && ( length - 1 ) in obj;
		}
		var Sizzle =
		/*!
		 * Sizzle CSS Selector Engine v2.3.3
		 * https://sizzlejs.com/
		 *
		 * Copyright jQuery Foundation and other contributors
		 * Released under the MIT license
		 * http://jquery.org/license
		 *
		 * Date: 2016-08-08
		 */
		(function( window ) {

		var i,
			support,
			Expr,
			getText,
			isXML,
			tokenize,
			compile,
			select,
			outermostContext,
			sortInput,
			hasDuplicate,

			// Local document vars
			setDocument,
			document,
			docElem,
			documentIsHTML,
			rbuggyQSA,
			rbuggyMatches,
			matches,
			contains,

			// Instance-specific data
			expando = "sizzle" + 1 * new Date(),
			preferredDoc = window.document,
			dirruns = 0,
			done = 0,
			classCache = createCache(),
			tokenCache = createCache(),
			compilerCache = createCache(),
			sortOrder = function( a, b ) {
				if ( a === b ) {
					hasDuplicate = true;
				}
				return 0;
			},

			// Instance methods
			hasOwn = ({}).hasOwnProperty,
			arr = [],
			pop = arr.pop,
			push_native = arr.push,
			push = arr.push,
			slice = arr.slice,
			// Use a stripped-down indexOf as it's faster than native
			// https://jsperf.com/thor-indexof-vs-for/5
			indexOf = function( list, elem ) {
				var i = 0,
					len = list.length;
				for ( ; i < len; i++ ) {
					if ( list[i] === elem ) {
						return i;
					}
				}
				return -1;
			},

			booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

			// Regular expressions

			// http://www.w3.org/TR/css3-selectors/#whitespace
			whitespace = "[\\x20\\t\\r\\n\\f]",

			// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
			identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

			// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
			attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
				// Operator (capture 2)
				"*([*^$|!~]?=)" + whitespace +
				// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
				"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
				"*\\]",

			pseudos = ":(" + identifier + ")(?:\\((" +
				// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
				// 1. quoted (capture 3; capture 4 or capture 5)
				"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
				// 2. simple (capture 6)
				"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
				// 3. anything else (capture 2)
				".*" +
				")\\)|)",

			// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
			rwhitespace = new RegExp( whitespace + "+", "g" ),
			rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

			rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
			rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

			rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

			rpseudo = new RegExp( pseudos ),
			ridentifier = new RegExp( "^" + identifier + "$" ),

			matchExpr = {
				"ID": new RegExp( "^#(" + identifier + ")" ),
				"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
				"TAG": new RegExp( "^(" + identifier + "|[*])" ),
				"ATTR": new RegExp( "^" + attributes ),
				"PSEUDO": new RegExp( "^" + pseudos ),
				"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
					"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
					"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
				"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
				// For use in libraries implementing .is()
				// We use this for POS matching in `select`
				"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
					whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
			},

			rinputs = /^(?:input|select|textarea|button)$/i,
			rheader = /^h\d$/i,

			rnative = /^[^{]+\{\s*\[native \w/,

			// Easily-parseable/retrievable ID or TAG or CLASS selectors
			rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

			rsibling = /[+~]/,

			// CSS escapes
			// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
			runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
			funescape = function( _, escaped, escapedWhitespace ) {
				var high = "0x" + escaped - 0x10000;
				// NaN means non-codepoint
				// Support: Firefox<24
				// Workaround erroneous numeric interpretation of +"0x"
				return high !== high || escapedWhitespace ?
					escaped :
					high < 0 ?
						// BMP codepoint
						String.fromCharCode( high + 0x10000 ) :
						// Supplemental Plane codepoint (surrogate pair)
						String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
			},

			// CSS string/identifier serialization
			// https://drafts.csswg.org/cssom/#common-serializing-idioms
			rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
			fcssescape = function( ch, asCodePoint ) {
				if ( asCodePoint ) {

					// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
					if ( ch === "\0" ) {
						return "\uFFFD";
					}

					// Control characters and (dependent upon position) numbers get escaped as code points
					return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
				}

				// Other potentially-special ASCII characters get backslash-escaped
				return "\\" + ch;
			},

			// Used for iframes
			// See setDocument()
			// Removing the function wrapper causes a "Permission Denied"
			// error in IE
			unloadHandler = function() {
				setDocument();
			},

			disabledAncestor = addCombinator(
				function( elem ) {
					return elem.disabled === true && ("form" in elem || "label" in elem);
				},
				{ dir: "parentNode", next: "legend" }
			);

		// Optimize for push.apply( _, NodeList )
		try {
			push.apply(
				(arr = slice.call( preferredDoc.childNodes )),
				preferredDoc.childNodes
			);
			// Support: Android<4.0
			// Detect silently failing push.apply
			arr[ preferredDoc.childNodes.length ].nodeType;
		} catch ( e ) {
			push = { apply: arr.length ?

				// Leverage slice if possible
				function( target, els ) {
					push_native.apply( target, slice.call(els) );
				} :

				// Support: IE<9
				// Otherwise append directly
				function( target, els ) {
					var j = target.length,
						i = 0;
					// Can't trust NodeList.length
					while ( (target[j++] = els[i++]) ) {}
					target.length = j - 1;
				}
			};
		}

		function Sizzle( selector, context, results, seed ) {
			var m, i, elem, nid, match, groups, newSelector,
				newContext = context && context.ownerDocument,

				// nodeType defaults to 9, since context defaults to document
				nodeType = context ? context.nodeType : 9;

			results = results || [];

			// Return early from calls with invalid selector or context
			if ( typeof selector !== "string" || !selector ||
				nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

				return results;
			}

			// Try to shortcut find operations (as opposed to filters) in HTML documents
			if ( !seed ) {

				if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
					setDocument( context );
				}
				context = context || document;

				if ( documentIsHTML ) {

					// If the selector is sufficiently simple, try using a "get*By*" DOM method
					// (excepting DocumentFragment context, where the methods don't exist)
					if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

						// ID selector
						if ( (m = match[1]) ) {

							// Document context
							if ( nodeType === 9 ) {
								if ( (elem = context.getElementById( m )) ) {

									// Support: IE, Opera, Webkit
									// TODO: identify versions
									// getElementById can match elements by name instead of ID
									if ( elem.id === m ) {
										results.push( elem );
										return results;
									}
								} else {
									return results;
								}

							// Element context
							} else {

								// Support: IE, Opera, Webkit
								// TODO: identify versions
								// getElementById can match elements by name instead of ID
								if ( newContext && (elem = newContext.getElementById( m )) &&
									contains( context, elem ) &&
									elem.id === m ) {

									results.push( elem );
									return results;
								}
							}

						// Type selector
						} else if ( match[2] ) {
							push.apply( results, context.getElementsByTagName( selector ) );
							return results;

						// Class selector
						} else if ( (m = match[3]) && support.getElementsByClassName &&
							context.getElementsByClassName ) {

							push.apply( results, context.getElementsByClassName( m ) );
							return results;
						}
					}

					// Take advantage of querySelectorAll
					if ( support.qsa &&
						!compilerCache[ selector + " " ] &&
						(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

						if ( nodeType !== 1 ) {
							newContext = context;
							newSelector = selector;

						// qSA looks outside Element context, which is not what we want
						// Thanks to Andrew Dupont for this workaround technique
						// Support: IE <=8
						// Exclude object elements
						} else if ( context.nodeName.toLowerCase() !== "object" ) {

							// Capture the context ID, setting it first if necessary
							if ( (nid = context.getAttribute( "id" )) ) {
								nid = nid.replace( rcssescape, fcssescape );
							} else {
								context.setAttribute( "id", (nid = expando) );
							}

							// Prefix every selector in the list
							groups = tokenize( selector );
							i = groups.length;
							while ( i-- ) {
								groups[i] = "#" + nid + " " + toSelector( groups[i] );
							}
							newSelector = groups.join( "," );

							// Expand context for sibling selectors
							newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
								context;
						}

						if ( newSelector ) {
							try {
								push.apply( results,
									newContext.querySelectorAll( newSelector )
								);
								return results;
							} catch ( qsaError ) {
							} finally {
								if ( nid === expando ) {
									context.removeAttribute( "id" );
								}
							}
						}
					}
				}
			}

			// All others
			return select( selector.replace( rtrim, "$1" ), context, results, seed );
		}

		/**
		 * Create key-value caches of limited size
		 * @returns {function(string, object)} Returns the Object data after storing it on itself with
		 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
		 *	deleting the oldest entry
		 */
		function createCache() {
			var keys = [];

			function cache( key, value ) {
				// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
				if ( keys.push( key + " " ) > Expr.cacheLength ) {
					// Only keep the most recent entries
					delete cache[ keys.shift() ];
				}
				return (cache[ key + " " ] = value);
			}
			return cache;
		}

		/**
		 * Mark a function for special use by Sizzle
		 * @param {Function} fn The function to mark
		 */
		function markFunction( fn ) {
			fn[ expando ] = true;
			return fn;
		}

		/**
		 * Support testing using an element
		 * @param {Function} fn Passed the created element and returns a boolean result
		 */
		function assert( fn ) {
			var el = document.createElement("fieldset");

			try {
				return !!fn( el );
			} catch (e) {
				return false;
			} finally {
				// Remove from its parent by default
				if ( el.parentNode ) {
					el.parentNode.removeChild( el );
				}
				// release memory in IE
				el = null;
			}
		}

		/**
		 * Adds the same handler for all of the specified attrs
		 * @param {String} attrs Pipe-separated list of attributes
		 * @param {Function} handler The method that will be applied
		 */
		function addHandle( attrs, handler ) {
			var arr = attrs.split("|"),
				i = arr.length;

			while ( i-- ) {
				Expr.attrHandle[ arr[i] ] = handler;
			}
		}

		/**
		 * Checks document order of two siblings
		 * @param {Element} a
		 * @param {Element} b
		 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
		 */
		function siblingCheck( a, b ) {
			var cur = b && a,
				diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
					a.sourceIndex - b.sourceIndex;

			// Use IE sourceIndex if available on both nodes
			if ( diff ) {
				return diff;
			}

			// Check if b follows a
			if ( cur ) {
				while ( (cur = cur.nextSibling) ) {
					if ( cur === b ) {
						return -1;
					}
				}
			}

			return a ? 1 : -1;
		}

		/**
		 * Returns a function to use in pseudos for input types
		 * @param {String} type
		 */
		function createInputPseudo( type ) {
			return function( elem ) {
				var name = elem.nodeName.toLowerCase();
				return name === "input" && elem.type === type;
			};
		}

		/**
		 * Returns a function to use in pseudos for buttons
		 * @param {String} type
		 */
		function createButtonPseudo( type ) {
			return function( elem ) {
				var name = elem.nodeName.toLowerCase();
				return (name === "input" || name === "button") && elem.type === type;
			};
		}

		/**
		 * Returns a function to use in pseudos for :enabled/:disabled
		 * @param {Boolean} disabled true for :disabled; false for :enabled
		 */
		function createDisabledPseudo( disabled ) {

			// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
			return function( elem ) {

				// Only certain elements can match :enabled or :disabled
				// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
				// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
				if ( "form" in elem ) {

					// Check for inherited disabledness on relevant non-disabled elements:
					// * listed form-associated elements in a disabled fieldset
					//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
					//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
					// * option elements in a disabled optgroup
					//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
					// All such elements have a "form" property.
					if ( elem.parentNode && elem.disabled === false ) {

						// Option elements defer to a parent optgroup if present
						if ( "label" in elem ) {
							if ( "label" in elem.parentNode ) {
								return elem.parentNode.disabled === disabled;
							} else {
								return elem.disabled === disabled;
							}
						}

						// Support: IE 6 - 11
						// Use the isDisabled shortcut property to check for disabled fieldset ancestors
						return elem.isDisabled === disabled ||

							// Where there is no isDisabled, check manually
							/* jshint -W018 */
							elem.isDisabled !== !disabled &&
								disabledAncestor( elem ) === disabled;
					}

					return elem.disabled === disabled;

				// Try to winnow out elements that can't be disabled before trusting the disabled property.
				// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
				// even exist on them, let alone have a boolean value.
				} else if ( "label" in elem ) {
					return elem.disabled === disabled;
				}

				// Remaining elements are neither :enabled nor :disabled
				return false;
			};
		}

		/**
		 * Returns a function to use in pseudos for positionals
		 * @param {Function} fn
		 */
		function createPositionalPseudo( fn ) {
			return markFunction(function( argument ) {
				argument = +argument;
				return markFunction(function( seed, matches ) {
					var j,
						matchIndexes = fn( [], seed.length, argument ),
						i = matchIndexes.length;

					// Match elements found at the specified indexes
					while ( i-- ) {
						if ( seed[ (j = matchIndexes[i]) ] ) {
							seed[j] = !(matches[j] = seed[j]);
						}
					}
				});
			});
		}

		/**
		 * Checks a node for validity as a Sizzle context
		 * @param {Element|Object=} context
		 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
		 */
		function testContext( context ) {
			return context && typeof context.getElementsByTagName !== "undefined" && context;
		}

		// Expose support vars for convenience
		support = Sizzle.support = {};

		/**
		 * Detects XML nodes
		 * @param {Element|Object} elem An element or a document
		 * @returns {Boolean} True iff elem is a non-HTML XML node
		 */
		isXML = Sizzle.isXML = function( elem ) {
			// documentElement is verified for cases where it doesn't yet exist
			// (such as loading iframes in IE - #4833)
			var documentElement = elem && (elem.ownerDocument || elem).documentElement;
			return documentElement ? documentElement.nodeName !== "HTML" : false;
		};

		/**
		 * Sets document-related variables once based on the current document
		 * @param {Element|Object} [doc] An element or document object to use to set the document
		 * @returns {Object} Returns the current document
		 */
		setDocument = Sizzle.setDocument = function( node ) {
			var hasCompare, subWindow,
				doc = node ? node.ownerDocument || node : preferredDoc;

			// Return early if doc is invalid or already selected
			if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
				return document;
			}

			// Update global variables
			document = doc;
			docElem = document.documentElement;
			documentIsHTML = !isXML( document );

			// Support: IE 9-11, Edge
			// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
			if ( preferredDoc !== document &&
				(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

				// Support: IE 11, Edge
				if ( subWindow.addEventListener ) {
					subWindow.addEventListener( "unload", unloadHandler, false );

				// Support: IE 9 - 10 only
				} else if ( subWindow.attachEvent ) {
					subWindow.attachEvent( "onunload", unloadHandler );
				}
			}

			/* Attributes
			---------------------------------------------------------------------- */

			// Support: IE<8
			// Verify that getAttribute really returns attributes and not properties
			// (excepting IE8 booleans)
			support.attributes = assert(function( el ) {
				el.className = "i";
				return !el.getAttribute("className");
			});

			/* getElement(s)By*
			---------------------------------------------------------------------- */

			// Check if getElementsByTagName("*") returns only elements
			support.getElementsByTagName = assert(function( el ) {
				el.appendChild( document.createComment("") );
				return !el.getElementsByTagName("*").length;
			});

			// Support: IE<9
			support.getElementsByClassName = rnative.test( document.getElementsByClassName );

			// Support: IE<10
			// Check if getElementById returns elements by name
			// The broken getElementById methods don't pick up programmatically-set names,
			// so use a roundabout getElementsByName test
			support.getById = assert(function( el ) {
				docElem.appendChild( el ).id = expando;
				return !document.getElementsByName || !document.getElementsByName( expando ).length;
			});

			// ID filter and find
			if ( support.getById ) {
				Expr.filter["ID"] = function( id ) {
					var attrId = id.replace( runescape, funescape );
					return function( elem ) {
						return elem.getAttribute("id") === attrId;
					};
				};
				Expr.find["ID"] = function( id, context ) {
					if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
						var elem = context.getElementById( id );
						return elem ? [ elem ] : [];
					}
				};
			} else {
				Expr.filter["ID"] =  function( id ) {
					var attrId = id.replace( runescape, funescape );
					return function( elem ) {
						var node = typeof elem.getAttributeNode !== "undefined" &&
							elem.getAttributeNode("id");
						return node && node.value === attrId;
					};
				};

				// Support: IE 6 - 7 only
				// getElementById is not reliable as a find shortcut
				Expr.find["ID"] = function( id, context ) {
					if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
						var node, i, elems,
							elem = context.getElementById( id );

						if ( elem ) {

							// Verify the id attribute
							node = elem.getAttributeNode("id");
							if ( node && node.value === id ) {
								return [ elem ];
							}

							// Fall back on getElementsByName
							elems = context.getElementsByName( id );
							i = 0;
							while ( (elem = elems[i++]) ) {
								node = elem.getAttributeNode("id");
								if ( node && node.value === id ) {
									return [ elem ];
								}
							}
						}

						return [];
					}
				};
			}

			// Tag
			Expr.find["TAG"] = support.getElementsByTagName ?
				function( tag, context ) {
					if ( typeof context.getElementsByTagName !== "undefined" ) {
						return context.getElementsByTagName( tag );

					// DocumentFragment nodes don't have gEBTN
					} else if ( support.qsa ) {
						return context.querySelectorAll( tag );
					}
				} :

				function( tag, context ) {
					var elem,
						tmp = [],
						i = 0,
						// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
						results = context.getElementsByTagName( tag );

					// Filter out possible comments
					if ( tag === "*" ) {
						while ( (elem = results[i++]) ) {
							if ( elem.nodeType === 1 ) {
								tmp.push( elem );
							}
						}

						return tmp;
					}
					return results;
				};

			// Class
			Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
				if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
					return context.getElementsByClassName( className );
				}
			};

			/* QSA/matchesSelector
			---------------------------------------------------------------------- */

			// QSA and matchesSelector support

			// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
			rbuggyMatches = [];

			// qSa(:focus) reports false when true (Chrome 21)
			// We allow this because of a bug in IE8/9 that throws an error
			// whenever `document.activeElement` is accessed on an iframe
			// So, we allow :focus to pass through QSA all the time to avoid the IE error
			// See https://bugs.jquery.com/ticket/13378
			rbuggyQSA = [];

			if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
				// Build QSA regex
				// Regex strategy adopted from Diego Perini
				assert(function( el ) {
					// Select is set to empty string on purpose
					// This is to test IE's treatment of not explicitly
					// setting a boolean content attribute,
					// since its presence should be enough
					// https://bugs.jquery.com/ticket/12359
					docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
						"<select id='" + expando + "-\r\\' msallowcapture=''>" +
						"<option selected=''></option></select>";

					// Support: IE8, Opera 11-12.16
					// Nothing should be selected when empty strings follow ^= or $= or *=
					// The test attribute must be unknown in Opera but "safe" for WinRT
					// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
					if ( el.querySelectorAll("[msallowcapture^='']").length ) {
						rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
					}

					// Support: IE8
					// Boolean attributes and "value" are not treated correctly
					if ( !el.querySelectorAll("[selected]").length ) {
						rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
					}

					// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
					if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
						rbuggyQSA.push("~=");
					}

					// Webkit/Opera - :checked should return selected option elements
					// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
					// IE8 throws error here and will not see later tests
					if ( !el.querySelectorAll(":checked").length ) {
						rbuggyQSA.push(":checked");
					}

					// Support: Safari 8+, iOS 8+
					// https://bugs.webkit.org/show_bug.cgi?id=136851
					// In-page `selector#id sibling-combinator selector` fails
					if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
						rbuggyQSA.push(".#.+[+~]");
					}
				});

				assert(function( el ) {
					el.innerHTML = "<a href='' disabled='disabled'></a>" +
						"<select disabled='disabled'><option/></select>";

					// Support: Windows 8 Native Apps
					// The type and name attributes are restricted during .innerHTML assignment
					var input = document.createElement("input");
					input.setAttribute( "type", "hidden" );
					el.appendChild( input ).setAttribute( "name", "D" );

					// Support: IE8
					// Enforce case-sensitivity of name attribute
					if ( el.querySelectorAll("[name=d]").length ) {
						rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
					}

					// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
					// IE8 throws error here and will not see later tests
					if ( el.querySelectorAll(":enabled").length !== 2 ) {
						rbuggyQSA.push( ":enabled", ":disabled" );
					}

					// Support: IE9-11+
					// IE's :disabled selector does not pick up the children of disabled fieldsets
					docElem.appendChild( el ).disabled = true;
					if ( el.querySelectorAll(":disabled").length !== 2 ) {
						rbuggyQSA.push( ":enabled", ":disabled" );
					}

					// Opera 10-11 does not throw on post-comma invalid pseudos
					el.querySelectorAll("*,:x");
					rbuggyQSA.push(",.*:");
				});
			}

			if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
				docElem.webkitMatchesSelector ||
				docElem.mozMatchesSelector ||
				docElem.oMatchesSelector ||
				docElem.msMatchesSelector) )) ) {

				assert(function( el ) {
					// Check to see if it's possible to do matchesSelector
					// on a disconnected node (IE 9)
					support.disconnectedMatch = matches.call( el, "*" );

					// This should fail with an exception
					// Gecko does not error, returns false instead
					matches.call( el, "[s!='']:x" );
					rbuggyMatches.push( "!=", pseudos );
				});
			}

			rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
			rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

			/* Contains
			---------------------------------------------------------------------- */
			hasCompare = rnative.test( docElem.compareDocumentPosition );

			// Element contains another
			// Purposefully self-exclusive
			// As in, an element does not contain itself
			contains = hasCompare || rnative.test( docElem.contains ) ?
				function( a, b ) {
					var adown = a.nodeType === 9 ? a.documentElement : a,
						bup = b && b.parentNode;
					return a === bup || !!( bup && bup.nodeType === 1 && (
						adown.contains ?
							adown.contains( bup ) :
							a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
					));
				} :
				function( a, b ) {
					if ( b ) {
						while ( (b = b.parentNode) ) {
							if ( b === a ) {
								return true;
							}
						}
					}
					return false;
				};

			/* Sorting
			---------------------------------------------------------------------- */

			// Document order sorting
			sortOrder = hasCompare ?
			function( a, b ) {

				// Flag for duplicate removal
				if ( a === b ) {
					hasDuplicate = true;
					return 0;
				}

				// Sort on method existence if only one input has compareDocumentPosition
				var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
				if ( compare ) {
					return compare;
				}

				// Calculate position if both inputs belong to the same document
				compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
					a.compareDocumentPosition( b ) :

					// Otherwise we know they are disconnected
					1;

				// Disconnected nodes
				if ( compare & 1 ||
					(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

					// Choose the first element that is related to our preferred document
					if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
						return -1;
					}
					if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
						return 1;
					}

					// Maintain original order
					return sortInput ?
						( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
						0;
				}

				return compare & 4 ? -1 : 1;
			} :
			function( a, b ) {
				// Exit early if the nodes are identical
				if ( a === b ) {
					hasDuplicate = true;
					return 0;
				}

				var cur,
					i = 0,
					aup = a.parentNode,
					bup = b.parentNode,
					ap = [ a ],
					bp = [ b ];

				// Parentless nodes are either documents or disconnected
				if ( !aup || !bup ) {
					return a === document ? -1 :
						b === document ? 1 :
						aup ? -1 :
						bup ? 1 :
						sortInput ?
						( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
						0;

				// If the nodes are siblings, we can do a quick check
				} else if ( aup === bup ) {
					return siblingCheck( a, b );
				}

				// Otherwise we need full lists of their ancestors for comparison
				cur = a;
				while ( (cur = cur.parentNode) ) {
					ap.unshift( cur );
				}
				cur = b;
				while ( (cur = cur.parentNode) ) {
					bp.unshift( cur );
				}

				// Walk down the tree looking for a discrepancy
				while ( ap[i] === bp[i] ) {
					i++;
				}

				return i ?
					// Do a sibling check if the nodes have a common ancestor
					siblingCheck( ap[i], bp[i] ) :

					// Otherwise nodes in our document sort first
					ap[i] === preferredDoc ? -1 :
					bp[i] === preferredDoc ? 1 :
					0;
			};

			return document;
		};

		Sizzle.matches = function( expr, elements ) {
			return Sizzle( expr, null, null, elements );
		};

		Sizzle.matchesSelector = function( elem, expr ) {
			// Set document vars if needed
			if ( ( elem.ownerDocument || elem ) !== document ) {
				setDocument( elem );
			}

			// Make sure that attribute selectors are quoted
			expr = expr.replace( rattributeQuotes, "='$1']" );

			if ( support.matchesSelector && documentIsHTML &&
				!compilerCache[ expr + " " ] &&
				( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
				( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

				try {
					var ret = matches.call( elem, expr );

					// IE 9's matchesSelector returns false on disconnected nodes
					if ( ret || support.disconnectedMatch ||
							// As well, disconnected nodes are said to be in a document
							// fragment in IE 9
							elem.document && elem.document.nodeType !== 11 ) {
						return ret;
					}
				} catch (e) {}
			}

			return Sizzle( expr, document, null, [ elem ] ).length > 0;
		};

		Sizzle.contains = function( context, elem ) {
			// Set document vars if needed
			if ( ( context.ownerDocument || context ) !== document ) {
				setDocument( context );
			}
			return contains( context, elem );
		};

		Sizzle.attr = function( elem, name ) {
			// Set document vars if needed
			if ( ( elem.ownerDocument || elem ) !== document ) {
				setDocument( elem );
			}

			var fn = Expr.attrHandle[ name.toLowerCase() ],
				// Don't get fooled by Object.prototype properties (jQuery #13807)
				val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
					fn( elem, name, !documentIsHTML ) :
					undefined;

			return val !== undefined ?
				val :
				support.attributes || !documentIsHTML ?
					elem.getAttribute( name ) :
					(val = elem.getAttributeNode(name)) && val.specified ?
						val.value :
						null;
		};

		Sizzle.escape = function( sel ) {
			return (sel + "").replace( rcssescape, fcssescape );
		};

		Sizzle.error = function( msg ) {
			throw new Error( "Syntax error, unrecognized expression: " + msg );
		};

		/**
		 * Document sorting and removing duplicates
		 * @param {ArrayLike} results
		 */
		Sizzle.uniqueSort = function( results ) {
			var elem,
				duplicates = [],
				j = 0,
				i = 0;

			// Unless we *know* we can detect duplicates, assume their presence
			hasDuplicate = !support.detectDuplicates;
			sortInput = !support.sortStable && results.slice( 0 );
			results.sort( sortOrder );

			if ( hasDuplicate ) {
				while ( (elem = results[i++]) ) {
					if ( elem === results[ i ] ) {
						j = duplicates.push( i );
					}
				}
				while ( j-- ) {
					results.splice( duplicates[ j ], 1 );
				}
			}

			// Clear input after sorting to release objects
			// See https://github.com/jquery/sizzle/pull/225
			sortInput = null;

			return results;
		};

		/**
		 * Utility function for retrieving the text value of an array of DOM nodes
		 * @param {Array|Element} elem
		 */
		getText = Sizzle.getText = function( elem ) {
			var node,
				ret = "",
				i = 0,
				nodeType = elem.nodeType;

			if ( !nodeType ) {
				// If no nodeType, this is expected to be an array
				while ( (node = elem[i++]) ) {
					// Do not traverse comment nodes
					ret += getText( node );
				}
			} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
				// Use textContent for elements
				// innerText usage removed for consistency of new lines (jQuery #11153)
				if ( typeof elem.textContent === "string" ) {
					return elem.textContent;
				} else {
					// Traverse its children
					for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
						ret += getText( elem );
					}
				}
			} else if ( nodeType === 3 || nodeType === 4 ) {
				return elem.nodeValue;
			}
			// Do not include comment or processing instruction nodes

			return ret;
		};

		Expr = Sizzle.selectors = {

			// Can be adjusted by the user
			cacheLength: 50,

			createPseudo: markFunction,

			match: matchExpr,

			attrHandle: {},

			find: {},

			relative: {
				">": { dir: "parentNode", first: true },
				" ": { dir: "parentNode" },
				"+": { dir: "previousSibling", first: true },
				"~": { dir: "previousSibling" }
			},

			preFilter: {
				"ATTR": function( match ) {
					match[1] = match[1].replace( runescape, funescape );

					// Move the given value to match[3] whether quoted or unquoted
					match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

					if ( match[2] === "~=" ) {
						match[3] = " " + match[3] + " ";
					}

					return match.slice( 0, 4 );
				},

				"CHILD": function( match ) {
					/* matches from matchExpr["CHILD"]
						1 type (only|nth|...)
						2 what (child|of-type)
						3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
						4 xn-component of xn+y argument ([+-]?\d*n|)
						5 sign of xn-component
						6 x of xn-component
						7 sign of y-component
						8 y of y-component
					*/
					match[1] = match[1].toLowerCase();

					if ( match[1].slice( 0, 3 ) === "nth" ) {
						// nth-* requires argument
						if ( !match[3] ) {
							Sizzle.error( match[0] );
						}

						// numeric x and y parameters for Expr.filter.CHILD
						// remember that false/true cast respectively to 0/1
						match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
						match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

					// other types prohibit arguments
					} else if ( match[3] ) {
						Sizzle.error( match[0] );
					}

					return match;
				},

				"PSEUDO": function( match ) {
					var excess,
						unquoted = !match[6] && match[2];

					if ( matchExpr["CHILD"].test( match[0] ) ) {
						return null;
					}

					// Accept quoted arguments as-is
					if ( match[3] ) {
						match[2] = match[4] || match[5] || "";

					// Strip excess characters from unquoted arguments
					} else if ( unquoted && rpseudo.test( unquoted ) &&
						// Get excess from tokenize (recursively)
						(excess = tokenize( unquoted, true )) &&
						// advance to the next closing parenthesis
						(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

						// excess is a negative index
						match[0] = match[0].slice( 0, excess );
						match[2] = unquoted.slice( 0, excess );
					}

					// Return only captures needed by the pseudo filter method (type and argument)
					return match.slice( 0, 3 );
				}
			},

			filter: {

				"TAG": function( nodeNameSelector ) {
					var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
					return nodeNameSelector === "*" ?
						function() { return true; } :
						function( elem ) {
							return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
						};
				},

				"CLASS": function( className ) {
					var pattern = classCache[ className + " " ];

					return pattern ||
						(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
						classCache( className, function( elem ) {
							return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
						});
				},

				"ATTR": function( name, operator, check ) {
					return function( elem ) {
						var result = Sizzle.attr( elem, name );

						if ( result == null ) {
							return operator === "!=";
						}
						if ( !operator ) {
							return true;
						}

						result += "";

						return operator === "=" ? result === check :
							operator === "!=" ? result !== check :
							operator === "^=" ? check && result.indexOf( check ) === 0 :
							operator === "*=" ? check && result.indexOf( check ) > -1 :
							operator === "$=" ? check && result.slice( -check.length ) === check :
							operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
							operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
							false;
					};
				},

				"CHILD": function( type, what, argument, first, last ) {
					var simple = type.slice( 0, 3 ) !== "nth",
						forward = type.slice( -4 ) !== "last",
						ofType = what === "of-type";

					return first === 1 && last === 0 ?

						// Shortcut for :nth-*(n)
						function( elem ) {
							return !!elem.parentNode;
						} :

						function( elem, context, xml ) {
							var cache, uniqueCache, outerCache, node, nodeIndex, start,
								dir = simple !== forward ? "nextSibling" : "previousSibling",
								parent = elem.parentNode,
								name = ofType && elem.nodeName.toLowerCase(),
								useCache = !xml && !ofType,
								diff = false;

							if ( parent ) {

								// :(first|last|only)-(child|of-type)
								if ( simple ) {
									while ( dir ) {
										node = elem;
										while ( (node = node[ dir ]) ) {
											if ( ofType ?
												node.nodeName.toLowerCase() === name :
												node.nodeType === 1 ) {

												return false;
											}
										}
										// Reverse direction for :only-* (if we haven't yet done so)
										start = dir = type === "only" && !start && "nextSibling";
									}
									return true;
								}

								start = [ forward ? parent.firstChild : parent.lastChild ];

								// non-xml :nth-child(...) stores cache data on `parent`
								if ( forward && useCache ) {

									// Seek `elem` from a previously-cached index

									// ...in a gzip-friendly way
									node = parent;
									outerCache = node[ expando ] || (node[ expando ] = {});

									// Support: IE <9 only
									// Defend against cloned attroperties (jQuery gh-1709)
									uniqueCache = outerCache[ node.uniqueID ] ||
										(outerCache[ node.uniqueID ] = {});

									cache = uniqueCache[ type ] || [];
									nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
									diff = nodeIndex && cache[ 2 ];
									node = nodeIndex && parent.childNodes[ nodeIndex ];

									while ( (node = ++nodeIndex && node && node[ dir ] ||

										// Fallback to seeking `elem` from the start
										(diff = nodeIndex = 0) || start.pop()) ) {

										// When found, cache indexes on `parent` and break
										if ( node.nodeType === 1 && ++diff && node === elem ) {
											uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
											break;
										}
									}

								} else {
									// Use previously-cached element index if available
									if ( useCache ) {
										// ...in a gzip-friendly way
										node = elem;
										outerCache = node[ expando ] || (node[ expando ] = {});

										// Support: IE <9 only
										// Defend against cloned attroperties (jQuery gh-1709)
										uniqueCache = outerCache[ node.uniqueID ] ||
											(outerCache[ node.uniqueID ] = {});

										cache = uniqueCache[ type ] || [];
										nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
										diff = nodeIndex;
									}

									// xml :nth-child(...)
									// or :nth-last-child(...) or :nth(-last)?-of-type(...)
									if ( diff === false ) {
										// Use the same loop as above to seek `elem` from the start
										while ( (node = ++nodeIndex && node && node[ dir ] ||
											(diff = nodeIndex = 0) || start.pop()) ) {

											if ( ( ofType ?
												node.nodeName.toLowerCase() === name :
												node.nodeType === 1 ) &&
												++diff ) {

												// Cache the index of each encountered element
												if ( useCache ) {
													outerCache = node[ expando ] || (node[ expando ] = {});

													// Support: IE <9 only
													// Defend against cloned attroperties (jQuery gh-1709)
													uniqueCache = outerCache[ node.uniqueID ] ||
														(outerCache[ node.uniqueID ] = {});

													uniqueCache[ type ] = [ dirruns, diff ];
												}

												if ( node === elem ) {
													break;
												}
											}
										}
									}
								}

								// Incorporate the offset, then check against cycle size
								diff -= last;
								return diff === first || ( diff % first === 0 && diff / first >= 0 );
							}
						};
				},

				"PSEUDO": function( pseudo, argument ) {
					// pseudo-class names are case-insensitive
					// http://www.w3.org/TR/selectors/#pseudo-classes
					// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
					// Remember that setFilters inherits from pseudos
					var args,
						fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
							Sizzle.error( "unsupported pseudo: " + pseudo );

					// The user may use createPseudo to indicate that
					// arguments are needed to create the filter function
					// just as Sizzle does
					if ( fn[ expando ] ) {
						return fn( argument );
					}

					// But maintain support for old signatures
					if ( fn.length > 1 ) {
						args = [ pseudo, pseudo, "", argument ];
						return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
							markFunction(function( seed, matches ) {
								var idx,
									matched = fn( seed, argument ),
									i = matched.length;
								while ( i-- ) {
									idx = indexOf( seed, matched[i] );
									seed[ idx ] = !( matches[ idx ] = matched[i] );
								}
							}) :
							function( elem ) {
								return fn( elem, 0, args );
							};
					}

					return fn;
				}
			},

			pseudos: {
				// Potentially complex pseudos
				"not": markFunction(function( selector ) {
					// Trim the selector passed to compile
					// to avoid treating leading and trailing
					// spaces as combinators
					var input = [],
						results = [],
						matcher = compile( selector.replace( rtrim, "$1" ) );

					return matcher[ expando ] ?
						markFunction(function( seed, matches, context, xml ) {
							var elem,
								unmatched = matcher( seed, null, xml, [] ),
								i = seed.length;

							// Match elements unmatched by `matcher`
							while ( i-- ) {
								if ( (elem = unmatched[i]) ) {
									seed[i] = !(matches[i] = elem);
								}
							}
						}) :
						function( elem, context, xml ) {
							input[0] = elem;
							matcher( input, null, xml, results );
							// Don't keep the element (issue #299)
							input[0] = null;
							return !results.pop();
						};
				}),

				"has": markFunction(function( selector ) {
					return function( elem ) {
						return Sizzle( selector, elem ).length > 0;
					};
				}),

				"contains": markFunction(function( text ) {
					text = text.replace( runescape, funescape );
					return function( elem ) {
						return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
					};
				}),

				// "Whether an element is represented by a :lang() selector
				// is based solely on the element's language value
				// being equal to the identifier C,
				// or beginning with the identifier C immediately followed by "-".
				// The matching of C against the element's language value is performed case-insensitively.
				// The identifier C does not have to be a valid language name."
				// http://www.w3.org/TR/selectors/#lang-pseudo
				"lang": markFunction( function( lang ) {
					// lang value must be a valid identifier
					if ( !ridentifier.test(lang || "") ) {
						Sizzle.error( "unsupported lang: " + lang );
					}
					lang = lang.replace( runescape, funescape ).toLowerCase();
					return function( elem ) {
						var elemLang;
						do {
							if ( (elemLang = documentIsHTML ?
								elem.lang :
								elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

								elemLang = elemLang.toLowerCase();
								return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
							}
						} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
						return false;
					};
				}),

				// Miscellaneous
				"target": function( elem ) {
					var hash = window.location && window.location.hash;
					return hash && hash.slice( 1 ) === elem.id;
				},

				"root": function( elem ) {
					return elem === docElem;
				},

				"focus": function( elem ) {
					return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
				},

				// Boolean properties
				"enabled": createDisabledPseudo( false ),
				"disabled": createDisabledPseudo( true ),

				"checked": function( elem ) {
					// In CSS3, :checked should return both checked and selected elements
					// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
					var nodeName = elem.nodeName.toLowerCase();
					return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
				},

				"selected": function( elem ) {
					// Accessing this property makes selected-by-default
					// options in Safari work properly
					if ( elem.parentNode ) {
						elem.parentNode.selectedIndex;
					}

					return elem.selected === true;
				},

				// Contents
				"empty": function( elem ) {
					// http://www.w3.org/TR/selectors/#empty-pseudo
					// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
					//   but not by others (comment: 8; processing instruction: 7; etc.)
					// nodeType < 6 works because attributes (2) do not appear as children
					for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
						if ( elem.nodeType < 6 ) {
							return false;
						}
					}
					return true;
				},

				"parent": function( elem ) {
					return !Expr.pseudos["empty"]( elem );
				},

				// Element/input types
				"header": function( elem ) {
					return rheader.test( elem.nodeName );
				},

				"input": function( elem ) {
					return rinputs.test( elem.nodeName );
				},

				"button": function( elem ) {
					var name = elem.nodeName.toLowerCase();
					return name === "input" && elem.type === "button" || name === "button";
				},

				"text": function( elem ) {
					var attr;
					return elem.nodeName.toLowerCase() === "input" &&
						elem.type === "text" &&

						// Support: IE<8
						// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
						( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
				},

				// Position-in-collection
				"first": createPositionalPseudo(function() {
					return [ 0 ];
				}),

				"last": createPositionalPseudo(function( matchIndexes, length ) {
					return [ length - 1 ];
				}),

				"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
					return [ argument < 0 ? argument + length : argument ];
				}),

				"even": createPositionalPseudo(function( matchIndexes, length ) {
					var i = 0;
					for ( ; i < length; i += 2 ) {
						matchIndexes.push( i );
					}
					return matchIndexes;
				}),

				"odd": createPositionalPseudo(function( matchIndexes, length ) {
					var i = 1;
					for ( ; i < length; i += 2 ) {
						matchIndexes.push( i );
					}
					return matchIndexes;
				}),

				"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
					var i = argument < 0 ? argument + length : argument;
					for ( ; --i >= 0; ) {
						matchIndexes.push( i );
					}
					return matchIndexes;
				}),

				"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
					var i = argument < 0 ? argument + length : argument;
					for ( ; ++i < length; ) {
						matchIndexes.push( i );
					}
					return matchIndexes;
				})
			}
		};

		Expr.pseudos["nth"] = Expr.pseudos["eq"];

		// Add button/input type pseudos
		for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
			Expr.pseudos[ i ] = createInputPseudo( i );
		}
		for ( i in { submit: true, reset: true } ) {
			Expr.pseudos[ i ] = createButtonPseudo( i );
		}

		// Easy API for creating new setFilters
		function setFilters() {}
		setFilters.prototype = Expr.filters = Expr.pseudos;
		Expr.setFilters = new setFilters();

		tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
			var matched, match, tokens, type,
				soFar, groups, preFilters,
				cached = tokenCache[ selector + " " ];

			if ( cached ) {
				return parseOnly ? 0 : cached.slice( 0 );
			}

			soFar = selector;
			groups = [];
			preFilters = Expr.preFilter;

			while ( soFar ) {

				// Comma and first run
				if ( !matched || (match = rcomma.exec( soFar )) ) {
					if ( match ) {
						// Don't consume trailing commas as valid
						soFar = soFar.slice( match[0].length ) || soFar;
					}
					groups.push( (tokens = []) );
				}

				matched = false;

				// Combinators
				if ( (match = rcombinators.exec( soFar )) ) {
					matched = match.shift();
					tokens.push({
						value: matched,
						// Cast descendant combinators to space
						type: match[0].replace( rtrim, " " )
					});
					soFar = soFar.slice( matched.length );
				}

				// Filters
				for ( type in Expr.filter ) {
					if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
						(match = preFilters[ type ]( match ))) ) {
						matched = match.shift();
						tokens.push({
							value: matched,
							type: type,
							matches: match
						});
						soFar = soFar.slice( matched.length );
					}
				}

				if ( !matched ) {
					break;
				}
			}

			// Return the length of the invalid excess
			// if we're just parsing
			// Otherwise, throw an error or return tokens
			return parseOnly ?
				soFar.length :
				soFar ?
					Sizzle.error( selector ) :
					// Cache the tokens
					tokenCache( selector, groups ).slice( 0 );
		};

		function toSelector( tokens ) {
			var i = 0,
				len = tokens.length,
				selector = "";
			for ( ; i < len; i++ ) {
				selector += tokens[i].value;
			}
			return selector;
		}

		function addCombinator( matcher, combinator, base ) {
			var dir = combinator.dir,
				skip = combinator.next,
				key = skip || dir,
				checkNonElements = base && key === "parentNode",
				doneName = done++;

			return combinator.first ?
				// Check against closest ancestor/preceding element
				function( elem, context, xml ) {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							return matcher( elem, context, xml );
						}
					}
					return false;
				} :

				// Check against all ancestor/preceding elements
				function( elem, context, xml ) {
					var oldCache, uniqueCache, outerCache,
						newCache = [ dirruns, doneName ];

					// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
					if ( xml ) {
						while ( (elem = elem[ dir ]) ) {
							if ( elem.nodeType === 1 || checkNonElements ) {
								if ( matcher( elem, context, xml ) ) {
									return true;
								}
							}
						}
					} else {
						while ( (elem = elem[ dir ]) ) {
							if ( elem.nodeType === 1 || checkNonElements ) {
								outerCache = elem[ expando ] || (elem[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

								if ( skip && skip === elem.nodeName.toLowerCase() ) {
									elem = elem[ dir ] || elem;
								} else if ( (oldCache = uniqueCache[ key ]) &&
									oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

									// Assign to newCache so results back-propagate to previous elements
									return (newCache[ 2 ] = oldCache[ 2 ]);
								} else {
									// Reuse newcache so results back-propagate to previous elements
									uniqueCache[ key ] = newCache;

									// A match means we're done; a fail means we have to keep checking
									if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
										return true;
									}
								}
							}
						}
					}
					return false;
				};
		}

		function elementMatcher( matchers ) {
			return matchers.length > 1 ?
				function( elem, context, xml ) {
					var i = matchers.length;
					while ( i-- ) {
						if ( !matchers[i]( elem, context, xml ) ) {
							return false;
						}
					}
					return true;
				} :
				matchers[0];
		}

		function multipleContexts( selector, contexts, results ) {
			var i = 0,
				len = contexts.length;
			for ( ; i < len; i++ ) {
				Sizzle( selector, contexts[i], results );
			}
			return results;
		}

		function condense( unmatched, map, filter, context, xml ) {
			var elem,
				newUnmatched = [],
				i = 0,
				len = unmatched.length,
				mapped = map != null;

			for ( ; i < len; i++ ) {
				if ( (elem = unmatched[i]) ) {
					if ( !filter || filter( elem, context, xml ) ) {
						newUnmatched.push( elem );
						if ( mapped ) {
							map.push( i );
						}
					}
				}
			}

			return newUnmatched;
		}

		function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
			if ( postFilter && !postFilter[ expando ] ) {
				postFilter = setMatcher( postFilter );
			}
			if ( postFinder && !postFinder[ expando ] ) {
				postFinder = setMatcher( postFinder, postSelector );
			}
			return markFunction(function( seed, results, context, xml ) {
				var temp, i, elem,
					preMap = [],
					postMap = [],
					preexisting = results.length,

					// Get initial elements from seed or context
					elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

					// Prefilter to get matcher input, preserving a map for seed-results synchronization
					matcherIn = preFilter && ( seed || !selector ) ?
						condense( elems, preMap, preFilter, context, xml ) :
						elems,

					matcherOut = matcher ?
						// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
						postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

							// ...intermediate processing is necessary
							[] :

							// ...otherwise use results directly
							results :
						matcherIn;

				// Find primary matches
				if ( matcher ) {
					matcher( matcherIn, matcherOut, context, xml );
				}

				// Apply postFilter
				if ( postFilter ) {
					temp = condense( matcherOut, postMap );
					postFilter( temp, [], context, xml );

					// Un-match failing elements by moving them back to matcherIn
					i = temp.length;
					while ( i-- ) {
						if ( (elem = temp[i]) ) {
							matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
						}
					}
				}

				if ( seed ) {
					if ( postFinder || preFilter ) {
						if ( postFinder ) {
							// Get the final matcherOut by condensing this intermediate into postFinder contexts
							temp = [];
							i = matcherOut.length;
							while ( i-- ) {
								if ( (elem = matcherOut[i]) ) {
									// Restore matcherIn since elem is not yet a final match
									temp.push( (matcherIn[i] = elem) );
								}
							}
							postFinder( null, (matcherOut = []), temp, xml );
						}

						// Move matched elements from seed to results to keep them synchronized
						i = matcherOut.length;
						while ( i-- ) {
							if ( (elem = matcherOut[i]) &&
								(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

								seed[temp] = !(results[temp] = elem);
							}
						}
					}

				// Add elements to results, through postFinder if defined
				} else {
					matcherOut = condense(
						matcherOut === results ?
							matcherOut.splice( preexisting, matcherOut.length ) :
							matcherOut
					);
					if ( postFinder ) {
						postFinder( null, results, matcherOut, xml );
					} else {
						push.apply( results, matcherOut );
					}
				}
			});
		}

		function matcherFromTokens( tokens ) {
			var checkContext, matcher, j,
				len = tokens.length,
				leadingRelative = Expr.relative[ tokens[0].type ],
				implicitRelative = leadingRelative || Expr.relative[" "],
				i = leadingRelative ? 1 : 0,

				// The foundational matcher ensures that elements are reachable from top-level context(s)
				matchContext = addCombinator( function( elem ) {
					return elem === checkContext;
				}, implicitRelative, true ),
				matchAnyContext = addCombinator( function( elem ) {
					return indexOf( checkContext, elem ) > -1;
				}, implicitRelative, true ),
				matchers = [ function( elem, context, xml ) {
					var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
						(checkContext = context).nodeType ?
							matchContext( elem, context, xml ) :
							matchAnyContext( elem, context, xml ) );
					// Avoid hanging onto element (issue #299)
					checkContext = null;
					return ret;
				} ];

			for ( ; i < len; i++ ) {
				if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
					matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
				} else {
					matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

					// Return special upon seeing a positional matcher
					if ( matcher[ expando ] ) {
						// Find the next relative operator (if any) for proper handling
						j = ++i;
						for ( ; j < len; j++ ) {
							if ( Expr.relative[ tokens[j].type ] ) {
								break;
							}
						}
						return setMatcher(
							i > 1 && elementMatcher( matchers ),
							i > 1 && toSelector(
								// If the preceding token was a descendant combinator, insert an implicit any-element `*`
								tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
							).replace( rtrim, "$1" ),
							matcher,
							i < j && matcherFromTokens( tokens.slice( i, j ) ),
							j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
							j < len && toSelector( tokens )
						);
					}
					matchers.push( matcher );
				}
			}

			return elementMatcher( matchers );
		}

		function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
			var bySet = setMatchers.length > 0,
				byElement = elementMatchers.length > 0,
				superMatcher = function( seed, context, xml, results, outermost ) {
					var elem, j, matcher,
						matchedCount = 0,
						i = "0",
						unmatched = seed && [],
						setMatched = [],
						contextBackup = outermostContext,
						// We must always have either seed elements or outermost context
						elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
						// Use integer dirruns iff this is the outermost matcher
						dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
						len = elems.length;

					if ( outermost ) {
						outermostContext = context === document || context || outermost;
					}

					// Add elements passing elementMatchers directly to results
					// Support: IE<9, Safari
					// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
					for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
						if ( byElement && elem ) {
							j = 0;
							if ( !context && elem.ownerDocument !== document ) {
								setDocument( elem );
								xml = !documentIsHTML;
							}
							while ( (matcher = elementMatchers[j++]) ) {
								if ( matcher( elem, context || document, xml) ) {
									results.push( elem );
									break;
								}
							}
							if ( outermost ) {
								dirruns = dirrunsUnique;
							}
						}

						// Track unmatched elements for set filters
						if ( bySet ) {
							// They will have gone through all possible matchers
							if ( (elem = !matcher && elem) ) {
								matchedCount--;
							}

							// Lengthen the array for every element, matched or not
							if ( seed ) {
								unmatched.push( elem );
							}
						}
					}

					// `i` is now the count of elements visited above, and adding it to `matchedCount`
					// makes the latter nonnegative.
					matchedCount += i;

					// Apply set filters to unmatched elements
					// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
					// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
					// no element matchers and no seed.
					// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
					// case, which will result in a "00" `matchedCount` that differs from `i` but is also
					// numerically zero.
					if ( bySet && i !== matchedCount ) {
						j = 0;
						while ( (matcher = setMatchers[j++]) ) {
							matcher( unmatched, setMatched, context, xml );
						}

						if ( seed ) {
							// Reintegrate element matches to eliminate the need for sorting
							if ( matchedCount > 0 ) {
								while ( i-- ) {
									if ( !(unmatched[i] || setMatched[i]) ) {
										setMatched[i] = pop.call( results );
									}
								}
							}

							// Discard index placeholder values to get only actual matches
							setMatched = condense( setMatched );
						}

						// Add matches to results
						push.apply( results, setMatched );

						// Seedless set matches succeeding multiple successful matchers stipulate sorting
						if ( outermost && !seed && setMatched.length > 0 &&
							( matchedCount + setMatchers.length ) > 1 ) {

							Sizzle.uniqueSort( results );
						}
					}

					// Override manipulation of globals by nested matchers
					if ( outermost ) {
						dirruns = dirrunsUnique;
						outermostContext = contextBackup;
					}

					return unmatched;
				};

			return bySet ?
				markFunction( superMatcher ) :
				superMatcher;
		}

		compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
			var i,
				setMatchers = [],
				elementMatchers = [],
				cached = compilerCache[ selector + " " ];

			if ( !cached ) {
				// Generate a function of recursive functions that can be used to check each element
				if ( !match ) {
					match = tokenize( selector );
				}
				i = match.length;
				while ( i-- ) {
					cached = matcherFromTokens( match[i] );
					if ( cached[ expando ] ) {
						setMatchers.push( cached );
					} else {
						elementMatchers.push( cached );
					}
				}

				// Cache the compiled function
				cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

				// Save selector and tokenization
				cached.selector = selector;
			}
			return cached;
		};

		/**
		 * A low-level selection function that works with Sizzle's compiled
		 *  selector functions
		 * @param {String|Function} selector A selector or a pre-compiled
		 *  selector function built with Sizzle.compile
		 * @param {Element} context
		 * @param {Array} [results]
		 * @param {Array} [seed] A set of elements to match against
		 */
		select = Sizzle.select = function( selector, context, results, seed ) {
			var i, tokens, token, type, find,
				compiled = typeof selector === "function" && selector,
				match = !seed && tokenize( (selector = compiled.selector || selector) );

			results = results || [];

			// Try to minimize operations if there is only one selector in the list and no seed
			// (the latter of which guarantees us context)
			if ( match.length === 1 ) {

				// Reduce context if the leading compound selector is an ID
				tokens = match[0] = match[0].slice( 0 );
				if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
						context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

					context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
					if ( !context ) {
						return results;

					// Precompiled matchers will still verify ancestry, so step up a level
					} else if ( compiled ) {
						context = context.parentNode;
					}

					selector = selector.slice( tokens.shift().value.length );
				}

				// Fetch a seed set for right-to-left matching
				i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
				while ( i-- ) {
					token = tokens[i];

					// Abort if we hit a combinator
					if ( Expr.relative[ (type = token.type) ] ) {
						break;
					}
					if ( (find = Expr.find[ type ]) ) {
						// Search, expanding context for leading sibling combinators
						if ( (seed = find(
							token.matches[0].replace( runescape, funescape ),
							rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
						)) ) {

							// If seed is empty or no tokens remain, we can return early
							tokens.splice( i, 1 );
							selector = seed.length && toSelector( tokens );
							if ( !selector ) {
								push.apply( results, seed );
								return results;
							}

							break;
						}
					}
				}
			}

			// Compile and execute a filtering function if one is not provided
			// Provide `match` to avoid retokenization if we modified the selector above
			( compiled || compile( selector, match ) )(
				seed,
				context,
				!documentIsHTML,
				results,
				!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
			);
			return results;
		};

		// One-time assignments

		// Sort stability
		support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

		// Support: Chrome 14-35+
		// Always assume duplicates if they aren't passed to the comparison function
		support.detectDuplicates = !!hasDuplicate;

		// Initialize against the default document
		setDocument();

		// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
		// Detached nodes confoundingly follow *each other*
		support.sortDetached = assert(function( el ) {
			// Should return 1, but returns 4 (following)
			return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
		});

		// Support: IE<8
		// Prevent attribute/property "interpolation"
		// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
		if ( !assert(function( el ) {
			el.innerHTML = "<a href='#'></a>";
			return el.firstChild.getAttribute("href") === "#" ;
		}) ) {
			addHandle( "type|href|height|width", function( elem, name, isXML ) {
				if ( !isXML ) {
					return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
				}
			});
		}

		// Support: IE<9
		// Use defaultValue in place of getAttribute("value")
		if ( !support.attributes || !assert(function( el ) {
			el.innerHTML = "<input/>";
			el.firstChild.setAttribute( "value", "" );
			return el.firstChild.getAttribute( "value" ) === "";
		}) ) {
			addHandle( "value", function( elem, name, isXML ) {
				if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
					return elem.defaultValue;
				}
			});
		}

		// Support: IE<9
		// Use getAttributeNode to fetch booleans when getAttribute lies
		if ( !assert(function( el ) {
			return el.getAttribute("disabled") == null;
		}) ) {
			addHandle( booleans, function( elem, name, isXML ) {
				var val;
				if ( !isXML ) {
					return elem[ name ] === true ? name.toLowerCase() :
							(val = elem.getAttributeNode( name )) && val.specified ?
							val.value :
						null;
				}
			});
		}

		return Sizzle;

		})( window );



		jQuery.find = Sizzle;
		jQuery.expr = Sizzle.selectors;

		// Deprecated
		jQuery.expr[ ":" ] = jQuery.expr.pseudos;
		jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
		jQuery.text = Sizzle.getText;
		jQuery.isXMLDoc = Sizzle.isXML;
		jQuery.contains = Sizzle.contains;
		jQuery.escapeSelector = Sizzle.escape;




		var dir = function( elem, dir, until ) {
			var matched = [],
				truncate = until !== undefined;

			while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
				if ( elem.nodeType === 1 ) {
					if ( truncate && jQuery( elem ).is( until ) ) {
						break;
					}
					matched.push( elem );
				}
			}
			return matched;
		};


		var siblings = function( n, elem ) {
			var matched = [];

			for ( ; n; n = n.nextSibling ) {
				if ( n.nodeType === 1 && n !== elem ) {
					matched.push( n );
				}
			}

			return matched;
		};


		var rneedsContext = jQuery.expr.match.needsContext;



		function nodeName( elem, name ) {

		  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

		};
		var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



		// Implement the identical functionality for filter and not
		function winnow( elements, qualifier, not ) {
			if ( isFunction( qualifier ) ) {
				return jQuery.grep( elements, function( elem, i ) {
					return !!qualifier.call( elem, i, elem ) !== not;
				} );
			}

			// Single element
			if ( qualifier.nodeType ) {
				return jQuery.grep( elements, function( elem ) {
					return ( elem === qualifier ) !== not;
				} );
			}

			// Arraylike of elements (jQuery, arguments, Array)
			if ( typeof qualifier !== "string" ) {
				return jQuery.grep( elements, function( elem ) {
					return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
				} );
			}

			// Filtered directly for both simple and complex selectors
			return jQuery.filter( qualifier, elements, not );
		}

		jQuery.filter = function( expr, elems, not ) {
			var elem = elems[ 0 ];

			if ( not ) {
				expr = ":not(" + expr + ")";
			}

			if ( elems.length === 1 && elem.nodeType === 1 ) {
				return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
			}

			return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
				return elem.nodeType === 1;
			} ) );
		};

		jQuery.fn.extend( {
			find: function( selector ) {
				var i, ret,
					len = this.length,
					self = this;

				if ( typeof selector !== "string" ) {
					return this.pushStack( jQuery( selector ).filter( function() {
						for ( i = 0; i < len; i++ ) {
							if ( jQuery.contains( self[ i ], this ) ) {
								return true;
							}
						}
					} ) );
				}

				ret = this.pushStack( [] );

				for ( i = 0; i < len; i++ ) {
					jQuery.find( selector, self[ i ], ret );
				}

				return len > 1 ? jQuery.uniqueSort( ret ) : ret;
			},
			filter: function( selector ) {
				return this.pushStack( winnow( this, selector || [], false ) );
			},
			not: function( selector ) {
				return this.pushStack( winnow( this, selector || [], true ) );
			},
			is: function( selector ) {
				return !!winnow(
					this,

					// If this is a positional/relative selector, check membership in the returned set
					// so $("p:first").is("p:last") won't return true for a doc with two "p".
					typeof selector === "string" && rneedsContext.test( selector ) ?
						jQuery( selector ) :
						selector || [],
					false
				).length;
			}
		} );


		// Initialize a jQuery object


		// A central reference to the root jQuery(document)
		var rootjQuery,

			// A simple way to check for HTML strings
			// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
			// Strict HTML recognition (#11290: must start with <)
			// Shortcut simple #id case for speed
			rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

			init = jQuery.fn.init = function( selector, context, root ) {
				var match, elem;

				// HANDLE: $(""), $(null), $(undefined), $(false)
				if ( !selector ) {
					return this;
				}

				// Method init() accepts an alternate rootjQuery
				// so migrate can support jQuery.sub (gh-2101)
				root = root || rootjQuery;

				// Handle HTML strings
				if ( typeof selector === "string" ) {
					if ( selector[ 0 ] === "<" &&
						selector[ selector.length - 1 ] === ">" &&
						selector.length >= 3 ) {

						// Assume that strings that start and end with <> are HTML and skip the regex check
						match = [ null, selector, null ];

					} else {
						match = rquickExpr.exec( selector );
					}

					// Match html or make sure no context is specified for #id
					if ( match && ( match[ 1 ] || !context ) ) {

						// HANDLE: $(html) -> $(array)
						if ( match[ 1 ] ) {
							context = context instanceof jQuery ? context[ 0 ] : context;

							// Option to run scripts is true for back-compat
							// Intentionally let the error be thrown if parseHTML is not present
							jQuery.merge( this, jQuery.parseHTML(
								match[ 1 ],
								context && context.nodeType ? context.ownerDocument || context : document,
								true
							) );

							// HANDLE: $(html, props)
							if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
								for ( match in context ) {

									// Properties of context are called as methods if possible
									if ( isFunction( this[ match ] ) ) {
										this[ match ]( context[ match ] );

									// ...and otherwise set as attributes
									} else {
										this.attr( match, context[ match ] );
									}
								}
							}

							return this;

						// HANDLE: $(#id)
						} else {
							elem = document.getElementById( match[ 2 ] );

							if ( elem ) {

								// Inject the element directly into the jQuery object
								this[ 0 ] = elem;
								this.length = 1;
							}
							return this;
						}

					// HANDLE: $(expr, $(...))
					} else if ( !context || context.jquery ) {
						return ( context || root ).find( selector );

					// HANDLE: $(expr, context)
					// (which is just equivalent to: $(context).find(expr)
					} else {
						return this.constructor( context ).find( selector );
					}

				// HANDLE: $(DOMElement)
				} else if ( selector.nodeType ) {
					this[ 0 ] = selector;
					this.length = 1;
					return this;

				// HANDLE: $(function)
				// Shortcut for document ready
				} else if ( isFunction( selector ) ) {
					return root.ready !== undefined ?
						root.ready( selector ) :

						// Execute immediately if ready is not present
						selector( jQuery );
				}

				return jQuery.makeArray( selector, this );
			};

		// Give the init function the jQuery prototype for later instantiation
		init.prototype = jQuery.fn;

		// Initialize central reference
		rootjQuery = jQuery( document );


		var rparentsprev = /^(?:parents|prev(?:Until|All))/,

			// Methods guaranteed to produce a unique set when starting from a unique set
			guaranteedUnique = {
				children: true,
				contents: true,
				next: true,
				prev: true
			};

		jQuery.fn.extend( {
			has: function( target ) {
				var targets = jQuery( target, this ),
					l = targets.length;

				return this.filter( function() {
					var i = 0;
					for ( ; i < l; i++ ) {
						if ( jQuery.contains( this, targets[ i ] ) ) {
							return true;
						}
					}
				} );
			},

			closest: function( selectors, context ) {
				var cur,
					i = 0,
					l = this.length,
					matched = [],
					targets = typeof selectors !== "string" && jQuery( selectors );

				// Positional selectors never match, since there's no _selection_ context
				if ( !rneedsContext.test( selectors ) ) {
					for ( ; i < l; i++ ) {
						for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

							// Always skip document fragments
							if ( cur.nodeType < 11 && ( targets ?
								targets.index( cur ) > -1 :

								// Don't pass non-elements to Sizzle
								cur.nodeType === 1 &&
									jQuery.find.matchesSelector( cur, selectors ) ) ) {

								matched.push( cur );
								break;
							}
						}
					}
				}

				return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
			},

			// Determine the position of an element within the set
			index: function( elem ) {

				// No argument, return index in parent
				if ( !elem ) {
					return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
				}

				// Index in selector
				if ( typeof elem === "string" ) {
					return indexOf.call( jQuery( elem ), this[ 0 ] );
				}

				// Locate the position of the desired element
				return indexOf.call( this,

					// If it receives a jQuery object, the first element is used
					elem.jquery ? elem[ 0 ] : elem
				);
			},

			add: function( selector, context ) {
				return this.pushStack(
					jQuery.uniqueSort(
						jQuery.merge( this.get(), jQuery( selector, context ) )
					)
				);
			},

			addBack: function( selector ) {
				return this.add( selector == null ?
					this.prevObject : this.prevObject.filter( selector )
				);
			}
		} );

		function sibling( cur, dir ) {
			while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
			return cur;
		}

		jQuery.each( {
			parent: function( elem ) {
				var parent = elem.parentNode;
				return parent && parent.nodeType !== 11 ? parent : null;
			},
			parents: function( elem ) {
				return dir( elem, "parentNode" );
			},
			parentsUntil: function( elem, i, until ) {
				return dir( elem, "parentNode", until );
			},
			next: function( elem ) {
				return sibling( elem, "nextSibling" );
			},
			prev: function( elem ) {
				return sibling( elem, "previousSibling" );
			},
			nextAll: function( elem ) {
				return dir( elem, "nextSibling" );
			},
			prevAll: function( elem ) {
				return dir( elem, "previousSibling" );
			},
			nextUntil: function( elem, i, until ) {
				return dir( elem, "nextSibling", until );
			},
			prevUntil: function( elem, i, until ) {
				return dir( elem, "previousSibling", until );
			},
			siblings: function( elem ) {
				return siblings( ( elem.parentNode || {} ).firstChild, elem );
			},
			children: function( elem ) {
				return siblings( elem.firstChild );
			},
			contents: function( elem ) {
		        if ( nodeName( elem, "iframe" ) ) {
		            return elem.contentDocument;
		        }

		        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		        // Treat the template element as a regular one in browsers that
		        // don't support it.
		        if ( nodeName( elem, "template" ) ) {
		            elem = elem.content || elem;
		        }

		        return jQuery.merge( [], elem.childNodes );
			}
		}, function( name, fn ) {
			jQuery.fn[ name ] = function( until, selector ) {
				var matched = jQuery.map( this, fn, until );

				if ( name.slice( -5 ) !== "Until" ) {
					selector = until;
				}

				if ( selector && typeof selector === "string" ) {
					matched = jQuery.filter( selector, matched );
				}

				if ( this.length > 1 ) {

					// Remove duplicates
					if ( !guaranteedUnique[ name ] ) {
						jQuery.uniqueSort( matched );
					}

					// Reverse order for parents* and prev-derivatives
					if ( rparentsprev.test( name ) ) {
						matched.reverse();
					}
				}

				return this.pushStack( matched );
			};
		} );
		var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



		// Convert String-formatted options into Object-formatted ones
		function createOptions( options ) {
			var object = {};
			jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
				object[ flag ] = true;
			} );
			return object;
		}

		/*
		 * Create a callback list using the following parameters:
		 *
		 *	options: an optional list of space-separated options that will change how
		 *			the callback list behaves or a more traditional option object
		 *
		 * By default a callback list will act like an event callback list and can be
		 * "fired" multiple times.
		 *
		 * Possible options:
		 *
		 *	once:			will ensure the callback list can only be fired once (like a Deferred)
		 *
		 *	memory:			will keep track of previous values and will call any callback added
		 *					after the list has been fired right away with the latest "memorized"
		 *					values (like a Deferred)
		 *
		 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
		 *
		 *	stopOnFalse:	interrupt callings when a callback returns false
		 *
		 */
		jQuery.Callbacks = function( options ) {

			// Convert options from String-formatted to Object-formatted if needed
			// (we check in cache first)
			options = typeof options === "string" ?
				createOptions( options ) :
				jQuery.extend( {}, options );

			var // Flag to know if list is currently firing
				firing,

				// Last fire value for non-forgettable lists
				memory,

				// Flag to know if list was already fired
				fired,

				// Flag to prevent firing
				locked,

				// Actual callback list
				list = [],

				// Queue of execution data for repeatable lists
				queue = [],

				// Index of currently firing callback (modified by add/remove as needed)
				firingIndex = -1,

				// Fire callbacks
				fire = function() {

					// Enforce single-firing
					locked = locked || options.once;

					// Execute callbacks for all pending executions,
					// respecting firingIndex overrides and runtime changes
					fired = firing = true;
					for ( ; queue.length; firingIndex = -1 ) {
						memory = queue.shift();
						while ( ++firingIndex < list.length ) {

							// Run callback and check for early termination
							if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
								options.stopOnFalse ) {

								// Jump to end and forget the data so .add doesn't re-fire
								firingIndex = list.length;
								memory = false;
							}
						}
					}

					// Forget the data if we're done with it
					if ( !options.memory ) {
						memory = false;
					}

					firing = false;

					// Clean up if we're done firing for good
					if ( locked ) {

						// Keep an empty list if we have data for future add calls
						if ( memory ) {
							list = [];

						// Otherwise, this object is spent
						} else {
							list = "";
						}
					}
				},

				// Actual Callbacks object
				self = {

					// Add a callback or a collection of callbacks to the list
					add: function() {
						if ( list ) {

							// If we have memory from a past run, we should fire after adding
							if ( memory && !firing ) {
								firingIndex = list.length - 1;
								queue.push( memory );
							}

							( function add( args ) {
								jQuery.each( args, function( _, arg ) {
									if ( isFunction( arg ) ) {
										if ( !options.unique || !self.has( arg ) ) {
											list.push( arg );
										}
									} else if ( arg && arg.length && toType( arg ) !== "string" ) {

										// Inspect recursively
										add( arg );
									}
								} );
							} )( arguments );

							if ( memory && !firing ) {
								fire();
							}
						}
						return this;
					},

					// Remove a callback from the list
					remove: function() {
						jQuery.each( arguments, function( _, arg ) {
							var index;
							while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
								list.splice( index, 1 );

								// Handle firing indexes
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						} );
						return this;
					},

					// Check if a given callback is in the list.
					// If no argument is given, return whether or not list has callbacks attached.
					has: function( fn ) {
						return fn ?
							jQuery.inArray( fn, list ) > -1 :
							list.length > 0;
					},

					// Remove all callbacks from the list
					empty: function() {
						if ( list ) {
							list = [];
						}
						return this;
					},

					// Disable .fire and .add
					// Abort any current/pending executions
					// Clear all callbacks and values
					disable: function() {
						locked = queue = [];
						list = memory = "";
						return this;
					},
					disabled: function() {
						return !list;
					},

					// Disable .fire
					// Also disable .add unless we have memory (since it would have no effect)
					// Abort any pending executions
					lock: function() {
						locked = queue = [];
						if ( !memory && !firing ) {
							list = memory = "";
						}
						return this;
					},
					locked: function() {
						return !!locked;
					},

					// Call all callbacks with the given context and arguments
					fireWith: function( context, args ) {
						if ( !locked ) {
							args = args || [];
							args = [ context, args.slice ? args.slice() : args ];
							queue.push( args );
							if ( !firing ) {
								fire();
							}
						}
						return this;
					},

					// Call all the callbacks with the given arguments
					fire: function() {
						self.fireWith( this, arguments );
						return this;
					},

					// To know if the callbacks have already been called at least once
					fired: function() {
						return !!fired;
					}
				};

			return self;
		};


		function Identity( v ) {
			return v;
		}
		function Thrower( ex ) {
			throw ex;
		}

		function adoptValue( value, resolve, reject, noValue ) {
			var method;

			try {

				// Check for promise aspect first to privilege synchronous behavior
				if ( value && isFunction( ( method = value.promise ) ) ) {
					method.call( value ).done( resolve ).fail( reject );

				// Other thenables
				} else if ( value && isFunction( ( method = value.then ) ) ) {
					method.call( value, resolve, reject );

				// Other non-thenables
				} else {

					// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
					// * false: [ value ].slice( 0 ) => resolve( value )
					// * true: [ value ].slice( 1 ) => resolve()
					resolve.apply( undefined, [ value ].slice( noValue ) );
				}

			// For Promises/A+, convert exceptions into rejections
			// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
			// Deferred#then to conditionally suppress rejection.
			} catch ( value ) {

				// Support: Android 4.0 only
				// Strict mode functions invoked without .call/.apply get global-object context
				reject.apply( undefined, [ value ] );
			}
		}

		jQuery.extend( {

			Deferred: function( func ) {
				var tuples = [

						// action, add listener, callbacks,
						// ... .then handlers, argument index, [final state]
						[ "notify", "progress", jQuery.Callbacks( "memory" ),
							jQuery.Callbacks( "memory" ), 2 ],
						[ "resolve", "done", jQuery.Callbacks( "once memory" ),
							jQuery.Callbacks( "once memory" ), 0, "resolved" ],
						[ "reject", "fail", jQuery.Callbacks( "once memory" ),
							jQuery.Callbacks( "once memory" ), 1, "rejected" ]
					],
					state = "pending",
					promise = {
						state: function() {
							return state;
						},
						always: function() {
							deferred.done( arguments ).fail( arguments );
							return this;
						},
						"catch": function( fn ) {
							return promise.then( null, fn );
						},

						// Keep pipe for back-compat
						pipe: function( /* fnDone, fnFail, fnProgress */ ) {
							var fns = arguments;

							return jQuery.Deferred( function( newDefer ) {
								jQuery.each( tuples, function( i, tuple ) {

									// Map tuples (progress, done, fail) to arguments (done, fail, progress)
									var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

									// deferred.progress(function() { bind to newDefer or newDefer.notify })
									// deferred.done(function() { bind to newDefer or newDefer.resolve })
									// deferred.fail(function() { bind to newDefer or newDefer.reject })
									deferred[ tuple[ 1 ] ]( function() {
										var returned = fn && fn.apply( this, arguments );
										if ( returned && isFunction( returned.promise ) ) {
											returned.promise()
												.progress( newDefer.notify )
												.done( newDefer.resolve )
												.fail( newDefer.reject );
										} else {
											newDefer[ tuple[ 0 ] + "With" ](
												this,
												fn ? [ returned ] : arguments
											);
										}
									} );
								} );
								fns = null;
							} ).promise();
						},
						then: function( onFulfilled, onRejected, onProgress ) {
							var maxDepth = 0;
							function resolve( depth, deferred, handler, special ) {
								return function() {
									var that = this,
										args = arguments,
										mightThrow = function() {
											var returned, then;

											// Support: Promises/A+ section 2.3.3.3.3
											// https://promisesaplus.com/#point-59
											// Ignore double-resolution attempts
											if ( depth < maxDepth ) {
												return;
											}

											returned = handler.apply( that, args );

											// Support: Promises/A+ section 2.3.1
											// https://promisesaplus.com/#point-48
											if ( returned === deferred.promise() ) {
												throw new TypeError( "Thenable self-resolution" );
											}

											// Support: Promises/A+ sections 2.3.3.1, 3.5
											// https://promisesaplus.com/#point-54
											// https://promisesaplus.com/#point-75
											// Retrieve `then` only once
											then = returned &&

												// Support: Promises/A+ section 2.3.4
												// https://promisesaplus.com/#point-64
												// Only check objects and functions for thenability
												( typeof returned === "object" ||
													typeof returned === "function" ) &&
												returned.then;

											// Handle a returned thenable
											if ( isFunction( then ) ) {

												// Special processors (notify) just wait for resolution
												if ( special ) {
													then.call(
														returned,
														resolve( maxDepth, deferred, Identity, special ),
														resolve( maxDepth, deferred, Thrower, special )
													);

												// Normal processors (resolve) also hook into progress
												} else {

													// ...and disregard older resolution values
													maxDepth++;

													then.call(
														returned,
														resolve( maxDepth, deferred, Identity, special ),
														resolve( maxDepth, deferred, Thrower, special ),
														resolve( maxDepth, deferred, Identity,
															deferred.notifyWith )
													);
												}

											// Handle all other returned values
											} else {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Identity ) {
													that = undefined;
													args = [ returned ];
												}

												// Process the value(s)
												// Default process is resolve
												( special || deferred.resolveWith )( that, args );
											}
										},

										// Only normal processors (resolve) catch and reject exceptions
										process = special ?
											mightThrow :
											function() {
												try {
													mightThrow();
												} catch ( e ) {

													if ( jQuery.Deferred.exceptionHook ) {
														jQuery.Deferred.exceptionHook( e,
															process.stackTrace );
													}

													// Support: Promises/A+ section 2.3.3.3.4.1
													// https://promisesaplus.com/#point-61
													// Ignore post-resolution exceptions
													if ( depth + 1 >= maxDepth ) {

														// Only substitute handlers pass on context
														// and multiple values (non-spec behavior)
														if ( handler !== Thrower ) {
															that = undefined;
															args = [ e ];
														}

														deferred.rejectWith( that, args );
													}
												}
											};

									// Support: Promises/A+ section 2.3.3.3.1
									// https://promisesaplus.com/#point-57
									// Re-resolve promises immediately to dodge false rejection from
									// subsequent errors
									if ( depth ) {
										process();
									} else {

										// Call an optional hook to record the stack, in case of exception
										// since it's otherwise lost when execution goes async
										if ( jQuery.Deferred.getStackHook ) {
											process.stackTrace = jQuery.Deferred.getStackHook();
										}
										window.setTimeout( process );
									}
								};
							}

							return jQuery.Deferred( function( newDefer ) {

								// progress_handlers.add( ... )
								tuples[ 0 ][ 3 ].add(
									resolve(
										0,
										newDefer,
										isFunction( onProgress ) ?
											onProgress :
											Identity,
										newDefer.notifyWith
									)
								);

								// fulfilled_handlers.add( ... )
								tuples[ 1 ][ 3 ].add(
									resolve(
										0,
										newDefer,
										isFunction( onFulfilled ) ?
											onFulfilled :
											Identity
									)
								);

								// rejected_handlers.add( ... )
								tuples[ 2 ][ 3 ].add(
									resolve(
										0,
										newDefer,
										isFunction( onRejected ) ?
											onRejected :
											Thrower
									)
								);
							} ).promise();
						},

						// Get a promise for this deferred
						// If obj is provided, the promise aspect is added to the object
						promise: function( obj ) {
							return obj != null ? jQuery.extend( obj, promise ) : promise;
						}
					},
					deferred = {};

				// Add list-specific methods
				jQuery.each( tuples, function( i, tuple ) {
					var list = tuple[ 2 ],
						stateString = tuple[ 5 ];

					// promise.progress = list.add
					// promise.done = list.add
					// promise.fail = list.add
					promise[ tuple[ 1 ] ] = list.add;

					// Handle state
					if ( stateString ) {
						list.add(
							function() {

								// state = "resolved" (i.e., fulfilled)
								// state = "rejected"
								state = stateString;
							},

							// rejected_callbacks.disable
							// fulfilled_callbacks.disable
							tuples[ 3 - i ][ 2 ].disable,

							// rejected_handlers.disable
							// fulfilled_handlers.disable
							tuples[ 3 - i ][ 3 ].disable,

							// progress_callbacks.lock
							tuples[ 0 ][ 2 ].lock,

							// progress_handlers.lock
							tuples[ 0 ][ 3 ].lock
						);
					}

					// progress_handlers.fire
					// fulfilled_handlers.fire
					// rejected_handlers.fire
					list.add( tuple[ 3 ].fire );

					// deferred.notify = function() { deferred.notifyWith(...) }
					// deferred.resolve = function() { deferred.resolveWith(...) }
					// deferred.reject = function() { deferred.rejectWith(...) }
					deferred[ tuple[ 0 ] ] = function() {
						deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
						return this;
					};

					// deferred.notifyWith = list.fireWith
					// deferred.resolveWith = list.fireWith
					// deferred.rejectWith = list.fireWith
					deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
				} );

				// Make the deferred a promise
				promise.promise( deferred );

				// Call given func if any
				if ( func ) {
					func.call( deferred, deferred );
				}

				// All done!
				return deferred;
			},

			// Deferred helper
			when: function( singleValue ) {
				var

					// count of uncompleted subordinates
					remaining = arguments.length,

					// count of unprocessed arguments
					i = remaining,

					// subordinate fulfillment data
					resolveContexts = Array( i ),
					resolveValues = slice.call( arguments ),

					// the master Deferred
					master = jQuery.Deferred(),

					// subordinate callback factory
					updateFunc = function( i ) {
						return function( value ) {
							resolveContexts[ i ] = this;
							resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
							if ( !( --remaining ) ) {
								master.resolveWith( resolveContexts, resolveValues );
							}
						};
					};

				// Single- and empty arguments are adopted like Promise.resolve
				if ( remaining <= 1 ) {
					adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
						!remaining );

					// Use .then() to unwrap secondary thenables (cf. gh-3000)
					if ( master.state() === "pending" ||
						isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

						return master.then();
					}
				}

				// Multiple arguments are aggregated like Promise.all array elements
				while ( i-- ) {
					adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
				}

				return master.promise();
			}
		} );


		// These usually indicate a programmer mistake during development,
		// warn about them ASAP rather than swallowing them by default.
		var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

		jQuery.Deferred.exceptionHook = function( error, stack ) {

			// Support: IE 8 - 9 only
			// Console exists when dev tools are open, which can happen at any time
			if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
				window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
			}
		};




		jQuery.readyException = function( error ) {
			window.setTimeout( function() {
				throw error;
			} );
		};




		// The deferred used on DOM ready
		var readyList = jQuery.Deferred();

		jQuery.fn.ready = function( fn ) {

			readyList
				.then( fn )

				// Wrap jQuery.readyException in a function so that the lookup
				// happens at the time of error handling instead of callback
				// registration.
				.catch( function( error ) {
					jQuery.readyException( error );
				} );

			return this;
		};

		jQuery.extend( {

			// Is the DOM ready to be used? Set to true once it occurs.
			isReady: false,

			// A counter to track how many items to wait for before
			// the ready event fires. See #6781
			readyWait: 1,

			// Handle when the DOM is ready
			ready: function( wait ) {

				// Abort if there are pending holds or we're already ready
				if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
					return;
				}

				// Remember that the DOM is ready
				jQuery.isReady = true;

				// If a normal DOM Ready event fired, decrement, and wait if need be
				if ( wait !== true && --jQuery.readyWait > 0 ) {
					return;
				}

				// If there are functions bound, to execute
				readyList.resolveWith( document, [ jQuery ] );
			}
		} );

		jQuery.ready.then = readyList.then;

		// The ready event handler and self cleanup method
		function completed() {
			document.removeEventListener( "DOMContentLoaded", completed );
			window.removeEventListener( "load", completed );
			jQuery.ready();
		}

		// Catch cases where $(document).ready() is called
		// after the browser event has already occurred.
		// Support: IE <=9 - 10 only
		// Older IE sometimes signals "interactive" too soon
		if ( document.readyState === "complete" ||
			( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

			// Handle it asynchronously to allow scripts the opportunity to delay ready
			window.setTimeout( jQuery.ready );

		} else {

			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed );
		}




		// Multifunctional method to get and set values of a collection
		// The value/s can optionally be executed if it's a function
		var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
			var i = 0,
				len = elems.length,
				bulk = key == null;

			// Sets many values
			if ( toType( key ) === "object" ) {
				chainable = true;
				for ( i in key ) {
					access( elems, fn, i, key[ i ], true, emptyGet, raw );
				}

			// Sets one value
			} else if ( value !== undefined ) {
				chainable = true;

				if ( !isFunction( value ) ) {
					raw = true;
				}

				if ( bulk ) {

					// Bulk operations run against the entire set
					if ( raw ) {
						fn.call( elems, value );
						fn = null;

					// ...except when executing function values
					} else {
						bulk = fn;
						fn = function( elem, key, value ) {
							return bulk.call( jQuery( elem ), value );
						};
					}
				}

				if ( fn ) {
					for ( ; i < len; i++ ) {
						fn(
							elems[ i ], key, raw ?
							value :
							value.call( elems[ i ], i, fn( elems[ i ], key ) )
						);
					}
				}
			}

			if ( chainable ) {
				return elems;
			}

			// Gets
			if ( bulk ) {
				return fn.call( elems );
			}

			return len ? fn( elems[ 0 ], key ) : emptyGet;
		};


		// Matches dashed string for camelizing
		var rmsPrefix = /^-ms-/,
			rdashAlpha = /-([a-z])/g;

		// Used by camelCase as callback to replace()
		function fcamelCase( all, letter ) {
			return letter.toUpperCase();
		}

		// Convert dashed to camelCase; used by the css and data modules
		// Support: IE <=9 - 11, Edge 12 - 15
		// Microsoft forgot to hump their vendor prefix (#9572)
		function camelCase( string ) {
			return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
		}
		var acceptData = function( owner ) {

			// Accepts only:
			//  - Node
			//    - Node.ELEMENT_NODE
			//    - Node.DOCUMENT_NODE
			//  - Object
			//    - Any
			return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
		};




		function Data() {
			this.expando = jQuery.expando + Data.uid++;
		}

		Data.uid = 1;

		Data.prototype = {

			cache: function( owner ) {

				// Check if the owner object already has a cache
				var value = owner[ this.expando ];

				// If not, create one
				if ( !value ) {
					value = {};

					// We can accept data for non-element nodes in modern browsers,
					// but we should not, see #8335.
					// Always return an empty object.
					if ( acceptData( owner ) ) {

						// If it is a node unlikely to be stringify-ed or looped over
						// use plain assignment
						if ( owner.nodeType ) {
							owner[ this.expando ] = value;

						// Otherwise secure it in a non-enumerable property
						// configurable must be true to allow the property to be
						// deleted when data is removed
						} else {
							Object.defineProperty( owner, this.expando, {
								value: value,
								configurable: true
							} );
						}
					}
				}

				return value;
			},
			set: function( owner, data, value ) {
				var prop,
					cache = this.cache( owner );

				// Handle: [ owner, key, value ] args
				// Always use camelCase key (gh-2257)
				if ( typeof data === "string" ) {
					cache[ camelCase( data ) ] = value;

				// Handle: [ owner, { properties } ] args
				} else {

					// Copy the properties one-by-one to the cache object
					for ( prop in data ) {
						cache[ camelCase( prop ) ] = data[ prop ];
					}
				}
				return cache;
			},
			get: function( owner, key ) {
				return key === undefined ?
					this.cache( owner ) :

					// Always use camelCase key (gh-2257)
					owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
			},
			access: function( owner, key, value ) {

				// In cases where either:
				//
				//   1. No key was specified
				//   2. A string key was specified, but no value provided
				//
				// Take the "read" path and allow the get method to determine
				// which value to return, respectively either:
				//
				//   1. The entire cache object
				//   2. The data stored at the key
				//
				if ( key === undefined ||
						( ( key && typeof key === "string" ) && value === undefined ) ) {

					return this.get( owner, key );
				}

				// When the key is not a string, or both a key and value
				// are specified, set or extend (existing objects) with either:
				//
				//   1. An object of properties
				//   2. A key and value
				//
				this.set( owner, key, value );

				// Since the "set" path can have two possible entry points
				// return the expected data based on which path was taken[*]
				return value !== undefined ? value : key;
			},
			remove: function( owner, key ) {
				var i,
					cache = owner[ this.expando ];

				if ( cache === undefined ) {
					return;
				}

				if ( key !== undefined ) {

					// Support array or space separated string of keys
					if ( Array.isArray( key ) ) {

						// If key is an array of keys...
						// We always set camelCase keys, so remove that.
						key = key.map( camelCase );
					} else {
						key = camelCase( key );

						// If a key with the spaces exists, use it.
						// Otherwise, create an array by matching non-whitespace
						key = key in cache ?
							[ key ] :
							( key.match( rnothtmlwhite ) || [] );
					}

					i = key.length;

					while ( i-- ) {
						delete cache[ key[ i ] ];
					}
				}

				// Remove the expando if there's no more data
				if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

					// Support: Chrome <=35 - 45
					// Webkit & Blink performance suffers when deleting properties
					// from DOM nodes, so set to undefined instead
					// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
					if ( owner.nodeType ) {
						owner[ this.expando ] = undefined;
					} else {
						delete owner[ this.expando ];
					}
				}
			},
			hasData: function( owner ) {
				var cache = owner[ this.expando ];
				return cache !== undefined && !jQuery.isEmptyObject( cache );
			}
		};
		var dataPriv = new Data();

		var dataUser = new Data();



//			Implementation Summary
		//
//			1. Enforce API surface and semantic compatibility with 1.9.x branch
//			2. Improve the module's maintainability by reducing the storage
//				paths to a single mechanism.
//			3. Use the same single mechanism to support "private" and "user" data.
//			4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//			5. Avoid exposing implementation details on user objects (eg. expando properties)
//			6. Provide a clear path for implementation upgrade to WeakMap in 2014

		var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
			rmultiDash = /[A-Z]/g;

		function getData( data ) {
			if ( data === "true" ) {
				return true;
			}

			if ( data === "false" ) {
				return false;
			}

			if ( data === "null" ) {
				return null;
			}

			// Only convert to a number if it doesn't change the string
			if ( data === +data + "" ) {
				return +data;
			}

			if ( rbrace.test( data ) ) {
				return JSON.parse( data );
			}

			return data;
		}

		function dataAttr( elem, key, data ) {
			var name;

			// If nothing was found internally, try to fetch any
			// data from the HTML5 data-* attribute
			if ( data === undefined && elem.nodeType === 1 ) {
				name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
				data = elem.getAttribute( name );

				if ( typeof data === "string" ) {
					try {
						data = getData( data );
					} catch ( e ) {}

					// Make sure we set the data so it isn't changed later
					dataUser.set( elem, key, data );
				} else {
					data = undefined;
				}
			}
			return data;
		}

		jQuery.extend( {
			hasData: function( elem ) {
				return dataUser.hasData( elem ) || dataPriv.hasData( elem );
			},

			data: function( elem, name, data ) {
				return dataUser.access( elem, name, data );
			},

			removeData: function( elem, name ) {
				dataUser.remove( elem, name );
			},

			// TODO: Now that all calls to _data and _removeData have been replaced
			// with direct calls to dataPriv methods, these can be deprecated.
			_data: function( elem, name, data ) {
				return dataPriv.access( elem, name, data );
			},

			_removeData: function( elem, name ) {
				dataPriv.remove( elem, name );
			}
		} );

		jQuery.fn.extend( {
			data: function( key, value ) {
				var i, name, data,
					elem = this[ 0 ],
					attrs = elem && elem.attributes;

				// Gets all values
				if ( key === undefined ) {
					if ( this.length ) {
						data = dataUser.get( elem );

						if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
							i = attrs.length;
							while ( i-- ) {

								// Support: IE 11 only
								// The attrs elements can be null (#14894)
								if ( attrs[ i ] ) {
									name = attrs[ i ].name;
									if ( name.indexOf( "data-" ) === 0 ) {
										name = camelCase( name.slice( 5 ) );
										dataAttr( elem, name, data[ name ] );
									}
								}
							}
							dataPriv.set( elem, "hasDataAttrs", true );
						}
					}

					return data;
				}

				// Sets multiple values
				if ( typeof key === "object" ) {
					return this.each( function() {
						dataUser.set( this, key );
					} );
				}

				return access( this, function( value ) {
					var data;

					// The calling jQuery object (element matches) is not empty
					// (and therefore has an element appears at this[ 0 ]) and the
					// `value` parameter was not undefined. An empty jQuery object
					// will result in `undefined` for elem = this[ 0 ] which will
					// throw an exception if an attempt to read a data cache is made.
					if ( elem && value === undefined ) {

						// Attempt to get data from the cache
						// The key will always be camelCased in Data
						data = dataUser.get( elem, key );
						if ( data !== undefined ) {
							return data;
						}

						// Attempt to "discover" the data in
						// HTML5 custom data-* attrs
						data = dataAttr( elem, key );
						if ( data !== undefined ) {
							return data;
						}

						// We tried really hard, but the data doesn't exist.
						return;
					}

					// Set the data...
					this.each( function() {

						// We always store the camelCased key
						dataUser.set( this, key, value );
					} );
				}, null, value, arguments.length > 1, null, true );
			},

			removeData: function( key ) {
				return this.each( function() {
					dataUser.remove( this, key );
				} );
			}
		} );


		jQuery.extend( {
			queue: function( elem, type, data ) {
				var queue;

				if ( elem ) {
					type = ( type || "fx" ) + "queue";
					queue = dataPriv.get( elem, type );

					// Speed up dequeue by getting out quickly if this is just a lookup
					if ( data ) {
						if ( !queue || Array.isArray( data ) ) {
							queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
						} else {
							queue.push( data );
						}
					}
					return queue || [];
				}
			},

			dequeue: function( elem, type ) {
				type = type || "fx";

				var queue = jQuery.queue( elem, type ),
					startLength = queue.length,
					fn = queue.shift(),
					hooks = jQuery._queueHooks( elem, type ),
					next = function() {
						jQuery.dequeue( elem, type );
					};

				// If the fx queue is dequeued, always remove the progress sentinel
				if ( fn === "inprogress" ) {
					fn = queue.shift();
					startLength--;
				}

				if ( fn ) {

					// Add a progress sentinel to prevent the fx queue from being
					// automatically dequeued
					if ( type === "fx" ) {
						queue.unshift( "inprogress" );
					}

					// Clear up the last queue stop function
					delete hooks.stop;
					fn.call( elem, next, hooks );
				}

				if ( !startLength && hooks ) {
					hooks.empty.fire();
				}
			},

			// Not public - generate a queueHooks object, or return the current one
			_queueHooks: function( elem, type ) {
				var key = type + "queueHooks";
				return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
					empty: jQuery.Callbacks( "once memory" ).add( function() {
						dataPriv.remove( elem, [ type + "queue", key ] );
					} )
				} );
			}
		} );

		jQuery.fn.extend( {
			queue: function( type, data ) {
				var setter = 2;

				if ( typeof type !== "string" ) {
					data = type;
					type = "fx";
					setter--;
				}

				if ( arguments.length < setter ) {
					return jQuery.queue( this[ 0 ], type );
				}

				return data === undefined ?
					this :
					this.each( function() {
						var queue = jQuery.queue( this, type, data );

						// Ensure a hooks for this queue
						jQuery._queueHooks( this, type );

						if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
							jQuery.dequeue( this, type );
						}
					} );
			},
			dequeue: function( type ) {
				return this.each( function() {
					jQuery.dequeue( this, type );
				} );
			},
			clearQueue: function( type ) {
				return this.queue( type || "fx", [] );
			},

			// Get a promise resolved when queues of a certain type
			// are emptied (fx is the type by default)
			promise: function( type, obj ) {
				var tmp,
					count = 1,
					defer = jQuery.Deferred(),
					elements = this,
					i = this.length,
					resolve = function() {
						if ( !( --count ) ) {
							defer.resolveWith( elements, [ elements ] );
						}
					};

				if ( typeof type !== "string" ) {
					obj = type;
					type = undefined;
				}
				type = type || "fx";

				while ( i-- ) {
					tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
					if ( tmp && tmp.empty ) {
						count++;
						tmp.empty.add( resolve );
					}
				}
				resolve();
				return defer.promise( obj );
			}
		} );
		var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

		var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


		var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

		var isHiddenWithinTree = function( elem, el ) {

				// isHiddenWithinTree might be called from jQuery#filter function;
				// in that case, element will be second argument
				elem = el || elem;

				// Inline style trumps all
				return elem.style.display === "none" ||
					elem.style.display === "" &&

					// Otherwise, check computed style
					// Support: Firefox <=43 - 45
					// Disconnected elements can have computed display: none, so first confirm that elem is
					// in the document.
					jQuery.contains( elem.ownerDocument, elem ) &&

					jQuery.css( elem, "display" ) === "none";
			};

		var swap = function( elem, options, callback, args ) {
			var ret, name,
				old = {};

			// Remember the old values, and insert the new ones
			for ( name in options ) {
				old[ name ] = elem.style[ name ];
				elem.style[ name ] = options[ name ];
			}

			ret = callback.apply( elem, args || [] );

			// Revert the old values
			for ( name in options ) {
				elem.style[ name ] = old[ name ];
			}

			return ret;
		};




		function adjustCSS( elem, prop, valueParts, tween ) {
			var adjusted, scale,
				maxIterations = 20,
				currentValue = tween ?
					function() {
						return tween.cur();
					} :
					function() {
						return jQuery.css( elem, prop, "" );
					},
				initial = currentValue(),
				unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

				// Starting value computation is required for potential unit mismatches
				initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
					rcssNum.exec( jQuery.css( elem, prop ) );

			if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

				// Support: Firefox <=54
				// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
				initial = initial / 2;

				// Trust units reported by jQuery.css
				unit = unit || initialInUnit[ 3 ];

				// Iteratively approximate from a nonzero starting point
				initialInUnit = +initial || 1;

				while ( maxIterations-- ) {

					// Evaluate and update our best guess (doubling guesses that zero out).
					// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
					jQuery.style( elem, prop, initialInUnit + unit );
					if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
						maxIterations = 0;
					}
					initialInUnit = initialInUnit / scale;

				}

				initialInUnit = initialInUnit * 2;
				jQuery.style( elem, prop, initialInUnit + unit );

				// Make sure we update the tween properties later on
				valueParts = valueParts || [];
			}

			if ( valueParts ) {
				initialInUnit = +initialInUnit || +initial || 0;

				// Apply relative offset (+=/-=) if specified
				adjusted = valueParts[ 1 ] ?
					initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
					+valueParts[ 2 ];
				if ( tween ) {
					tween.unit = unit;
					tween.start = initialInUnit;
					tween.end = adjusted;
				}
			}
			return adjusted;
		}


		var defaultDisplayMap = {};

		function getDefaultDisplay( elem ) {
			var temp,
				doc = elem.ownerDocument,
				nodeName = elem.nodeName,
				display = defaultDisplayMap[ nodeName ];

			if ( display ) {
				return display;
			}

			temp = doc.body.appendChild( doc.createElement( nodeName ) );
			display = jQuery.css( temp, "display" );

			temp.parentNode.removeChild( temp );

			if ( display === "none" ) {
				display = "block";
			}
			defaultDisplayMap[ nodeName ] = display;

			return display;
		}

		function showHide( elements, show ) {
			var display, elem,
				values = [],
				index = 0,
				length = elements.length;

			// Determine new display value for elements that need to change
			for ( ; index < length; index++ ) {
				elem = elements[ index ];
				if ( !elem.style ) {
					continue;
				}

				display = elem.style.display;
				if ( show ) {

					// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
					// check is required in this first loop unless we have a nonempty display value (either
					// inline or about-to-be-restored)
					if ( display === "none" ) {
						values[ index ] = dataPriv.get( elem, "display" ) || null;
						if ( !values[ index ] ) {
							elem.style.display = "";
						}
					}
					if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
						values[ index ] = getDefaultDisplay( elem );
					}
				} else {
					if ( display !== "none" ) {
						values[ index ] = "none";

						// Remember what we're overwriting
						dataPriv.set( elem, "display", display );
					}
				}
			}

			// Set the display of the elements in a second loop to avoid constant reflow
			for ( index = 0; index < length; index++ ) {
				if ( values[ index ] != null ) {
					elements[ index ].style.display = values[ index ];
				}
			}

			return elements;
		}

		jQuery.fn.extend( {
			show: function() {
				return showHide( this, true );
			},
			hide: function() {
				return showHide( this );
			},
			toggle: function( state ) {
				if ( typeof state === "boolean" ) {
					return state ? this.show() : this.hide();
				}

				return this.each( function() {
					if ( isHiddenWithinTree( this ) ) {
						jQuery( this ).show();
					} else {
						jQuery( this ).hide();
					}
				} );
			}
		} );
		var rcheckableType = ( /^(?:checkbox|radio)$/i );

		var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

		var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



		// We have to close these tags to support XHTML (#13200)
		var wrapMap = {

			// Support: IE <=9 only
			option: [ 1, "<select multiple='multiple'>", "</select>" ],

			// XHTML parsers do not magically insert elements in the
			// same way that tag soup parsers do. So we cannot shorten
			// this by omitting <tbody> or other required elements.
			thead: [ 1, "<table>", "</table>" ],
			col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
			tr: [ 2, "<table><tbody>", "</tbody></table>" ],
			td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

			_default: [ 0, "", "" ]
		};

		// Support: IE <=9 only
		wrapMap.optgroup = wrapMap.option;

		wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
		wrapMap.th = wrapMap.td;


		function getAll( context, tag ) {

			// Support: IE <=9 - 11 only
			// Use typeof to avoid zero-argument method invocation on host objects (#15151)
			var ret;

			if ( typeof context.getElementsByTagName !== "undefined" ) {
				ret = context.getElementsByTagName( tag || "*" );

			} else if ( typeof context.querySelectorAll !== "undefined" ) {
				ret = context.querySelectorAll( tag || "*" );

			} else {
				ret = [];
			}

			if ( tag === undefined || tag && nodeName( context, tag ) ) {
				return jQuery.merge( [ context ], ret );
			}

			return ret;
		}


		// Mark scripts as having already been evaluated
		function setGlobalEval( elems, refElements ) {
			var i = 0,
				l = elems.length;

			for ( ; i < l; i++ ) {
				dataPriv.set(
					elems[ i ],
					"globalEval",
					!refElements || dataPriv.get( refElements[ i ], "globalEval" )
				);
			}
		}


		var rhtml = /<|&#?\w+;/;

		function buildFragment( elems, context, scripts, selection, ignored ) {
			var elem, tmp, tag, wrap, contains, j,
				fragment = context.createDocumentFragment(),
				nodes = [],
				i = 0,
				l = elems.length;

			for ( ; i < l; i++ ) {
				elem = elems[ i ];

				if ( elem || elem === 0 ) {

					// Add nodes directly
					if ( toType( elem ) === "object" ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

					// Convert non-html into a text node
					} else if ( !rhtml.test( elem ) ) {
						nodes.push( context.createTextNode( elem ) );

					// Convert html into DOM nodes
					} else {
						tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

						// Deserialize a standard representation
						tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
						wrap = wrapMap[ tag ] || wrapMap._default;
						tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

						// Descend through wrappers to the right content
						j = wrap[ 0 ];
						while ( j-- ) {
							tmp = tmp.lastChild;
						}

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( nodes, tmp.childNodes );

						// Remember the top-level container
						tmp = fragment.firstChild;

						// Ensure the created nodes are orphaned (#12392)
						tmp.textContent = "";
					}
				}
			}

			// Remove wrapper from fragment
			fragment.textContent = "";

			i = 0;
			while ( ( elem = nodes[ i++ ] ) ) {

				// Skip elements already in the context collection (trac-4087)
				if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
					if ( ignored ) {
						ignored.push( elem );
					}
					continue;
				}

				contains = jQuery.contains( elem.ownerDocument, elem );

				// Append to fragment
				tmp = getAll( fragment.appendChild( elem ), "script" );

				// Preserve script evaluation history
				if ( contains ) {
					setGlobalEval( tmp );
				}

				// Capture executables
				if ( scripts ) {
					j = 0;
					while ( ( elem = tmp[ j++ ] ) ) {
						if ( rscriptType.test( elem.type || "" ) ) {
							scripts.push( elem );
						}
					}
				}
			}

			return fragment;
		}


		( function() {
			var fragment = document.createDocumentFragment(),
				div = fragment.appendChild( document.createElement( "div" ) ),
				input = document.createElement( "input" );

			// Support: Android 4.0 - 4.3 only
			// Check state lost if the name is set (#11217)
			// Support: Windows Web Apps (WWA)
			// `name` and `type` must use .setAttribute for WWA (#14901)
			input.setAttribute( "type", "radio" );
			input.setAttribute( "checked", "checked" );
			input.setAttribute( "name", "t" );

			div.appendChild( input );

			// Support: Android <=4.1 only
			// Older WebKit doesn't clone checked state correctly in fragments
			support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

			// Support: IE <=11 only
			// Make sure textarea (and checkbox) defaultValue is properly cloned
			div.innerHTML = "<textarea>x</textarea>";
			support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
		} )();
		var documentElement = document.documentElement;



		var
			rkeyEvent = /^key/,
			rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
			rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

		function returnTrue() {
			return true;
		}

		function returnFalse() {
			return false;
		}

		// Support: IE <=9 only
		// See #13393 for more info
		function safeActiveElement() {
			try {
				return document.activeElement;
			} catch ( err ) { }
		}

		function on( elem, types, selector, data, fn, one ) {
			var origFn, type;

			// Types can be a map of types/handlers
			if ( typeof types === "object" ) {

				// ( types-Object, selector, data )
				if ( typeof selector !== "string" ) {

					// ( types-Object, data )
					data = data || selector;
					selector = undefined;
				}
				for ( type in types ) {
					on( elem, type, selector, data, types[ type ], one );
				}
				return elem;
			}

			if ( data == null && fn == null ) {

				// ( types, fn )
				fn = selector;
				data = selector = undefined;
			} else if ( fn == null ) {
				if ( typeof selector === "string" ) {

					// ( types, selector, fn )
					fn = data;
					data = undefined;
				} else {

					// ( types, data, fn )
					fn = data;
					data = selector;
					selector = undefined;
				}
			}
			if ( fn === false ) {
				fn = returnFalse;
			} else if ( !fn ) {
				return elem;
			}

			if ( one === 1 ) {
				origFn = fn;
				fn = function( event ) {

					// Can use an empty set, since event contains the info
					jQuery().off( event );
					return origFn.apply( this, arguments );
				};

				// Use same guid so caller can remove using origFn
				fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
			}
			return elem.each( function() {
				jQuery.event.add( this, types, fn, data, selector );
			} );
		}

		/*
		 * Helper functions for managing events -- not part of the public interface.
		 * Props to Dean Edwards' addEvent library for many of the ideas.
		 */
		jQuery.event = {

			global: {},

			add: function( elem, types, handler, data, selector ) {

				var handleObjIn, eventHandle, tmp,
					events, t, handleObj,
					special, handlers, type, namespaces, origType,
					elemData = dataPriv.get( elem );

				// Don't attach events to noData or text/comment nodes (but allow plain objects)
				if ( !elemData ) {
					return;
				}

				// Caller can pass in an object of custom data in lieu of the handler
				if ( handler.handler ) {
					handleObjIn = handler;
					handler = handleObjIn.handler;
					selector = handleObjIn.selector;
				}

				// Ensure that invalid selectors throw exceptions at attach time
				// Evaluate against documentElement in case elem is a non-element node (e.g., document)
				if ( selector ) {
					jQuery.find.matchesSelector( documentElement, selector );
				}

				// Make sure that the handler has a unique ID, used to find/remove it later
				if ( !handler.guid ) {
					handler.guid = jQuery.guid++;
				}

				// Init the element's event structure and main handler, if this is the first
				if ( !( events = elemData.events ) ) {
					events = elemData.events = {};
				}
				if ( !( eventHandle = elemData.handle ) ) {
					eventHandle = elemData.handle = function( e ) {

						// Discard the second event of a jQuery.event.trigger() and
						// when an event is called after a page has unloaded
						return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
							jQuery.event.dispatch.apply( elem, arguments ) : undefined;
					};
				}

				// Handle multiple events separated by a space
				types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
				t = types.length;
				while ( t-- ) {
					tmp = rtypenamespace.exec( types[ t ] ) || [];
					type = origType = tmp[ 1 ];
					namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

					// There *must* be a type, no attaching namespace-only handlers
					if ( !type ) {
						continue;
					}

					// If event changes its type, use the special event handlers for the changed type
					special = jQuery.event.special[ type ] || {};

					// If selector defined, determine special event api type, otherwise given type
					type = ( selector ? special.delegateType : special.bindType ) || type;

					// Update special based on newly reset type
					special = jQuery.event.special[ type ] || {};

					// handleObj is passed to all event handlers
					handleObj = jQuery.extend( {
						type: type,
						origType: origType,
						data: data,
						handler: handler,
						guid: handler.guid,
						selector: selector,
						needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
						namespace: namespaces.join( "." )
					}, handleObjIn );

					// Init the event handler queue if we're the first
					if ( !( handlers = events[ type ] ) ) {
						handlers = events[ type ] = [];
						handlers.delegateCount = 0;

						// Only use addEventListener if the special events handler returns false
						if ( !special.setup ||
							special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

							if ( elem.addEventListener ) {
								elem.addEventListener( type, eventHandle );
							}
						}
					}

					if ( special.add ) {
						special.add.call( elem, handleObj );

						if ( !handleObj.handler.guid ) {
							handleObj.handler.guid = handler.guid;
						}
					}

					// Add to the element's handler list, delegates in front
					if ( selector ) {
						handlers.splice( handlers.delegateCount++, 0, handleObj );
					} else {
						handlers.push( handleObj );
					}

					// Keep track of which events have ever been used, for event optimization
					jQuery.event.global[ type ] = true;
				}

			},

			// Detach an event or set of events from an element
			remove: function( elem, types, handler, selector, mappedTypes ) {

				var j, origCount, tmp,
					events, t, handleObj,
					special, handlers, type, namespaces, origType,
					elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

				if ( !elemData || !( events = elemData.events ) ) {
					return;
				}

				// Once for each type.namespace in types; type may be omitted
				types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
				t = types.length;
				while ( t-- ) {
					tmp = rtypenamespace.exec( types[ t ] ) || [];
					type = origType = tmp[ 1 ];
					namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

					// Unbind all events (on this namespace, if provided) for the element
					if ( !type ) {
						for ( type in events ) {
							jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
						}
						continue;
					}

					special = jQuery.event.special[ type ] || {};
					type = ( selector ? special.delegateType : special.bindType ) || type;
					handlers = events[ type ] || [];
					tmp = tmp[ 2 ] &&
						new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

					// Remove matching events
					origCount = j = handlers.length;
					while ( j-- ) {
						handleObj = handlers[ j ];

						if ( ( mappedTypes || origType === handleObj.origType ) &&
							( !handler || handler.guid === handleObj.guid ) &&
							( !tmp || tmp.test( handleObj.namespace ) ) &&
							( !selector || selector === handleObj.selector ||
								selector === "**" && handleObj.selector ) ) {
							handlers.splice( j, 1 );

							if ( handleObj.selector ) {
								handlers.delegateCount--;
							}
							if ( special.remove ) {
								special.remove.call( elem, handleObj );
							}
						}
					}

					// Remove generic event handler if we removed something and no more handlers exist
					// (avoids potential for endless recursion during removal of special event handlers)
					if ( origCount && !handlers.length ) {
						if ( !special.teardown ||
							special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

							jQuery.removeEvent( elem, type, elemData.handle );
						}

						delete events[ type ];
					}
				}

				// Remove data and the expando if it's no longer used
				if ( jQuery.isEmptyObject( events ) ) {
					dataPriv.remove( elem, "handle events" );
				}
			},

			dispatch: function( nativeEvent ) {

				// Make a writable jQuery.Event from the native event object
				var event = jQuery.event.fix( nativeEvent );

				var i, j, ret, matched, handleObj, handlerQueue,
					args = new Array( arguments.length ),
					handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
					special = jQuery.event.special[ event.type ] || {};

				// Use the fix-ed jQuery.Event rather than the (read-only) native event
				args[ 0 ] = event;

				for ( i = 1; i < arguments.length; i++ ) {
					args[ i ] = arguments[ i ];
				}

				event.delegateTarget = this;

				// Call the preDispatch hook for the mapped type, and let it bail if desired
				if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
					return;
				}

				// Determine handlers
				handlerQueue = jQuery.event.handlers.call( this, event, handlers );

				// Run delegates first; they may want to stop propagation beneath us
				i = 0;
				while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
					event.currentTarget = matched.elem;

					j = 0;
					while ( ( handleObj = matched.handlers[ j++ ] ) &&
						!event.isImmediatePropagationStopped() ) {

						// Triggered event must either 1) have no namespace, or 2) have namespace(s)
						// a subset or equal to those in the bound event (both can have no namespace).
						if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

							event.handleObj = handleObj;
							event.data = handleObj.data;

							ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
								handleObj.handler ).apply( matched.elem, args );

							if ( ret !== undefined ) {
								if ( ( event.result = ret ) === false ) {
									event.preventDefault();
									event.stopPropagation();
								}
							}
						}
					}
				}

				// Call the postDispatch hook for the mapped type
				if ( special.postDispatch ) {
					special.postDispatch.call( this, event );
				}

				return event.result;
			},

			handlers: function( event, handlers ) {
				var i, handleObj, sel, matchedHandlers, matchedSelectors,
					handlerQueue = [],
					delegateCount = handlers.delegateCount,
					cur = event.target;

				// Find delegate handlers
				if ( delegateCount &&

					// Support: IE <=9
					// Black-hole SVG <use> instance trees (trac-13180)
					cur.nodeType &&

					// Support: Firefox <=42
					// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
					// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
					// Support: IE 11 only
					// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
					!( event.type === "click" && event.button >= 1 ) ) {

					for ( ; cur !== this; cur = cur.parentNode || this ) {

						// Don't check non-elements (#13208)
						// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
						if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
							matchedHandlers = [];
							matchedSelectors = {};
							for ( i = 0; i < delegateCount; i++ ) {
								handleObj = handlers[ i ];

								// Don't conflict with Object.prototype properties (#13203)
								sel = handleObj.selector + " ";

								if ( matchedSelectors[ sel ] === undefined ) {
									matchedSelectors[ sel ] = handleObj.needsContext ?
										jQuery( sel, this ).index( cur ) > -1 :
										jQuery.find( sel, this, null, [ cur ] ).length;
								}
								if ( matchedSelectors[ sel ] ) {
									matchedHandlers.push( handleObj );
								}
							}
							if ( matchedHandlers.length ) {
								handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
							}
						}
					}
				}

				// Add the remaining (directly-bound) handlers
				cur = this;
				if ( delegateCount < handlers.length ) {
					handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
				}

				return handlerQueue;
			},

			addProp: function( name, hook ) {
				Object.defineProperty( jQuery.Event.prototype, name, {
					enumerable: true,
					configurable: true,

					get: isFunction( hook ) ?
						function() {
							if ( this.originalEvent ) {
									return hook( this.originalEvent );
							}
						} :
						function() {
							if ( this.originalEvent ) {
									return this.originalEvent[ name ];
							}
						},

					set: function( value ) {
						Object.defineProperty( this, name, {
							enumerable: true,
							configurable: true,
							writable: true,
							value: value
						} );
					}
				} );
			},

			fix: function( originalEvent ) {
				return originalEvent[ jQuery.expando ] ?
					originalEvent :
					new jQuery.Event( originalEvent );
			},

			special: {
				load: {

					// Prevent triggered image.load events from bubbling to window.load
					noBubble: true
				},
				focus: {

					// Fire native event if possible so blur/focus sequence is correct
					trigger: function() {
						if ( this !== safeActiveElement() && this.focus ) {
							this.focus();
							return false;
						}
					},
					delegateType: "focusin"
				},
				blur: {
					trigger: function() {
						if ( this === safeActiveElement() && this.blur ) {
							this.blur();
							return false;
						}
					},
					delegateType: "focusout"
				},
				click: {

					// For checkbox, fire native event so checked state will be right
					trigger: function() {
						if ( this.type === "checkbox" && this.click && nodeName( this, "input" ) ) {
							this.click();
							return false;
						}
					},

					// For cross-browser consistency, don't fire native .click() on links
					_default: function( event ) {
						return nodeName( event.target, "a" );
					}
				},

				beforeunload: {
					postDispatch: function( event ) {

						// Support: Firefox 20+
						// Firefox doesn't alert if the returnValue field is not set.
						if ( event.result !== undefined && event.originalEvent ) {
							event.originalEvent.returnValue = event.result;
						}
					}
				}
			}
		};

		jQuery.removeEvent = function( elem, type, handle ) {

			// This "if" is needed for plain objects
			if ( elem.removeEventListener ) {
				elem.removeEventListener( type, handle );
			}
		};

		jQuery.Event = function( src, props ) {

			// Allow instantiation without the 'new' keyword
			if ( !( this instanceof jQuery.Event ) ) {
				return new jQuery.Event( src, props );
			}

			// Event object
			if ( src && src.type ) {
				this.originalEvent = src;
				this.type = src.type;

				// Events bubbling up the document may have been marked as prevented
				// by a handler lower down the tree; reflect the correct value.
				this.isDefaultPrevented = src.defaultPrevented ||
						src.defaultPrevented === undefined &&

						// Support: Android <=2.3 only
						src.returnValue === false ?
					returnTrue :
					returnFalse;

				// Create target properties
				// Support: Safari <=6 - 7 only
				// Target should not be a text node (#504, #13143)
				this.target = ( src.target && src.target.nodeType === 3 ) ?
					src.target.parentNode :
					src.target;

				this.currentTarget = src.currentTarget;
				this.relatedTarget = src.relatedTarget;

			// Event type
			} else {
				this.type = src;
			}

			// Put explicitly provided properties onto the event object
			if ( props ) {
				jQuery.extend( this, props );
			}

			// Create a timestamp if incoming event doesn't have one
			this.timeStamp = src && src.timeStamp || Date.now();

			// Mark it as fixed
			this[ jQuery.expando ] = true;
		};

		// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
		// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
		jQuery.Event.prototype = {
			constructor: jQuery.Event,
			isDefaultPrevented: returnFalse,
			isPropagationStopped: returnFalse,
			isImmediatePropagationStopped: returnFalse,
			isSimulated: false,

			preventDefault: function() {
				var e = this.originalEvent;

				this.isDefaultPrevented = returnTrue;

				if ( e && !this.isSimulated ) {
					e.preventDefault();
				}
			},
			stopPropagation: function() {
				var e = this.originalEvent;

				this.isPropagationStopped = returnTrue;

				if ( e && !this.isSimulated ) {
					e.stopPropagation();
				}
			},
			stopImmediatePropagation: function() {
				var e = this.originalEvent;

				this.isImmediatePropagationStopped = returnTrue;

				if ( e && !this.isSimulated ) {
					e.stopImmediatePropagation();
				}

				this.stopPropagation();
			}
		};

		// Includes all common event props including KeyEvent and MouseEvent specific props
		jQuery.each( {
			altKey: true,
			bubbles: true,
			cancelable: true,
			changedTouches: true,
			ctrlKey: true,
			detail: true,
			eventPhase: true,
			metaKey: true,
			pageX: true,
			pageY: true,
			shiftKey: true,
			view: true,
			"char": true,
			charCode: true,
			key: true,
			keyCode: true,
			button: true,
			buttons: true,
			clientX: true,
			clientY: true,
			offsetX: true,
			offsetY: true,
			pointerId: true,
			pointerType: true,
			screenX: true,
			screenY: true,
			targetTouches: true,
			toElement: true,
			touches: true,

			which: function( event ) {
				var button = event.button;

				// Add which for key events
				if ( event.which == null && rkeyEvent.test( event.type ) ) {
					return event.charCode != null ? event.charCode : event.keyCode;
				}

				// Add which for click: 1 === left; 2 === middle; 3 === right
				if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
					if ( button & 1 ) {
						return 1;
					}

					if ( button & 2 ) {
						return 3;
					}

					if ( button & 4 ) {
						return 2;
					}

					return 0;
				}

				return event.which;
			}
		}, jQuery.event.addProp );

		// Create mouseenter/leave events using mouseover/out and event-time checks
		// so that event delegation works in jQuery.
		// Do the same for pointerenter/pointerleave and pointerover/pointerout
		//
		// Support: Safari 7 only
		// Safari sends mouseenter too often; see:
		// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
		// for the description of the bug (it existed in older Chrome versions as well).
		jQuery.each( {
			mouseenter: "mouseover",
			mouseleave: "mouseout",
			pointerenter: "pointerover",
			pointerleave: "pointerout"
		}, function( orig, fix ) {
			jQuery.event.special[ orig ] = {
				delegateType: fix,
				bindType: fix,

				handle: function( event ) {
					var ret,
						target = this,
						related = event.relatedTarget,
						handleObj = event.handleObj;

					// For mouseenter/leave call the handler if related is outside the target.
					// NB: No relatedTarget if the mouse left/entered the browser window
					if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
						event.type = handleObj.origType;
						ret = handleObj.handler.apply( this, arguments );
						event.type = fix;
					}
					return ret;
				}
			};
		} );

		jQuery.fn.extend( {

			on: function( types, selector, data, fn ) {
				return on( this, types, selector, data, fn );
			},
			one: function( types, selector, data, fn ) {
				return on( this, types, selector, data, fn, 1 );
			},
			off: function( types, selector, fn ) {
				var handleObj, type;
				if ( types && types.preventDefault && types.handleObj ) {

					// ( event )  dispatched jQuery.Event
					handleObj = types.handleObj;
					jQuery( types.delegateTarget ).off(
						handleObj.namespace ?
							handleObj.origType + "." + handleObj.namespace :
							handleObj.origType,
						handleObj.selector,
						handleObj.handler
					);
					return this;
				}
				if ( typeof types === "object" ) {

					// ( types-object [, selector] )
					for ( type in types ) {
						this.off( type, selector, types[ type ] );
					}
					return this;
				}
				if ( selector === false || typeof selector === "function" ) {

					// ( types [, fn] )
					fn = selector;
					selector = undefined;
				}
				if ( fn === false ) {
					fn = returnFalse;
				}
				return this.each( function() {
					jQuery.event.remove( this, types, fn, selector );
				} );
			}
		} );


		var

			/* eslint-disable max-len */

			// See https://github.com/eslint/eslint/issues/3229
			rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

			/* eslint-enable */

			// Support: IE <=10 - 11, Edge 12 - 13 only
			// In IE/Edge using regex groups here causes severe slowdowns.
			// See https://connect.microsoft.com/IE/feedback/details/1736512/
			rnoInnerhtml = /<script|<style|<link/i,

			// checked="checked" or checked
			rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
			rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

		// Prefer a tbody over its parent table for containing new rows
		function manipulationTarget( elem, content ) {
			if ( nodeName( elem, "table" ) &&
				nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

				return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
			}

			return elem;
		}

		// Replace/restore the type attribute of script elements for safe DOM manipulation
		function disableScript( elem ) {
			elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
			return elem;
		}
		function restoreScript( elem ) {
			if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
				elem.type = elem.type.slice( 5 );
			} else {
				elem.removeAttribute( "type" );
			}

			return elem;
		}

		function cloneCopyEvent( src, dest ) {
			var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

			if ( dest.nodeType !== 1 ) {
				return;
			}

			// 1. Copy private data: events, handlers, etc.
			if ( dataPriv.hasData( src ) ) {
				pdataOld = dataPriv.access( src );
				pdataCur = dataPriv.set( dest, pdataOld );
				events = pdataOld.events;

				if ( events ) {
					delete pdataCur.handle;
					pdataCur.events = {};

					for ( type in events ) {
						for ( i = 0, l = events[ type ].length; i < l; i++ ) {
							jQuery.event.add( dest, type, events[ type ][ i ] );
						}
					}
				}
			}

			// 2. Copy user data
			if ( dataUser.hasData( src ) ) {
				udataOld = dataUser.access( src );
				udataCur = jQuery.extend( {}, udataOld );

				dataUser.set( dest, udataCur );
			}
		}

		// Fix IE bugs, see support tests
		function fixInput( src, dest ) {
			var nodeName = dest.nodeName.toLowerCase();

			// Fails to persist the checked state of a cloned checkbox or radio button.
			if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
				dest.checked = src.checked;

			// Fails to return the selected option to the default selected state when cloning options
			} else if ( nodeName === "input" || nodeName === "textarea" ) {
				dest.defaultValue = src.defaultValue;
			}
		}

		function domManip( collection, args, callback, ignored ) {

			// Flatten any nested arrays
			args = concat.apply( [], args );

			var fragment, first, scripts, hasScripts, node, doc,
				i = 0,
				l = collection.length,
				iNoClone = l - 1,
				value = args[ 0 ],
				valueIsFunction = isFunction( value );

			// We can't cloneNode fragments that contain checked, in WebKit
			if ( valueIsFunction ||
					( l > 1 && typeof value === "string" &&
						!support.checkClone && rchecked.test( value ) ) ) {
				return collection.each( function( index ) {
					var self = collection.eq( index );
					if ( valueIsFunction ) {
						args[ 0 ] = value.call( this, index, self.html() );
					}
					domManip( self, args, callback, ignored );
				} );
			}

			if ( l ) {
				fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
				first = fragment.firstChild;

				if ( fragment.childNodes.length === 1 ) {
					fragment = first;
				}

				// Require either new content or an interest in ignored elements to invoke the callback
				if ( first || ignored ) {
					scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
					hasScripts = scripts.length;

					// Use the original fragment for the last item
					// instead of the first because it can end up
					// being emptied incorrectly in certain situations (#8070).
					for ( ; i < l; i++ ) {
						node = fragment;

						if ( i !== iNoClone ) {
							node = jQuery.clone( node, true, true );

							// Keep references to cloned scripts for later restoration
							if ( hasScripts ) {

								// Support: Android <=4.0 only, PhantomJS 1 only
								// push.apply(_, arraylike) throws on ancient WebKit
								jQuery.merge( scripts, getAll( node, "script" ) );
							}
						}

						callback.call( collection[ i ], node, i );
					}

					if ( hasScripts ) {
						doc = scripts[ scripts.length - 1 ].ownerDocument;

						// Reenable scripts
						jQuery.map( scripts, restoreScript );

						// Evaluate executable scripts on first document insertion
						for ( i = 0; i < hasScripts; i++ ) {
							node = scripts[ i ];
							if ( rscriptType.test( node.type || "" ) &&
								!dataPriv.access( node, "globalEval" ) &&
								jQuery.contains( doc, node ) ) {

								if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

									// Optional AJAX dependency, but won't run scripts if not present
									if ( jQuery._evalUrl ) {
										jQuery._evalUrl( node.src );
									}
								} else {
									DOMEval( node.textContent.replace( rcleanScript, "" ), doc, node );
								}
							}
						}
					}
				}
			}

			return collection;
		}

		function remove( elem, selector, keepData ) {
			var node,
				nodes = selector ? jQuery.filter( selector, elem ) : elem,
				i = 0;

			for ( ; ( node = nodes[ i ] ) != null; i++ ) {
				if ( !keepData && node.nodeType === 1 ) {
					jQuery.cleanData( getAll( node ) );
				}

				if ( node.parentNode ) {
					if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
						setGlobalEval( getAll( node, "script" ) );
					}
					node.parentNode.removeChild( node );
				}
			}

			return elem;
		}

		jQuery.extend( {
			htmlPrefilter: function( html ) {
				return html.replace( rxhtmlTag, "<$1></$2>" );
			},

			clone: function( elem, dataAndEvents, deepDataAndEvents ) {
				var i, l, srcElements, destElements,
					clone = elem.cloneNode( true ),
					inPage = jQuery.contains( elem.ownerDocument, elem );

				// Fix IE cloning issues
				if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
						!jQuery.isXMLDoc( elem ) ) {

					// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
					destElements = getAll( clone );
					srcElements = getAll( elem );

					for ( i = 0, l = srcElements.length; i < l; i++ ) {
						fixInput( srcElements[ i ], destElements[ i ] );
					}
				}

				// Copy the events from the original to the clone
				if ( dataAndEvents ) {
					if ( deepDataAndEvents ) {
						srcElements = srcElements || getAll( elem );
						destElements = destElements || getAll( clone );

						for ( i = 0, l = srcElements.length; i < l; i++ ) {
							cloneCopyEvent( srcElements[ i ], destElements[ i ] );
						}
					} else {
						cloneCopyEvent( elem, clone );
					}
				}

				// Preserve script evaluation history
				destElements = getAll( clone, "script" );
				if ( destElements.length > 0 ) {
					setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
				}

				// Return the cloned set
				return clone;
			},

			cleanData: function( elems ) {
				var data, elem, type,
					special = jQuery.event.special,
					i = 0;

				for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
					if ( acceptData( elem ) ) {
						if ( ( data = elem[ dataPriv.expando ] ) ) {
							if ( data.events ) {
								for ( type in data.events ) {
									if ( special[ type ] ) {
										jQuery.event.remove( elem, type );

									// This is a shortcut to avoid jQuery.event.remove's overhead
									} else {
										jQuery.removeEvent( elem, type, data.handle );
									}
								}
							}

							// Support: Chrome <=35 - 45+
							// Assign undefined instead of using delete, see Data#remove
							elem[ dataPriv.expando ] = undefined;
						}
						if ( elem[ dataUser.expando ] ) {

							// Support: Chrome <=35 - 45+
							// Assign undefined instead of using delete, see Data#remove
							elem[ dataUser.expando ] = undefined;
						}
					}
				}
			}
		} );

		jQuery.fn.extend( {
			detach: function( selector ) {
				return remove( this, selector, true );
			},

			remove: function( selector ) {
				return remove( this, selector );
			},

			text: function( value ) {
				return access( this, function( value ) {
					return value === undefined ?
						jQuery.text( this ) :
						this.empty().each( function() {
							if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
								this.textContent = value;
							}
						} );
				}, null, value, arguments.length );
			},

			append: function() {
				return domManip( this, arguments, function( elem ) {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						var target = manipulationTarget( this, elem );
						target.appendChild( elem );
					}
				} );
			},

			prepend: function() {
				return domManip( this, arguments, function( elem ) {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						var target = manipulationTarget( this, elem );
						target.insertBefore( elem, target.firstChild );
					}
				} );
			},

			before: function() {
				return domManip( this, arguments, function( elem ) {
					if ( this.parentNode ) {
						this.parentNode.insertBefore( elem, this );
					}
				} );
			},

			after: function() {
				return domManip( this, arguments, function( elem ) {
					if ( this.parentNode ) {
						this.parentNode.insertBefore( elem, this.nextSibling );
					}
				} );
			},

			empty: function() {
				var elem,
					i = 0;

				for ( ; ( elem = this[ i ] ) != null; i++ ) {
					if ( elem.nodeType === 1 ) {

						// Prevent memory leaks
						jQuery.cleanData( getAll( elem, false ) );

						// Remove any remaining nodes
						elem.textContent = "";
					}
				}

				return this;
			},

			clone: function( dataAndEvents, deepDataAndEvents ) {
				dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
				deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

				return this.map( function() {
					return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
				} );
			},

			html: function( value ) {
				return access( this, function( value ) {
					var elem = this[ 0 ] || {},
						i = 0,
						l = this.length;

					if ( value === undefined && elem.nodeType === 1 ) {
						return elem.innerHTML;
					}

					// See if we can take a shortcut and just use innerHTML
					if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
						!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

						value = jQuery.htmlPrefilter( value );

						try {
							for ( ; i < l; i++ ) {
								elem = this[ i ] || {};

								// Remove element nodes and prevent memory leaks
								if ( elem.nodeType === 1 ) {
									jQuery.cleanData( getAll( elem, false ) );
									elem.innerHTML = value;
								}
							}

							elem = 0;

						// If using innerHTML throws an exception, use the fallback method
						} catch ( e ) {}
					}

					if ( elem ) {
						this.empty().append( value );
					}
				}, null, value, arguments.length );
			},

			replaceWith: function() {
				var ignored = [];

				// Make the changes, replacing each non-ignored context element with the new content
				return domManip( this, arguments, function( elem ) {
					var parent = this.parentNode;

					if ( jQuery.inArray( this, ignored ) < 0 ) {
						jQuery.cleanData( getAll( this ) );
						if ( parent ) {
							parent.replaceChild( elem, this );
						}
					}

				// Force callback invocation
				}, ignored );
			}
		} );

		jQuery.each( {
			appendTo: "append",
			prependTo: "prepend",
			insertBefore: "before",
			insertAfter: "after",
			replaceAll: "replaceWith"
		}, function( name, original ) {
			jQuery.fn[ name ] = function( selector ) {
				var elems,
					ret = [],
					insert = jQuery( selector ),
					last = insert.length - 1,
					i = 0;

				for ( ; i <= last; i++ ) {
					elems = i === last ? this : this.clone( true );
					jQuery( insert[ i ] )[ original ]( elems );

					// Support: Android <=4.0 only, PhantomJS 1 only
					// .get() because push.apply(_, arraylike) throws on ancient WebKit
					push.apply( ret, elems.get() );
				}

				return this.pushStack( ret );
			};
		} );
		var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

		var getStyles = function( elem ) {

				// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
				// IE throws on elements created in popups
				// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
				var view = elem.ownerDocument.defaultView;

				if ( !view || !view.opener ) {
					view = window;
				}

				return view.getComputedStyle( elem );
			};

		var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



		( function() {

			// Executing both pixelPosition & boxSizingReliable tests require only one layout
			// so they're executed at the same time to save the second computation.
			function computeStyleTests() {

				// This is a singleton, we need to execute it only once
				if ( !div ) {
					return;
				}

				container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
					"margin-top:1px;padding:0;border:0";
				div.style.cssText =
					"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
					"margin:auto;border:1px;padding:1px;" +
					"width:60%;top:1%";
				documentElement.appendChild( container ).appendChild( div );

				var divStyle = window.getComputedStyle( div );
				pixelPositionVal = divStyle.top !== "1%";

				// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
				reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

				// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
				// Some styles come back with percentage values, even though they shouldn't
				div.style.right = "60%";
				pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

				// Support: IE 9 - 11 only
				// Detect misreporting of content dimensions for box-sizing:border-box elements
				boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

				// Support: IE 9 only
				// Detect overflow:scroll screwiness (gh-3699)
				div.style.position = "absolute";
				scrollboxSizeVal = div.offsetWidth === 36 || "absolute";

				documentElement.removeChild( container );

				// Nullify the div so it wouldn't be stored in the memory and
				// it will also be a sign that checks already performed
				div = null;
			}

			function roundPixelMeasures( measure ) {
				return Math.round( parseFloat( measure ) );
			}

			var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
				reliableMarginLeftVal,
				container = document.createElement( "div" ),
				div = document.createElement( "div" );

			// Finish early in limited (non-browser) environments
			if ( !div.style ) {
				return;
			}

			// Support: IE <=9 - 11 only
			// Style of cloned element affects source element cloned (#8908)
			div.style.backgroundClip = "content-box";
			div.cloneNode( true ).style.backgroundClip = "";
			support.clearCloneStyle = div.style.backgroundClip === "content-box";

			jQuery.extend( support, {
				boxSizingReliable: function() {
					computeStyleTests();
					return boxSizingReliableVal;
				},
				pixelBoxStyles: function() {
					computeStyleTests();
					return pixelBoxStylesVal;
				},
				pixelPosition: function() {
					computeStyleTests();
					return pixelPositionVal;
				},
				reliableMarginLeft: function() {
					computeStyleTests();
					return reliableMarginLeftVal;
				},
				scrollboxSize: function() {
					computeStyleTests();
					return scrollboxSizeVal;
				}
			} );
		} )();


		function curCSS( elem, name, computed ) {
			var width, minWidth, maxWidth, ret,

				// Support: Firefox 51+
				// Retrieving style before computed somehow
				// fixes an issue with getting wrong values
				// on detached elements
				style = elem.style;

			computed = computed || getStyles( elem );

			// getPropertyValue is needed for:
			//   .css('filter') (IE 9 only, #12537)
			//   .css('--customProperty) (#3144)
			if ( computed ) {
				ret = computed.getPropertyValue( name ) || computed[ name ];

				if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
					ret = jQuery.style( elem, name );
				}

				// A tribute to the "awesome hack by Dean Edwards"
				// Android Browser returns percentage for some values,
				// but width seems to be reliably pixels.
				// This is against the CSSOM draft spec:
				// https://drafts.csswg.org/cssom/#resolved-values
				if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

					// Remember the original values
					width = style.width;
					minWidth = style.minWidth;
					maxWidth = style.maxWidth;

					// Put in the new values to get a computed value out
					style.minWidth = style.maxWidth = style.width = ret;
					ret = computed.width;

					// Revert the changed values
					style.width = width;
					style.minWidth = minWidth;
					style.maxWidth = maxWidth;
				}
			}

			return ret !== undefined ?

				// Support: IE <=9 - 11 only
				// IE returns zIndex value as an integer.
				ret + "" :
				ret;
		}


		function addGetHookIf( conditionFn, hookFn ) {

			// Define the hook, we'll check on the first run if it's really needed.
			return {
				get: function() {
					if ( conditionFn() ) {

						// Hook not needed (or it's not possible to use it due
						// to missing dependency), remove it.
						delete this.get;
						return;
					}

					// Hook needed; redefine it so that the support test is not executed again.
					return ( this.get = hookFn ).apply( this, arguments );
				}
			};
		}


		var

			// Swappable if display is none or starts with table
			// except "table", "table-cell", or "table-caption"
			// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
			rdisplayswap = /^(none|table(?!-c[ea]).+)/,
			rcustomProp = /^--/,
			cssShow = { position: "absolute", visibility: "hidden", display: "block" },
			cssNormalTransform = {
				letterSpacing: "0",
				fontWeight: "400"
			},

			cssPrefixes = [ "Webkit", "Moz", "ms" ],
			emptyStyle = document.createElement( "div" ).style;

		// Return a css property mapped to a potentially vendor prefixed property
		function vendorPropName( name ) {

			// Shortcut for names that are not vendor prefixed
			if ( name in emptyStyle ) {
				return name;
			}

			// Check for vendor prefixed names
			var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
				i = cssPrefixes.length;

			while ( i-- ) {
				name = cssPrefixes[ i ] + capName;
				if ( name in emptyStyle ) {
					return name;
				}
			}
		}

		// Return a property mapped along what jQuery.cssProps suggests or to
		// a vendor prefixed property.
		function finalPropName( name ) {
			var ret = jQuery.cssProps[ name ];
			if ( !ret ) {
				ret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;
			}
			return ret;
		}

		function setPositiveNumber( elem, value, subtract ) {

			// Any relative (+/-) values have already been
			// normalized at this point
			var matches = rcssNum.exec( value );
			return matches ?

				// Guard against undefined "subtract", e.g., when used as in cssHooks
				Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
				value;
		}

		function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
			var i = dimension === "width" ? 1 : 0,
				extra = 0,
				delta = 0;

			// Adjustment may not be necessary
			if ( box === ( isBorderBox ? "border" : "content" ) ) {
				return 0;
			}

			for ( ; i < 4; i += 2 ) {

				// Both box models exclude margin
				if ( box === "margin" ) {
					delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
				}

				// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
				if ( !isBorderBox ) {

					// Add padding
					delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

					// For "border" or "margin", add border
					if ( box !== "padding" ) {
						delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

					// But still keep track of it otherwise
					} else {
						extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
					}

				// If we get here with a border-box (content + padding + border), we're seeking "content" or
				// "padding" or "margin"
				} else {

					// For "content", subtract padding
					if ( box === "content" ) {
						delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
					}

					// For "content" or "padding", subtract border
					if ( box !== "margin" ) {
						delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
					}
				}
			}

			// Account for positive content-box scroll gutter when requested by providing computedVal
			if ( !isBorderBox && computedVal >= 0 ) {

				// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
				// Assuming integer scroll gutter, subtract the rest and round down
				delta += Math.max( 0, Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					computedVal -
					delta -
					extra -
					0.5
				) );
			}

			return delta;
		}

		function getWidthOrHeight( elem, dimension, extra ) {

			// Start with computed style
			var styles = getStyles( elem ),
				val = curCSS( elem, dimension, styles ),
				isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				valueIsBorderBox = isBorderBox;

			// Support: Firefox <=54
			// Return a confounding non-pixel value or feign ignorance, as appropriate.
			if ( rnumnonpx.test( val ) ) {
				if ( !extra ) {
					return val;
				}
				val = "auto";
			}

			// Check for style in case a browser which returns unreliable values
			// for getComputedStyle silently falls back to the reliable elem.style
			valueIsBorderBox = valueIsBorderBox &&
				( support.boxSizingReliable() || val === elem.style[ dimension ] );

			// Fall back to offsetWidth/offsetHeight when value is "auto"
			// This happens for inline elements with no explicit setting (gh-3571)
			// Support: Android <=4.1 - 4.3 only
			// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
			if ( val === "auto" ||
				!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) {

				val = elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];

				// offsetWidth/offsetHeight provide border-box values
				valueIsBorderBox = true;
			}

			// Normalize "" and auto
			val = parseFloat( val ) || 0;

			// Adjust for the element's box model
			return ( val +
				boxModelAdjustment(
					elem,
					dimension,
					extra || ( isBorderBox ? "border" : "content" ),
					valueIsBorderBox,
					styles,

					// Provide the current computed size to request scroll gutter calculation (gh-3589)
					val
				)
			) + "px";
		}

		jQuery.extend( {

			// Add in style property hooks for overriding the default
			// behavior of getting and setting a style property
			cssHooks: {
				opacity: {
					get: function( elem, computed ) {
						if ( computed ) {

							// We should always get a number back from opacity
							var ret = curCSS( elem, "opacity" );
							return ret === "" ? "1" : ret;
						}
					}
				}
			},

			// Don't automatically add "px" to these possibly-unitless properties
			cssNumber: {
				"animationIterationCount": true,
				"columnCount": true,
				"fillOpacity": true,
				"flexGrow": true,
				"flexShrink": true,
				"fontWeight": true,
				"lineHeight": true,
				"opacity": true,
				"order": true,
				"orphans": true,
				"widows": true,
				"zIndex": true,
				"zoom": true
			},

			// Add in properties whose names you wish to fix before
			// setting or getting the value
			cssProps: {},

			// Get and set the style property on a DOM Node
			style: function( elem, name, value, extra ) {

				// Don't set styles on text and comment nodes
				if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
					return;
				}

				// Make sure that we're working with the right name
				var ret, type, hooks,
					origName = camelCase( name ),
					isCustomProp = rcustomProp.test( name ),
					style = elem.style;

				// Make sure that we're working with the right name. We don't
				// want to query the value if it is a CSS custom property
				// since they are user-defined.
				if ( !isCustomProp ) {
					name = finalPropName( origName );
				}

				// Gets hook for the prefixed version, then unprefixed version
				hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

				// Check if we're setting a value
				if ( value !== undefined ) {
					type = typeof value;

					// Convert "+=" or "-=" to relative numbers (#7345)
					if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
						value = adjustCSS( elem, name, ret );

						// Fixes bug #9237
						type = "number";
					}

					// Make sure that null and NaN values aren't set (#7116)
					if ( value == null || value !== value ) {
						return;
					}

					// If a number was passed in, add the unit (except for certain CSS properties)
					if ( type === "number" ) {
						value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
					}

					// background-* props affect original clone's values
					if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
						style[ name ] = "inherit";
					}

					// If a hook was provided, use that value, otherwise just set the specified value
					if ( !hooks || !( "set" in hooks ) ||
						( value = hooks.set( elem, value, extra ) ) !== undefined ) {

						if ( isCustomProp ) {
							style.setProperty( name, value );
						} else {
							style[ name ] = value;
						}
					}

				} else {

					// If a hook was provided get the non-computed value from there
					if ( hooks && "get" in hooks &&
						( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

						return ret;
					}

					// Otherwise just get the value from the style object
					return style[ name ];
				}
			},

			css: function( elem, name, extra, styles ) {
				var val, num, hooks,
					origName = camelCase( name ),
					isCustomProp = rcustomProp.test( name );

				// Make sure that we're working with the right name. We don't
				// want to modify the value if it is a CSS custom property
				// since they are user-defined.
				if ( !isCustomProp ) {
					name = finalPropName( origName );
				}

				// Try prefixed name followed by the unprefixed name
				hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

				// If a hook was provided get the computed value from there
				if ( hooks && "get" in hooks ) {
					val = hooks.get( elem, true, extra );
				}

				// Otherwise, if a way to get the computed value exists, use that
				if ( val === undefined ) {
					val = curCSS( elem, name, styles );
				}

				// Convert "normal" to computed value
				if ( val === "normal" && name in cssNormalTransform ) {
					val = cssNormalTransform[ name ];
				}

				// Make numeric if forced or a qualifier was provided and val looks numeric
				if ( extra === "" || extra ) {
					num = parseFloat( val );
					return extra === true || isFinite( num ) ? num || 0 : val;
				}

				return val;
			}
		} );

		jQuery.each( [ "height", "width" ], function( i, dimension ) {
			jQuery.cssHooks[ dimension ] = {
				get: function( elem, computed, extra ) {
					if ( computed ) {

						// Certain elements can have dimension info if we invisibly show them
						// but it must have a current display style that would benefit
						return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

							// Support: Safari 8+
							// Table columns in Safari have non-zero offsetWidth & zero
							// getBoundingClientRect().width unless display is changed.
							// Support: IE <=11 only
							// Running getBoundingClientRect on a disconnected node
							// in IE throws an error.
							( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
								swap( elem, cssShow, function() {
									return getWidthOrHeight( elem, dimension, extra );
								} ) :
								getWidthOrHeight( elem, dimension, extra );
					}
				},

				set: function( elem, value, extra ) {
					var matches,
						styles = getStyles( elem ),
						isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
						subtract = extra && boxModelAdjustment(
							elem,
							dimension,
							extra,
							isBorderBox,
							styles
						);

					// Account for unreliable border-box dimensions by comparing offset* to computed and
					// faking a content-box to get border and padding (gh-3699)
					if ( isBorderBox && support.scrollboxSize() === styles.position ) {
						subtract -= Math.ceil(
							elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
							parseFloat( styles[ dimension ] ) -
							boxModelAdjustment( elem, dimension, "border", false, styles ) -
							0.5
						);
					}

					// Convert to pixels if value adjustment is needed
					if ( subtract && ( matches = rcssNum.exec( value ) ) &&
						( matches[ 3 ] || "px" ) !== "px" ) {

						elem.style[ dimension ] = value;
						value = jQuery.css( elem, dimension );
					}

					return setPositiveNumber( elem, value, subtract );
				}
			};
		} );

		jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
			function( elem, computed ) {
				if ( computed ) {
					return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
						elem.getBoundingClientRect().left -
							swap( elem, { marginLeft: 0 }, function() {
								return elem.getBoundingClientRect().left;
							} )
						) + "px";
				}
			}
		);

		// These hooks are used by animate to expand properties
		jQuery.each( {
			margin: "",
			padding: "",
			border: "Width"
		}, function( prefix, suffix ) {
			jQuery.cssHooks[ prefix + suffix ] = {
				expand: function( value ) {
					var i = 0,
						expanded = {},

						// Assumes a single number if not a string
						parts = typeof value === "string" ? value.split( " " ) : [ value ];

					for ( ; i < 4; i++ ) {
						expanded[ prefix + cssExpand[ i ] + suffix ] =
							parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
					}

					return expanded;
				}
			};

			if ( prefix !== "margin" ) {
				jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
			}
		} );

		jQuery.fn.extend( {
			css: function( name, value ) {
				return access( this, function( elem, name, value ) {
					var styles, len,
						map = {},
						i = 0;

					if ( Array.isArray( name ) ) {
						styles = getStyles( elem );
						len = name.length;

						for ( ; i < len; i++ ) {
							map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
						}

						return map;
					}

					return value !== undefined ?
						jQuery.style( elem, name, value ) :
						jQuery.css( elem, name );
				}, name, value, arguments.length > 1 );
			}
		} );


		function Tween( elem, options, prop, end, easing ) {
			return new Tween.prototype.init( elem, options, prop, end, easing );
		}
		jQuery.Tween = Tween;

		Tween.prototype = {
			constructor: Tween,
			init: function( elem, options, prop, end, easing, unit ) {
				this.elem = elem;
				this.prop = prop;
				this.easing = easing || jQuery.easing._default;
				this.options = options;
				this.start = this.now = this.cur();
				this.end = end;
				this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
			},
			cur: function() {
				var hooks = Tween.propHooks[ this.prop ];

				return hooks && hooks.get ?
					hooks.get( this ) :
					Tween.propHooks._default.get( this );
			},
			run: function( percent ) {
				var eased,
					hooks = Tween.propHooks[ this.prop ];

				if ( this.options.duration ) {
					this.pos = eased = jQuery.easing[ this.easing ](
						percent, this.options.duration * percent, 0, 1, this.options.duration
					);
				} else {
					this.pos = eased = percent;
				}
				this.now = ( this.end - this.start ) * eased + this.start;

				if ( this.options.step ) {
					this.options.step.call( this.elem, this.now, this );
				}

				if ( hooks && hooks.set ) {
					hooks.set( this );
				} else {
					Tween.propHooks._default.set( this );
				}
				return this;
			}
		};

		Tween.prototype.init.prototype = Tween.prototype;

		Tween.propHooks = {
			_default: {
				get: function( tween ) {
					var result;

					// Use a property on the element directly when it is not a DOM element,
					// or when there is no matching style property that exists.
					if ( tween.elem.nodeType !== 1 ||
						tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
						return tween.elem[ tween.prop ];
					}

					// Passing an empty string as a 3rd parameter to .css will automatically
					// attempt a parseFloat and fallback to a string if the parse fails.
					// Simple values such as "10px" are parsed to Float;
					// complex values such as "rotate(1rad)" are returned as-is.
					result = jQuery.css( tween.elem, tween.prop, "" );

					// Empty strings, null, undefined and "auto" are converted to 0.
					return !result || result === "auto" ? 0 : result;
				},
				set: function( tween ) {

					// Use step hook for back compat.
					// Use cssHook if its there.
					// Use .style if available and use plain properties where available.
					if ( jQuery.fx.step[ tween.prop ] ) {
						jQuery.fx.step[ tween.prop ]( tween );
					} else if ( tween.elem.nodeType === 1 &&
						( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
							jQuery.cssHooks[ tween.prop ] ) ) {
						jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
					} else {
						tween.elem[ tween.prop ] = tween.now;
					}
				}
			}
		};

		// Support: IE <=9 only
		// Panic based approach to setting things on disconnected nodes
		Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
			set: function( tween ) {
				if ( tween.elem.nodeType && tween.elem.parentNode ) {
					tween.elem[ tween.prop ] = tween.now;
				}
			}
		};

		jQuery.easing = {
			linear: function( p ) {
				return p;
			},
			swing: function( p ) {
				return 0.5 - Math.cos( p * Math.PI ) / 2;
			},
			_default: "swing"
		};

		jQuery.fx = Tween.prototype.init;

		// Back compat <1.8 extension point
		jQuery.fx.step = {};




		var
			fxNow, inProgress,
			rfxtypes = /^(?:toggle|show|hide)$/,
			rrun = /queueHooks$/;

		function schedule() {
			if ( inProgress ) {
				if ( document.hidden === false && window.requestAnimationFrame ) {
					window.requestAnimationFrame( schedule );
				} else {
					window.setTimeout( schedule, jQuery.fx.interval );
				}

				jQuery.fx.tick();
			}
		}

		// Animations created synchronously will run synchronously
		function createFxNow() {
			window.setTimeout( function() {
				fxNow = undefined;
			} );
			return ( fxNow = Date.now() );
		}

		// Generate parameters to create a standard animation
		function genFx( type, includeWidth ) {
			var which,
				i = 0,
				attrs = { height: type };

			// If we include width, step value is 1 to do all cssExpand values,
			// otherwise step value is 2 to skip over Left and Right
			includeWidth = includeWidth ? 1 : 0;
			for ( ; i < 4; i += 2 - includeWidth ) {
				which = cssExpand[ i ];
				attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
			}

			if ( includeWidth ) {
				attrs.opacity = attrs.width = type;
			}

			return attrs;
		}

		function createTween( value, prop, animation ) {
			var tween,
				collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
				index = 0,
				length = collection.length;
			for ( ; index < length; index++ ) {
				if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

					// We're done with this property
					return tween;
				}
			}
		}

		function defaultPrefilter( elem, props, opts ) {
			var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
				isBox = "width" in props || "height" in props,
				anim = this,
				orig = {},
				style = elem.style,
				hidden = elem.nodeType && isHiddenWithinTree( elem ),
				dataShow = dataPriv.get( elem, "fxshow" );

			// Queue-skipping animations hijack the fx hooks
			if ( !opts.queue ) {
				hooks = jQuery._queueHooks( elem, "fx" );
				if ( hooks.unqueued == null ) {
					hooks.unqueued = 0;
					oldfire = hooks.empty.fire;
					hooks.empty.fire = function() {
						if ( !hooks.unqueued ) {
							oldfire();
						}
					};
				}
				hooks.unqueued++;

				anim.always( function() {

					// Ensure the complete handler is called before this completes
					anim.always( function() {
						hooks.unqueued--;
						if ( !jQuery.queue( elem, "fx" ).length ) {
							hooks.empty.fire();
						}
					} );
				} );
			}

			// Detect show/hide animations
			for ( prop in props ) {
				value = props[ prop ];
				if ( rfxtypes.test( value ) ) {
					delete props[ prop ];
					toggle = toggle || value === "toggle";
					if ( value === ( hidden ? "hide" : "show" ) ) {

						// Pretend to be hidden if this is a "show" and
						// there is still data from a stopped show/hide
						if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
							hidden = true;

						// Ignore all other no-op show/hide data
						} else {
							continue;
						}
					}
					orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
				}
			}

			// Bail out if this is a no-op like .hide().hide()
			propTween = !jQuery.isEmptyObject( props );
			if ( !propTween && jQuery.isEmptyObject( orig ) ) {
				return;
			}

			// Restrict "overflow" and "display" styles during box animations
			if ( isBox && elem.nodeType === 1 ) {

				// Support: IE <=9 - 11, Edge 12 - 15
				// Record all 3 overflow attributes because IE does not infer the shorthand
				// from identically-valued overflowX and overflowY and Edge just mirrors
				// the overflowX value there.
				opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

				// Identify a display type, preferring old show/hide data over the CSS cascade
				restoreDisplay = dataShow && dataShow.display;
				if ( restoreDisplay == null ) {
					restoreDisplay = dataPriv.get( elem, "display" );
				}
				display = jQuery.css( elem, "display" );
				if ( display === "none" ) {
					if ( restoreDisplay ) {
						display = restoreDisplay;
					} else {

						// Get nonempty value(s) by temporarily forcing visibility
						showHide( [ elem ], true );
						restoreDisplay = elem.style.display || restoreDisplay;
						display = jQuery.css( elem, "display" );
						showHide( [ elem ] );
					}
				}

				// Animate inline elements as inline-block
				if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
					if ( jQuery.css( elem, "float" ) === "none" ) {

						// Restore the original display value at the end of pure show/hide animations
						if ( !propTween ) {
							anim.done( function() {
								style.display = restoreDisplay;
							} );
							if ( restoreDisplay == null ) {
								display = style.display;
								restoreDisplay = display === "none" ? "" : display;
							}
						}
						style.display = "inline-block";
					}
				}
			}

			if ( opts.overflow ) {
				style.overflow = "hidden";
				anim.always( function() {
					style.overflow = opts.overflow[ 0 ];
					style.overflowX = opts.overflow[ 1 ];
					style.overflowY = opts.overflow[ 2 ];
				} );
			}

			// Implement show/hide animations
			propTween = false;
			for ( prop in orig ) {

				// General show/hide setup for this element animation
				if ( !propTween ) {
					if ( dataShow ) {
						if ( "hidden" in dataShow ) {
							hidden = dataShow.hidden;
						}
					} else {
						dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
					}

					// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
					if ( toggle ) {
						dataShow.hidden = !hidden;
					}

					// Show elements before animating them
					if ( hidden ) {
						showHide( [ elem ], true );
					}

					/* eslint-disable no-loop-func */

					anim.done( function() {

					/* eslint-enable no-loop-func */

						// The final step of a "hide" animation is actually hiding the element
						if ( !hidden ) {
							showHide( [ elem ] );
						}
						dataPriv.remove( elem, "fxshow" );
						for ( prop in orig ) {
							jQuery.style( elem, prop, orig[ prop ] );
						}
					} );
				}

				// Per-property setup
				propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
				if ( !( prop in dataShow ) ) {
					dataShow[ prop ] = propTween.start;
					if ( hidden ) {
						propTween.end = propTween.start;
						propTween.start = 0;
					}
				}
			}
		}

		function propFilter( props, specialEasing ) {
			var index, name, easing, value, hooks;

			// camelCase, specialEasing and expand cssHook pass
			for ( index in props ) {
				name = camelCase( index );
				easing = specialEasing[ name ];
				value = props[ index ];
				if ( Array.isArray( value ) ) {
					easing = value[ 1 ];
					value = props[ index ] = value[ 0 ];
				}

				if ( index !== name ) {
					props[ name ] = value;
					delete props[ index ];
				}

				hooks = jQuery.cssHooks[ name ];
				if ( hooks && "expand" in hooks ) {
					value = hooks.expand( value );
					delete props[ name ];

					// Not quite $.extend, this won't overwrite existing keys.
					// Reusing 'index' because we have the correct "name"
					for ( index in value ) {
						if ( !( index in props ) ) {
							props[ index ] = value[ index ];
							specialEasing[ index ] = easing;
						}
					}
				} else {
					specialEasing[ name ] = easing;
				}
			}
		}

		function Animation( elem, properties, options ) {
			var result,
				stopped,
				index = 0,
				length = Animation.prefilters.length,
				deferred = jQuery.Deferred().always( function() {

					// Don't match elem in the :animated selector
					delete tick.elem;
				} ),
				tick = function() {
					if ( stopped ) {
						return false;
					}
					var currentTime = fxNow || createFxNow(),
						remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

						// Support: Android 2.3 only
						// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
						temp = remaining / animation.duration || 0,
						percent = 1 - temp,
						index = 0,
						length = animation.tweens.length;

					for ( ; index < length; index++ ) {
						animation.tweens[ index ].run( percent );
					}

					deferred.notifyWith( elem, [ animation, percent, remaining ] );

					// If there's more to do, yield
					if ( percent < 1 && length ) {
						return remaining;
					}

					// If this was an empty animation, synthesize a final progress notification
					if ( !length ) {
						deferred.notifyWith( elem, [ animation, 1, 0 ] );
					}

					// Resolve the animation and report its conclusion
					deferred.resolveWith( elem, [ animation ] );
					return false;
				},
				animation = deferred.promise( {
					elem: elem,
					props: jQuery.extend( {}, properties ),
					opts: jQuery.extend( true, {
						specialEasing: {},
						easing: jQuery.easing._default
					}, options ),
					originalProperties: properties,
					originalOptions: options,
					startTime: fxNow || createFxNow(),
					duration: options.duration,
					tweens: [],
					createTween: function( prop, end ) {
						var tween = jQuery.Tween( elem, animation.opts, prop, end,
								animation.opts.specialEasing[ prop ] || animation.opts.easing );
						animation.tweens.push( tween );
						return tween;
					},
					stop: function( gotoEnd ) {
						var index = 0,

							// If we are going to the end, we want to run all the tweens
							// otherwise we skip this part
							length = gotoEnd ? animation.tweens.length : 0;
						if ( stopped ) {
							return this;
						}
						stopped = true;
						for ( ; index < length; index++ ) {
							animation.tweens[ index ].run( 1 );
						}

						// Resolve when we played the last frame; otherwise, reject
						if ( gotoEnd ) {
							deferred.notifyWith( elem, [ animation, 1, 0 ] );
							deferred.resolveWith( elem, [ animation, gotoEnd ] );
						} else {
							deferred.rejectWith( elem, [ animation, gotoEnd ] );
						}
						return this;
					}
				} ),
				props = animation.props;

			propFilter( props, animation.opts.specialEasing );

			for ( ; index < length; index++ ) {
				result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
				if ( result ) {
					if ( isFunction( result.stop ) ) {
						jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
							result.stop.bind( result );
					}
					return result;
				}
			}

			jQuery.map( props, createTween, animation );

			if ( isFunction( animation.opts.start ) ) {
				animation.opts.start.call( elem, animation );
			}

			// Attach callbacks from options
			animation
				.progress( animation.opts.progress )
				.done( animation.opts.done, animation.opts.complete )
				.fail( animation.opts.fail )
				.always( animation.opts.always );

			jQuery.fx.timer(
				jQuery.extend( tick, {
					elem: elem,
					anim: animation,
					queue: animation.opts.queue
				} )
			);

			return animation;
		}

		jQuery.Animation = jQuery.extend( Animation, {

			tweeners: {
				"*": [ function( prop, value ) {
					var tween = this.createTween( prop, value );
					adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
					return tween;
				} ]
			},

			tweener: function( props, callback ) {
				if ( isFunction( props ) ) {
					callback = props;
					props = [ "*" ];
				} else {
					props = props.match( rnothtmlwhite );
				}

				var prop,
					index = 0,
					length = props.length;

				for ( ; index < length; index++ ) {
					prop = props[ index ];
					Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
					Animation.tweeners[ prop ].unshift( callback );
				}
			},

			prefilters: [ defaultPrefilter ],

			prefilter: function( callback, prepend ) {
				if ( prepend ) {
					Animation.prefilters.unshift( callback );
				} else {
					Animation.prefilters.push( callback );
				}
			}
		} );

		jQuery.speed = function( speed, easing, fn ) {
			var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
				complete: fn || !fn && easing ||
					isFunction( speed ) && speed,
				duration: speed,
				easing: fn && easing || easing && !isFunction( easing ) && easing
			};

			// Go to the end state if fx are off
			if ( jQuery.fx.off ) {
				opt.duration = 0;

			} else {
				if ( typeof opt.duration !== "number" ) {
					if ( opt.duration in jQuery.fx.speeds ) {
						opt.duration = jQuery.fx.speeds[ opt.duration ];

					} else {
						opt.duration = jQuery.fx.speeds._default;
					}
				}
			}

			// Normalize opt.queue - true/undefined/null -> "fx"
			if ( opt.queue == null || opt.queue === true ) {
				opt.queue = "fx";
			}

			// Queueing
			opt.old = opt.complete;

			opt.complete = function() {
				if ( isFunction( opt.old ) ) {
					opt.old.call( this );
				}

				if ( opt.queue ) {
					jQuery.dequeue( this, opt.queue );
				}
			};

			return opt;
		};

		jQuery.fn.extend( {
			fadeTo: function( speed, to, easing, callback ) {

				// Show any hidden elements after setting opacity to 0
				return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

					// Animate to the value specified
					.end().animate( { opacity: to }, speed, easing, callback );
			},
			animate: function( prop, speed, easing, callback ) {
				var empty = jQuery.isEmptyObject( prop ),
					optall = jQuery.speed( speed, easing, callback ),
					doAnimation = function() {

						// Operate on a copy of prop so per-property easing won't be lost
						var anim = Animation( this, jQuery.extend( {}, prop ), optall );

						// Empty animations, or finishing resolves immediately
						if ( empty || dataPriv.get( this, "finish" ) ) {
							anim.stop( true );
						}
					};
					doAnimation.finish = doAnimation;

				return empty || optall.queue === false ?
					this.each( doAnimation ) :
					this.queue( optall.queue, doAnimation );
			},
			stop: function( type, clearQueue, gotoEnd ) {
				var stopQueue = function( hooks ) {
					var stop = hooks.stop;
					delete hooks.stop;
					stop( gotoEnd );
				};

				if ( typeof type !== "string" ) {
					gotoEnd = clearQueue;
					clearQueue = type;
					type = undefined;
				}
				if ( clearQueue && type !== false ) {
					this.queue( type || "fx", [] );
				}

				return this.each( function() {
					var dequeue = true,
						index = type != null && type + "queueHooks",
						timers = jQuery.timers,
						data = dataPriv.get( this );

					if ( index ) {
						if ( data[ index ] && data[ index ].stop ) {
							stopQueue( data[ index ] );
						}
					} else {
						for ( index in data ) {
							if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
								stopQueue( data[ index ] );
							}
						}
					}

					for ( index = timers.length; index--; ) {
						if ( timers[ index ].elem === this &&
							( type == null || timers[ index ].queue === type ) ) {

							timers[ index ].anim.stop( gotoEnd );
							dequeue = false;
							timers.splice( index, 1 );
						}
					}

					// Start the next in the queue if the last step wasn't forced.
					// Timers currently will call their complete callbacks, which
					// will dequeue but only if they were gotoEnd.
					if ( dequeue || !gotoEnd ) {
						jQuery.dequeue( this, type );
					}
				} );
			},
			finish: function( type ) {
				if ( type !== false ) {
					type = type || "fx";
				}
				return this.each( function() {
					var index,
						data = dataPriv.get( this ),
						queue = data[ type + "queue" ],
						hooks = data[ type + "queueHooks" ],
						timers = jQuery.timers,
						length = queue ? queue.length : 0;

					// Enable finishing flag on private data
					data.finish = true;

					// Empty the queue first
					jQuery.queue( this, type, [] );

					if ( hooks && hooks.stop ) {
						hooks.stop.call( this, true );
					}

					// Look for any active animations, and finish them
					for ( index = timers.length; index--; ) {
						if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
							timers[ index ].anim.stop( true );
							timers.splice( index, 1 );
						}
					}

					// Look for any animations in the old queue and finish them
					for ( index = 0; index < length; index++ ) {
						if ( queue[ index ] && queue[ index ].finish ) {
							queue[ index ].finish.call( this );
						}
					}

					// Turn off finishing flag
					delete data.finish;
				} );
			}
		} );

		jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
			var cssFn = jQuery.fn[ name ];
			jQuery.fn[ name ] = function( speed, easing, callback ) {
				return speed == null || typeof speed === "boolean" ?
					cssFn.apply( this, arguments ) :
					this.animate( genFx( name, true ), speed, easing, callback );
			};
		} );

		// Generate shortcuts for custom animations
		jQuery.each( {
			slideDown: genFx( "show" ),
			slideUp: genFx( "hide" ),
			slideToggle: genFx( "toggle" ),
			fadeIn: { opacity: "show" },
			fadeOut: { opacity: "hide" },
			fadeToggle: { opacity: "toggle" }
		}, function( name, props ) {
			jQuery.fn[ name ] = function( speed, easing, callback ) {
				return this.animate( props, speed, easing, callback );
			};
		} );

		jQuery.timers = [];
		jQuery.fx.tick = function() {
			var timer,
				i = 0,
				timers = jQuery.timers;

			fxNow = Date.now();

			for ( ; i < timers.length; i++ ) {
				timer = timers[ i ];

				// Run the timer and safely remove it when done (allowing for external removal)
				if ( !timer() && timers[ i ] === timer ) {
					timers.splice( i--, 1 );
				}
			}

			if ( !timers.length ) {
				jQuery.fx.stop();
			}
			fxNow = undefined;
		};

		jQuery.fx.timer = function( timer ) {
			jQuery.timers.push( timer );
			jQuery.fx.start();
		};

		jQuery.fx.interval = 13;
		jQuery.fx.start = function() {
			if ( inProgress ) {
				return;
			}

			inProgress = true;
			schedule();
		};

		jQuery.fx.stop = function() {
			inProgress = null;
		};

		jQuery.fx.speeds = {
			slow: 600,
			fast: 200,

			// Default speed
			_default: 400
		};


		// Based off of the plugin by Clint Helfers, with permission.
		// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
		jQuery.fn.delay = function( time, type ) {
			time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
			type = type || "fx";

			return this.queue( type, function( next, hooks ) {
				var timeout = window.setTimeout( next, time );
				hooks.stop = function() {
					window.clearTimeout( timeout );
				};
			} );
		};


		( function() {
			var input = document.createElement( "input" ),
				select = document.createElement( "select" ),
				opt = select.appendChild( document.createElement( "option" ) );

			input.type = "checkbox";

			// Support: Android <=4.3 only
			// Default value for a checkbox should be "on"
			support.checkOn = input.value !== "";

			// Support: IE <=11 only
			// Must access selectedIndex to make default options select
			support.optSelected = opt.selected;

			// Support: IE <=11 only
			// An input loses its value after becoming a radio
			input = document.createElement( "input" );
			input.value = "t";
			input.type = "radio";
			support.radioValue = input.value === "t";
		} )();


		var boolHook,
			attrHandle = jQuery.expr.attrHandle;

		jQuery.fn.extend( {
			attr: function( name, value ) {
				return access( this, jQuery.attr, name, value, arguments.length > 1 );
			},

			removeAttr: function( name ) {
				return this.each( function() {
					jQuery.removeAttr( this, name );
				} );
			}
		} );

		jQuery.extend( {
			attr: function( elem, name, value ) {
				var ret, hooks,
					nType = elem.nodeType;

				// Don't get/set attributes on text, comment and attribute nodes
				if ( nType === 3 || nType === 8 || nType === 2 ) {
					return;
				}

				// Fallback to prop when attributes are not supported
				if ( typeof elem.getAttribute === "undefined" ) {
					return jQuery.prop( elem, name, value );
				}

				// Attribute hooks are determined by the lowercase version
				// Grab necessary hook if one is defined
				if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
					hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
						( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
				}

				if ( value !== undefined ) {
					if ( value === null ) {
						jQuery.removeAttr( elem, name );
						return;
					}

					if ( hooks && "set" in hooks &&
						( ret = hooks.set( elem, value, name ) ) !== undefined ) {
						return ret;
					}

					elem.setAttribute( name, value + "" );
					return value;
				}

				if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
					return ret;
				}

				ret = jQuery.find.attr( elem, name );

				// Non-existent attributes return null, we normalize to undefined
				return ret == null ? undefined : ret;
			},

			attrHooks: {
				type: {
					set: function( elem, value ) {
						if ( !support.radioValue && value === "radio" &&
							nodeName( elem, "input" ) ) {
							var val = elem.value;
							elem.setAttribute( "type", value );
							if ( val ) {
								elem.value = val;
							}
							return value;
						}
					}
				}
			},

			removeAttr: function( elem, value ) {
				var name,
					i = 0,

					// Attribute names can contain non-HTML whitespace characters
					// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
					attrNames = value && value.match( rnothtmlwhite );

				if ( attrNames && elem.nodeType === 1 ) {
					while ( ( name = attrNames[ i++ ] ) ) {
						elem.removeAttribute( name );
					}
				}
			}
		} );

		// Hooks for boolean attributes
		boolHook = {
			set: function( elem, value, name ) {
				if ( value === false ) {

					// Remove boolean attributes when set to false
					jQuery.removeAttr( elem, name );
				} else {
					elem.setAttribute( name, name );
				}
				return name;
			}
		};

		jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
			var getter = attrHandle[ name ] || jQuery.find.attr;

			attrHandle[ name ] = function( elem, name, isXML ) {
				var ret, handle,
					lowercaseName = name.toLowerCase();

				if ( !isXML ) {

					// Avoid an infinite loop by temporarily removing this function from the getter
					handle = attrHandle[ lowercaseName ];
					attrHandle[ lowercaseName ] = ret;
					ret = getter( elem, name, isXML ) != null ?
						lowercaseName :
						null;
					attrHandle[ lowercaseName ] = handle;
				}
				return ret;
			};
		} );




		var rfocusable = /^(?:input|select|textarea|button)$/i,
			rclickable = /^(?:a|area)$/i;

		jQuery.fn.extend( {
			prop: function( name, value ) {
				return access( this, jQuery.prop, name, value, arguments.length > 1 );
			},

			removeProp: function( name ) {
				return this.each( function() {
					delete this[ jQuery.propFix[ name ] || name ];
				} );
			}
		} );

		jQuery.extend( {
			prop: function( elem, name, value ) {
				var ret, hooks,
					nType = elem.nodeType;

				// Don't get/set properties on text, comment and attribute nodes
				if ( nType === 3 || nType === 8 || nType === 2 ) {
					return;
				}

				if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

					// Fix name and attach hooks
					name = jQuery.propFix[ name ] || name;
					hooks = jQuery.propHooks[ name ];
				}

				if ( value !== undefined ) {
					if ( hooks && "set" in hooks &&
						( ret = hooks.set( elem, value, name ) ) !== undefined ) {
						return ret;
					}

					return ( elem[ name ] = value );
				}

				if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
					return ret;
				}

				return elem[ name ];
			},

			propHooks: {
				tabIndex: {
					get: function( elem ) {

						// Support: IE <=9 - 11 only
						// elem.tabIndex doesn't always return the
						// correct value when it hasn't been explicitly set
						// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
						// Use proper attribute retrieval(#12072)
						var tabindex = jQuery.find.attr( elem, "tabindex" );

						if ( tabindex ) {
							return parseInt( tabindex, 10 );
						}

						if (
							rfocusable.test( elem.nodeName ) ||
							rclickable.test( elem.nodeName ) &&
							elem.href
						) {
							return 0;
						}

						return -1;
					}
				}
			},

			propFix: {
				"for": "htmlFor",
				"class": "className"
			}
		} );

		// Support: IE <=11 only
		// Accessing the selectedIndex property
		// forces the browser to respect setting selected
		// on the option
		// The getter ensures a default option is selected
		// when in an optgroup
		// eslint rule "no-unused-expressions" is disabled for this code
		// since it considers such accessions noop
		if ( !support.optSelected ) {
			jQuery.propHooks.selected = {
				get: function( elem ) {

					/* eslint no-unused-expressions: "off" */

					var parent = elem.parentNode;
					if ( parent && parent.parentNode ) {
						parent.parentNode.selectedIndex;
					}
					return null;
				},
				set: function( elem ) {

					/* eslint no-unused-expressions: "off" */

					var parent = elem.parentNode;
					if ( parent ) {
						parent.selectedIndex;

						if ( parent.parentNode ) {
							parent.parentNode.selectedIndex;
						}
					}
				}
			};
		}

		jQuery.each( [
			"tabIndex",
			"readOnly",
			"maxLength",
			"cellSpacing",
			"cellPadding",
			"rowSpan",
			"colSpan",
			"useMap",
			"frameBorder",
			"contentEditable"
		], function() {
			jQuery.propFix[ this.toLowerCase() ] = this;
		} );




			// Strip and collapse whitespace according to HTML spec
			// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
			function stripAndCollapse( value ) {
				var tokens = value.match( rnothtmlwhite ) || [];
				return tokens.join( " " );
			}


		function getClass( elem ) {
			return elem.getAttribute && elem.getAttribute( "class" ) || "";
		}

		function classesToArray( value ) {
			if ( Array.isArray( value ) ) {
				return value;
			}
			if ( typeof value === "string" ) {
				return value.match( rnothtmlwhite ) || [];
			}
			return [];
		}

		jQuery.fn.extend( {
			addClass: function( value ) {
				var classes, elem, cur, curValue, clazz, j, finalValue,
					i = 0;

				if ( isFunction( value ) ) {
					return this.each( function( j ) {
						jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
					} );
				}

				classes = classesToArray( value );

				if ( classes.length ) {
					while ( ( elem = this[ i++ ] ) ) {
						curValue = getClass( elem );
						cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

						if ( cur ) {
							j = 0;
							while ( ( clazz = classes[ j++ ] ) ) {
								if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
									cur += clazz + " ";
								}
							}

							// Only assign if different to avoid unneeded rendering.
							finalValue = stripAndCollapse( cur );
							if ( curValue !== finalValue ) {
								elem.setAttribute( "class", finalValue );
							}
						}
					}
				}

				return this;
			},

			removeClass: function( value ) {
				var classes, elem, cur, curValue, clazz, j, finalValue,
					i = 0;

				if ( isFunction( value ) ) {
					return this.each( function( j ) {
						jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
					} );
				}

				if ( !arguments.length ) {
					return this.attr( "class", "" );
				}

				classes = classesToArray( value );

				if ( classes.length ) {
					while ( ( elem = this[ i++ ] ) ) {
						curValue = getClass( elem );

						// This expression is here for better compressibility (see addClass)
						cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

						if ( cur ) {
							j = 0;
							while ( ( clazz = classes[ j++ ] ) ) {

								// Remove *all* instances
								while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
									cur = cur.replace( " " + clazz + " ", " " );
								}
							}

							// Only assign if different to avoid unneeded rendering.
							finalValue = stripAndCollapse( cur );
							if ( curValue !== finalValue ) {
								elem.setAttribute( "class", finalValue );
							}
						}
					}
				}

				return this;
			},

			toggleClass: function( value, stateVal ) {
				var type = typeof value,
					isValidValue = type === "string" || Array.isArray( value );

				if ( typeof stateVal === "boolean" && isValidValue ) {
					return stateVal ? this.addClass( value ) : this.removeClass( value );
				}

				if ( isFunction( value ) ) {
					return this.each( function( i ) {
						jQuery( this ).toggleClass(
							value.call( this, i, getClass( this ), stateVal ),
							stateVal
						);
					} );
				}

				return this.each( function() {
					var className, i, self, classNames;

					if ( isValidValue ) {

						// Toggle individual class names
						i = 0;
						self = jQuery( this );
						classNames = classesToArray( value );

						while ( ( className = classNames[ i++ ] ) ) {

							// Check each className given, space separated list
							if ( self.hasClass( className ) ) {
								self.removeClass( className );
							} else {
								self.addClass( className );
							}
						}

					// Toggle whole class name
					} else if ( value === undefined || type === "boolean" ) {
						className = getClass( this );
						if ( className ) {

							// Store className if set
							dataPriv.set( this, "__className__", className );
						}

						// If the element has a class name or if we're passed `false`,
						// then remove the whole classname (if there was one, the above saved it).
						// Otherwise bring back whatever was previously saved (if anything),
						// falling back to the empty string if nothing was stored.
						if ( this.setAttribute ) {
							this.setAttribute( "class",
								className || value === false ?
								"" :
								dataPriv.get( this, "__className__" ) || ""
							);
						}
					}
				} );
			},

			hasClass: function( selector ) {
				var className, elem,
					i = 0;

				className = " " + selector + " ";
				while ( ( elem = this[ i++ ] ) ) {
					if ( elem.nodeType === 1 &&
						( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
							return true;
					}
				}

				return false;
			}
		} );




		var rreturn = /\r/g;

		jQuery.fn.extend( {
			val: function( value ) {
				var hooks, ret, valueIsFunction,
					elem = this[ 0 ];

				if ( !arguments.length ) {
					if ( elem ) {
						hooks = jQuery.valHooks[ elem.type ] ||
							jQuery.valHooks[ elem.nodeName.toLowerCase() ];

						if ( hooks &&
							"get" in hooks &&
							( ret = hooks.get( elem, "value" ) ) !== undefined
						) {
							return ret;
						}

						ret = elem.value;

						// Handle most common string cases
						if ( typeof ret === "string" ) {
							return ret.replace( rreturn, "" );
						}

						// Handle cases where value is null/undef or number
						return ret == null ? "" : ret;
					}

					return;
				}

				valueIsFunction = isFunction( value );

				return this.each( function( i ) {
					var val;

					if ( this.nodeType !== 1 ) {
						return;
					}

					if ( valueIsFunction ) {
						val = value.call( this, i, jQuery( this ).val() );
					} else {
						val = value;
					}

					// Treat null/undefined as ""; convert numbers to string
					if ( val == null ) {
						val = "";

					} else if ( typeof val === "number" ) {
						val += "";

					} else if ( Array.isArray( val ) ) {
						val = jQuery.map( val, function( value ) {
							return value == null ? "" : value + "";
						} );
					}

					hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

					// If set returns undefined, fall back to normal setting
					if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
						this.value = val;
					}
				} );
			}
		} );

		jQuery.extend( {
			valHooks: {
				option: {
					get: function( elem ) {

						var val = jQuery.find.attr( elem, "value" );
						return val != null ?
							val :

							// Support: IE <=10 - 11 only
							// option.text throws exceptions (#14686, #14858)
							// Strip and collapse whitespace
							// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
							stripAndCollapse( jQuery.text( elem ) );
					}
				},
				select: {
					get: function( elem ) {
						var value, option, i,
							options = elem.options,
							index = elem.selectedIndex,
							one = elem.type === "select-one",
							values = one ? null : [],
							max = one ? index + 1 : options.length;

						if ( index < 0 ) {
							i = max;

						} else {
							i = one ? index : 0;
						}

						// Loop through all the selected options
						for ( ; i < max; i++ ) {
							option = options[ i ];

							// Support: IE <=9 only
							// IE8-9 doesn't update selected after form reset (#2551)
							if ( ( option.selected || i === index ) &&

									// Don't return options that are disabled or in a disabled optgroup
									!option.disabled &&
									( !option.parentNode.disabled ||
										!nodeName( option.parentNode, "optgroup" ) ) ) {

								// Get the specific value for the option
								value = jQuery( option ).val();

								// We don't need an array for one selects
								if ( one ) {
									return value;
								}

								// Multi-Selects return an array
								values.push( value );
							}
						}

						return values;
					},

					set: function( elem, value ) {
						var optionSet, option,
							options = elem.options,
							values = jQuery.makeArray( value ),
							i = options.length;

						while ( i-- ) {
							option = options[ i ];

							/* eslint-disable no-cond-assign */

							if ( option.selected =
								jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
							) {
								optionSet = true;
							}

							/* eslint-enable no-cond-assign */
						}

						// Force browsers to behave consistently when non-matching value is set
						if ( !optionSet ) {
							elem.selectedIndex = -1;
						}
						return values;
					}
				}
			}
		} );

		// Radios and checkboxes getter/setter
		jQuery.each( [ "radio", "checkbox" ], function() {
			jQuery.valHooks[ this ] = {
				set: function( elem, value ) {
					if ( Array.isArray( value ) ) {
						return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
					}
				}
			};
			if ( !support.checkOn ) {
				jQuery.valHooks[ this ].get = function( elem ) {
					return elem.getAttribute( "value" ) === null ? "on" : elem.value;
				};
			}
		} );




		// Return jQuery for attributes-only inclusion


		support.focusin = "onfocusin" in window;


		var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
			stopPropagationCallback = function( e ) {
				e.stopPropagation();
			};

		jQuery.extend( jQuery.event, {

			trigger: function( event, data, elem, onlyHandlers ) {

				var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
					eventPath = [ elem || document ],
					type = hasOwn.call( event, "type" ) ? event.type : event,
					namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

				cur = lastElement = tmp = elem = elem || document;

				// Don't do events on text and comment nodes
				if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
					return;
				}

				// focus/blur morphs to focusin/out; ensure we're not firing them right now
				if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
					return;
				}

				if ( type.indexOf( "." ) > -1 ) {

					// Namespaced trigger; create a regexp to match event type in handle()
					namespaces = type.split( "." );
					type = namespaces.shift();
					namespaces.sort();
				}
				ontype = type.indexOf( ":" ) < 0 && "on" + type;

				// Caller can pass in a jQuery.Event object, Object, or just an event type string
				event = event[ jQuery.expando ] ?
					event :
					new jQuery.Event( type, typeof event === "object" && event );

				// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
				event.isTrigger = onlyHandlers ? 2 : 3;
				event.namespace = namespaces.join( "." );
				event.rnamespace = event.namespace ?
					new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
					null;

				// Clean up the event in case it is being reused
				event.result = undefined;
				if ( !event.target ) {
					event.target = elem;
				}

				// Clone any incoming data and prepend the event, creating the handler arg list
				data = data == null ?
					[ event ] :
					jQuery.makeArray( data, [ event ] );

				// Allow special events to draw outside the lines
				special = jQuery.event.special[ type ] || {};
				if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
					return;
				}

				// Determine event propagation path in advance, per W3C events spec (#9951)
				// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
				if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

					bubbleType = special.delegateType || type;
					if ( !rfocusMorph.test( bubbleType + type ) ) {
						cur = cur.parentNode;
					}
					for ( ; cur; cur = cur.parentNode ) {
						eventPath.push( cur );
						tmp = cur;
					}

					// Only add window if we got to document (e.g., not plain obj or detached DOM)
					if ( tmp === ( elem.ownerDocument || document ) ) {
						eventPath.push( tmp.defaultView || tmp.parentWindow || window );
					}
				}

				// Fire handlers on the event path
				i = 0;
				while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
					lastElement = cur;
					event.type = i > 1 ?
						bubbleType :
						special.bindType || type;

					// jQuery handler
					handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
						dataPriv.get( cur, "handle" );
					if ( handle ) {
						handle.apply( cur, data );
					}

					// Native handler
					handle = ontype && cur[ ontype ];
					if ( handle && handle.apply && acceptData( cur ) ) {
						event.result = handle.apply( cur, data );
						if ( event.result === false ) {
							event.preventDefault();
						}
					}
				}
				event.type = type;

				// If nobody prevented the default action, do it now
				if ( !onlyHandlers && !event.isDefaultPrevented() ) {

					if ( ( !special._default ||
						special._default.apply( eventPath.pop(), data ) === false ) &&
						acceptData( elem ) ) {

						// Call a native DOM method on the target with the same name as the event.
						// Don't do default actions on window, that's where global variables be (#6170)
						if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

							// Don't re-trigger an onFOO event when we call its FOO() method
							tmp = elem[ ontype ];

							if ( tmp ) {
								elem[ ontype ] = null;
							}

							// Prevent re-triggering of the same event, since we already bubbled it above
							jQuery.event.triggered = type;

							if ( event.isPropagationStopped() ) {
								lastElement.addEventListener( type, stopPropagationCallback );
							}

							elem[ type ]();

							if ( event.isPropagationStopped() ) {
								lastElement.removeEventListener( type, stopPropagationCallback );
							}

							jQuery.event.triggered = undefined;

							if ( tmp ) {
								elem[ ontype ] = tmp;
							}
						}
					}
				}

				return event.result;
			},

			// Piggyback on a donor event to simulate a different one
			// Used only for `focus(in | out)` events
			simulate: function( type, elem, event ) {
				var e = jQuery.extend(
					new jQuery.Event(),
					event,
					{
						type: type,
						isSimulated: true
					}
				);

				jQuery.event.trigger( e, null, elem );
			}

		} );

		jQuery.fn.extend( {

			trigger: function( type, data ) {
				return this.each( function() {
					jQuery.event.trigger( type, data, this );
				} );
			},
			triggerHandler: function( type, data ) {
				var elem = this[ 0 ];
				if ( elem ) {
					return jQuery.event.trigger( type, data, elem, true );
				}
			}
		} );


		// Support: Firefox <=44
		// Firefox doesn't have focus(in | out) events
		// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
		//
		// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
		// focus(in | out) events fire after focus & blur events,
		// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
		// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
		if ( !support.focusin ) {
			jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

				// Attach a single capturing handler on the document while someone wants focusin/focusout
				var handler = function( event ) {
					jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
				};

				jQuery.event.special[ fix ] = {
					setup: function() {
						var doc = this.ownerDocument || this,
							attaches = dataPriv.access( doc, fix );

						if ( !attaches ) {
							doc.addEventListener( orig, handler, true );
						}
						dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
					},
					teardown: function() {
						var doc = this.ownerDocument || this,
							attaches = dataPriv.access( doc, fix ) - 1;

						if ( !attaches ) {
							doc.removeEventListener( orig, handler, true );
							dataPriv.remove( doc, fix );

						} else {
							dataPriv.access( doc, fix, attaches );
						}
					}
				};
			} );
		}
		var location = window.location;

		var nonce = Date.now();

		var rquery = ( /\?/ );



		// Cross-browser xml parsing
		jQuery.parseXML = function( data ) {
			var xml;
			if ( !data || typeof data !== "string" ) {
				return null;
			}

			// Support: IE 9 - 11 only
			// IE throws on parseFromString with invalid input.
			try {
				xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
			} catch ( e ) {
				xml = undefined;
			}

			if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
				jQuery.error( "Invalid XML: " + data );
			}
			return xml;
		};


		var
			rbracket = /\[\]$/,
			rCRLF = /\r?\n/g,
			rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
			rsubmittable = /^(?:input|select|textarea|keygen)/i;

		function buildParams( prefix, obj, traditional, add ) {
			var name;

			if ( Array.isArray( obj ) ) {

				// Serialize array item.
				jQuery.each( obj, function( i, v ) {
					if ( traditional || rbracket.test( prefix ) ) {

						// Treat each array item as a scalar.
						add( prefix, v );

					} else {

						// Item is non-scalar (array or object), encode its numeric index.
						buildParams(
							prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
							v,
							traditional,
							add
						);
					}
				} );

			} else if ( !traditional && toType( obj ) === "object" ) {

				// Serialize object item.
				for ( name in obj ) {
					buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
				}

			} else {

				// Serialize scalar item.
				add( prefix, obj );
			}
		}

		// Serialize an array of form elements or a set of
		// key/values into a query string
		jQuery.param = function( a, traditional ) {
			var prefix,
				s = [],
				add = function( key, valueOrFunction ) {

					// If value is a function, invoke it and use its return value
					var value = isFunction( valueOrFunction ) ?
						valueOrFunction() :
						valueOrFunction;

					s[ s.length ] = encodeURIComponent( key ) + "=" +
						encodeURIComponent( value == null ? "" : value );
				};

			// If an array was passed in, assume that it is an array of form elements.
			if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

				// Serialize the form elements
				jQuery.each( a, function() {
					add( this.name, this.value );
				} );

			} else {

				// If traditional, encode the "old" way (the way 1.3.2 or older
				// did it), otherwise encode params recursively.
				for ( prefix in a ) {
					buildParams( prefix, a[ prefix ], traditional, add );
				}
			}

			// Return the resulting serialization
			return s.join( "&" );
		};

		jQuery.fn.extend( {
			serialize: function() {
				return jQuery.param( this.serializeArray() );
			},
			serializeArray: function() {
				return this.map( function() {

					// Can add propHook for "elements" to filter or add form elements
					var elements = jQuery.prop( this, "elements" );
					return elements ? jQuery.makeArray( elements ) : this;
				} )
				.filter( function() {
					var type = this.type;

					// Use .is( ":disabled" ) so that fieldset[disabled] works
					return this.name && !jQuery( this ).is( ":disabled" ) &&
						rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
						( this.checked || !rcheckableType.test( type ) );
				} )
				.map( function( i, elem ) {
					var val = jQuery( this ).val();

					if ( val == null ) {
						return null;
					}

					if ( Array.isArray( val ) ) {
						return jQuery.map( val, function( val ) {
							return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
						} );
					}

					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} ).get();
			}
		} );


		var
			r20 = /%20/g,
			rhash = /#.*$/,
			rantiCache = /([?&])_=[^&]*/,
			rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

			// #7653, #8125, #8152: local protocol detection
			rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
			rnoContent = /^(?:GET|HEAD)$/,
			rprotocol = /^\/\//,

			/* Prefilters
			 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
			 * 2) These are called:
			 *    - BEFORE asking for a transport
			 *    - AFTER param serialization (s.data is a string if s.processData is true)
			 * 3) key is the dataType
			 * 4) the catchall symbol "*" can be used
			 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
			 */
			prefilters = {},

			/* Transports bindings
			 * 1) key is the dataType
			 * 2) the catchall symbol "*" can be used
			 * 3) selection will start with transport dataType and THEN go to "*" if needed
			 */
			transports = {},

			// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
			allTypes = "*/".concat( "*" ),

			// Anchor tag for parsing the document origin
			originAnchor = document.createElement( "a" );
			originAnchor.href = location.href;

		// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
		function addToPrefiltersOrTransports( structure ) {

			// dataTypeExpression is optional and defaults to "*"
			return function( dataTypeExpression, func ) {

				if ( typeof dataTypeExpression !== "string" ) {
					func = dataTypeExpression;
					dataTypeExpression = "*";
				}

				var dataType,
					i = 0,
					dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

				if ( isFunction( func ) ) {

					// For each dataType in the dataTypeExpression
					while ( ( dataType = dataTypes[ i++ ] ) ) {

						// Prepend if requested
						if ( dataType[ 0 ] === "+" ) {
							dataType = dataType.slice( 1 ) || "*";
							( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

						// Otherwise append
						} else {
							( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
						}
					}
				}
			};
		}

		// Base inspection function for prefilters and transports
		function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

			var inspected = {},
				seekingTransport = ( structure === transports );

			function inspect( dataType ) {
				var selected;
				inspected[ dataType ] = true;
				jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
					var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
					if ( typeof dataTypeOrTransport === "string" &&
						!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

						options.dataTypes.unshift( dataTypeOrTransport );
						inspect( dataTypeOrTransport );
						return false;
					} else if ( seekingTransport ) {
						return !( selected = dataTypeOrTransport );
					}
				} );
				return selected;
			}

			return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
		}

		// A special extend for ajax options
		// that takes "flat" options (not to be deep extended)
		// Fixes #9887
		function ajaxExtend( target, src ) {
			var key, deep,
				flatOptions = jQuery.ajaxSettings.flatOptions || {};

			for ( key in src ) {
				if ( src[ key ] !== undefined ) {
					( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
				}
			}
			if ( deep ) {
				jQuery.extend( true, target, deep );
			}

			return target;
		}

		/* Handles responses to an ajax request:
		 * - finds the right dataType (mediates between content-type and expected dataType)
		 * - returns the corresponding response
		 */
		function ajaxHandleResponses( s, jqXHR, responses ) {

			var ct, type, finalDataType, firstDataType,
				contents = s.contents,
				dataTypes = s.dataTypes;

			// Remove auto dataType and get content-type in the process
			while ( dataTypes[ 0 ] === "*" ) {
				dataTypes.shift();
				if ( ct === undefined ) {
					ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
				}
			}

			// Check if we're dealing with a known content-type
			if ( ct ) {
				for ( type in contents ) {
					if ( contents[ type ] && contents[ type ].test( ct ) ) {
						dataTypes.unshift( type );
						break;
					}
				}
			}

			// Check to see if we have a response for the expected dataType
			if ( dataTypes[ 0 ] in responses ) {
				finalDataType = dataTypes[ 0 ];
			} else {

				// Try convertible dataTypes
				for ( type in responses ) {
					if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
						finalDataType = type;
						break;
					}
					if ( !firstDataType ) {
						firstDataType = type;
					}
				}

				// Or just use first one
				finalDataType = finalDataType || firstDataType;
			}

			// If we found a dataType
			// We add the dataType to the list if needed
			// and return the corresponding response
			if ( finalDataType ) {
				if ( finalDataType !== dataTypes[ 0 ] ) {
					dataTypes.unshift( finalDataType );
				}
				return responses[ finalDataType ];
			}
		}

		/* Chain conversions given the request and the original response
		 * Also sets the responseXXX fields on the jqXHR instance
		 */
		function ajaxConvert( s, response, jqXHR, isSuccess ) {
			var conv2, current, conv, tmp, prev,
				converters = {},

				// Work with a copy of dataTypes in case we need to modify it for conversion
				dataTypes = s.dataTypes.slice();

			// Create converters map with lowercased keys
			if ( dataTypes[ 1 ] ) {
				for ( conv in s.converters ) {
					converters[ conv.toLowerCase() ] = s.converters[ conv ];
				}
			}

			current = dataTypes.shift();

			// Convert to each sequential dataType
			while ( current ) {

				if ( s.responseFields[ current ] ) {
					jqXHR[ s.responseFields[ current ] ] = response;
				}

				// Apply the dataFilter if provided
				if ( !prev && isSuccess && s.dataFilter ) {
					response = s.dataFilter( response, s.dataType );
				}

				prev = current;
				current = dataTypes.shift();

				if ( current ) {

					// There's only work to do if current dataType is non-auto
					if ( current === "*" ) {

						current = prev;

					// Convert response if prev dataType is non-auto and differs from current
					} else if ( prev !== "*" && prev !== current ) {

						// Seek a direct converter
						conv = converters[ prev + " " + current ] || converters[ "* " + current ];

						// If none found, seek a pair
						if ( !conv ) {
							for ( conv2 in converters ) {

								// If conv2 outputs current
								tmp = conv2.split( " " );
								if ( tmp[ 1 ] === current ) {

									// If prev can be converted to accepted input
									conv = converters[ prev + " " + tmp[ 0 ] ] ||
										converters[ "* " + tmp[ 0 ] ];
									if ( conv ) {

										// Condense equivalence converters
										if ( conv === true ) {
											conv = converters[ conv2 ];

										// Otherwise, insert the intermediate dataType
										} else if ( converters[ conv2 ] !== true ) {
											current = tmp[ 0 ];
											dataTypes.unshift( tmp[ 1 ] );
										}
										break;
									}
								}
							}
						}

						// Apply converter (if not an equivalence)
						if ( conv !== true ) {

							// Unless errors are allowed to bubble, catch and return them
							if ( conv && s.throws ) {
								response = conv( response );
							} else {
								try {
									response = conv( response );
								} catch ( e ) {
									return {
										state: "parsererror",
										error: conv ? e : "No conversion from " + prev + " to " + current
									};
								}
							}
						}
					}
				}
			}

			return { state: "success", data: response };
		}

		jQuery.extend( {

			// Counter for holding the number of active queries
			active: 0,

			// Last-Modified header cache for next request
			lastModified: {},
			etag: {},

			ajaxSettings: {
				url: location.href,
				type: "GET",
				isLocal: rlocalProtocol.test( location.protocol ),
				global: true,
				processData: true,
				async: true,
				contentType: "application/x-www-form-urlencoded; charset=UTF-8",

				/*
				timeout: 0,
				data: null,
				dataType: null,
				username: null,
				password: null,
				cache: null,
				throws: false,
				traditional: false,
				headers: {},
				*/

				accepts: {
					"*": allTypes,
					text: "text/plain",
					html: "text/html",
					xml: "application/xml, text/xml",
					json: "application/json, text/javascript"
				},

				contents: {
					xml: /\bxml\b/,
					html: /\bhtml/,
					json: /\bjson\b/
				},

				responseFields: {
					xml: "responseXML",
					text: "responseText",
					json: "responseJSON"
				},

				// Data converters
				// Keys separate source (or catchall "*") and destination types with a single space
				converters: {

					// Convert anything to text
					"* text": String,

					// Text to html (true = no transformation)
					"text html": true,

					// Evaluate text as a json expression
					"text json": JSON.parse,

					// Parse text as xml
					"text xml": jQuery.parseXML
				},

				// For options that shouldn't be deep extended:
				// you can add your own custom options here if
				// and when you create one that shouldn't be
				// deep extended (see ajaxExtend)
				flatOptions: {
					url: true,
					context: true
				}
			},

			// Creates a full fledged settings object into target
			// with both ajaxSettings and settings fields.
			// If target is omitted, writes into ajaxSettings.
			ajaxSetup: function( target, settings ) {
				return settings ?

					// Building a settings object
					ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

					// Extending ajaxSettings
					ajaxExtend( jQuery.ajaxSettings, target );
			},

			ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
			ajaxTransport: addToPrefiltersOrTransports( transports ),

			// Main method
			ajax: function( url, options ) {

				// If url is an object, simulate pre-1.5 signature
				if ( typeof url === "object" ) {
					options = url;
					url = undefined;
				}

				// Force options to be an object
				options = options || {};

				var transport,

					// URL without anti-cache param
					cacheURL,

					// Response headers
					responseHeadersString,
					responseHeaders,

					// timeout handle
					timeoutTimer,

					// Url cleanup var
					urlAnchor,

					// Request state (becomes false upon send and true upon completion)
					completed,

					// To know if global events are to be dispatched
					fireGlobals,

					// Loop variable
					i,

					// uncached part of the url
					uncached,

					// Create the final options object
					s = jQuery.ajaxSetup( {}, options ),

					// Callbacks context
					callbackContext = s.context || s,

					// Context for global events is callbackContext if it is a DOM node or jQuery collection
					globalEventContext = s.context &&
						( callbackContext.nodeType || callbackContext.jquery ) ?
							jQuery( callbackContext ) :
							jQuery.event,

					// Deferreds
					deferred = jQuery.Deferred(),
					completeDeferred = jQuery.Callbacks( "once memory" ),

					// Status-dependent callbacks
					statusCode = s.statusCode || {},

					// Headers (they are sent all at once)
					requestHeaders = {},
					requestHeadersNames = {},

					// Default abort message
					strAbort = "canceled",

					// Fake xhr
					jqXHR = {
						readyState: 0,

						// Builds headers hashtable if needed
						getResponseHeader: function( key ) {
							var match;
							if ( completed ) {
								if ( !responseHeaders ) {
									responseHeaders = {};
									while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
										responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
									}
								}
								match = responseHeaders[ key.toLowerCase() ];
							}
							return match == null ? null : match;
						},

						// Raw string
						getAllResponseHeaders: function() {
							return completed ? responseHeadersString : null;
						},

						// Caches the header
						setRequestHeader: function( name, value ) {
							if ( completed == null ) {
								name = requestHeadersNames[ name.toLowerCase() ] =
									requestHeadersNames[ name.toLowerCase() ] || name;
								requestHeaders[ name ] = value;
							}
							return this;
						},

						// Overrides response content-type header
						overrideMimeType: function( type ) {
							if ( completed == null ) {
								s.mimeType = type;
							}
							return this;
						},

						// Status-dependent callbacks
						statusCode: function( map ) {
							var code;
							if ( map ) {
								if ( completed ) {

									// Execute the appropriate callbacks
									jqXHR.always( map[ jqXHR.status ] );
								} else {

									// Lazy-add the new callbacks in a way that preserves old ones
									for ( code in map ) {
										statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
									}
								}
							}
							return this;
						},

						// Cancel the request
						abort: function( statusText ) {
							var finalText = statusText || strAbort;
							if ( transport ) {
								transport.abort( finalText );
							}
							done( 0, finalText );
							return this;
						}
					};

				// Attach deferreds
				deferred.promise( jqXHR );

				// Add protocol if not provided (prefilters might expect it)
				// Handle falsy url in the settings object (#10093: consistency with old signature)
				// We also use the url parameter if available
				s.url = ( ( url || s.url || location.href ) + "" )
					.replace( rprotocol, location.protocol + "//" );

				// Alias method option to type as per ticket #12004
				s.type = options.method || options.type || s.method || s.type;

				// Extract dataTypes list
				s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

				// A cross-domain request is in order when the origin doesn't match the current origin.
				if ( s.crossDomain == null ) {
					urlAnchor = document.createElement( "a" );

					// Support: IE <=8 - 11, Edge 12 - 15
					// IE throws exception on accessing the href property if url is malformed,
					// e.g. http://example.com:80x/
					try {
						urlAnchor.href = s.url;

						// Support: IE <=8 - 11 only
						// Anchor's host property isn't correctly set when s.url is relative
						urlAnchor.href = urlAnchor.href;
						s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
							urlAnchor.protocol + "//" + urlAnchor.host;
					} catch ( e ) {

						// If there is an error parsing the URL, assume it is crossDomain,
						// it can be rejected by the transport if it is invalid
						s.crossDomain = true;
					}
				}

				// Convert data if not already a string
				if ( s.data && s.processData && typeof s.data !== "string" ) {
					s.data = jQuery.param( s.data, s.traditional );
				}

				// Apply prefilters
				inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

				// If request was aborted inside a prefilter, stop there
				if ( completed ) {
					return jqXHR;
				}

				// We can fire global events as of now if asked to
				// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
				fireGlobals = jQuery.event && s.global;

				// Watch for a new set of requests
				if ( fireGlobals && jQuery.active++ === 0 ) {
					jQuery.event.trigger( "ajaxStart" );
				}

				// Uppercase the type
				s.type = s.type.toUpperCase();

				// Determine if request has content
				s.hasContent = !rnoContent.test( s.type );

				// Save the URL in case we're toying with the If-Modified-Since
				// and/or If-None-Match header later on
				// Remove hash to simplify url manipulation
				cacheURL = s.url.replace( rhash, "" );

				// More options handling for requests with no content
				if ( !s.hasContent ) {

					// Remember the hash so we can put it back
					uncached = s.url.slice( cacheURL.length );

					// If data is available and should be processed, append data to url
					if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
						cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

						// #9682: remove data so that it's not used in an eventual retry
						delete s.data;
					}

					// Add or update anti-cache param if needed
					if ( s.cache === false ) {
						cacheURL = cacheURL.replace( rantiCache, "$1" );
						uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
					}

					// Put hash and anti-cache on the URL that will be requested (gh-1732)
					s.url = cacheURL + uncached;

				// Change '%20' to '+' if this is encoded form body content (gh-2658)
				} else if ( s.data && s.processData &&
					( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
					s.data = s.data.replace( r20, "+" );
				}

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					if ( jQuery.lastModified[ cacheURL ] ) {
						jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
					}
					if ( jQuery.etag[ cacheURL ] ) {
						jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
					}
				}

				// Set the correct header, if data is being sent
				if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
					jqXHR.setRequestHeader( "Content-Type", s.contentType );
				}

				// Set the Accepts header for the server, depending on the dataType
				jqXHR.setRequestHeader(
					"Accept",
					s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
						s.accepts[ s.dataTypes[ 0 ] ] +
							( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
						s.accepts[ "*" ]
				);

				// Check for headers option
				for ( i in s.headers ) {
					jqXHR.setRequestHeader( i, s.headers[ i ] );
				}

				// Allow custom headers/mimetypes and early abort
				if ( s.beforeSend &&
					( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

					// Abort if not done already and return
					return jqXHR.abort();
				}

				// Aborting is no longer a cancellation
				strAbort = "abort";

				// Install callbacks on deferreds
				completeDeferred.add( s.complete );
				jqXHR.done( s.success );
				jqXHR.fail( s.error );

				// Get transport
				transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

				// If no transport, we auto-abort
				if ( !transport ) {
					done( -1, "No Transport" );
				} else {
					jqXHR.readyState = 1;

					// Send global event
					if ( fireGlobals ) {
						globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
					}

					// If request was aborted inside ajaxSend, stop there
					if ( completed ) {
						return jqXHR;
					}

					// Timeout
					if ( s.async && s.timeout > 0 ) {
						timeoutTimer = window.setTimeout( function() {
							jqXHR.abort( "timeout" );
						}, s.timeout );
					}

					try {
						completed = false;
						transport.send( requestHeaders, done );
					} catch ( e ) {

						// Rethrow post-completion exceptions
						if ( completed ) {
							throw e;
						}

						// Propagate others as results
						done( -1, e );
					}
				}

				// Callback for when everything is done
				function done( status, nativeStatusText, responses, headers ) {
					var isSuccess, success, error, response, modified,
						statusText = nativeStatusText;

					// Ignore repeat invocations
					if ( completed ) {
						return;
					}

					completed = true;

					// Clear timeout if it exists
					if ( timeoutTimer ) {
						window.clearTimeout( timeoutTimer );
					}

					// Dereference transport for early garbage collection
					// (no matter how long the jqXHR object will be used)
					transport = undefined;

					// Cache response headers
					responseHeadersString = headers || "";

					// Set readyState
					jqXHR.readyState = status > 0 ? 4 : 0;

					// Determine if successful
					isSuccess = status >= 200 && status < 300 || status === 304;

					// Get response data
					if ( responses ) {
						response = ajaxHandleResponses( s, jqXHR, responses );
					}

					// Convert no matter what (that way responseXXX fields are always set)
					response = ajaxConvert( s, response, jqXHR, isSuccess );

					// If successful, handle type chaining
					if ( isSuccess ) {

						// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
						if ( s.ifModified ) {
							modified = jqXHR.getResponseHeader( "Last-Modified" );
							if ( modified ) {
								jQuery.lastModified[ cacheURL ] = modified;
							}
							modified = jqXHR.getResponseHeader( "etag" );
							if ( modified ) {
								jQuery.etag[ cacheURL ] = modified;
							}
						}

						// if no content
						if ( status === 204 || s.type === "HEAD" ) {
							statusText = "nocontent";

						// if not modified
						} else if ( status === 304 ) {
							statusText = "notmodified";

						// If we have data, let's convert it
						} else {
							statusText = response.state;
							success = response.data;
							error = response.error;
							isSuccess = !error;
						}
					} else {

						// Extract error from statusText and normalize for non-aborts
						error = statusText;
						if ( status || !statusText ) {
							statusText = "error";
							if ( status < 0 ) {
								status = 0;
							}
						}
					}

					// Set data for the fake xhr object
					jqXHR.status = status;
					jqXHR.statusText = ( nativeStatusText || statusText ) + "";

					// Success/Error
					if ( isSuccess ) {
						deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
					} else {
						deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
					}

					// Status-dependent callbacks
					jqXHR.statusCode( statusCode );
					statusCode = undefined;

					if ( fireGlobals ) {
						globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
							[ jqXHR, s, isSuccess ? success : error ] );
					}

					// Complete
					completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

					if ( fireGlobals ) {
						globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

						// Handle the global AJAX counter
						if ( !( --jQuery.active ) ) {
							jQuery.event.trigger( "ajaxStop" );
						}
					}
				}

				return jqXHR;
			},

			getJSON: function( url, data, callback ) {
				return jQuery.get( url, data, callback, "json" );
			},

			getScript: function( url, callback ) {
				return jQuery.get( url, undefined, callback, "script" );
			}
		} );

		jQuery.each( [ "get", "post" ], function( i, method ) {
			jQuery[ method ] = function( url, data, callback, type ) {

				// Shift arguments if data argument was omitted
				if ( isFunction( data ) ) {
					type = type || callback;
					callback = data;
					data = undefined;
				}

				// The url can be an options object (which then must have .url)
				return jQuery.ajax( jQuery.extend( {
					url: url,
					type: method,
					dataType: type,
					data: data,
					success: callback
				}, jQuery.isPlainObject( url ) && url ) );
			};
		} );


		jQuery._evalUrl = function( url ) {
			return jQuery.ajax( {
				url: url,

				// Make this explicit, since user can override this through ajaxSetup (#11264)
				type: "GET",
				dataType: "script",
				cache: true,
				async: false,
				global: false,
				"throws": true
			} );
		};


		jQuery.fn.extend( {
			wrapAll: function( html ) {
				var wrap;

				if ( this[ 0 ] ) {
					if ( isFunction( html ) ) {
						html = html.call( this[ 0 ] );
					}

					// The elements to wrap the target around
					wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

					if ( this[ 0 ].parentNode ) {
						wrap.insertBefore( this[ 0 ] );
					}

					wrap.map( function() {
						var elem = this;

						while ( elem.firstElementChild ) {
							elem = elem.firstElementChild;
						}

						return elem;
					} ).append( this );
				}

				return this;
			},

			wrapInner: function( html ) {
				if ( isFunction( html ) ) {
					return this.each( function( i ) {
						jQuery( this ).wrapInner( html.call( this, i ) );
					} );
				}

				return this.each( function() {
					var self = jQuery( this ),
						contents = self.contents();

					if ( contents.length ) {
						contents.wrapAll( html );

					} else {
						self.append( html );
					}
				} );
			},

			wrap: function( html ) {
				var htmlIsFunction = isFunction( html );

				return this.each( function( i ) {
					jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
				} );
			},

			unwrap: function( selector ) {
				this.parent( selector ).not( "body" ).each( function() {
					jQuery( this ).replaceWith( this.childNodes );
				} );
				return this;
			}
		} );


		jQuery.expr.pseudos.hidden = function( elem ) {
			return !jQuery.expr.pseudos.visible( elem );
		};
		jQuery.expr.pseudos.visible = function( elem ) {
			return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
		};




		jQuery.ajaxSettings.xhr = function() {
			try {
				return new window.XMLHttpRequest();
			} catch ( e ) {}
		};

		var xhrSuccessStatus = {

				// File protocol always yields status code 0, assume 200
				0: 200,

				// Support: IE <=9 only
				// #1450: sometimes IE returns 1223 when it should be 204
				1223: 204
			},
			xhrSupported = jQuery.ajaxSettings.xhr();

		support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
		support.ajax = xhrSupported = !!xhrSupported;

		jQuery.ajaxTransport( function( options ) {
			var callback, errorCallback;

			// Cross domain only allowed if supported through XMLHttpRequest
			if ( support.cors || xhrSupported && !options.crossDomain ) {
				return {
					send: function( headers, complete ) {
						var i,
							xhr = options.xhr();

						xhr.open(
							options.type,
							options.url,
							options.async,
							options.username,
							options.password
						);

						// Apply custom fields if provided
						if ( options.xhrFields ) {
							for ( i in options.xhrFields ) {
								xhr[ i ] = options.xhrFields[ i ];
							}
						}

						// Override mime type if needed
						if ( options.mimeType && xhr.overrideMimeType ) {
							xhr.overrideMimeType( options.mimeType );
						}

						// X-Requested-With header
						// For cross-domain requests, seeing as conditions for a preflight are
						// akin to a jigsaw puzzle, we simply never set it to be sure.
						// (it can always be set on a per-request basis or even using ajaxSetup)
						// For same-domain requests, won't change header if already provided.
						if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
							headers[ "X-Requested-With" ] = "XMLHttpRequest";
						}

						// Set headers
						for ( i in headers ) {
							xhr.setRequestHeader( i, headers[ i ] );
						}

						// Callback
						callback = function( type ) {
							return function() {
								if ( callback ) {
									callback = errorCallback = xhr.onload =
										xhr.onerror = xhr.onabort = xhr.ontimeout =
											xhr.onreadystatechange = null;

									if ( type === "abort" ) {
										xhr.abort();
									} else if ( type === "error" ) {

										// Support: IE <=9 only
										// On a manual native abort, IE9 throws
										// errors on any property access that is not readyState
										if ( typeof xhr.status !== "number" ) {
											complete( 0, "error" );
										} else {
											complete(

												// File: protocol always yields status 0; see #8605, #14207
												xhr.status,
												xhr.statusText
											);
										}
									} else {
										complete(
											xhrSuccessStatus[ xhr.status ] || xhr.status,
											xhr.statusText,

											// Support: IE <=9 only
											// IE9 has no XHR2 but throws on binary (trac-11426)
											// For XHR2 non-text, let the caller handle it (gh-2498)
											( xhr.responseType || "text" ) !== "text"  ||
											typeof xhr.responseText !== "string" ?
												{ binary: xhr.response } :
												{ text: xhr.responseText },
											xhr.getAllResponseHeaders()
										);
									}
								}
							};
						};

						// Listen to events
						xhr.onload = callback();
						errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

						// Support: IE 9 only
						// Use onreadystatechange to replace onabort
						// to handle uncaught aborts
						if ( xhr.onabort !== undefined ) {
							xhr.onabort = errorCallback;
						} else {
							xhr.onreadystatechange = function() {

								// Check readyState before timeout as it changes
								if ( xhr.readyState === 4 ) {

									// Allow onerror to be called first,
									// but that will not handle a native abort
									// Also, save errorCallback to a variable
									// as xhr.onerror cannot be accessed
									window.setTimeout( function() {
										if ( callback ) {
											errorCallback();
										}
									} );
								}
							};
						}

						// Create the abort callback
						callback = callback( "abort" );

						try {

							// Do send the request (this may raise an exception)
							xhr.send( options.hasContent && options.data || null );
						} catch ( e ) {

							// #14683: Only rethrow if this hasn't been notified as an error yet
							if ( callback ) {
								throw e;
							}
						}
					},

					abort: function() {
						if ( callback ) {
							callback();
						}
					}
				};
			}
		} );




		// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
		jQuery.ajaxPrefilter( function( s ) {
			if ( s.crossDomain ) {
				s.contents.script = false;
			}
		} );

		// Install script dataType
		jQuery.ajaxSetup( {
			accepts: {
				script: "text/javascript, application/javascript, " +
					"application/ecmascript, application/x-ecmascript"
			},
			contents: {
				script: /\b(?:java|ecma)script\b/
			},
			converters: {
				"text script": function( text ) {
					jQuery.globalEval( text );
					return text;
				}
			}
		} );

		// Handle cache's special case and crossDomain
		jQuery.ajaxPrefilter( "script", function( s ) {
			if ( s.cache === undefined ) {
				s.cache = false;
			}
			if ( s.crossDomain ) {
				s.type = "GET";
			}
		} );

		// Bind script tag hack transport
		jQuery.ajaxTransport( "script", function( s ) {

			// This transport only deals with cross domain requests
			if ( s.crossDomain ) {
				var script, callback;
				return {
					send: function( _, complete ) {
						script = jQuery( "<script>" ).prop( {
							charset: s.scriptCharset,
							src: s.url
						} ).on(
							"load error",
							callback = function( evt ) {
								script.remove();
								callback = null;
								if ( evt ) {
									complete( evt.type === "error" ? 404 : 200, evt.type );
								}
							}
						);

						// Use native DOM manipulation to avoid our domManip AJAX trickery
						document.head.appendChild( script[ 0 ] );
					},
					abort: function() {
						if ( callback ) {
							callback();
						}
					}
				};
			}
		} );




		var oldCallbacks = [],
			rjsonp = /(=)\?(?=&|$)|\?\?/;

		// Default jsonp settings
		jQuery.ajaxSetup( {
			jsonp: "callback",
			jsonpCallback: function() {
				var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
				this[ callback ] = true;
				return callback;
			}
		} );

		// Detect, normalize options and install callbacks for jsonp requests
		jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

			var callbackName, overwritten, responseContainer,
				jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
					"url" :
					typeof s.data === "string" &&
						( s.contentType || "" )
							.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
						rjsonp.test( s.data ) && "data"
				);

			// Handle iff the expected data type is "jsonp" or we have a parameter to set
			if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

				// Get callback name, remembering preexisting value associated with it
				callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
					s.jsonpCallback() :
					s.jsonpCallback;

				// Insert callback into url or form data
				if ( jsonProp ) {
					s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
				} else if ( s.jsonp !== false ) {
					s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
				}

				// Use data converter to retrieve json after script execution
				s.converters[ "script json" ] = function() {
					if ( !responseContainer ) {
						jQuery.error( callbackName + " was not called" );
					}
					return responseContainer[ 0 ];
				};

				// Force json dataType
				s.dataTypes[ 0 ] = "json";

				// Install callback
				overwritten = window[ callbackName ];
				window[ callbackName ] = function() {
					responseContainer = arguments;
				};

				// Clean-up function (fires after converters)
				jqXHR.always( function() {

					// If previous value didn't exist - remove it
					if ( overwritten === undefined ) {
						jQuery( window ).removeProp( callbackName );

					// Otherwise restore preexisting value
					} else {
						window[ callbackName ] = overwritten;
					}

					// Save back as free
					if ( s[ callbackName ] ) {

						// Make sure that re-using the options doesn't screw things around
						s.jsonpCallback = originalSettings.jsonpCallback;

						// Save the callback name for future use
						oldCallbacks.push( callbackName );
					}

					// Call if it was a function and we have a response
					if ( responseContainer && isFunction( overwritten ) ) {
						overwritten( responseContainer[ 0 ] );
					}

					responseContainer = overwritten = undefined;
				} );

				// Delegate to script
				return "script";
			}
		} );




		// Support: Safari 8 only
		// In Safari 8 documents created via document.implementation.createHTMLDocument
		// collapse sibling forms: the second one becomes a child of the first one.
		// Because of that, this security measure has to be disabled in Safari 8.
		// https://bugs.webkit.org/show_bug.cgi?id=137337
		support.createHTMLDocument = ( function() {
			var body = document.implementation.createHTMLDocument( "" ).body;
			body.innerHTML = "<form></form><form></form>";
			return body.childNodes.length === 2;
		} )();


		// Argument "data" should be string of html
		// context (optional): If specified, the fragment will be created in this context,
		// defaults to document
		// keepScripts (optional): If true, will include scripts passed in the html string
		jQuery.parseHTML = function( data, context, keepScripts ) {
			if ( typeof data !== "string" ) {
				return [];
			}
			if ( typeof context === "boolean" ) {
				keepScripts = context;
				context = false;
			}

			var base, parsed, scripts;

			if ( !context ) {

				// Stop scripts or inline event handlers from being executed immediately
				// by using document.implementation
				if ( support.createHTMLDocument ) {
					context = document.implementation.createHTMLDocument( "" );

					// Set the base href for the created document
					// so any parsed elements with URLs
					// are based on the document's URL (gh-2965)
					base = context.createElement( "base" );
					base.href = document.location.href;
					context.head.appendChild( base );
				} else {
					context = document;
				}
			}

			parsed = rsingleTag.exec( data );
			scripts = !keepScripts && [];

			// Single tag
			if ( parsed ) {
				return [ context.createElement( parsed[ 1 ] ) ];
			}

			parsed = buildFragment( [ data ], context, scripts );

			if ( scripts && scripts.length ) {
				jQuery( scripts ).remove();
			}

			return jQuery.merge( [], parsed.childNodes );
		};


		/**
		 * Load a url into a page
		 */
		jQuery.fn.load = function( url, params, callback ) {
			var selector, type, response,
				self = this,
				off = url.indexOf( " " );

			if ( off > -1 ) {
				selector = stripAndCollapse( url.slice( off ) );
				url = url.slice( 0, off );
			}

			// If it's a function
			if ( isFunction( params ) ) {

				// We assume that it's the callback
				callback = params;
				params = undefined;

			// Otherwise, build a param string
			} else if ( params && typeof params === "object" ) {
				type = "POST";
			}

			// If we have elements to modify, make the request
			if ( self.length > 0 ) {
				jQuery.ajax( {
					url: url,

					// If "type" variable is undefined, then "GET" method will be used.
					// Make value of this field explicit since
					// user can override it through ajaxSetup method
					type: type || "GET",
					dataType: "html",
					data: params
				} ).done( function( responseText ) {

					// Save response for use in complete callback
					response = arguments;

					self.html( selector ?

						// If a selector was specified, locate the right elements in a dummy div
						// Exclude scripts to avoid IE 'Permission Denied' errors
						jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

						// Otherwise use the full result
						responseText );

				// If the request succeeds, this function gets "data", "status", "jqXHR"
				// but they are ignored because response was set above.
				// If it fails, this function gets "jqXHR", "status", "error"
				} ).always( callback && function( jqXHR, status ) {
					self.each( function() {
						callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
					} );
				} );
			}

			return this;
		};




		// Attach a bunch of functions for handling common AJAX events
		jQuery.each( [
			"ajaxStart",
			"ajaxStop",
			"ajaxComplete",
			"ajaxError",
			"ajaxSuccess",
			"ajaxSend"
		], function( i, type ) {
			jQuery.fn[ type ] = function( fn ) {
				return this.on( type, fn );
			};
		} );




		jQuery.expr.pseudos.animated = function( elem ) {
			return jQuery.grep( jQuery.timers, function( fn ) {
				return elem === fn.elem;
			} ).length;
		};




		jQuery.offset = {
			setOffset: function( elem, options, i ) {
				var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
					position = jQuery.css( elem, "position" ),
					curElem = jQuery( elem ),
					props = {};

				// Set position first, in-case top/left are set even on static elem
				if ( position === "static" ) {
					elem.style.position = "relative";
				}

				curOffset = curElem.offset();
				curCSSTop = jQuery.css( elem, "top" );
				curCSSLeft = jQuery.css( elem, "left" );
				calculatePosition = ( position === "absolute" || position === "fixed" ) &&
					( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

				// Need to be able to calculate position if either
				// top or left is auto and position is either absolute or fixed
				if ( calculatePosition ) {
					curPosition = curElem.position();
					curTop = curPosition.top;
					curLeft = curPosition.left;

				} else {
					curTop = parseFloat( curCSSTop ) || 0;
					curLeft = parseFloat( curCSSLeft ) || 0;
				}

				if ( isFunction( options ) ) {

					// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
					options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
				}

				if ( options.top != null ) {
					props.top = ( options.top - curOffset.top ) + curTop;
				}
				if ( options.left != null ) {
					props.left = ( options.left - curOffset.left ) + curLeft;
				}

				if ( "using" in options ) {
					options.using.call( elem, props );

				} else {
					curElem.css( props );
				}
			}
		};

		jQuery.fn.extend( {

			// offset() relates an element's border box to the document origin
			offset: function( options ) {

				// Preserve chaining for setter
				if ( arguments.length ) {
					return options === undefined ?
						this :
						this.each( function( i ) {
							jQuery.offset.setOffset( this, options, i );
						} );
				}

				var rect, win,
					elem = this[ 0 ];

				if ( !elem ) {
					return;
				}

				// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
				// Support: IE <=11 only
				// Running getBoundingClientRect on a
				// disconnected node in IE throws an error
				if ( !elem.getClientRects().length ) {
					return { top: 0, left: 0 };
				}

				// Get document-relative position by adding viewport scroll to viewport-relative gBCR
				rect = elem.getBoundingClientRect();
				win = elem.ownerDocument.defaultView;
				return {
					top: rect.top + win.pageYOffset,
					left: rect.left + win.pageXOffset
				};
			},

			// position() relates an element's margin box to its offset parent's padding box
			// This corresponds to the behavior of CSS absolute positioning
			position: function() {
				if ( !this[ 0 ] ) {
					return;
				}

				var offsetParent, offset, doc,
					elem = this[ 0 ],
					parentOffset = { top: 0, left: 0 };

				// position:fixed elements are offset from the viewport, which itself always has zero offset
				if ( jQuery.css( elem, "position" ) === "fixed" ) {

					// Assume position:fixed implies availability of getBoundingClientRect
					offset = elem.getBoundingClientRect();

				} else {
					offset = this.offset();

					// Account for the *real* offset parent, which can be the document or its root element
					// when a statically positioned element is identified
					doc = elem.ownerDocument;
					offsetParent = elem.offsetParent || doc.documentElement;
					while ( offsetParent &&
						( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
						jQuery.css( offsetParent, "position" ) === "static" ) {

						offsetParent = offsetParent.parentNode;
					}
					if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

						// Incorporate borders into its offset, since they are outside its content origin
						parentOffset = jQuery( offsetParent ).offset();
						parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
						parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
					}
				}

				// Subtract parent offsets and element margins
				return {
					top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
					left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
				};
			},

			// This method will return documentElement in the following cases:
			// 1) For the element inside the iframe without offsetParent, this method will return
			//    documentElement of the parent window
			// 2) For the hidden or detached element
			// 3) For body or html element, i.e. in case of the html node - it will return itself
			//
			// but those exceptions were never presented as a real life use-cases
			// and might be considered as more preferable results.
			//
			// This logic, however, is not guaranteed and can change at any point in the future
			offsetParent: function() {
				return this.map( function() {
					var offsetParent = this.offsetParent;

					while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
						offsetParent = offsetParent.offsetParent;
					}

					return offsetParent || documentElement;
				} );
			}
		} );

		// Create scrollLeft and scrollTop methods
		jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
			var top = "pageYOffset" === prop;

			jQuery.fn[ method ] = function( val ) {
				return access( this, function( elem, method, val ) {

					// Coalesce documents and windows
					var win;
					if ( isWindow( elem ) ) {
						win = elem;
					} else if ( elem.nodeType === 9 ) {
						win = elem.defaultView;
					}

					if ( val === undefined ) {
						return win ? win[ prop ] : elem[ method ];
					}

					if ( win ) {
						win.scrollTo(
							!top ? val : win.pageXOffset,
							top ? val : win.pageYOffset
						);

					} else {
						elem[ method ] = val;
					}
				}, method, val, arguments.length );
			};
		} );

		// Support: Safari <=7 - 9.1, Chrome <=37 - 49
		// Add the top/left cssHooks using jQuery.fn.position
		// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
		// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
		// getComputedStyle returns percent when specified for top/left/bottom/right;
		// rather than make the css module depend on the offset module, just check for it here
		jQuery.each( [ "top", "left" ], function( i, prop ) {
			jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
				function( elem, computed ) {
					if ( computed ) {
						computed = curCSS( elem, prop );

						// If curCSS returns percentage, fallback to offset
						return rnumnonpx.test( computed ) ?
							jQuery( elem ).position()[ prop ] + "px" :
							computed;
					}
				}
			);
		} );


		// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
		jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
			jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
				function( defaultExtra, funcName ) {

				// Margin is only for outerHeight, outerWidth
				jQuery.fn[ funcName ] = function( margin, value ) {
					var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
						extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

					return access( this, function( elem, type, value ) {
						var doc;

						if ( isWindow( elem ) ) {

							// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
							return funcName.indexOf( "outer" ) === 0 ?
								elem[ "inner" + name ] :
								elem.document.documentElement[ "client" + name ];
						}

						// Get document width or height
						if ( elem.nodeType === 9 ) {
							doc = elem.documentElement;

							// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
							// whichever is greatest
							return Math.max(
								elem.body[ "scroll" + name ], doc[ "scroll" + name ],
								elem.body[ "offset" + name ], doc[ "offset" + name ],
								doc[ "client" + name ]
							);
						}

						return value === undefined ?

							// Get width or height on the element, requesting but not forcing parseFloat
							jQuery.css( elem, type, extra ) :

							// Set width or height on the element
							jQuery.style( elem, type, value, extra );
					}, type, chainable ? margin : undefined, chainable );
				};
			} );
		} );


		jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
			"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
			"change select submit keydown keypress keyup contextmenu" ).split( " " ),
			function( i, name ) {

			// Handle event binding
			jQuery.fn[ name ] = function( data, fn ) {
				return arguments.length > 0 ?
					this.on( name, null, data, fn ) :
					this.trigger( name );
			};
		} );

		jQuery.fn.extend( {
			hover: function( fnOver, fnOut ) {
				return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
			}
		} );




		jQuery.fn.extend( {

			bind: function( types, data, fn ) {
				return this.on( types, null, data, fn );
			},
			unbind: function( types, fn ) {
				return this.off( types, null, fn );
			},

			delegate: function( selector, types, data, fn ) {
				return this.on( types, selector, data, fn );
			},
			undelegate: function( selector, types, fn ) {

				// ( namespace ) or ( selector, types [, fn] )
				return arguments.length === 1 ?
					this.off( selector, "**" ) :
					this.off( types, selector || "**", fn );
			}
		} );

		// Bind a function to a context, optionally partially applying any
		// arguments.
		// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
		// However, it is not slated for removal any time soon
		jQuery.proxy = function( fn, context ) {
			var tmp, args, proxy;

			if ( typeof context === "string" ) {
				tmp = fn[ context ];
				context = fn;
				fn = tmp;
			}

			// Quick check to determine if target is callable, in the spec
			// this throws a TypeError, but we will just return undefined.
			if ( !isFunction( fn ) ) {
				return undefined;
			}

			// Simulated bind
			args = slice.call( arguments, 2 );
			proxy = function() {
				return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
			};

			// Set the guid of unique handler to the same of original handler, so it can be removed
			proxy.guid = fn.guid = fn.guid || jQuery.guid++;

			return proxy;
		};

		jQuery.holdReady = function( hold ) {
			if ( hold ) {
				jQuery.readyWait++;
			} else {
				jQuery.ready( true );
			}
		};
		jQuery.isArray = Array.isArray;
		jQuery.parseJSON = JSON.parse;
		jQuery.nodeName = nodeName;
		jQuery.isFunction = isFunction;
		jQuery.isWindow = isWindow;
		jQuery.camelCase = camelCase;
		jQuery.type = toType;

		jQuery.now = Date.now;

		jQuery.isNumeric = function( obj ) {

			// As of jQuery 3.0, isNumeric is limited to
			// strings and numbers (primitives or objects)
			// that can be coerced to finite numbers (gh-2662)
			var type = jQuery.type( obj );
			return ( type === "number" || type === "string" ) &&

				// parseFloat NaNs numeric-cast false positives ("")
				// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
				// subtraction forces infinities to NaN
				!isNaN( obj - parseFloat( obj ) );
		};




		// Register as a named AMD module, since jQuery can be concatenated with other
		// files that may use define, but not via a proper concatenation script that
		// understands anonymous AMD modules. A named AMD is safest and most robust
		// way to register. Lowercase jquery is used because AMD module names are
		// derived from file names, and jQuery is normally delivered in a lowercase
		// file name. Do this after creating the global so that if an AMD module wants
		// to call noConflict to hide this version of jQuery, it will work.

		// Note that for maximum portability, libraries that are not jQuery should
		// declare themselves as anonymous modules, and avoid setting a global if an
		// AMD loader is present. jQuery is a special case. For more information, see
		// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

		if ( typeof define === "function" && define.amd ) {
			define( "jquery", [], function() {
				return jQuery;
			} );
		}




		var

			// Map over jQuery in case of overwrite
			_jQuery = window.jQuery,

			// Map over the $ in case of overwrite
			_$ = window.$;

		jQuery.noConflict = function( deep ) {
			if ( window.$ === jQuery ) {
				window.$ = _$;
			}

			if ( deep && window.jQuery === jQuery ) {
				window.jQuery = _jQuery;
			}

			return jQuery;
		};

		// Expose jQuery and $ identifiers, even in AMD
		// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
		// and CommonJS for browser emulators (#13566)
		if ( !noGlobal ) {
			window.jQuery = window.$ = jQuery;
		}




		return jQuery;
		} );

		},{}],692:[function(require,module,exports){
		exports.parse = require('./lib/parse');
		exports.stringify = require('./lib/stringify');

		},{"./lib/parse":693,"./lib/stringify":694}],693:[function(require,module,exports){
		var at, // The index of the current character
		    ch, // The current character
		    escapee = {
		        '"':  '"',
		        '\\': '\\',
		        '/':  '/',
		        b:    '\b',
		        f:    '\f',
		        n:    '\n',
		        r:    '\r',
		        t:    '\t'
		    },
		    text,

		    error = function (m) {
		        // Call error when something is wrong.
		        throw {
		            name:    'SyntaxError',
		            message: m,
		            at:      at,
		            text:    text
		        };
		    },
		    
		    next = function (c) {
		        // If a c parameter is provided, verify that it matches the current character.
		        if (c && c !== ch) {
		            error("Expected '" + c + "' instead of '" + ch + "'");
		        }
		        
		        // Get the next character. When there are no more characters,
		        // return the empty string.
		        
		        ch = text.charAt(at);
		        at += 1;
		        return ch;
		    },
		    
		    number = function () {
		        // Parse a number value.
		        var number,
		            string = '';
		        
		        if (ch === '-') {
		            string = '-';
		            next('-');
		        }
		        while (ch >= '0' && ch <= '9') {
		            string += ch;
		            next();
		        }
		        if (ch === '.') {
		            string += '.';
		            while (next() && ch >= '0' && ch <= '9') {
		                string += ch;
		            }
		        }
		        if (ch === 'e' || ch === 'E') {
		            string += ch;
		            next();
		            if (ch === '-' || ch === '+') {
		                string += ch;
		                next();
		            }
		            while (ch >= '0' && ch <= '9') {
		                string += ch;
		                next();
		            }
		        }
		        number = +string;
		        if (!isFinite(number)) {
		            error("Bad number");
		        } else {
		            return number;
		        }
		    },
		    
		    string = function () {
		        // Parse a string value.
		        var hex,
		            i,
		            string = '',
		            uffff;
		        
		        // When parsing for string values, we must look for " and \ characters.
		        if (ch === '"') {
		            while (next()) {
		                if (ch === '"') {
		                    next();
		                    return string;
		                } else if (ch === '\\') {
		                    next();
		                    if (ch === 'u') {
		                        uffff = 0;
		                        for (i = 0; i < 4; i += 1) {
		                            hex = parseInt(next(), 16);
		                            if (!isFinite(hex)) {
		                                break;
		                            }
		                            uffff = uffff * 16 + hex;
		                        }
		                        string += String.fromCharCode(uffff);
		                    } else if (typeof escapee[ch] === 'string') {
		                        string += escapee[ch];
		                    } else {
		                        break;
		                    }
		                } else {
		                    string += ch;
		                }
		            }
		        }
		        error("Bad string");
		    },

		    white = function () {

		// Skip whitespace.

		        while (ch && ch <= ' ') {
		            next();
		        }
		    },

		    word = function () {

		// true, false, or null.

		        switch (ch) {
		        case 't':
		            next('t');
		            next('r');
		            next('u');
		            next('e');
		            return true;
		        case 'f':
		            next('f');
		            next('a');
		            next('l');
		            next('s');
		            next('e');
		            return false;
		        case 'n':
		            next('n');
		            next('u');
		            next('l');
		            next('l');
		            return null;
		        }
		        error("Unexpected '" + ch + "'");
		    },

		    value,  // Place holder for the value function.

		    array = function () {

		// Parse an array value.

		        var array = [];

		        if (ch === '[') {
		            next('[');
		            white();
		            if (ch === ']') {
		                next(']');
		                return array;   // empty array
		            }
		            while (ch) {
		                array.push(value());
		                white();
		                if (ch === ']') {
		                    next(']');
		                    return array;
		                }
		                next(',');
		                white();
		            }
		        }
		        error("Bad array");
		    },

		    object = function () {

		// Parse an object value.

		        var key,
		            object = {};

		        if (ch === '{') {
		            next('{');
		            white();
		            if (ch === '}') {
		                next('}');
		                return object;   // empty object
		            }
		            while (ch) {
		                key = string();
		                white();
		                next(':');
		                if (Object.hasOwnProperty.call(object, key)) {
		                    error('Duplicate key "' + key + '"');
		                }
		                object[key] = value();
		                white();
		                if (ch === '}') {
		                    next('}');
		                    return object;
		                }
		                next(',');
		                white();
		            }
		        }
		        error("Bad object");
		    };

		value = function () {

		// Parse a JSON value. It could be an object, an array, a string, a number,
		// or a word.

		    white();
		    switch (ch) {
		    case '{':
		        return object();
		    case '[':
		        return array();
		    case '"':
		        return string();
		    case '-':
		        return number();
		    default:
		        return ch >= '0' && ch <= '9' ? number() : word();
		    }
		};

		// Return the json_parse function. It will have access to all of the above
		// functions and variables.

		module.exports = function (source, reviver) {
		    var result;
		    
		    text = source;
		    at = 0;
		    ch = ' ';
		    result = value();
		    white();
		    if (ch) {
		        error("Syntax error");
		    }

		    // If there is a reviver function, we recursively walk the new structure,
		    // passing each name/value pair to the reviver function for possible
		    // transformation, starting with a temporary root object that holds the result
		    // in an empty key. If there is not a reviver function, we simply return the
		    // result.

		    return typeof reviver === 'function' ? (function walk(holder, key) {
		        var k, v, value = holder[key];
		        if (value && typeof value === 'object') {
		            for (k in value) {
		                if (Object.prototype.hasOwnProperty.call(value, k)) {
		                    v = walk(value, k);
		                    if (v !== undefined) {
		                        value[k] = v;
		                    } else {
		                        delete value[k];
		                    }
		                }
		            }
		        }
		        return reviver.call(holder, key, value);
		    }({'': result}, '')) : result;
		};

		},{}],694:[function(require,module,exports){
		var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
		    escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
		    gap,
		    indent,
		    meta = {    // table of character substitutions
		        '\b': '\\b',
		        '\t': '\\t',
		        '\n': '\\n',
		        '\f': '\\f',
		        '\r': '\\r',
		        '"' : '\\"',
		        '\\': '\\\\'
		    },
		    rep;

		function quote(string) {
		    // If the string contains no control characters, no quote characters, and no
		    // backslash characters, then we can safely slap some quotes around it.
		    // Otherwise we must also replace the offending characters with safe escape
		    // sequences.
		    
		    escapable.lastIndex = 0;
		    return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
		        var c = meta[a];
		        return typeof c === 'string' ? c :
		            '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
		    }) + '"' : '"' + string + '"';
		}

		function str(key, holder) {
		    // Produce a string from holder[key].
		    var i,          // The loop counter.
		        k,          // The member key.
		        v,          // The member value.
		        length,
		        mind = gap,
		        partial,
		        value = holder[key];
		    
		    // If the value has a toJSON method, call it to obtain a replacement value.
		    if (value && typeof value === 'object' &&
		            typeof value.toJSON === 'function') {
		        value = value.toJSON(key);
		    }
		    
		    // If we were called with a replacer function, then call the replacer to
		    // obtain a replacement value.
		    if (typeof rep === 'function') {
		        value = rep.call(holder, key, value);
		    }
		    
		    // What happens next depends on the value's type.
		    switch (typeof value) {
		        case 'string':
		            return quote(value);
		        
		        case 'number':
		            // JSON numbers must be finite. Encode non-finite numbers as null.
		            return isFinite(value) ? String(value) : 'null';
		        
		        case 'boolean':
		        case 'null':
		            // If the value is a boolean or null, convert it to a string. Note:
		            // typeof null does not produce 'null'. The case is included here in
		            // the remote chance that this gets fixed someday.
		            return String(value);
		            
		        case 'object':
		            if (!value) return 'null';
		            gap += indent;
		            partial = [];
		            
		            // Array.isArray
		            if (Object.prototype.toString.apply(value) === '[object Array]') {
		                length = value.length;
		                for (i = 0; i < length; i += 1) {
		                    partial[i] = str(i, value) || 'null';
		                }
		                
		                // Join all of the elements together, separated with commas, and
		                // wrap them in brackets.
		                v = partial.length === 0 ? '[]' : gap ?
		                    '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' :
		                    '[' + partial.join(',') + ']';
		                gap = mind;
		                return v;
		            }
		            
		            // If the replacer is an array, use it to select the members to be
		            // stringified.
		            if (rep && typeof rep === 'object') {
		                length = rep.length;
		                for (i = 0; i < length; i += 1) {
		                    k = rep[i];
		                    if (typeof k === 'string') {
		                        v = str(k, value);
		                        if (v) {
		                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
		                        }
		                    }
		                }
		            }
		            else {
		                // Otherwise, iterate through all of the keys in the object.
		                for (k in value) {
		                    if (Object.prototype.hasOwnProperty.call(value, k)) {
		                        v = str(k, value);
		                        if (v) {
		                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
		                        }
		                    }
		                }
		            }
		            
		        // Join all of the member texts together, separated with commas,
		        // and wrap them in braces.

		        v = partial.length === 0 ? '{}' : gap ?
		            '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' :
		            '{' + partial.join(',') + '}';
		        gap = mind;
		        return v;
		    }
		}

		module.exports = function (value, replacer, space) {
		    var i;
		    gap = '';
		    indent = '';
		    
		    // If the space parameter is a number, make an indent string containing that
		    // many spaces.
		    if (typeof space === 'number') {
		        for (i = 0; i < space; i += 1) {
		            indent += ' ';
		        }
		    }
		    // If the space parameter is a string, it will be used as the indent string.
		    else if (typeof space === 'string') {
		        indent = space;
		    }

		    // If there is a replacer, it must be a function or an array.
		    // Otherwise, throw an error.
		    rep = replacer;
		    if (replacer && typeof replacer !== 'function'
		    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
		        throw new Error('JSON.stringify');
		    }
		    
		    // Make a fake root object containing our value under the key of ''.
		    // Return the result of stringifying the value.
		    return str('', {'': value});
		};

		},{}],695:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports['default'] = camelCase;

		var _hyphenateStyleName = require('hyphenate-style-name');

		var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		/**
		 * Convert camel cased property names to dash separated.
		 *
		 * @param {Object} style
		 * @return {Object}
		 */
		function convertCase(style) {
		  var converted = {};

		  for (var prop in style) {
		    converted[(0, _hyphenateStyleName2['default'])(prop)] = style[prop];
		  }

		  if (style.fallbacks) {
		    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);
		  }

		  return converted;
		}

		/**
		 * Allow camel cased property names by converting them back to dasherized.
		 *
		 * @param {Rule} rule
		 */
		function camelCase() {
		  function onProcessStyle(style) {
		    if (Array.isArray(style)) {
		      // Handle rules like @font-face, which can have multiple styles in an array
		      for (var index = 0; index < style.length; index++) {
		        style[index] = convertCase(style[index]);
		      }
		      return style;
		    }

		    return convertCase(style);
		  }

		  function onChangeValue(value, prop, rule) {
		    var hyphenatedProp = (0, _hyphenateStyleName2['default'])(prop);

		    // There was no camel case in place
		    if (prop === hyphenatedProp) return value;

		    rule.prop(hyphenatedProp, value);

		    // Core will ignore that property value we set the proper one above.
		    return null;
		  }

		  return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
		}
		},{"hyphenate-style-name":684}],696:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		/**
		 * Generated jss-default-unit CSS property units
		 *
		 * @type object
		 */
		exports['default'] = {
		  'animation-delay': 'ms',
		  'animation-duration': 'ms',
		  'background-position': 'px',
		  'background-position-x': 'px',
		  'background-position-y': 'px',
		  'background-size': 'px',
		  border: 'px',
		  'border-bottom': 'px',
		  'border-bottom-left-radius': 'px',
		  'border-bottom-right-radius': 'px',
		  'border-bottom-width': 'px',
		  'border-left': 'px',
		  'border-left-width': 'px',
		  'border-radius': 'px',
		  'border-right': 'px',
		  'border-right-width': 'px',
		  'border-spacing': 'px',
		  'border-top': 'px',
		  'border-top-left-radius': 'px',
		  'border-top-right-radius': 'px',
		  'border-top-width': 'px',
		  'border-width': 'px',
		  'border-after-width': 'px',
		  'border-before-width': 'px',
		  'border-end-width': 'px',
		  'border-horizontal-spacing': 'px',
		  'border-start-width': 'px',
		  'border-vertical-spacing': 'px',
		  bottom: 'px',
		  'box-shadow': 'px',
		  'column-gap': 'px',
		  'column-rule': 'px',
		  'column-rule-width': 'px',
		  'column-width': 'px',
		  'flex-basis': 'px',
		  'font-size': 'px',
		  'font-size-delta': 'px',
		  height: 'px',
		  left: 'px',
		  'letter-spacing': 'px',
		  'logical-height': 'px',
		  'logical-width': 'px',
		  margin: 'px',
		  'margin-after': 'px',
		  'margin-before': 'px',
		  'margin-bottom': 'px',
		  'margin-left': 'px',
		  'margin-right': 'px',
		  'margin-top': 'px',
		  'max-height': 'px',
		  'max-width': 'px',
		  'margin-end': 'px',
		  'margin-start': 'px',
		  'mask-position-x': 'px',
		  'mask-position-y': 'px',
		  'mask-size': 'px',
		  'max-logical-height': 'px',
		  'max-logical-width': 'px',
		  'min-height': 'px',
		  'min-width': 'px',
		  'min-logical-height': 'px',
		  'min-logical-width': 'px',
		  motion: 'px',
		  'motion-offset': 'px',
		  outline: 'px',
		  'outline-offset': 'px',
		  'outline-width': 'px',
		  padding: 'px',
		  'padding-bottom': 'px',
		  'padding-left': 'px',
		  'padding-right': 'px',
		  'padding-top': 'px',
		  'padding-after': 'px',
		  'padding-before': 'px',
		  'padding-end': 'px',
		  'padding-start': 'px',
		  'perspective-origin-x': '%',
		  'perspective-origin-y': '%',
		  perspective: 'px',
		  right: 'px',
		  'shape-margin': 'px',
		  size: 'px',
		  'text-indent': 'px',
		  'text-stroke': 'px',
		  'text-stroke-width': 'px',
		  top: 'px',
		  'transform-origin': '%',
		  'transform-origin-x': '%',
		  'transform-origin-y': '%',
		  'transform-origin-z': '%',
		  'transition-delay': 'ms',
		  'transition-duration': 'ms',
		  'vertical-align': 'px',
		  width: 'px',
		  'word-spacing': 'px',
		  // Not existing properties.
		  // Used to avoid issues with jss-expand intergration.
		  'box-shadow-x': 'px',
		  'box-shadow-y': 'px',
		  'box-shadow-blur': 'px',
		  'box-shadow-spread': 'px',
		  'font-line-height': 'px',
		  'text-shadow-x': 'px',
		  'text-shadow-y': 'px',
		  'text-shadow-blur': 'px'
		};
		},{}],697:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

		exports['default'] = defaultUnit;

		var _defaultUnits = require('./defaultUnits');

		var _defaultUnits2 = _interopRequireDefault(_defaultUnits);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		/**
		 * Clones the object and adds a camel cased property version.
		 */
		function addCamelCasedVersion(obj) {
		  var regExp = /(-[a-z])/g;
		  var replace = function replace(str) {
		    return str[1].toUpperCase();
		  };
		  var newObj = {};
		  for (var key in obj) {
		    newObj[key] = obj[key];
		    newObj[key.replace(regExp, replace)] = obj[key];
		  }
		  return newObj;
		}

		var units = addCamelCasedVersion(_defaultUnits2['default']);

		/**
		 * Recursive deep style passing function
		 *
		 * @param {String} current property
		 * @param {(Object|Array|Number|String)} property value
		 * @param {Object} options
		 * @return {(Object|Array|Number|String)} resulting value
		 */
		function iterate(prop, value, options) {
		  if (!value) return value;

		  var convertedValue = value;

		  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
		  if (type === 'object' && Array.isArray(value)) type = 'array';

		  switch (type) {
		    case 'object':
		      if (prop === 'fallbacks') {
		        for (var innerProp in value) {
		          value[innerProp] = iterate(innerProp, value[innerProp], options);
		        }
		        break;
		      }
		      for (var _innerProp in value) {
		        value[_innerProp] = iterate(prop + '-' + _innerProp, value[_innerProp], options);
		      }
		      break;
		    case 'array':
		      for (var i = 0; i < value.length; i++) {
		        value[i] = iterate(prop, value[i], options);
		      }
		      break;
		    case 'number':
		      if (value !== 0) {
		        convertedValue = value + (options[prop] || units[prop] || '');
		      }
		      break;
		    default:
		      break;
		  }

		  return convertedValue;
		}

		/**
		 * Add unit to numeric values.
		 */
		function defaultUnit() {
		  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

		  var camelCasedOptions = addCamelCasedVersion(options);

		  function onProcessStyle(style, rule) {
		    if (rule.type !== 'style') return style;

		    for (var prop in style) {
		      style[prop] = iterate(prop, style[prop], camelCasedOptions);
		    }

		    return style;
		  }

		  function onChangeValue(value, prop) {
		    return iterate(prop, value, camelCasedOptions);
		  }

		  return { onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
		}
		},{"./defaultUnits":696}],698:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		exports['default'] = jssGlobal;

		var _jss = require('jss');

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		var propKey = '@global';
		var prefixKey = '@global ';

		var GlobalContainerRule = function () {
		  function GlobalContainerRule(key, styles, options) {
		    _classCallCheck(this, GlobalContainerRule);

		    this.type = 'global';

		    this.key = key;
		    this.options = options;
		    this.rules = new _jss.RuleList(_extends({}, options, {
		      parent: this
		    }));

		    for (var selector in styles) {
		      this.rules.add(selector, styles[selector], { selector: selector });
		    }

		    this.rules.process();
		  }

		  /**
		   * Get a rule.
		   */


		  _createClass(GlobalContainerRule, [{
		    key: 'getRule',
		    value: function getRule(name) {
		      return this.rules.get(name);
		    }

		    /**
		     * Create and register rule, run plugins.
		     */

		  }, {
		    key: 'addRule',
		    value: function addRule(name, style, options) {
		      var rule = this.rules.add(name, style, options);
		      this.options.jss.plugins.onProcessRule(rule);
		      return rule;
		    }

		    /**
		     * Get index of a rule.
		     */

		  }, {
		    key: 'indexOf',
		    value: function indexOf(rule) {
		      return this.rules.indexOf(rule);
		    }

		    /**
		     * Generates a CSS string.
		     */

		  }, {
		    key: 'toString',
		    value: function toString() {
		      return this.rules.toString();
		    }
		  }]);

		  return GlobalContainerRule;
		}();

		var GlobalPrefixedRule = function () {
		  function GlobalPrefixedRule(name, style, options) {
		    _classCallCheck(this, GlobalPrefixedRule);

		    this.name = name;
		    this.options = options;
		    var selector = name.substr(prefixKey.length);
		    this.rule = options.jss.createRule(selector, style, _extends({}, options, {
		      parent: this,
		      selector: selector
		    }));
		  }

		  _createClass(GlobalPrefixedRule, [{
		    key: 'toString',
		    value: function toString(options) {
		      return this.rule.toString(options);
		    }
		  }]);

		  return GlobalPrefixedRule;
		}();

		var separatorRegExp = /\s*,\s*/g;

		function addScope(selector, scope) {
		  var parts = selector.split(separatorRegExp);
		  var scoped = '';
		  for (var i = 0; i < parts.length; i++) {
		    scoped += scope + ' ' + parts[i].trim();
		    if (parts[i + 1]) scoped += ', ';
		  }
		  return scoped;
		}

		function handleNestedGlobalContainerRule(rule) {
		  var options = rule.options,
		      style = rule.style;

		  var rules = style[propKey];

		  if (!rules) return;

		  for (var name in rules) {
		    options.sheet.addRule(name, rules[name], _extends({}, options, {
		      selector: addScope(name, rule.selector)
		    }));
		  }

		  delete style[propKey];
		}

		function handlePrefixedGlobalRule(rule) {
		  var options = rule.options,
		      style = rule.style;

		  for (var prop in style) {
		    if (prop.substr(0, propKey.length) !== propKey) continue;

		    var selector = addScope(prop.substr(propKey.length), rule.selector);
		    options.sheet.addRule(selector, style[prop], _extends({}, options, {
		      selector: selector
		    }));
		    delete style[prop];
		  }
		}

		/**
		 * Convert nested rules to separate, remove them from original styles.
		 *
		 * @param {Rule} rule
		 * @api public
		 */
		function jssGlobal() {
		  function onCreateRule(name, styles, options) {
		    if (name === propKey) {
		      return new GlobalContainerRule(name, styles, options);
		    }

		    if (name[0] === '@' && name.substr(0, prefixKey.length) === prefixKey) {
		      return new GlobalPrefixedRule(name, styles, options);
		    }

		    var parent = options.parent;


		    if (parent) {
		      if (parent.type === 'global' || parent.options.parent.type === 'global') {
		        options.global = true;
		      }
		    }

		    if (options.global) options.selector = name;

		    return null;
		  }

		  function onProcessRule(rule) {
		    if (rule.type !== 'style') return;

		    handleNestedGlobalContainerRule(rule);
		    handlePrefixedGlobalRule(rule);
		  }

		  return { onCreateRule: onCreateRule, onProcessRule: onProcessRule };
		}
		},{"jss":708}],699:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		exports.default = jssNested;

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var separatorRegExp = /\s*,\s*/g;
		var parentRegExp = /&/g;
		var refRegExp = /\$([\w-]+)/g;

		/**
		 * Convert nested rules to separate, remove them from original styles.
		 *
		 * @param {Rule} rule
		 * @api public
		 */
		function jssNested() {
		  // Get a function to be used for $ref replacement.
		  function getReplaceRef(container) {
		    return function (match, key) {
		      var rule = container.getRule(key);
		      if (rule) return rule.selector;
		      (0, _warning2.default)(false, '[JSS] Could not find the referenced rule %s in %s.', key, container.options.meta || container);
		      return key;
		    };
		  }

		  var hasAnd = function hasAnd(str) {
		    return str.indexOf('&') !== -1;
		  };

		  function replaceParentRefs(nestedProp, parentProp) {
		    var parentSelectors = parentProp.split(separatorRegExp);
		    var nestedSelectors = nestedProp.split(separatorRegExp);

		    var result = '';

		    for (var i = 0; i < parentSelectors.length; i++) {
		      var parent = parentSelectors[i];

		      for (var j = 0; j < nestedSelectors.length; j++) {
		        var nested = nestedSelectors[j];
		        if (result) result += ', ';
		        // Replace all & by the parent or prefix & with the parent.
		        result += hasAnd(nested) ? nested.replace(parentRegExp, parent) : parent + ' ' + nested;
		      }
		    }

		    return result;
		  }

		  function getOptions(rule, container, options) {
		    // Options has been already created, now we only increase index.
		    if (options) return _extends({}, options, { index: options.index + 1 });

		    var nestingLevel = rule.options.nestingLevel;

		    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;

		    return _extends({}, rule.options, {
		      nestingLevel: nestingLevel,
		      index: container.indexOf(rule) + 1
		    });
		  }

		  function onProcessStyle(style, rule) {
		    if (rule.type !== 'style') return style;
		    var container = rule.options.parent;
		    var options = void 0;
		    var replaceRef = void 0;
		    for (var prop in style) {
		      var isNested = hasAnd(prop);
		      var isNestedConditional = prop[0] === '@';

		      if (!isNested && !isNestedConditional) continue;

		      options = getOptions(rule, container, options);

		      if (isNested) {
		        var selector = replaceParentRefs(prop, rule.selector
		        // Lazily create the ref replacer function just once for
		        // all nested rules within the sheet.
		        );if (!replaceRef) replaceRef = getReplaceRef(container
		        // Replace all $refs.
		        );selector = selector.replace(refRegExp, replaceRef);

		        container.addRule(selector, style[prop], _extends({}, options, { selector: selector }));
		      } else if (isNestedConditional) {
		        container
		        // Place conditional right after the parent rule to ensure right ordering.
		        .addRule(prop, null, options).addRule(rule.key, style[prop], { selector: rule.selector });
		      }

		      delete style[prop];
		    }

		    return style;
		  }

		  return { onProcessStyle: onProcessStyle };
		}
		},{"warning":1054}],700:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports['default'] = jssPropsSort;
		/**
		 * Sort props by length.
		 */
		function jssPropsSort() {
		  function sort(prop0, prop1) {
		    return prop0.length - prop1.length;
		  }

		  function onProcessStyle(style, rule) {
		    if (rule.type !== 'style') return style;

		    var newStyle = {};
		    var props = Object.keys(style).sort(sort);
		    for (var prop in props) {
		      newStyle[props[prop]] = style[props[prop]];
		    }
		    return newStyle;
		  }

		  return { onProcessStyle: onProcessStyle };
		}
		},{}],701:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports['default'] = jssVendorPrefixer;

		var _cssVendor = require('css-vendor');

		var vendor = _interopRequireWildcard(_cssVendor);

		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

		/**
		 * Add vendor prefix to a property name when needed.
		 *
		 * @param {Rule} rule
		 * @api public
		 */
		function jssVendorPrefixer() {
		  function onProcessRule(rule) {
		    if (rule.type === 'keyframes') {
		      rule.key = '@' + vendor.prefix.css + rule.key.substr(1);
		    }
		  }

		  function onProcessStyle(style, rule) {
		    if (rule.type !== 'style') return style;

		    for (var prop in style) {
		      var value = style[prop];

		      var changeProp = false;
		      var supportedProp = vendor.supportedProperty(prop);
		      if (supportedProp && supportedProp !== prop) changeProp = true;

		      var changeValue = false;
		      var supportedValue = vendor.supportedValue(supportedProp, value);
		      if (supportedValue && supportedValue !== value) changeValue = true;

		      if (changeProp || changeValue) {
		        if (changeProp) delete style[prop];
		        style[supportedProp || prop] = supportedValue || value;
		      }
		    }

		    return style;
		  }

		  function onChangeValue(value, prop) {
		    return vendor.supportedValue(prop, value);
		  }

		  return { onProcessRule: onProcessRule, onProcessStyle: onProcessStyle, onChangeValue: onChangeValue };
		}
		},{"css-vendor":648}],702:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _isInBrowser = require('is-in-browser');

		var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

		var _StyleSheet = require('./StyleSheet');

		var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

		var _PluginsRegistry = require('./PluginsRegistry');

		var _PluginsRegistry2 = _interopRequireDefault(_PluginsRegistry);

		var _rules = require('./plugins/rules');

		var _rules2 = _interopRequireDefault(_rules);

		var _observables = require('./plugins/observables');

		var _observables2 = _interopRequireDefault(_observables);

		var _functions = require('./plugins/functions');

		var _functions2 = _interopRequireDefault(_functions);

		var _sheets = require('./sheets');

		var _sheets2 = _interopRequireDefault(_sheets);

		var _StyleRule = require('./rules/StyleRule');

		var _StyleRule2 = _interopRequireDefault(_StyleRule);

		var _createGenerateClassName = require('./utils/createGenerateClassName');

		var _createGenerateClassName2 = _interopRequireDefault(_createGenerateClassName);

		var _createRule2 = require('./utils/createRule');

		var _createRule3 = _interopRequireDefault(_createRule2);

		var _DomRenderer = require('./renderers/DomRenderer');

		var _DomRenderer2 = _interopRequireDefault(_DomRenderer);

		var _VirtualRenderer = require('./renderers/VirtualRenderer');

		var _VirtualRenderer2 = _interopRequireDefault(_VirtualRenderer);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		var defaultPlugins = _rules2['default'].concat([_observables2['default'], _functions2['default']]);

		var instanceCounter = 0;

		var Jss = function () {
		  function Jss(options) {
		    _classCallCheck(this, Jss);

		    this.id = instanceCounter++;
		    this.version = "9.8.1";
		    this.plugins = new _PluginsRegistry2['default']();
		    this.options = {
		      createGenerateClassName: _createGenerateClassName2['default'],
		      Renderer: _isInBrowser2['default'] ? _DomRenderer2['default'] : _VirtualRenderer2['default'],
		      plugins: []
		    };
		    this.generateClassName = (0, _createGenerateClassName2['default'])();

		    // eslint-disable-next-line prefer-spread
		    this.use.apply(this, defaultPlugins);
		    this.setup(options);
		  }

		  _createClass(Jss, [{
		    key: 'setup',
		    value: function setup() {
		      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

		      if (options.createGenerateClassName) {
		        this.options.createGenerateClassName = options.createGenerateClassName;
		        // $FlowFixMe
		        this.generateClassName = options.createGenerateClassName();
		      }

		      if (options.insertionPoint != null) this.options.insertionPoint = options.insertionPoint;
		      if (options.virtual || options.Renderer) {
		        this.options.Renderer = options.Renderer || (options.virtual ? _VirtualRenderer2['default'] : _DomRenderer2['default']);
		      }

		      // eslint-disable-next-line prefer-spread
		      if (options.plugins) this.use.apply(this, options.plugins);

		      return this;
		    }

		    /**
		     * Create a Style Sheet.
		     */

		  }, {
		    key: 'createStyleSheet',
		    value: function createStyleSheet(styles) {
		      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		      var index = options.index;
		      if (typeof index !== 'number') {
		        index = _sheets2['default'].index === 0 ? 0 : _sheets2['default'].index + 1;
		      }
		      var sheet = new _StyleSheet2['default'](styles, _extends({}, options, {
		        jss: this,
		        generateClassName: options.generateClassName || this.generateClassName,
		        insertionPoint: this.options.insertionPoint,
		        Renderer: this.options.Renderer,
		        index: index
		      }));
		      this.plugins.onProcessSheet(sheet);

		      return sheet;
		    }

		    /**
		     * Detach the Style Sheet and remove it from the registry.
		     */

		  }, {
		    key: 'removeStyleSheet',
		    value: function removeStyleSheet(sheet) {
		      sheet.detach();
		      _sheets2['default'].remove(sheet);
		      return this;
		    }

		    /**
		     * Create a rule without a Style Sheet.
		     */

		  }, {
		    key: 'createRule',
		    value: function createRule(name) {
		      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
		      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

		      // Enable rule without name for inline styles.
		      if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
		        options = style;
		        style = name;
		        name = undefined;
		      }

		      // Cast from RuleFactoryOptions to RuleOptions
		      // https://stackoverflow.com/questions/41328728/force-casting-in-flow
		      var ruleOptions = options;

		      ruleOptions.jss = this;
		      ruleOptions.Renderer = this.options.Renderer;
		      if (!ruleOptions.generateClassName) ruleOptions.generateClassName = this.generateClassName;
		      if (!ruleOptions.classes) ruleOptions.classes = {};
		      var rule = (0, _createRule3['default'])(name, style, ruleOptions);

		      if (!ruleOptions.selector && rule instanceof _StyleRule2['default']) {
		        rule.selector = '.' + ruleOptions.generateClassName(rule);
		      }

		      this.plugins.onProcessRule(rule);

		      return rule;
		    }

		    /**
		     * Register plugin. Passed function will be invoked with a rule instance.
		     */

		  }, {
		    key: 'use',
		    value: function use() {
		      var _this = this;

		      for (var _len = arguments.length, plugins = Array(_len), _key = 0; _key < _len; _key++) {
		        plugins[_key] = arguments[_key];
		      }

		      plugins.forEach(function (plugin) {
		        // Avoids applying same plugin twice, at least based on ref.
		        if (_this.options.plugins.indexOf(plugin) === -1) {
		          _this.options.plugins.push(plugin);
		          _this.plugins.use(plugin);
		        }
		      });

		      return this;
		    }
		  }]);

		  return Jss;
		}();

		exports['default'] = Jss;
		},{"./PluginsRegistry":703,"./StyleSheet":707,"./plugins/functions":709,"./plugins/observables":710,"./plugins/rules":711,"./renderers/DomRenderer":712,"./renderers/VirtualRenderer":713,"./rules/StyleRule":718,"./sheets":720,"./utils/createGenerateClassName":722,"./utils/createRule":723,"is-in-browser":689}],703:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		var PluginsRegistry = function () {
		  function PluginsRegistry() {
		    _classCallCheck(this, PluginsRegistry);

		    this.hooks = {
		      onCreateRule: [],
		      onProcessRule: [],
		      onProcessStyle: [],
		      onProcessSheet: [],
		      onChangeValue: [],
		      onUpdate: []

		      /**
		       * Call `onCreateRule` hooks and return an object if returned by a hook.
		       */
		    };
		  }

		  _createClass(PluginsRegistry, [{
		    key: 'onCreateRule',
		    value: function onCreateRule(name, decl, options) {
		      for (var i = 0; i < this.hooks.onCreateRule.length; i++) {
		        var rule = this.hooks.onCreateRule[i](name, decl, options);
		        if (rule) return rule;
		      }
		      return null;
		    }

		    /**
		     * Call `onProcessRule` hooks.
		     */

		  }, {
		    key: 'onProcessRule',
		    value: function onProcessRule(rule) {
		      if (rule.isProcessed) return;
		      var sheet = rule.options.sheet;

		      for (var i = 0; i < this.hooks.onProcessRule.length; i++) {
		        this.hooks.onProcessRule[i](rule, sheet);
		      }

		      // $FlowFixMe
		      if (rule.style) this.onProcessStyle(rule.style, rule, sheet);

		      rule.isProcessed = true;
		    }

		    /**
		     * Call `onProcessStyle` hooks.
		     */

		  }, {
		    key: 'onProcessStyle',
		    value: function onProcessStyle(style, rule, sheet) {
		      var nextStyle = style;

		      for (var i = 0; i < this.hooks.onProcessStyle.length; i++) {
		        nextStyle = this.hooks.onProcessStyle[i](nextStyle, rule, sheet);
		        // $FlowFixMe
		        rule.style = nextStyle;
		      }
		    }

		    /**
		     * Call `onProcessSheet` hooks.
		     */

		  }, {
		    key: 'onProcessSheet',
		    value: function onProcessSheet(sheet) {
		      for (var i = 0; i < this.hooks.onProcessSheet.length; i++) {
		        this.hooks.onProcessSheet[i](sheet);
		      }
		    }

		    /**
		     * Call `onUpdate` hooks.
		     */

		  }, {
		    key: 'onUpdate',
		    value: function onUpdate(data, rule, sheet) {
		      for (var i = 0; i < this.hooks.onUpdate.length; i++) {
		        this.hooks.onUpdate[i](data, rule, sheet);
		      }
		    }

		    /**
		     * Call `onChangeValue` hooks.
		     */

		  }, {
		    key: 'onChangeValue',
		    value: function onChangeValue(value, prop, rule) {
		      var processedValue = value;
		      for (var i = 0; i < this.hooks.onChangeValue.length; i++) {
		        processedValue = this.hooks.onChangeValue[i](processedValue, prop, rule);
		      }
		      return processedValue;
		    }

		    /**
		     * Register a plugin.
		     * If function is passed, it is a shortcut for `{onProcessRule}`.
		     */

		  }, {
		    key: 'use',
		    value: function use(plugin) {
		      for (var name in plugin) {
		        if (this.hooks[name]) this.hooks[name].push(plugin[name]);else (0, _warning2['default'])(false, '[JSS] Unknown hook "%s".', name);
		      }
		    }
		  }]);

		  return PluginsRegistry;
		}();

		exports['default'] = PluginsRegistry;
		},{"warning":1054}],704:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _createRule = require('./utils/createRule');

		var _createRule2 = _interopRequireDefault(_createRule);

		var _linkRule = require('./utils/linkRule');

		var _linkRule2 = _interopRequireDefault(_linkRule);

		var _StyleRule = require('./rules/StyleRule');

		var _StyleRule2 = _interopRequireDefault(_StyleRule);

		var _escape = require('./utils/escape');

		var _escape2 = _interopRequireDefault(_escape);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		/**
		 * Contains rules objects and allows adding/removing etc.
		 * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
		 */
		var RuleList = function () {

		  // Original styles object.
		  function RuleList(options) {
		    _classCallCheck(this, RuleList);

		    this.map = {};
		    this.raw = {};
		    this.index = [];

		    this.options = options;
		    this.classes = options.classes;
		  }

		  /**
		   * Create and register rule.
		   *
		   * Will not render after Style Sheet was rendered the first time.
		   */


		  // Used to ensure correct rules order.

		  // Rules registry for access by .get() method.
		  // It contains the same rule registered by name and by selector.


		  _createClass(RuleList, [{
		    key: 'add',
		    value: function add(name, decl, options) {
		      var _options = this.options,
		          parent = _options.parent,
		          sheet = _options.sheet,
		          jss = _options.jss,
		          Renderer = _options.Renderer,
		          generateClassName = _options.generateClassName;


		      options = _extends({
		        classes: this.classes,
		        parent: parent,
		        sheet: sheet,
		        jss: jss,
		        Renderer: Renderer,
		        generateClassName: generateClassName
		      }, options);

		      if (!options.selector && this.classes[name]) {
		        options.selector = '.' + (0, _escape2['default'])(this.classes[name]);
		      }

		      this.raw[name] = decl;

		      var rule = (0, _createRule2['default'])(name, decl, options);

		      var className = void 0;

		      if (!options.selector && rule instanceof _StyleRule2['default']) {
		        className = generateClassName(rule, sheet);
		        rule.selector = '.' + (0, _escape2['default'])(className);
		      }

		      this.register(rule, className);

		      var index = options.index === undefined ? this.index.length : options.index;
		      this.index.splice(index, 0, rule);

		      return rule;
		    }

		    /**
		     * Get a rule.
		     */

		  }, {
		    key: 'get',
		    value: function get(name) {
		      return this.map[name];
		    }

		    /**
		     * Delete a rule.
		     */

		  }, {
		    key: 'remove',
		    value: function remove(rule) {
		      this.unregister(rule);
		      this.index.splice(this.indexOf(rule), 1);
		    }

		    /**
		     * Get index of a rule.
		     */

		  }, {
		    key: 'indexOf',
		    value: function indexOf(rule) {
		      return this.index.indexOf(rule);
		    }

		    /**
		     * Run `onProcessRule()` plugins on every rule.
		     */

		  }, {
		    key: 'process',
		    value: function process() {
		      var plugins = this.options.jss.plugins;
		      // We need to clone array because if we modify the index somewhere else during a loop
		      // we end up with very hard-to-track-down side effects.

		      this.index.slice(0).forEach(plugins.onProcessRule, plugins);
		    }

		    /**
		     * Register a rule in `.map` and `.classes` maps.
		     */

		  }, {
		    key: 'register',
		    value: function register(rule, className) {
		      this.map[rule.key] = rule;
		      if (rule instanceof _StyleRule2['default']) {
		        this.map[rule.selector] = rule;
		        if (className) this.classes[rule.key] = className;
		      }
		    }

		    /**
		     * Unregister a rule.
		     */

		  }, {
		    key: 'unregister',
		    value: function unregister(rule) {
		      delete this.map[rule.key];
		      if (rule instanceof _StyleRule2['default']) {
		        delete this.map[rule.selector];
		        delete this.classes[rule.key];
		      }
		    }

		    /**
		     * Update the function values with a new data.
		     */

		  }, {
		    key: 'update',
		    value: function update(name, data) {
		      var _options2 = this.options,
		          plugins = _options2.jss.plugins,
		          sheet = _options2.sheet;

		      if (typeof name === 'string') {
		        plugins.onUpdate(data, this.get(name), sheet);
		        return;
		      }

		      for (var index = 0; index < this.index.length; index++) {
		        plugins.onUpdate(name, this.index[index], sheet);
		      }
		    }

		    /**
		     * Link renderable rules with CSSRuleList.
		     */

		  }, {
		    key: 'link',
		    value: function link(cssRules) {
		      var map = this.options.sheet.renderer.getUnescapedKeysMap(this.index);

		      for (var i = 0; i < cssRules.length; i++) {
		        var cssRule = cssRules[i];
		        var _key = this.options.sheet.renderer.getKey(cssRule);
		        if (map[_key]) _key = map[_key];
		        var rule = this.map[_key];
		        if (rule) (0, _linkRule2['default'])(rule, cssRule);
		      }
		    }

		    /**
		     * Convert rules to a CSS string.
		     */

		  }, {
		    key: 'toString',
		    value: function toString(options) {
		      var str = '';
		      var sheet = this.options.sheet;

		      var link = sheet ? sheet.options.link : false;

		      for (var index = 0; index < this.index.length; index++) {
		        var rule = this.index[index];
		        var css = rule.toString(options);

		        // No need to render an empty rule.
		        if (!css && !link) continue;

		        if (str) str += '\n';
		        str += css;
		      }

		      return str;
		    }
		  }]);

		  return RuleList;
		}();

		exports['default'] = RuleList;
		},{"./rules/StyleRule":718,"./utils/createRule":723,"./utils/escape":724,"./utils/linkRule":727}],705:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		/**
		 * SheetsManager is like a WeakMap which is designed to count StyleSheet
		 * instances and attach/detach automatically.
		 */
		var SheetsManager = function () {
		  function SheetsManager() {
		    _classCallCheck(this, SheetsManager);

		    this.sheets = [];
		    this.refs = [];
		    this.keys = [];
		  }

		  _createClass(SheetsManager, [{
		    key: 'get',
		    value: function get(key) {
		      var index = this.keys.indexOf(key);
		      return this.sheets[index];
		    }
		  }, {
		    key: 'add',
		    value: function add(key, sheet) {
		      var sheets = this.sheets,
		          refs = this.refs,
		          keys = this.keys;

		      var index = sheets.indexOf(sheet);

		      if (index !== -1) return index;

		      sheets.push(sheet);
		      refs.push(0);
		      keys.push(key);

		      return sheets.length - 1;
		    }
		  }, {
		    key: 'manage',
		    value: function manage(key) {
		      var index = this.keys.indexOf(key);
		      var sheet = this.sheets[index];
		      if (this.refs[index] === 0) sheet.attach();
		      this.refs[index]++;
		      if (!this.keys[index]) this.keys.splice(index, 0, key);
		      return sheet;
		    }
		  }, {
		    key: 'unmanage',
		    value: function unmanage(key) {
		      var index = this.keys.indexOf(key);
		      if (index === -1) {
		        // eslint-ignore-next-line no-console
		        (0, _warning2['default'])(false, "SheetsManager: can't find sheet to unmanage");
		        return;
		      }
		      if (this.refs[index] > 0) {
		        this.refs[index]--;
		        if (this.refs[index] === 0) this.sheets[index].detach();
		      }
		    }
		  }, {
		    key: 'size',
		    get: function get() {
		      return this.keys.length;
		    }
		  }]);

		  return SheetsManager;
		}();

		exports['default'] = SheetsManager;
		},{"warning":1054}],706:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		/**
		 * Sheets registry to access them all at one place.
		 */
		var SheetsRegistry = function () {
		  function SheetsRegistry() {
		    _classCallCheck(this, SheetsRegistry);

		    this.registry = [];
		  }

		  _createClass(SheetsRegistry, [{
		    key: 'add',


		    /**
		     * Register a Style Sheet.
		     */
		    value: function add(sheet) {
		      var registry = this.registry;
		      var index = sheet.options.index;


		      if (registry.indexOf(sheet) !== -1) return;

		      if (registry.length === 0 || index >= this.index) {
		        registry.push(sheet);
		        return;
		      }

		      // Find a position.
		      for (var i = 0; i < registry.length; i++) {
		        if (registry[i].options.index > index) {
		          registry.splice(i, 0, sheet);
		          return;
		        }
		      }
		    }

		    /**
		     * Reset the registry.
		     */

		  }, {
		    key: 'reset',
		    value: function reset() {
		      this.registry = [];
		    }

		    /**
		     * Remove a Style Sheet.
		     */

		  }, {
		    key: 'remove',
		    value: function remove(sheet) {
		      var index = this.registry.indexOf(sheet);
		      this.registry.splice(index, 1);
		    }

		    /**
		     * Convert all attached sheets to a CSS string.
		     */

		  }, {
		    key: 'toString',
		    value: function toString(options) {
		      return this.registry.filter(function (sheet) {
		        return sheet.attached;
		      }).map(function (sheet) {
		        return sheet.toString(options);
		      }).join('\n');
		    }
		  }, {
		    key: 'index',


		    /**
		     * Current highest index number.
		     */
		    get: function get() {
		      return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;
		    }
		  }]);

		  return SheetsRegistry;
		}();

		exports['default'] = SheetsRegistry;
		},{}],707:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _linkRule = require('./utils/linkRule');

		var _linkRule2 = _interopRequireDefault(_linkRule);

		var _RuleList = require('./RuleList');

		var _RuleList2 = _interopRequireDefault(_RuleList);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		var StyleSheet = function () {
		  function StyleSheet(styles, options) {
		    _classCallCheck(this, StyleSheet);

		    this.attached = false;
		    this.deployed = false;
		    this.linked = false;
		    this.classes = {};
		    this.options = _extends({}, options, {
		      sheet: this,
		      parent: this,
		      classes: this.classes
		    });
		    this.renderer = new options.Renderer(this);
		    this.rules = new _RuleList2['default'](this.options);

		    for (var name in styles) {
		      this.rules.add(name, styles[name]);
		    }

		    this.rules.process();
		  }

		  /**
		   * Attach renderable to the render tree.
		   */


		  _createClass(StyleSheet, [{
		    key: 'attach',
		    value: function attach() {
		      if (this.attached) return this;
		      if (!this.deployed) this.deploy();
		      this.renderer.attach();
		      if (!this.linked && this.options.link) this.link();
		      this.attached = true;
		      return this;
		    }

		    /**
		     * Remove renderable from render tree.
		     */

		  }, {
		    key: 'detach',
		    value: function detach() {
		      if (!this.attached) return this;
		      this.renderer.detach();
		      this.attached = false;
		      return this;
		    }

		    /**
		     * Add a rule to the current stylesheet.
		     * Will insert a rule also after the stylesheet has been rendered first time.
		     */

		  }, {
		    key: 'addRule',
		    value: function addRule(name, decl, options) {
		      var queue = this.queue;

		      // Plugins can create rules.
		      // In order to preserve the right order, we need to queue all `.addRule` calls,
		      // which happen after the first `rules.add()` call.

		      if (this.attached && !queue) this.queue = [];

		      var rule = this.rules.add(name, decl, options);
		      this.options.jss.plugins.onProcessRule(rule);

		      if (this.attached) {
		        if (!this.deployed) return rule;
		        // Don't insert rule directly if there is no stringified version yet.
		        // It will be inserted all together when .attach is called.
		        if (queue) queue.push(rule);else {
		          this.insertRule(rule);
		          if (this.queue) {
		            this.queue.forEach(this.insertRule, this);
		            this.queue = undefined;
		          }
		        }
		        return rule;
		      }

		      // We can't add rules to a detached style node.
		      // We will redeploy the sheet once user will attach it.
		      this.deployed = false;

		      return rule;
		    }

		    /**
		     * Insert rule into the StyleSheet
		     */

		  }, {
		    key: 'insertRule',
		    value: function insertRule(rule) {
		      var renderable = this.renderer.insertRule(rule);
		      if (renderable && this.options.link) (0, _linkRule2['default'])(rule, renderable);
		    }

		    /**
		     * Create and add rules.
		     * Will render also after Style Sheet was rendered the first time.
		     */

		  }, {
		    key: 'addRules',
		    value: function addRules(styles, options) {
		      var added = [];
		      for (var name in styles) {
		        added.push(this.addRule(name, styles[name], options));
		      }
		      return added;
		    }

		    /**
		     * Get a rule by name.
		     */

		  }, {
		    key: 'getRule',
		    value: function getRule(name) {
		      return this.rules.get(name);
		    }

		    /**
		     * Delete a rule by name.
		     * Returns `true`: if rule has been deleted from the DOM.
		     */

		  }, {
		    key: 'deleteRule',
		    value: function deleteRule(name) {
		      var rule = this.rules.get(name);

		      if (!rule) return false;

		      this.rules.remove(rule);

		      if (this.attached && rule.renderable) {
		        return this.renderer.deleteRule(rule.renderable);
		      }

		      return true;
		    }

		    /**
		     * Get index of a rule.
		     */

		  }, {
		    key: 'indexOf',
		    value: function indexOf(rule) {
		      return this.rules.indexOf(rule);
		    }

		    /**
		     * Deploy pure CSS string to a renderable.
		     */

		  }, {
		    key: 'deploy',
		    value: function deploy() {
		      this.renderer.deploy();
		      this.deployed = true;
		      return this;
		    }

		    /**
		     * Link renderable CSS rules from sheet with their corresponding models.
		     */

		  }, {
		    key: 'link',
		    value: function link() {
		      var cssRules = this.renderer.getRules();

		      // Is undefined when VirtualRenderer is used.
		      if (cssRules) this.rules.link(cssRules);
		      this.linked = true;
		      return this;
		    }

		    /**
		     * Update the function values with a new data.
		     */

		  }, {
		    key: 'update',
		    value: function update(name, data) {
		      this.rules.update(name, data);
		      return this;
		    }

		    /**
		     * Convert rules to a CSS string.
		     */

		  }, {
		    key: 'toString',
		    value: function toString(options) {
		      return this.rules.toString(options);
		    }
		  }]);

		  return StyleSheet;
		}();

		exports['default'] = StyleSheet;
		},{"./RuleList":704,"./utils/linkRule":727}],708:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.create = exports.createGenerateClassName = exports.sheets = exports.RuleList = exports.SheetsManager = exports.SheetsRegistry = exports.toCssValue = exports.getDynamicStyles = undefined;

		var _getDynamicStyles = require('./utils/getDynamicStyles');

		Object.defineProperty(exports, 'getDynamicStyles', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_getDynamicStyles)['default'];
		  }
		});

		var _toCssValue = require('./utils/toCssValue');

		Object.defineProperty(exports, 'toCssValue', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_toCssValue)['default'];
		  }
		});

		var _SheetsRegistry = require('./SheetsRegistry');

		Object.defineProperty(exports, 'SheetsRegistry', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_SheetsRegistry)['default'];
		  }
		});

		var _SheetsManager = require('./SheetsManager');

		Object.defineProperty(exports, 'SheetsManager', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_SheetsManager)['default'];
		  }
		});

		var _RuleList = require('./RuleList');

		Object.defineProperty(exports, 'RuleList', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_RuleList)['default'];
		  }
		});

		var _sheets = require('./sheets');

		Object.defineProperty(exports, 'sheets', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_sheets)['default'];
		  }
		});

		var _createGenerateClassName = require('./utils/createGenerateClassName');

		Object.defineProperty(exports, 'createGenerateClassName', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_createGenerateClassName)['default'];
		  }
		});

		var _Jss = require('./Jss');

		var _Jss2 = _interopRequireDefault(_Jss);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		/**
		 * Creates a new instance of Jss.
		 */
		var create = exports.create = function create(options) {
		  return new _Jss2['default'](options);
		};

		/**
		 * A global Jss instance.
		 */
		exports['default'] = create();
		},{"./Jss":702,"./RuleList":704,"./SheetsManager":705,"./SheetsRegistry":706,"./sheets":720,"./utils/createGenerateClassName":722,"./utils/getDynamicStyles":725,"./utils/toCssValue":730}],709:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _RuleList = require('../RuleList');

		var _RuleList2 = _interopRequireDefault(_RuleList);

		var _StyleRule = require('../rules/StyleRule');

		var _StyleRule2 = _interopRequireDefault(_StyleRule);

		var _createRule = require('../utils/createRule');

		var _createRule2 = _interopRequireDefault(_createRule);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		// A symbol replacement.
		var now = Date.now();

		var fnValuesNs = 'fnValues' + now;
		var fnStyleNs = 'fnStyle' + ++now;

		exports['default'] = {
		  onCreateRule: function onCreateRule(name, decl, options) {
		    if (typeof decl !== 'function') return null;
		    var rule = (0, _createRule2['default'])(name, {}, options);
		    rule[fnStyleNs] = decl;
		    return rule;
		  },
		  onProcessStyle: function onProcessStyle(style, rule) {
		    var fn = {};
		    for (var prop in style) {
		      var value = style[prop];
		      if (typeof value !== 'function') continue;
		      delete style[prop];
		      fn[prop] = value;
		    }
		    rule = rule;
		    rule[fnValuesNs] = fn;
		    return style;
		  },
		  onUpdate: function onUpdate(data, rule) {
		    // It is a rules container like for e.g. ConditionalRule.
		    if (rule.rules instanceof _RuleList2['default']) {
		      rule.rules.update(data);
		      return;
		    }
		    if (!(rule instanceof _StyleRule2['default'])) return;

		    rule = rule;

		    // If we have a fn values map, it is a rule with function values.
		    if (rule[fnValuesNs]) {
		      for (var prop in rule[fnValuesNs]) {
		        rule.prop(prop, rule[fnValuesNs][prop](data));
		      }
		    }

		    rule = rule;

		    var fnStyle = rule[fnStyleNs];

		    // If we have a style function, the entire rule is dynamic and style object
		    // will be returned from that function.
		    if (fnStyle) {
		      var style = fnStyle(data);
		      for (var _prop in style) {
		        rule.prop(_prop, style[_prop]);
		      }
		    }
		  }
		};
		},{"../RuleList":704,"../rules/StyleRule":718,"../utils/createRule":723}],710:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _StyleRule = require('../rules/StyleRule');

		var _StyleRule2 = _interopRequireDefault(_StyleRule);

		var _createRule = require('../utils/createRule');

		var _createRule2 = _interopRequireDefault(_createRule);

		var _isObservable = require('../utils/isObservable');

		var _isObservable2 = _interopRequireDefault(_isObservable);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		exports['default'] = {
		  onCreateRule: function onCreateRule(name, decl, options) {
		    if (!(0, _isObservable2['default'])(decl)) return null;

		    // Cast `decl` to `Observable`, since it passed the type guard.
		    var style$ = decl;

		    var rule = (0, _createRule2['default'])(name, {}, options);

		    // TODO
		    // Call `stream.subscribe()` returns a subscription, which should be explicitly
		    // unsubscribed from when we know this sheet is no longer needed.
		    style$.subscribe(function (style) {
		      for (var prop in style) {
		        rule.prop(prop, style[prop]);
		      }
		    });

		    return rule;
		  },
		  onProcessRule: function onProcessRule(rule) {
		    if (!(rule instanceof _StyleRule2['default'])) return;
		    var styleRule = rule;
		    var style = styleRule.style;

		    var _loop = function _loop(prop) {
		      var value = style[prop];
		      if (!(0, _isObservable2['default'])(value)) return 'continue';
		      delete style[prop];
		      value.subscribe({
		        next: function next(nextValue) {
		          styleRule.prop(prop, nextValue);
		        }
		      });
		    };

		    for (var prop in style) {
		      var _ret = _loop(prop);

		      if (_ret === 'continue') continue;
		    }
		  }
		};
		},{"../rules/StyleRule":718,"../utils/createRule":723,"../utils/isObservable":726}],711:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _SimpleRule = require('../rules/SimpleRule');

		var _SimpleRule2 = _interopRequireDefault(_SimpleRule);

		var _KeyframesRule = require('../rules/KeyframesRule');

		var _KeyframesRule2 = _interopRequireDefault(_KeyframesRule);

		var _ConditionalRule = require('../rules/ConditionalRule');

		var _ConditionalRule2 = _interopRequireDefault(_ConditionalRule);

		var _FontFaceRule = require('../rules/FontFaceRule');

		var _FontFaceRule2 = _interopRequireDefault(_FontFaceRule);

		var _ViewportRule = require('../rules/ViewportRule');

		var _ViewportRule2 = _interopRequireDefault(_ViewportRule);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		var classes = {
		  '@charset': _SimpleRule2['default'],
		  '@import': _SimpleRule2['default'],
		  '@namespace': _SimpleRule2['default'],
		  '@keyframes': _KeyframesRule2['default'],
		  '@media': _ConditionalRule2['default'],
		  '@supports': _ConditionalRule2['default'],
		  '@font-face': _FontFaceRule2['default'],
		  '@viewport': _ViewportRule2['default'],
		  '@-ms-viewport': _ViewportRule2['default']

		  /**
		   * Generate plugins which will register all rules.
		   */
		};
		exports['default'] = Object.keys(classes).map(function (key) {
		  // https://jsperf.com/indexof-vs-substr-vs-regex-at-the-beginning-3
		  var re = new RegExp('^' + key);
		  var onCreateRule = function onCreateRule(name, decl, options) {
		    return re.test(name) ? new classes[key](name, decl, options) : null;
		  };
		  return { onCreateRule: onCreateRule };
		});
		},{"../rules/ConditionalRule":714,"../rules/FontFaceRule":715,"../rules/KeyframesRule":716,"../rules/SimpleRule":717,"../rules/ViewportRule":719}],712:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _sheets = require('../sheets');

		var _sheets2 = _interopRequireDefault(_sheets);

		var _StyleRule = require('../rules/StyleRule');

		var _StyleRule2 = _interopRequireDefault(_StyleRule);

		var _toCssValue = require('../utils/toCssValue');

		var _toCssValue2 = _interopRequireDefault(_toCssValue);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		/**
		 * Cache the value from the first time a function is called.
		 */
		var memoize = function memoize(fn) {
		  var value = void 0;
		  return function () {
		    if (!value) value = fn();
		    return value;
		  };
		};

		/**
		 * Get a style property value.
		 */
		function getPropertyValue(cssRule, prop) {
		  try {
		    return cssRule.style.getPropertyValue(prop);
		  } catch (err) {
		    // IE may throw if property is unknown.
		    return '';
		  }
		}

		/**
		 * Set a style property.
		 */
		function setProperty(cssRule, prop, value) {
		  try {
		    var cssValue = value;

		    if (Array.isArray(value)) {
		      cssValue = (0, _toCssValue2['default'])(value, true);

		      if (value[value.length - 1] === '!important') {
		        cssRule.style.setProperty(prop, cssValue, 'important');
		        return true;
		      }
		    }

		    cssRule.style.setProperty(prop, cssValue);
		  } catch (err) {
		    // IE may throw if property is unknown.
		    return false;
		  }
		  return true;
		}

		/**
		 * Remove a style property.
		 */
		function removeProperty(cssRule, prop) {
		  try {
		    cssRule.style.removeProperty(prop);
		  } catch (err) {
		    (0, _warning2['default'])(false, '[JSS] DOMException "%s" was thrown. Tried to remove property "%s".', err.message, prop);
		  }
		}

		var CSSRuleTypes = {
		  STYLE_RULE: 1,
		  KEYFRAMES_RULE: 7

		  /**
		   * Get the CSS Rule key.
		   */

		};var getKey = function () {
		  var extractKey = function extractKey(cssText) {
		    var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
		    return cssText.substr(from, cssText.indexOf('{') - 1);
		  };

		  return function (cssRule) {
		    if (cssRule.type === CSSRuleTypes.STYLE_RULE) return cssRule.selectorText;
		    if (cssRule.type === CSSRuleTypes.KEYFRAMES_RULE) {
		      var name = cssRule.name;

		      if (name) return '@keyframes ' + name;

		      // There is no rule.name in the following browsers:
		      // - IE 9
		      // - Safari 7.1.8
		      // - Mobile Safari 9.0.0
		      var cssText = cssRule.cssText;

		      return '@' + extractKey(cssText, cssText.indexOf('keyframes'));
		    }

		    // Conditionals.
		    return extractKey(cssRule.cssText);
		  };
		}();

		/**
		 * Set the selector.
		 */
		function setSelector(cssRule, selectorText) {
		  cssRule.selectorText = selectorText;

		  // Return false if setter was not successful.
		  // Currently works in chrome only.
		  return cssRule.selectorText === selectorText;
		}

		/**
		 * Gets the `head` element upon the first call and caches it.
		 */
		var getHead = memoize(function () {
		  return document.head || document.getElementsByTagName('head')[0];
		});

		/**
		 * Gets a map of rule keys, where the property is an unescaped key and value
		 * is a potentially escaped one.
		 * It is used to identify CSS rules and the corresponding JSS rules. As an identifier
		 * for CSSStyleRule we normally use `selectorText`. Though if original selector text
		 * contains escaped code points e.g. `:not(#\\20)`, CSSOM will compile it to `:not(# )`
		 * and so CSS rule's `selectorText` won't match JSS rule selector.
		 *
		 * https://www.w3.org/International/questions/qa-escapes#cssescapes
		 */
		var getUnescapedKeysMap = function () {
		  var style = void 0;
		  var isAttached = false;

		  return function (rules) {
		    var map = {};
		    // https://github.com/facebook/flow/issues/2696
		    if (!style) style = document.createElement('style');
		    for (var i = 0; i < rules.length; i++) {
		      var rule = rules[i];
		      if (!(rule instanceof _StyleRule2['default'])) continue;
		      var selector = rule.selector;
		      // Only unescape selector over CSSOM if it contains a back slash.

		      if (selector && selector.indexOf('\\') !== -1) {
		        // Lazilly attach when needed.
		        if (!isAttached) {
		          getHead().appendChild(style);
		          isAttached = true;
		        }
		        style.textContent = selector + ' {}';
		        var _style = style,
		            sheet = _style.sheet;

		        if (sheet) {
		          var cssRules = sheet.cssRules;

		          if (cssRules) map[cssRules[0].selectorText] = rule.key;
		        }
		      }
		    }
		    if (isAttached) {
		      getHead().removeChild(style);
		      isAttached = false;
		    }
		    return map;
		  };
		}();

		/**
		 * Find attached sheet with an index higher than the passed one.
		 */
		function findHigherSheet(registry, options) {
		  for (var i = 0; i < registry.length; i++) {
		    var sheet = registry[i];
		    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
		      return sheet;
		    }
		  }
		  return null;
		}

		/**
		 * Find attached sheet with the highest index.
		 */
		function findHighestSheet(registry, options) {
		  for (var i = registry.length - 1; i >= 0; i--) {
		    var sheet = registry[i];
		    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
		      return sheet;
		    }
		  }
		  return null;
		}

		/**
		 * Find a comment with "jss" inside.
		 */
		function findCommentNode(text) {
		  var head = getHead();
		  for (var i = 0; i < head.childNodes.length; i++) {
		    var node = head.childNodes[i];
		    if (node.nodeType === 8 && node.nodeValue.trim() === text) {
		      return node;
		    }
		  }
		  return null;
		}

		/**
		 * Find a node before which we can insert the sheet.
		 */
		function findPrevNode(options) {
		  var registry = _sheets2['default'].registry;


		  if (registry.length > 0) {
		    // Try to insert before the next higher sheet.
		    var sheet = findHigherSheet(registry, options);
		    if (sheet) return sheet.renderer.element;

		    // Otherwise insert after the last attached.
		    sheet = findHighestSheet(registry, options);
		    if (sheet) return sheet.renderer.element.nextElementSibling;
		  }

		  // Try to find a comment placeholder if registry is empty.
		  var insertionPoint = options.insertionPoint;

		  if (insertionPoint && typeof insertionPoint === 'string') {
		    var comment = findCommentNode(insertionPoint);
		    if (comment) return comment.nextSibling;
		    // If user specifies an insertion point and it can't be found in the document -
		    // bad specificity issues may appear.
		    (0, _warning2['default'])(insertionPoint === 'jss', '[JSS] Insertion point "%s" not found.', insertionPoint);
		  }

		  return null;
		}

		/**
		 * Insert style element into the DOM.
		 */
		function insertStyle(style, options) {
		  var insertionPoint = options.insertionPoint;

		  var prevNode = findPrevNode(options);

		  if (prevNode) {
		    var parentNode = prevNode.parentNode;

		    if (parentNode) parentNode.insertBefore(style, prevNode);
		    return;
		  }

		  // Works with iframes and any node types.
		  if (insertionPoint && typeof insertionPoint.nodeType === 'number') {
		    // https://stackoverflow.com/questions/41328728/force-casting-in-flow
		    var insertionPointElement = insertionPoint;
		    var _parentNode = insertionPointElement.parentNode;

		    if (_parentNode) _parentNode.insertBefore(style, insertionPointElement.nextSibling);else (0, _warning2['default'])(false, '[JSS] Insertion point is not in the DOM.');
		    return;
		  }

		  getHead().insertBefore(style, prevNode);
		}

		/**
		 * Read jss nonce setting from the page if the user has set it.
		 */
		var getNonce = memoize(function () {
		  var node = document.querySelector('meta[property="csp-nonce"]');
		  return node ? node.getAttribute('content') : null;
		});

		var DomRenderer = function () {
		  function DomRenderer(sheet) {
		    _classCallCheck(this, DomRenderer);

		    this.getPropertyValue = getPropertyValue;
		    this.setProperty = setProperty;
		    this.removeProperty = removeProperty;
		    this.setSelector = setSelector;
		    this.getKey = getKey;
		    this.getUnescapedKeysMap = getUnescapedKeysMap;
		    this.hasInsertedRules = false;

		    // There is no sheet when the renderer is used from a standalone StyleRule.
		    if (sheet) _sheets2['default'].add(sheet);

		    this.sheet = sheet;

		    var _ref = this.sheet ? this.sheet.options : {},
		        media = _ref.media,
		        meta = _ref.meta,
		        element = _ref.element;

		    this.element = element || document.createElement('style');
		    this.element.type = 'text/css';
		    this.element.setAttribute('data-jss', '');
		    if (media) this.element.setAttribute('media', media);
		    if (meta) this.element.setAttribute('data-meta', meta);
		    var nonce = getNonce();
		    if (nonce) this.element.setAttribute('nonce', nonce);
		  }

		  /**
		   * Insert style element into render tree.
		   */


		  // HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696


		  _createClass(DomRenderer, [{
		    key: 'attach',
		    value: function attach() {
		      // In the case the element node is external and it is already in the DOM.
		      if (this.element.parentNode || !this.sheet) return;

		      // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`
		      // browsers remove those rules.
		      // TODO figure out if its a bug and if it is known.
		      // Workaround is to redeploy the sheet before attaching as a string.
		      if (this.hasInsertedRules) {
		        this.deploy();
		        this.hasInsertedRules = false;
		      }

		      insertStyle(this.element, this.sheet.options);
		    }

		    /**
		     * Remove style element from render tree.
		     */

		  }, {
		    key: 'detach',
		    value: function detach() {
		      this.element.parentNode.removeChild(this.element);
		    }

		    /**
		     * Inject CSS string into element.
		     */

		  }, {
		    key: 'deploy',
		    value: function deploy() {
		      if (!this.sheet) return;
		      this.element.textContent = '\n' + this.sheet.toString() + '\n';
		    }

		    /**
		     * Insert a rule into element.
		     */

		  }, {
		    key: 'insertRule',
		    value: function insertRule(rule, index) {
		      var sheet = this.element.sheet;
		      var cssRules = sheet.cssRules;

		      var str = rule.toString();
		      if (!index) index = cssRules.length;

		      if (!str) return false;

		      try {
		        sheet.insertRule(str, index);
		      } catch (err) {
		        (0, _warning2['default'])(false, '[JSS] Can not insert an unsupported rule \n\r%s', rule);
		        return false;
		      }
		      this.hasInsertedRules = true;

		      return cssRules[index];
		    }

		    /**
		     * Delete a rule.
		     */

		  }, {
		    key: 'deleteRule',
		    value: function deleteRule(cssRule) {
		      var sheet = this.element.sheet;

		      var index = this.indexOf(cssRule);
		      if (index === -1) return false;
		      sheet.deleteRule(index);
		      return true;
		    }

		    /**
		     * Get index of a CSS Rule.
		     */

		  }, {
		    key: 'indexOf',
		    value: function indexOf(cssRule) {
		      var cssRules = this.element.sheet.cssRules;

		      for (var _index = 0; _index < cssRules.length; _index++) {
		        if (cssRule === cssRules[_index]) return _index;
		      }
		      return -1;
		    }

		    /**
		     * Generate a new CSS rule and replace the existing one.
		     */

		  }, {
		    key: 'replaceRule',
		    value: function replaceRule(cssRule, rule) {
		      var index = this.indexOf(cssRule);
		      var newCssRule = this.insertRule(rule, index);
		      this.element.sheet.deleteRule(index);
		      return newCssRule;
		    }

		    /**
		     * Get all rules elements.
		     */

		  }, {
		    key: 'getRules',
		    value: function getRules() {
		      return this.element.sheet.cssRules;
		    }
		  }]);

		  return DomRenderer;
		}();

		exports['default'] = DomRenderer;
		},{"../rules/StyleRule":718,"../sheets":720,"../utils/toCssValue":730,"warning":1054}],713:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		/* eslint-disable class-methods-use-this */

		/**
		 * Rendering backend to do nothing in nodejs.
		 */
		var VirtualRenderer = function () {
		  function VirtualRenderer() {
		    _classCallCheck(this, VirtualRenderer);
		  }

		  _createClass(VirtualRenderer, [{
		    key: 'setProperty',
		    value: function setProperty() {
		      return true;
		    }
		  }, {
		    key: 'getPropertyValue',
		    value: function getPropertyValue() {
		      return '';
		    }
		  }, {
		    key: 'removeProperty',
		    value: function removeProperty() {}
		  }, {
		    key: 'setSelector',
		    value: function setSelector() {
		      return true;
		    }
		  }, {
		    key: 'getKey',
		    value: function getKey() {
		      return '';
		    }
		  }, {
		    key: 'attach',
		    value: function attach() {}
		  }, {
		    key: 'detach',
		    value: function detach() {}
		  }, {
		    key: 'deploy',
		    value: function deploy() {}
		  }, {
		    key: 'insertRule',
		    value: function insertRule() {
		      return false;
		    }
		  }, {
		    key: 'deleteRule',
		    value: function deleteRule() {
		      return true;
		    }
		  }, {
		    key: 'replaceRule',
		    value: function replaceRule() {
		      return false;
		    }
		  }, {
		    key: 'getRules',
		    value: function getRules() {}
		  }, {
		    key: 'indexOf',
		    value: function indexOf() {
		      return -1;
		    }
		  }]);

		  return VirtualRenderer;
		}();

		exports['default'] = VirtualRenderer;
		},{}],714:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _RuleList = require('../RuleList');

		var _RuleList2 = _interopRequireDefault(_RuleList);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		/**
		 * Conditional rule for @media, @supports
		 */
		var ConditionalRule = function () {
		  function ConditionalRule(key, styles, options) {
		    _classCallCheck(this, ConditionalRule);

		    this.type = 'conditional';
		    this.isProcessed = false;

		    this.key = key;
		    this.options = options;
		    this.rules = new _RuleList2['default'](_extends({}, options, { parent: this }));

		    for (var name in styles) {
		      this.rules.add(name, styles[name]);
		    }

		    this.rules.process();
		  }

		  /**
		   * Get a rule.
		   */


		  _createClass(ConditionalRule, [{
		    key: 'getRule',
		    value: function getRule(name) {
		      return this.rules.get(name);
		    }

		    /**
		     * Get index of a rule.
		     */

		  }, {
		    key: 'indexOf',
		    value: function indexOf(rule) {
		      return this.rules.indexOf(rule);
		    }

		    /**
		     * Create and register rule, run plugins.
		     */

		  }, {
		    key: 'addRule',
		    value: function addRule(name, style, options) {
		      var rule = this.rules.add(name, style, options);
		      this.options.jss.plugins.onProcessRule(rule);
		      return rule;
		    }

		    /**
		     * Generates a CSS string.
		     */

		  }, {
		    key: 'toString',
		    value: function toString() {
		      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { indent: 1 };

		      var inner = this.rules.toString(options);
		      return inner ? this.key + ' {\n' + inner + '\n}' : '';
		    }
		  }]);

		  return ConditionalRule;
		}();

		exports['default'] = ConditionalRule;
		},{"../RuleList":704}],715:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _toCss = require('../utils/toCss');

		var _toCss2 = _interopRequireDefault(_toCss);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		var FontFaceRule = function () {
		  function FontFaceRule(key, style, options) {
		    _classCallCheck(this, FontFaceRule);

		    this.type = 'font-face';
		    this.isProcessed = false;

		    this.key = key;
		    this.style = style;
		    this.options = options;
		  }

		  /**
		   * Generates a CSS string.
		   */


		  _createClass(FontFaceRule, [{
		    key: 'toString',
		    value: function toString(options) {
		      if (Array.isArray(this.style)) {
		        var str = '';
		        for (var index = 0; index < this.style.length; index++) {
		          str += (0, _toCss2['default'])(this.key, this.style[index]);
		          if (this.style[index + 1]) str += '\n';
		        }
		        return str;
		      }

		      return (0, _toCss2['default'])(this.key, this.style, options);
		    }
		  }]);

		  return FontFaceRule;
		}();

		exports['default'] = FontFaceRule;
		},{"../utils/toCss":729}],716:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _RuleList = require('../RuleList');

		var _RuleList2 = _interopRequireDefault(_RuleList);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		/**
		 * Rule for @keyframes
		 */
		var KeyframesRule = function () {
		  function KeyframesRule(key, frames, options) {
		    _classCallCheck(this, KeyframesRule);

		    this.type = 'keyframes';
		    this.isProcessed = false;

		    this.key = key;
		    this.options = options;
		    this.rules = new _RuleList2['default'](_extends({}, options, { parent: this }));

		    for (var name in frames) {
		      this.rules.add(name, frames[name], _extends({}, this.options, {
		        parent: this,
		        selector: name
		      }));
		    }

		    this.rules.process();
		  }

		  /**
		   * Generates a CSS string.
		   */


		  _createClass(KeyframesRule, [{
		    key: 'toString',
		    value: function toString() {
		      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { indent: 1 };

		      var inner = this.rules.toString(options);
		      if (inner) inner += '\n';
		      return this.key + ' {\n' + inner + '}';
		    }
		  }]);

		  return KeyframesRule;
		}();

		exports['default'] = KeyframesRule;
		},{"../RuleList":704}],717:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		var SimpleRule = function () {
		  function SimpleRule(key, value, options) {
		    _classCallCheck(this, SimpleRule);

		    this.type = 'simple';
		    this.isProcessed = false;

		    this.key = key;
		    this.value = value;
		    this.options = options;
		  }

		  /**
		   * Generates a CSS string.
		   */
		  // eslint-disable-next-line no-unused-vars


		  _createClass(SimpleRule, [{
		    key: 'toString',
		    value: function toString(options) {
		      if (Array.isArray(this.value)) {
		        var str = '';
		        for (var index = 0; index < this.value.length; index++) {
		          str += this.key + ' ' + this.value[index] + ';';
		          if (this.value[index + 1]) str += '\n';
		        }
		        return str;
		      }

		      return this.key + ' ' + this.value + ';';
		    }
		  }]);

		  return SimpleRule;
		}();

		exports['default'] = SimpleRule;
		},{}],718:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _toCss = require('../utils/toCss');

		var _toCss2 = _interopRequireDefault(_toCss);

		var _toCssValue = require('../utils/toCssValue');

		var _toCssValue2 = _interopRequireDefault(_toCssValue);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		var StyleRule = function () {
		  function StyleRule(key, style, options) {
		    _classCallCheck(this, StyleRule);

		    this.type = 'style';
		    this.isProcessed = false;
		    var sheet = options.sheet,
		        Renderer = options.Renderer,
		        selector = options.selector;

		    this.key = key;
		    this.options = options;
		    this.style = style;
		    if (selector) this.selectorText = selector;
		    this.renderer = sheet ? sheet.renderer : new Renderer();
		  }

		  /**
		   * Set selector string.
		   * Attention: use this with caution. Most browsers didn't implement
		   * selectorText setter, so this may result in rerendering of entire Style Sheet.
		   */


		  _createClass(StyleRule, [{
		    key: 'prop',


		    /**
		     * Get or set a style property.
		     */
		    value: function prop(name, value) {
		      // It's a getter.
		      if (value === undefined) return this.style[name];

		      // Don't do anything if the value has not changed.
		      if (this.style[name] === value) return this;

		      value = this.options.jss.plugins.onChangeValue(value, name, this);

		      var isEmpty = value == null || value === false;
		      var isDefined = name in this.style;

		      // Value is empty and wasn't defined before.
		      if (isEmpty && !isDefined) return this;

		      // We are going to remove this value.
		      var remove = isEmpty && isDefined;

		      if (remove) delete this.style[name];else this.style[name] = value;

		      // Renderable is defined if StyleSheet option `link` is true.
		      if (this.renderable) {
		        if (remove) this.renderer.removeProperty(this.renderable, name);else this.renderer.setProperty(this.renderable, name, value);
		        return this;
		      }

		      var sheet = this.options.sheet;

		      if (sheet && sheet.attached) {
		        (0, _warning2['default'])(false, 'Rule is not linked. Missing sheet option "link: true".');
		      }
		      return this;
		    }

		    /**
		     * Apply rule to an element inline.
		     */

		  }, {
		    key: 'applyTo',
		    value: function applyTo(renderable) {
		      var json = this.toJSON();
		      for (var prop in json) {
		        this.renderer.setProperty(renderable, prop, json[prop]);
		      }return this;
		    }

		    /**
		     * Returns JSON representation of the rule.
		     * Fallbacks are not supported.
		     * Useful for inline styles.
		     */

		  }, {
		    key: 'toJSON',
		    value: function toJSON() {
		      var json = {};
		      for (var prop in this.style) {
		        var value = this.style[prop];
		        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') json[prop] = value;else if (Array.isArray(value)) json[prop] = (0, _toCssValue2['default'])(value);
		      }
		      return json;
		    }

		    /**
		     * Generates a CSS string.
		     */

		  }, {
		    key: 'toString',
		    value: function toString(options) {
		      var sheet = this.options.sheet;

		      var link = sheet ? sheet.options.link : false;
		      var opts = link ? _extends({}, options, { allowEmpty: true }) : options;
		      return (0, _toCss2['default'])(this.selector, this.style, opts);
		    }
		  }, {
		    key: 'selector',
		    set: function set(selector) {
		      if (selector === this.selectorText) return;

		      this.selectorText = selector;

		      if (!this.renderable) return;

		      var hasChanged = this.renderer.setSelector(this.renderable, selector);

		      // If selector setter is not implemented, rerender the rule.
		      if (!hasChanged && this.renderable) {
		        var renderable = this.renderer.replaceRule(this.renderable, this);
		        if (renderable) this.renderable = renderable;
		      }
		    }

		    /**
		     * Get selector string.
		     */
		    ,
		    get: function get() {
		      return this.selectorText;
		    }
		  }]);

		  return StyleRule;
		}();

		exports['default'] = StyleRule;
		},{"../utils/toCss":729,"../utils/toCssValue":730,"warning":1054}],719:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _toCss = require('../utils/toCss');

		var _toCss2 = _interopRequireDefault(_toCss);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		var ViewportRule = function () {
		  function ViewportRule(key, style, options) {
		    _classCallCheck(this, ViewportRule);

		    this.type = 'viewport';
		    this.isProcessed = false;

		    this.key = key;
		    this.style = style;
		    this.options = options;
		  }

		  /**
		   * Generates a CSS string.
		   */


		  _createClass(ViewportRule, [{
		    key: 'toString',
		    value: function toString(options) {
		      return (0, _toCss2['default'])(this.key, this.style, options);
		    }
		  }]);

		  return ViewportRule;
		}();

		exports['default'] = ViewportRule;
		},{"../utils/toCss":729}],720:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _SheetsRegistry = require('./SheetsRegistry');

		var _SheetsRegistry2 = _interopRequireDefault(_SheetsRegistry);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		/**
		 * This is a global sheets registry. Only DomRenderer will add sheets to it.
		 * On the server one should use an own SheetsRegistry instance and add the
		 * sheets to it, because you need to make sure to create a new registry for
		 * each request in order to not leak sheets across requests.
		 */
		exports['default'] = new _SheetsRegistry2['default']();
		},{"./SheetsRegistry":706}],721:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

		exports['default'] = cloneStyle;

		var _isObservable = require('./isObservable');

		var _isObservable2 = _interopRequireDefault(_isObservable);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		var isArray = Array.isArray;
		function cloneStyle(style) {
		  // Support empty values in case user ends up with them by accident.
		  if (style == null) return style;

		  // Support string value for SimpleRule.
		  var typeOfStyle = typeof style === 'undefined' ? 'undefined' : _typeof(style);

		  if (typeOfStyle === 'string' || typeOfStyle === 'number' || typeOfStyle === 'function') {
		    return style;
		  }

		  // Support array for FontFaceRule.
		  if (isArray(style)) return style.map(cloneStyle);

		  // Support Observable styles.  Observables are immutable, so we don't need to
		  // copy them.
		  if ((0, _isObservable2['default'])(style)) return style;

		  var newStyle = {};
		  for (var name in style) {
		    var value = style[name];
		    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {
		      newStyle[name] = cloneStyle(value);
		      continue;
		    }
		    newStyle[name] = value;
		  }

		  return newStyle;
		}
		},{"./isObservable":726}],722:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _StyleSheet = require('../StyleSheet');

		var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

		var _moduleId = require('./moduleId');

		var _moduleId2 = _interopRequireDefault(_moduleId);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		var maxRules = 1e10;


		var env = process.env.NODE_ENV;

		/**
		 * Returns a function which generates unique class names based on counters.
		 * When new generator function is created, rule counter is reseted.
		 * We need to reset the rule counter for SSR for each request.
		 */

		exports['default'] = function () {
		  var ruleCounter = 0;
		  var defaultPrefix = env === 'production' ? 'c' : '';

		  return function (rule, sheet) {
		    ruleCounter += 1;

		    if (ruleCounter > maxRules) {
		      (0, _warning2['default'])(false, '[JSS] You might have a memory leak. Rule counter is at %s.', ruleCounter);
		    }

		    var prefix = defaultPrefix;
		    var jssId = '';

		    if (sheet) {
		      prefix = sheet.options.classNamePrefix || defaultPrefix;
		      if (sheet.options.jss.id != null) jssId += sheet.options.jss.id;
		    }

		    if (env === 'production') {
		      return '' + prefix + _moduleId2['default'] + jssId + ruleCounter;
		    }

		    return prefix + rule.key + '-' + _moduleId2['default'] + (jssId && '-' + jssId) + '-' + ruleCounter;
		  };
		};
		}).call(this,require('_process'))
		},{"../StyleSheet":707,"./moduleId":728,"_process":957,"warning":1054}],723:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports['default'] = createRule;

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _StyleRule = require('../rules/StyleRule');

		var _StyleRule2 = _interopRequireDefault(_StyleRule);

		var _cloneStyle = require('../utils/cloneStyle');

		var _cloneStyle2 = _interopRequireDefault(_cloneStyle);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		/**
		 * Create a rule instance.
		 */
		function createRule() {
		  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'unnamed';
		  var decl = arguments[1];
		  var options = arguments[2];
		  var jss = options.jss;

		  var declCopy = (0, _cloneStyle2['default'])(decl);

		  var rule = jss.plugins.onCreateRule(name, declCopy, options);
		  if (rule) return rule;

		  // It is an at-rule and it has no instance.
		  if (name[0] === '@') {
		    (0, _warning2['default'])(false, '[JSS] Unknown at-rule %s', name);
		  }

		  return new _StyleRule2['default'](name, declCopy, options);
		}
		},{"../rules/StyleRule":718,"../utils/cloneStyle":721,"warning":1054}],724:[function(require,module,exports){
		(function (process,global){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var CSS = global.CSS;

		var env = process.env.NODE_ENV;

		var escapeRegex = /([[\].#*$><+~=|^:(),"'`])/g;

		exports['default'] = function (str) {
		  // We don't need to escape it in production, because we are not using user's
		  // input for selectors, we are generating a valid selector.
		  if (env === 'production') return str;

		  if (!CSS || !CSS.escape) {
		    return str.replace(escapeRegex, '\\$1');
		  }

		  return CSS.escape(str);
		};
		}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"_process":957}],725:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

		exports['default'] = getDynamicStyles;
		/**
		 * Extracts a styles object with only props that contain function values.
		 */
		function getDynamicStyles(styles) {
		  var to = null;

		  for (var key in styles) {
		    var value = styles[key];
		    var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);

		    if (type === 'function') {
		      if (!to) to = {};
		      to[key] = value;
		    } else if (type === 'object' && value !== null && !Array.isArray(value)) {
		      var extracted = getDynamicStyles(value);
		      if (extracted) {
		        if (!to) to = {};
		        to[key] = extracted;
		      }
		    }
		  }

		  return to;
		}
		},{}],726:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _symbolObservable = require('symbol-observable');

		var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		exports['default'] = function (value) {
		  return value && value[_symbolObservable2['default']] && value === value[_symbolObservable2['default']]();
		};
		},{"symbol-observable":1049}],727:[function(require,module,exports){
		"use strict";

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = linkRule;
		/**
		 * Link rule with CSSStyleRule and nested rules with corresponding nested cssRules if both exists.
		 */
		function linkRule(rule, cssRule) {
		  rule.renderable = cssRule;
		  if (rule.rules && cssRule.cssRules) rule.rules.link(cssRule.cssRules);
		}
		},{}],728:[function(require,module,exports){
		(function (global){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var ns = '2f1acc6c3a606b082e5eef5e54414ffb';
		if (global[ns] == null) global[ns] = 0;

		// Bundle may contain multiple JSS versions at the same time. In order to identify
		// the current version with just one short number and use it for classes generation
		// we use a counter. Also it is more accurate, because user can manually reevaluate
		// the module.
		exports['default'] = global[ns]++;
		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{}],729:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports['default'] = toCss;

		var _toCssValue = require('./toCssValue');

		var _toCssValue2 = _interopRequireDefault(_toCssValue);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		/**
		 * Indent a string.
		 * http://jsperf.com/array-join-vs-for
		 */
		function indentStr(str, indent) {
		  var result = '';
		  for (var index = 0; index < indent; index++) {
		    result += '  ';
		  }return result + str;
		}

		/**
		 * Converts a Rule to CSS string.
		 */

		function toCss(selector, style) {
		  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

		  var result = '';

		  if (!style) return result;

		  var _options$indent = options.indent,
		      indent = _options$indent === undefined ? 0 : _options$indent;
		  var fallbacks = style.fallbacks;


		  indent++;

		  // Apply fallbacks first.
		  if (fallbacks) {
		    // Array syntax {fallbacks: [{prop: value}]}
		    if (Array.isArray(fallbacks)) {
		      for (var index = 0; index < fallbacks.length; index++) {
		        var fallback = fallbacks[index];
		        for (var prop in fallback) {
		          var value = fallback[prop];
		          if (value != null) {
		            result += '\n' + indentStr(prop + ': ' + (0, _toCssValue2['default'])(value) + ';', indent);
		          }
		        }
		      }
		    } else {
		      // Object syntax {fallbacks: {prop: value}}
		      for (var _prop in fallbacks) {
		        var _value = fallbacks[_prop];
		        if (_value != null) {
		          result += '\n' + indentStr(_prop + ': ' + (0, _toCssValue2['default'])(_value) + ';', indent);
		        }
		      }
		    }
		  }

		  for (var _prop2 in style) {
		    var _value2 = style[_prop2];
		    if (_value2 != null && _prop2 !== 'fallbacks') {
		      result += '\n' + indentStr(_prop2 + ': ' + (0, _toCssValue2['default'])(_value2) + ';', indent);
		    }
		  }

		  // Allow empty style in this case, because properties will be added dynamically.
		  if (!result && !options.allowEmpty) return result;

		  indent--;
		  result = indentStr(selector + ' {' + result + '\n', indent) + indentStr('}', indent);

		  return result;
		}
		},{"./toCssValue":730}],730:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports['default'] = toCssValue;
		var join = function join(value, by) {
		  var result = '';
		  for (var i = 0; i < value.length; i++) {
		    // Remove !important from the value, it will be readded later.
		    if (value[i] === '!important') break;
		    if (result) result += by;
		    result += value[i];
		  }
		  return result;
		};

		/**
		 * Converts array values to string.
		 *
		 * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
		 * `border: ['1px', '2px']` > `border: 1px, 2px;`
		 * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`
		 * `color: ['red', !important]` > `color: red !important;`
		 */
		function toCssValue(value) {
		  var ignoreImportant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

		  if (!Array.isArray(value)) return value;

		  var cssValue = '';

		  // Support space separated values via `[['5px', '10px']]`.
		  if (Array.isArray(value[0])) {
		    for (var i = 0; i < value.length; i++) {
		      if (value[i] === '!important') break;
		      if (cssValue) cssValue += ', ';
		      cssValue += join(value[i], ' ');
		    }
		  } else cssValue = join(value, ', ');

		  // Add !important, because it was ignored.
		  if (!ignoreImportant && value[value.length - 1] === '!important') {
		    cssValue += ' !important';
		  }

		  return cssValue;
		}
		},{}],731:[function(require,module,exports){
		// Source: http://jsfiddle.net/vWx8V/
		// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes

		/**
		 * Conenience method returns corresponding value for given keyName or keyCode.
		 *
		 * @param {Mixed} keyCode {Number} or keyName {String}
		 * @return {Mixed}
		 * @api public
		 */

		function keyCode(searchInput) {
		  // Keyboard Events
		  if (searchInput && 'object' === typeof searchInput) {
		    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode
		    if (hasKeyCode) searchInput = hasKeyCode
		  }

		  // Numbers
		  if ('number' === typeof searchInput) return names[searchInput]

		  // Everything else (cast to string)
		  var search = String(searchInput)

		  // check codes
		  var foundNamedKey = codes[search.toLowerCase()]
		  if (foundNamedKey) return foundNamedKey

		  // check aliases
		  var foundNamedKey = aliases[search.toLowerCase()]
		  if (foundNamedKey) return foundNamedKey

		  // weird character?
		  if (search.length === 1) return search.charCodeAt(0)

		  return undefined
		}

		/**
		 * Compares a keyboard event with a given keyCode or keyName.
		 *
		 * @param {Event} event Keyboard event that should be tested
		 * @param {Mixed} keyCode {Number} or keyName {String}
		 * @return {Boolean}
		 * @api public
		 */
		keyCode.isEventKey = function isEventKey(event, nameOrCode) {
		  if (event && 'object' === typeof event) {
		    var keyCode = event.which || event.keyCode || event.charCode
		    if (keyCode === null || keyCode === undefined) { return false; }
		    if (typeof nameOrCode === 'string') {
		      // check codes
		      var foundNamedKey = codes[nameOrCode.toLowerCase()]
		      if (foundNamedKey) { return foundNamedKey === keyCode; }
		    
		      // check aliases
		      var foundNamedKey = aliases[nameOrCode.toLowerCase()]
		      if (foundNamedKey) { return foundNamedKey === keyCode; }
		    } else if (typeof nameOrCode === 'number') {
		      return nameOrCode === keyCode;
		    }
		    return false;
		  }
		}

		exports = module.exports = keyCode;

		/**
		 * Get by name
		 *
		 *   exports.code['enter'] // => 13
		 */

		var codes = exports.code = exports.codes = {
		  'backspace': 8,
		  'tab': 9,
		  'enter': 13,
		  'shift': 16,
		  'ctrl': 17,
		  'alt': 18,
		  'pause/break': 19,
		  'caps lock': 20,
		  'esc': 27,
		  'space': 32,
		  'page up': 33,
		  'page down': 34,
		  'end': 35,
		  'home': 36,
		  'left': 37,
		  'up': 38,
		  'right': 39,
		  'down': 40,
		  'insert': 45,
		  'delete': 46,
		  'command': 91,
		  'left command': 91,
		  'right command': 93,
		  'numpad *': 106,
		  'numpad +': 107,
		  'numpad -': 109,
		  'numpad .': 110,
		  'numpad /': 111,
		  'num lock': 144,
		  'scroll lock': 145,
		  'my computer': 182,
		  'my calculator': 183,
		  ';': 186,
		  '=': 187,
		  ',': 188,
		  '-': 189,
		  '.': 190,
		  '/': 191,
		  '`': 192,
		  '[': 219,
		  '\\': 220,
		  ']': 221,
		  "'": 222
		}

		// Helper aliases

		var aliases = exports.aliases = {
		  'windows': 91,
		  '⇧': 16,
		  '⌥': 18,
		  '⌃': 17,
		  '⌘': 91,
		  'ctl': 17,
		  'control': 17,
		  'option': 18,
		  'pause': 19,
		  'break': 19,
		  'caps': 20,
		  'return': 13,
		  'escape': 27,
		  'spc': 32,
		  'spacebar': 32,
		  'pgup': 33,
		  'pgdn': 34,
		  'ins': 45,
		  'del': 46,
		  'cmd': 91
		}

		/*!
		 * Programatically add the following
		 */

		// lower case chars
		for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32

		// numbers
		for (var i = 48; i < 58; i++) codes[i - 48] = i

		// function keys
		for (i = 1; i < 13; i++) codes['f'+i] = i + 111

		// numpad keys
		for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96

		/**
		 * Get by code
		 *
		 *   exports.name[13] // => 'Enter'
		 */

		var names = exports.names = exports.title = {} // title for backward compat

		// Create reverse mapping
		for (i in codes) names[codes[i]] = i

		// Add aliases
		for (var alias in aliases) {
		  codes[alias] = aliases[alias]
		}

		},{}],732:[function(require,module,exports){
		var root = require('./_root');

		/** Built-in value references. */
		var Symbol = root.Symbol;

		module.exports = Symbol;

		},{"./_root":739}],733:[function(require,module,exports){
		var Symbol = require('./_Symbol'),
		    getRawTag = require('./_getRawTag'),
		    objectToString = require('./_objectToString');

		/** `Object#toString` result references. */
		var nullTag = '[object Null]',
		    undefinedTag = '[object Undefined]';

		/** Built-in value references. */
		var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

		/**
		 * The base implementation of `getTag` without fallbacks for buggy environments.
		 *
		 * @private
		 * @param {*} value The value to query.
		 * @returns {string} Returns the `toStringTag`.
		 */
		function baseGetTag(value) {
		  if (value == null) {
		    return value === undefined ? undefinedTag : nullTag;
		  }
		  return (symToStringTag && symToStringTag in Object(value))
		    ? getRawTag(value)
		    : objectToString(value);
		}

		module.exports = baseGetTag;

		},{"./_Symbol":732,"./_getRawTag":736,"./_objectToString":737}],734:[function(require,module,exports){
		(function (global){
		/** Detect free variable `global` from Node.js. */
		var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

		module.exports = freeGlobal;

		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{}],735:[function(require,module,exports){
		var overArg = require('./_overArg');

		/** Built-in value references. */
		var getPrototype = overArg(Object.getPrototypeOf, Object);

		module.exports = getPrototype;

		},{"./_overArg":738}],736:[function(require,module,exports){
		var Symbol = require('./_Symbol');

		/** Used for built-in method references. */
		var objectProto = Object.prototype;

		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;

		/**
		 * Used to resolve the
		 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var nativeObjectToString = objectProto.toString;

		/** Built-in value references. */
		var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

		/**
		 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
		 *
		 * @private
		 * @param {*} value The value to query.
		 * @returns {string} Returns the raw `toStringTag`.
		 */
		function getRawTag(value) {
		  var isOwn = hasOwnProperty.call(value, symToStringTag),
		      tag = value[symToStringTag];

		  try {
		    value[symToStringTag] = undefined;
		    var unmasked = true;
		  } catch (e) {}

		  var result = nativeObjectToString.call(value);
		  if (unmasked) {
		    if (isOwn) {
		      value[symToStringTag] = tag;
		    } else {
		      delete value[symToStringTag];
		    }
		  }
		  return result;
		}

		module.exports = getRawTag;

		},{"./_Symbol":732}],737:[function(require,module,exports){
		/** Used for built-in method references. */
		var objectProto = Object.prototype;

		/**
		 * Used to resolve the
		 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var nativeObjectToString = objectProto.toString;

		/**
		 * Converts `value` to a string using `Object.prototype.toString`.
		 *
		 * @private
		 * @param {*} value The value to convert.
		 * @returns {string} Returns the converted string.
		 */
		function objectToString(value) {
		  return nativeObjectToString.call(value);
		}

		module.exports = objectToString;

		},{}],738:[function(require,module,exports){
		/**
		 * Creates a unary function that invokes `func` with its argument transformed.
		 *
		 * @private
		 * @param {Function} func The function to wrap.
		 * @param {Function} transform The argument transform.
		 * @returns {Function} Returns the new function.
		 */
		function overArg(func, transform) {
		  return function(arg) {
		    return func(transform(arg));
		  };
		}

		module.exports = overArg;

		},{}],739:[function(require,module,exports){
		var freeGlobal = require('./_freeGlobal');

		/** Detect free variable `self`. */
		var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

		/** Used as a reference to the global object. */
		var root = freeGlobal || freeSelf || Function('return this')();

		module.exports = root;

		},{"./_freeGlobal":734}],740:[function(require,module,exports){
		var isObject = require('./isObject'),
		    now = require('./now'),
		    toNumber = require('./toNumber');

		/** Error message constants. */
		var FUNC_ERROR_TEXT = 'Expected a function';

		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max,
		    nativeMin = Math.min;

		/**
		 * Creates a debounced function that delays invoking `func` until after `wait`
		 * milliseconds have elapsed since the last time the debounced function was
		 * invoked. The debounced function comes with a `cancel` method to cancel
		 * delayed `func` invocations and a `flush` method to immediately invoke them.
		 * Provide `options` to indicate whether `func` should be invoked on the
		 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
		 * with the last arguments provided to the debounced function. Subsequent
		 * calls to the debounced function return the result of the last `func`
		 * invocation.
		 *
		 * **Note:** If `leading` and `trailing` options are `true`, `func` is
		 * invoked on the trailing edge of the timeout only if the debounced function
		 * is invoked more than once during the `wait` timeout.
		 *
		 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
		 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
		 *
		 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
		 * for details over the differences between `_.debounce` and `_.throttle`.
		 *
		 * @static
		 * @memberOf _
		 * @since 0.1.0
		 * @category Function
		 * @param {Function} func The function to debounce.
		 * @param {number} [wait=0] The number of milliseconds to delay.
		 * @param {Object} [options={}] The options object.
		 * @param {boolean} [options.leading=false]
		 *  Specify invoking on the leading edge of the timeout.
		 * @param {number} [options.maxWait]
		 *  The maximum time `func` is allowed to be delayed before it's invoked.
		 * @param {boolean} [options.trailing=true]
		 *  Specify invoking on the trailing edge of the timeout.
		 * @returns {Function} Returns the new debounced function.
		 * @example
		 *
		 * // Avoid costly calculations while the window size is in flux.
		 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
		 *
		 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
		 * jQuery(element).on('click', _.debounce(sendMail, 300, {
		 *   'leading': true,
		 *   'trailing': false
		 * }));
		 *
		 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
		 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
		 * var source = new EventSource('/stream');
		 * jQuery(source).on('message', debounced);
		 *
		 * // Cancel the trailing debounced invocation.
		 * jQuery(window).on('popstate', debounced.cancel);
		 */
		function debounce(func, wait, options) {
		  var lastArgs,
		      lastThis,
		      maxWait,
		      result,
		      timerId,
		      lastCallTime,
		      lastInvokeTime = 0,
		      leading = false,
		      maxing = false,
		      trailing = true;

		  if (typeof func != 'function') {
		    throw new TypeError(FUNC_ERROR_TEXT);
		  }
		  wait = toNumber(wait) || 0;
		  if (isObject(options)) {
		    leading = !!options.leading;
		    maxing = 'maxWait' in options;
		    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
		    trailing = 'trailing' in options ? !!options.trailing : trailing;
		  }

		  function invokeFunc(time) {
		    var args = lastArgs,
		        thisArg = lastThis;

		    lastArgs = lastThis = undefined;
		    lastInvokeTime = time;
		    result = func.apply(thisArg, args);
		    return result;
		  }

		  function leadingEdge(time) {
		    // Reset any `maxWait` timer.
		    lastInvokeTime = time;
		    // Start the timer for the trailing edge.
		    timerId = setTimeout(timerExpired, wait);
		    // Invoke the leading edge.
		    return leading ? invokeFunc(time) : result;
		  }

		  function remainingWait(time) {
		    var timeSinceLastCall = time - lastCallTime,
		        timeSinceLastInvoke = time - lastInvokeTime,
		        result = wait - timeSinceLastCall;

		    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
		  }

		  function shouldInvoke(time) {
		    var timeSinceLastCall = time - lastCallTime,
		        timeSinceLastInvoke = time - lastInvokeTime;

		    // Either this is the first call, activity has stopped and we're at the
		    // trailing edge, the system time has gone backwards and we're treating
		    // it as the trailing edge, or we've hit the `maxWait` limit.
		    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
		      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
		  }

		  function timerExpired() {
		    var time = now();
		    if (shouldInvoke(time)) {
		      return trailingEdge(time);
		    }
		    // Restart the timer.
		    timerId = setTimeout(timerExpired, remainingWait(time));
		  }

		  function trailingEdge(time) {
		    timerId = undefined;

		    // Only invoke if we have `lastArgs` which means `func` has been
		    // debounced at least once.
		    if (trailing && lastArgs) {
		      return invokeFunc(time);
		    }
		    lastArgs = lastThis = undefined;
		    return result;
		  }

		  function cancel() {
		    if (timerId !== undefined) {
		      clearTimeout(timerId);
		    }
		    lastInvokeTime = 0;
		    lastArgs = lastCallTime = lastThis = timerId = undefined;
		  }

		  function flush() {
		    return timerId === undefined ? result : trailingEdge(now());
		  }

		  function debounced() {
		    var time = now(),
		        isInvoking = shouldInvoke(time);

		    lastArgs = arguments;
		    lastThis = this;
		    lastCallTime = time;

		    if (isInvoking) {
		      if (timerId === undefined) {
		        return leadingEdge(lastCallTime);
		      }
		      if (maxing) {
		        // Handle invocations in a tight loop.
		        timerId = setTimeout(timerExpired, wait);
		        return invokeFunc(lastCallTime);
		      }
		    }
		    if (timerId === undefined) {
		      timerId = setTimeout(timerExpired, wait);
		    }
		    return result;
		  }
		  debounced.cancel = cancel;
		  debounced.flush = flush;
		  return debounced;
		}

		module.exports = debounce;

		},{"./isObject":741,"./now":745,"./toNumber":746}],741:[function(require,module,exports){
		/**
		 * Checks if `value` is the
		 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
		 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		 *
		 * @static
		 * @memberOf _
		 * @since 0.1.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		 * @example
		 *
		 * _.isObject({});
		 * // => true
		 *
		 * _.isObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isObject(_.noop);
		 * // => true
		 *
		 * _.isObject(null);
		 * // => false
		 */
		function isObject(value) {
		  var type = typeof value;
		  return value != null && (type == 'object' || type == 'function');
		}

		module.exports = isObject;

		},{}],742:[function(require,module,exports){
		/**
		 * Checks if `value` is object-like. A value is object-like if it's not `null`
		 * and has a `typeof` result of "object".
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
		 * @example
		 *
		 * _.isObjectLike({});
		 * // => true
		 *
		 * _.isObjectLike([1, 2, 3]);
		 * // => true
		 *
		 * _.isObjectLike(_.noop);
		 * // => false
		 *
		 * _.isObjectLike(null);
		 * // => false
		 */
		function isObjectLike(value) {
		  return value != null && typeof value == 'object';
		}

		module.exports = isObjectLike;

		},{}],743:[function(require,module,exports){
		var baseGetTag = require('./_baseGetTag'),
		    getPrototype = require('./_getPrototype'),
		    isObjectLike = require('./isObjectLike');

		/** `Object#toString` result references. */
		var objectTag = '[object Object]';

		/** Used for built-in method references. */
		var funcProto = Function.prototype,
		    objectProto = Object.prototype;

		/** Used to resolve the decompiled source of functions. */
		var funcToString = funcProto.toString;

		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;

		/** Used to infer the `Object` constructor. */
		var objectCtorString = funcToString.call(Object);

		/**
		 * Checks if `value` is a plain object, that is, an object created by the
		 * `Object` constructor or one with a `[[Prototype]]` of `null`.
		 *
		 * @static
		 * @memberOf _
		 * @since 0.8.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 * }
		 *
		 * _.isPlainObject(new Foo);
		 * // => false
		 *
		 * _.isPlainObject([1, 2, 3]);
		 * // => false
		 *
		 * _.isPlainObject({ 'x': 0, 'y': 0 });
		 * // => true
		 *
		 * _.isPlainObject(Object.create(null));
		 * // => true
		 */
		function isPlainObject(value) {
		  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
		    return false;
		  }
		  var proto = getPrototype(value);
		  if (proto === null) {
		    return true;
		  }
		  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
		  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
		    funcToString.call(Ctor) == objectCtorString;
		}

		module.exports = isPlainObject;

		},{"./_baseGetTag":733,"./_getPrototype":735,"./isObjectLike":742}],744:[function(require,module,exports){
		var baseGetTag = require('./_baseGetTag'),
		    isObjectLike = require('./isObjectLike');

		/** `Object#toString` result references. */
		var symbolTag = '[object Symbol]';

		/**
		 * Checks if `value` is classified as a `Symbol` primitive or object.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
		 * @example
		 *
		 * _.isSymbol(Symbol.iterator);
		 * // => true
		 *
		 * _.isSymbol('abc');
		 * // => false
		 */
		function isSymbol(value) {
		  return typeof value == 'symbol' ||
		    (isObjectLike(value) && baseGetTag(value) == symbolTag);
		}

		module.exports = isSymbol;

		},{"./_baseGetTag":733,"./isObjectLike":742}],745:[function(require,module,exports){
		var root = require('./_root');

		/**
		 * Gets the timestamp of the number of milliseconds that have elapsed since
		 * the Unix epoch (1 January 1970 00:00:00 UTC).
		 *
		 * @static
		 * @memberOf _
		 * @since 2.4.0
		 * @category Date
		 * @returns {number} Returns the timestamp.
		 * @example
		 *
		 * _.defer(function(stamp) {
		 *   console.log(_.now() - stamp);
		 * }, _.now());
		 * // => Logs the number of milliseconds it took for the deferred invocation.
		 */
		var now = function() {
		  return root.Date.now();
		};

		module.exports = now;

		},{"./_root":739}],746:[function(require,module,exports){
		var isObject = require('./isObject'),
		    isSymbol = require('./isSymbol');

		/** Used as references for various `Number` constants. */
		var NAN = 0 / 0;

		/** Used to match leading and trailing whitespace. */
		var reTrim = /^\s+|\s+$/g;

		/** Used to detect bad signed hexadecimal string values. */
		var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

		/** Used to detect binary string values. */
		var reIsBinary = /^0b[01]+$/i;

		/** Used to detect octal string values. */
		var reIsOctal = /^0o[0-7]+$/i;

		/** Built-in method references without a dependency on `root`. */
		var freeParseInt = parseInt;

		/**
		 * Converts `value` to a number.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to process.
		 * @returns {number} Returns the number.
		 * @example
		 *
		 * _.toNumber(3.2);
		 * // => 3.2
		 *
		 * _.toNumber(Number.MIN_VALUE);
		 * // => 5e-324
		 *
		 * _.toNumber(Infinity);
		 * // => Infinity
		 *
		 * _.toNumber('3.2');
		 * // => 3.2
		 */
		function toNumber(value) {
		  if (typeof value == 'number') {
		    return value;
		  }
		  if (isSymbol(value)) {
		    return NAN;
		  }
		  if (isObject(value)) {
		    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
		    value = isObject(other) ? (other + '') : other;
		  }
		  if (typeof value != 'string') {
		    return value === 0 ? value : +value;
		  }
		  value = value.replace(reTrim, '');
		  var isBinary = reIsBinary.test(value);
		  return (isBinary || reIsOctal.test(value))
		    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
		    : (reIsBadHex.test(value) ? NAN : +value);
		}

		module.exports = toNumber;

		},{"./isObject":741,"./isSymbol":744}],747:[function(require,module,exports){
		(function (global){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('material-ui/SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

		var _ref = _react2.default.createElement('path', { d: 'M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z' });

		var AccessTime = function AccessTime(props) {
		  return _react2.default.createElement(
		    SvgIconCustom,
		    props,
		    _ref
		  );
		};

		AccessTime = (0, _pure2.default)(AccessTime);
		AccessTime.muiName = 'SvgIcon';

		exports.default = AccessTime;
		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"material-ui/SvgIcon":860,"react":1016,"recompose/pure":1031}],748:[function(require,module,exports){
		(function (global){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('material-ui/SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

		var _ref = _react2.default.createElement('path', { d: 'M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z' });

		var Add = function Add(props) {
		  return _react2.default.createElement(
		    SvgIconCustom,
		    props,
		    _ref
		  );
		};

		Add = (0, _pure2.default)(Add);
		Add.muiName = 'SvgIcon';

		exports.default = Add;
		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"material-ui/SvgIcon":860,"react":1016,"recompose/pure":1031}],749:[function(require,module,exports){
		(function (global){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('material-ui/SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

		var _ref = _react2.default.createElement('path', { d: 'M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z' });

		var DateRange = function DateRange(props) {
		  return _react2.default.createElement(
		    SvgIconCustom,
		    props,
		    _ref
		  );
		};

		DateRange = (0, _pure2.default)(DateRange);
		DateRange.muiName = 'SvgIcon';

		exports.default = DateRange;
		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"material-ui/SvgIcon":860,"react":1016,"recompose/pure":1031}],750:[function(require,module,exports){
		(function (global){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('material-ui/SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

		var _ref = _react2.default.createElement('path', { d: 'M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z' });

		var Delete = function Delete(props) {
		  return _react2.default.createElement(
		    SvgIconCustom,
		    props,
		    _ref
		  );
		};

		Delete = (0, _pure2.default)(Delete);
		Delete.muiName = 'SvgIcon';

		exports.default = Delete;
		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"material-ui/SvgIcon":860,"react":1016,"recompose/pure":1031}],751:[function(require,module,exports){
		(function (global){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('material-ui/SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

		var _ref = _react2.default.createElement('path', { d: 'M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z' });

		var ErrorOutline = function ErrorOutline(props) {
		  return _react2.default.createElement(
		    SvgIconCustom,
		    props,
		    _ref
		  );
		};

		ErrorOutline = (0, _pure2.default)(ErrorOutline);
		ErrorOutline.muiName = 'SvgIcon';

		exports.default = ErrorOutline;
		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"material-ui/SvgIcon":860,"react":1016,"recompose/pure":1031}],752:[function(require,module,exports){
		(function (global){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('material-ui/SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

		var _ref = _react2.default.createElement('path', { d: 'M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z' });

		var KeyboardArrowLeft = function KeyboardArrowLeft(props) {
		  return _react2.default.createElement(
		    SvgIconCustom,
		    props,
		    _ref
		  );
		};

		KeyboardArrowLeft = (0, _pure2.default)(KeyboardArrowLeft);
		KeyboardArrowLeft.muiName = 'SvgIcon';

		exports.default = KeyboardArrowLeft;
		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"material-ui/SvgIcon":860,"react":1016,"recompose/pure":1031}],753:[function(require,module,exports){
		(function (global){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('material-ui/SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var SvgIconCustom = global.__MUI_SvgIcon__ || _SvgIcon2.default;

		var _ref = _react2.default.createElement('path', { d: 'M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z' });

		var KeyboardArrowRight = function KeyboardArrowRight(props) {
		  return _react2.default.createElement(
		    SvgIconCustom,
		    props,
		    _ref
		  );
		};

		KeyboardArrowRight = (0, _pure2.default)(KeyboardArrowRight);
		KeyboardArrowRight.muiName = 'SvgIcon';

		exports.default = KeyboardArrowRight;
		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"material-ui/SvgIcon":860,"react":1016,"recompose/pure":1031}],754:[function(require,module,exports){
		(function (global){
		'use strict';

		Object.defineProperty(exports, '__esModule', { value: true });

		function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

		var React = require('react');
		var React__default = _interopDefault(React);
		var PropTypes = _interopDefault(require('prop-types'));
		var classnames = _interopDefault(require('classnames'));
		var materialUi = require('material-ui');
		var moment = _interopDefault(require('moment'));
		var reactDom = require('react-dom');

		var classCallCheck = function (instance, Constructor) {
		  if (!(instance instanceof Constructor)) {
		    throw new TypeError("Cannot call a class as a function");
		  }
		};

		var createClass = function () {
		  function defineProperties(target, props) {
		    for (var i = 0; i < props.length; i++) {
		      var descriptor = props[i];
		      descriptor.enumerable = descriptor.enumerable || false;
		      descriptor.configurable = true;
		      if ("value" in descriptor) descriptor.writable = true;
		      Object.defineProperty(target, descriptor.key, descriptor);
		    }
		  }

		  return function (Constructor, protoProps, staticProps) {
		    if (protoProps) defineProperties(Constructor.prototype, protoProps);
		    if (staticProps) defineProperties(Constructor, staticProps);
		    return Constructor;
		  };
		}();





		var defineProperty = function (obj, key, value) {
		  if (key in obj) {
		    Object.defineProperty(obj, key, {
		      value: value,
		      enumerable: true,
		      configurable: true,
		      writable: true
		    });
		  } else {
		    obj[key] = value;
		  }

		  return obj;
		};

		var _extends = Object.assign || function (target) {
		  for (var i = 1; i < arguments.length; i++) {
		    var source = arguments[i];

		    for (var key in source) {
		      if (Object.prototype.hasOwnProperty.call(source, key)) {
		        target[key] = source[key];
		      }
		    }
		  }

		  return target;
		};



		var inherits = function (subClass, superClass) {
		  if (typeof superClass !== "function" && superClass !== null) {
		    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		  }

		  subClass.prototype = Object.create(superClass && superClass.prototype, {
		    constructor: {
		      value: subClass,
		      enumerable: false,
		      writable: true,
		      configurable: true
		    }
		  });
		  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
		};









		var objectWithoutProperties = function (obj, keys) {
		  var target = {};

		  for (var i in obj) {
		    if (keys.indexOf(i) >= 0) continue;
		    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
		    target[i] = obj[i];
		  }

		  return target;
		};

		var possibleConstructorReturn = function (self, call) {
		  if (!self) {
		    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		  }

		  return call && (typeof call === "object" || typeof call === "function") ? call : self;
		};

		var dialogWidth = 310;
		var styles = {
		  dialogRoot: {
		    minWidth: dialogWidth
		  },
		  dialog: {
		    width: dialogWidth,

		    '&:first-child': {
		      padding: 0
		    }
		  },
		  dialogActions: {
		    '&:first-child': {
		      marginRight: 'auto'
		    }
		  }
		};

		var ModalDialog = function ModalDialog(_ref) {
		  var children = _ref.children,
		      classes = _ref.classes,
		      onAccept = _ref.onAccept,
		      onDismiss = _ref.onDismiss,
		      onClear = _ref.onClear,
		      okLabel = _ref.okLabel,
		      cancelLabel = _ref.cancelLabel,
		      clearLabel = _ref.clearLabel,
		      dialogContentClassName = _ref.dialogContentClassName,
		      clearable = _ref.clearable,
		      other = objectWithoutProperties(_ref, ['children', 'classes', 'onAccept', 'onDismiss', 'onClear', 'okLabel', 'cancelLabel', 'clearLabel', 'dialogContentClassName', 'clearable']);
		  return React__default.createElement(
		    materialUi.Dialog,
		    _extends({ onClose: onDismiss, classes: { paper: classes.dialogRoot } }, other),
		    React__default.createElement(
		      materialUi.DialogContent,
		      { className: classnames(classes.dialog, dialogContentClassName) },
		      children
		    ),
		    React__default.createElement(
		      materialUi.DialogActions,
		      {
		        classes: {
		          action: clearable && classes.dialogActions
		        }
		      },
		      clearable && React__default.createElement(
		        materialUi.Button,
		        {
		          color: 'primary',
		          onClick: onClear,
		          'aria-label': clearLabel
		        },
		        clearLabel
		      ),
		      React__default.createElement(
		        materialUi.Button,
		        {
		          color: 'primary',
		          onClick: onDismiss,
		          'aria-label': cancelLabel
		        },
		        cancelLabel
		      ),
		      React__default.createElement(
		        materialUi.Button,
		        {
		          color: 'primary',
		          onClick: onAccept,
		          'aria-label': okLabel
		        },
		        okLabel
		      )
		    )
		  );
		};

		ModalDialog.propTypes = {
		  children: PropTypes.node.isRequired,
		  onAccept: PropTypes.func.isRequired,
		  onDismiss: PropTypes.func.isRequired,
		  onClear: PropTypes.func.isRequired,
		  classes: PropTypes.object.isRequired,
		  dialogContentClassName: PropTypes.string,
		  okLabel: PropTypes.string,
		  cancelLabel: PropTypes.string,
		  clearLabel: PropTypes.string,
		  clearable: PropTypes.bool.isRequired
		};

		ModalDialog.defaultProps = {
		  dialogContentClassName: '',
		  okLabel: 'OK',
		  cancelLabel: 'Cancel',
		  clearLabel: 'Clear'
		};

		var ModalDialog$1 = materialUi.withStyles(styles, { name: 'MuiPickersModal' })(ModalDialog);

		var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};



		function unwrapExports (x) {
			return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
		}

		function createCommonjsModule(fn, module) {
			return module = { exports: {} }, fn(module, module.exports), module.exports;
		}

		var reactTextMask = createCommonjsModule(function (module, exports) {
		!function(e,t){module.exports=t(React__default);}(commonjsGlobal,function(e){return function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,t), o.loaded=!0, o.exports}var r={};return t.m=e, t.c=r, t.p="", t(0)}([function(e,t,r){function n(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}), t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t);}Object.defineProperty(t,"__esModule",{value:!0}), t.conformToMask=void 0;var u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n]);}return e},l=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1, n.configurable=!0, "value"in n&&(n.writable=!0), Object.defineProperty(e,n.key,n);}}return function(t,r,n){return r&&e(t.prototype,r), n&&e(t,n), t}}(),s=r(2);Object.defineProperty(t,"conformToMask",{enumerable:!0,get:function(){return n(s).default}});var f=r(11),c=n(f),d=r(9),p=n(d),h=r(5),v=n(h),y=function(e){function t(){return o(this,t), i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return a(t,e), l(t,[{key:"initTextMask",value:function(){var e=this.props,t=this.props.value;this.textMaskInputElement=(0, v.default)(u({inputElement:this.inputElement},e)), this.textMaskInputElement.update(t);}},{key:"componentDidMount",value:function(){this.initTextMask();}},{key:"componentDidUpdate",value:function(){this.initTextMask();}},{key:"render",value:function(){var e=this,t=u({},this.props);return delete t.mask, delete t.guide, delete t.pipe, delete t.placeholderChar, delete t.keepCharPositions, delete t.value, delete t.onChange, delete t.showMask, c.default.createElement("input",u({},t,{onInput:function(t){return e.onChange(t)},defaultValue:this.props.value,ref:function(t){return e.inputElement=t}}))}},{key:"onChange",value:function(e){this.textMaskInputElement.update(), "function"==typeof this.props.onChange&&this.props.onChange(e);}}]), t}(c.default.Component);t.default=y, y.propTypes={mask:p.default.oneOfType([p.default.array,p.default.func,p.default.bool,p.default.shape({mask:p.default.oneOfType([p.default.array,p.default.func]),pipe:p.default.func})]).isRequired,guide:p.default.bool,value:p.default.oneOfType([p.default.string,p.default.number]),pipe:p.default.func,placeholderChar:p.default.string,keepCharPositions:p.default.bool,showMask:p.default.bool};},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}), t.placeholderChar="_";},function(e,t,r){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=r.guide,u=void 0===n||n,l=r.previousConformedValue,s=void 0===l?a:l,f=r.placeholderChar,c=void 0===f?i.placeholderChar:f,d=r.placeholder,p=void 0===d?(0, o.convertMaskToPlaceholder)(t,c):d,h=r.currentCaretPosition,v=r.keepCharPositions,y=u===!1&&void 0!==s,m=e.length,g=s.length,b=p.length,C=t.length,k=m-g,O=k>0,P=h+(O?-k:0),x=P+Math.abs(k);if(v===!0&&!O){for(var T=a,_=P;_<x;_++)p[_]===c&&(T+=c);e=e.slice(0,P)+T+e.slice(P,m);}for(var w=e.split(a).map(function(e,t){return{char:e,isNew:t>=P&&t<x}}),M=m-1;M>=0;M--){var j=w[M].char;if(j!==c){var S=M>=P&&g===C;j===p[S?M-k:M]&&w.splice(M,1);}}var E=a,R=!1;e:for(var V=0;V<b;V++){var N=p[V];if(N===c){if(w.length>0)for(;w.length>0;){var I=w.shift(),A=I.char,q=I.isNew;if(A===c&&y!==!0){E+=c;continue e}if(t[V].test(A)){if(v===!0&&q!==!1&&s!==a&&u!==!1&&O){for(var D=w.length,F=null,L=0;L<D;L++){var J=w[L];if(J.char!==c&&J.isNew===!1)break;if(J.char===c){F=L;break}}null!==F?(E+=A, w.splice(F,1)):V--;}else E+=A;continue e}R=!0;}y===!1&&(E+=p.substr(V,b));break}E+=N;}if(y&&O===!1){for(var U=null,W=0;W<E.length;W++)p[W]===c&&(U=W);E=null!==U?E.substr(0,U+1):a;}return{conformedValue:E,meta:{someCharsRejected:R}}}Object.defineProperty(t,"__esModule",{value:!0}), t.default=n;var o=r(3),i=r(1),a="";},function(e,t,r){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u.placeholderChar;if(e.indexOf(t)!==-1)throw new Error("Placeholder character must not be used as part of the mask. Please specify a character that is not present in your mask as your placeholder character.\n\n"+("The placeholder character that was received is: "+JSON.stringify(t)+"\n\n")+("The mask that was received is: "+JSON.stringify(e)));return e.map(function(e){return e instanceof RegExp?t:e}).join("")}function o(e){return"string"==typeof e||e instanceof String}function i(e){return"number"==typeof e&&void 0===e.length&&!isNaN(e)}function a(e){for(var t=[],r=void 0;r=e.indexOf(s), r!==-1;)t.push(r), e.splice(r,1);return{maskWithoutCaretTraps:e,indexes:t}}Object.defineProperty(t,"__esModule",{value:!0}), t.convertMaskToPlaceholder=n, t.isString=o, t.isNumber=i, t.processCaretTraps=a;var u=r(1),l=[],s="[]";},function(e,t){function r(e){var t=e.previousConformedValue,r=void 0===t?o:t,i=e.previousPlaceholder,a=void 0===i?o:i,u=e.currentCaretPosition,l=void 0===u?0:u,s=e.conformedValue,f=e.rawValue,c=e.placeholderChar,d=e.placeholder,p=e.indexesOfPipedChars,h=void 0===p?n:p,v=e.caretTrapIndexes,y=void 0===v?n:v;if(0===l)return 0;var m=f.length,g=r.length,b=d.length,C=s.length,k=m-g,O=k>0,P=0===g,x=k>1&&!O&&!P;if(x)return l;var T=O&&(r===s||s===d),_=0,w=void 0,M=void 0;if(T)_=l-k;else{var j=s.toLowerCase(),S=f.toLowerCase(),E=S.substr(0,l).split(o),R=E.filter(function(e){return j.indexOf(e)!==-1});M=R[R.length-1];var V=a.substr(0,R.length).split(o).filter(function(e){return e!==c}).length,N=d.substr(0,R.length).split(o).filter(function(e){return e!==c}).length,I=N!==V,A=void 0!==a[R.length-1]&&void 0!==d[R.length-2]&&a[R.length-1]!==c&&a[R.length-1]!==d[R.length-1]&&a[R.length-1]===d[R.length-2];!O&&(I||A)&&V>0&&d.indexOf(M)>-1&&void 0!==f[l]&&(w=!0, M=f[l]);for(var q=h.map(function(e){return j[e]}),D=q.filter(function(e){return e===M}).length,F=R.filter(function(e){return e===M}).length,L=d.substr(0,d.indexOf(c)).split(o).filter(function(e,t){return e===M&&f[t]!==e}).length,J=L+F+D+(w?1:0),U=0,W=0;W<C;W++){var B=j[W];if(_=W+1, B===M&&U++, U>=J)break}}if(O){for(var H=_,Y=_;Y<=b;Y++)if(d[Y]===c&&(H=Y), d[Y]===c||y.indexOf(Y)!==-1||Y===b)return H}else if(w){for(var z=_-1;z>=0;z--)if(s[z]===M||y.indexOf(z)!==-1||0===z)return z}else for(var G=_;G>=0;G--)if(d[G-1]===c||y.indexOf(G)!==-1||0===G)return G}Object.defineProperty(t,"__esModule",{value:!0}), t.default=r;var n=[],o="";},function(e,t,r){function n(e){return e&&e.__esModule?e:{default:e}}function o(e){var t={previousConformedValue:void 0,previousPlaceholder:void 0};return{state:t,update:function(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e,o=n.inputElement,s=n.mask,c=n.guide,m=n.pipe,b=n.placeholderChar,C=void 0===b?h.placeholderChar:b,k=n.keepCharPositions,O=void 0!==k&&k,P=n.showMask,x=void 0!==P&&P;if("undefined"==typeof r&&(r=o.value), r!==t.previousConformedValue){("undefined"==typeof s?"undefined":l(s))===g&&void 0!==s.pipe&&void 0!==s.mask&&(m=s.pipe, s=s.mask);var T=void 0,_=void 0;if(s instanceof Array&&(T=(0, p.convertMaskToPlaceholder)(s,C)), s!==!1){var w=a(r),M=o.selectionEnd,j=t.previousConformedValue,S=t.previousPlaceholder,E=void 0;if(("undefined"==typeof s?"undefined":l(s))===v){if(_=s(w,{currentCaretPosition:M,previousConformedValue:j,placeholderChar:C}), _===!1)return;var R=(0, p.processCaretTraps)(_),V=R.maskWithoutCaretTraps,N=R.indexes;_=V, E=N, T=(0, p.convertMaskToPlaceholder)(_,C);}else _=s;var I={previousConformedValue:j,guide:c,placeholderChar:C,pipe:m,placeholder:T,currentCaretPosition:M,keepCharPositions:O},A=(0, d.default)(w,_,I),q=A.conformedValue,D=("undefined"==typeof m?"undefined":l(m))===v,F={};D&&(F=m(q,u({rawValue:w},I)), F===!1?F={value:j,rejected:!0}:(0, p.isString)(F)&&(F={value:F}));var L=D?F.value:q,J=(0, f.default)({previousConformedValue:j,previousPlaceholder:S,conformedValue:L,placeholder:T,rawValue:w,currentCaretPosition:M,placeholderChar:C,indexesOfPipedChars:F.indexesOfPipedChars,caretTrapIndexes:E}),U=L===T&&0===J,W=x?T:y,B=U?W:L;t.previousConformedValue=B, t.previousPlaceholder=T, o.value!==B&&(o.value=B, i(o,J));}}}}}function i(e,t){document.activeElement===e&&(b?C(function(){return e.setSelectionRange(t,t,m)},0):e.setSelectionRange(t,t,m));}function a(e){if((0, p.isString)(e))return e;if((0, p.isNumber)(e))return String(e);if(void 0===e||null===e)return y;throw new Error("The 'value' provided to Text Mask needs to be a string or a number. The value received was:\n\n "+JSON.stringify(e))}Object.defineProperty(t,"__esModule",{value:!0});var u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n]);}return e},l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=o;var s=r(4),f=n(s),c=r(2),d=n(c),p=r(3),h=r(1),v="function",y="",m="none",g="object",b="undefined"!=typeof navigator&&/Android/i.test(navigator.userAgent),C="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:setTimeout;},function(e,t){function r(e){return function(){return e}}var n=function(){};n.thatReturns=r, n.thatReturnsFalse=r(!1), n.thatReturnsTrue=r(!0), n.thatReturnsNull=r(null), n.thatReturnsThis=function(){return this}, n.thatReturnsArgument=function(e){return e}, e.exports=n;},function(e,t,r){function n(e,t,r,n,i,a,u,l){if(!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var f=[r,n,i,a,u,l],c=0;s=new Error(t.replace(/%s/g,function(){return f[c++]})), s.name="Invariant Violation";}throw s.framesToPop=1, s}}e.exports=n;},function(e,t,r){var n=r(6),o=r(7),i=r(10);e.exports=function(){function e(e,t,r,n,a,u){u!==i&&o(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");}function t(){return e}e.isRequired=e;var r={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t};return r.checkPropTypes=n, r.PropTypes=r, r};},function(e,t,r){e.exports=r(8)();},function(e,t){var r="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";e.exports=r;},function(t,r){t.exports=e;}])});
		});

		var MaskedInput$1 = unwrapExports(reactTextMask);
		var reactTextMask_1 = reactTextMask.reactTextMask;

		var Input = function (_PureComponent) {
		  inherits(Input, _PureComponent);

		  function Input() {
		    classCallCheck(this, Input);
		    return possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).apply(this, arguments));
		  }

		  createClass(Input, [{
		    key: 'render',
		    value: function render() {
		      return this.props.mask ? React__default.createElement(MaskedInput$1, this.props) : React__default.createElement('input', this.props);
		    }
		  }]);
		  return Input;
		}(React.PureComponent);

		Input.propTypes = {
		  mask: PropTypes.any
		};
		Input.defaultProps = {
		  mask: undefined
		};

		/* eslint-disable react/jsx-no-duplicate-props */
		/* eslint-disable react/sort-comp */

		var DateTextField = function (_PureComponent) {
		  inherits(DateTextField, _PureComponent);

		  function DateTextField() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, DateTextField);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = DateTextField.__proto__ || Object.getPrototypeOf(DateTextField)).call.apply(_ref, [this].concat(args))), _this), _this.getDisplayDate = function (props) {
		      var value = props.value,
		          format = props.format,
		          invalidLabel = props.invalidLabel,
		          emptyLabel = props.emptyLabel,
		          labelFunc = props.labelFunc;


		      var isEmpty = value === null;
		      var date = moment(value);

		      if (labelFunc) {
		        return labelFunc(isEmpty ? null : date, invalidLabel);
		      }

		      if (isEmpty) {
		        return emptyLabel;
		      }

		      return date.isValid() ? date.format(format) : invalidLabel;
		    }, _this.updateState = function () {
		      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;
		      return {
		        value: props.value,
		        displayValue: _this.getDisplayDate(props),
		        error: ''
		      };
		    }, _this.state = _this.updateState(), _this.handleBlur = function (e) {
		      e.preventDefault();
		      e.stopPropagation();
		    }, _this.handleChange = function (e) {
		      var _this$props = _this.props,
		          format = _this$props.format,
		          invalidDateMessage = _this$props.invalidDateMessage,
		          clearable = _this$props.clearable,
		          onClear = _this$props.onClear;


		      if (clearable && e.target.value === '') {
		        if (_this.props.value === null) {
		          _this.setState(_this.updateState());
		        } else if (onClear) {
		          onClear();
		        }

		        return;
		      }

		      var oldValue = moment(_this.state.value);
		      var newValue = moment(e.target.value, format, true);
		      var error = newValue.isValid() ? '' : invalidDateMessage;

		      _this.setState({
		        displayValue: e.target.value,
		        value: error ? newValue : oldValue,
		        error: error
		      }, function () {
		        if (!error && newValue.format('LLLL') !== oldValue.format('LLLL')) {
		          _this.props.onChange(newValue, true);
		        }
		      });
		    }, _this.handleFocus = function (e) {
		      e.stopPropagation();
		      e.preventDefault();
		      var keyboard = _this.props.keyboard;


		      if (keyboard) {
		        return;
		      }

		      e.target.blur();

		      _this.openPicker(e);
		    }, _this.handleKeyPress = function (e) {
		      if (e.key === 'Enter') {
		        _this.openPicker(e);
		      }
		    }, _this.openPicker = function (e) {
		      var _this$props2 = _this.props,
		          disabled = _this$props2.disabled,
		          onClick = _this$props2.onClick;


		      if (!disabled) {
		        onClick(e);
		      }
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(DateTextField, [{
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      if (nextProps.value !== this.state.value) {
		        this.setState(this.updateState(nextProps));
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          format = _props.format,
		          disabled = _props.disabled,
		          onClick = _props.onClick,
		          invalidLabel = _props.invalidLabel,
		          invalidDateMessage = _props.invalidDateMessage,
		          clearable = _props.clearable,
		          onClear = _props.onClear,
		          emptyLabel = _props.emptyLabel,
		          labelFunc = _props.labelFunc,
		          keyboard = _props.keyboard,
		          value = _props.value,
		          mask = _props.mask,
		          InputProps = _props.InputProps,
		          keyboardIcon = _props.keyboardIcon,
		          other = objectWithoutProperties(_props, ['format', 'disabled', 'onClick', 'invalidLabel', 'invalidDateMessage', 'clearable', 'onClear', 'emptyLabel', 'labelFunc', 'keyboard', 'value', 'mask', 'InputProps', 'keyboardIcon']);
		      var _state = this.state,
		          displayValue = _state.displayValue,
		          error = _state.error;


		      var localInputProps = {
		        inputComponent: Input,
		        inputProps: {
		          mask: value === null ? null : mask,
		          readOnly: !keyboard
		        }
		      };

		      if (keyboard) {
		        localInputProps.endAdornment = React__default.createElement(
		          materialUi.InputAdornment,
		          { position: 'end' },
		          React__default.createElement(
		            materialUi.IconButton,
		            { onClick: this.openPicker },
		            ' ',
		            React__default.createElement(
		              materialUi.Icon,
		              null,
		              ' ',
		              keyboardIcon,
		              ' '
		            ),
		            ' '
		          )
		        );
		      }

		      return React__default.createElement(materialUi.TextField, _extends({
		        onClick: this.handleFocus,
		        error: !!error,
		        helperText: error,
		        onKeyPress: this.handleKeyPress,
		        onBlur: this.handleBlur,
		        disabled: disabled,
		        value: displayValue
		      }, other, {
		        onChange: this.handleChange,
		        InputProps: _extends({}, localInputProps, InputProps)
		      }));
		    }
		  }]);
		  return DateTextField;
		}(React.PureComponent);

		DateTextField.propTypes = {
		  value: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),
		  mask: PropTypes.any,
		  disabled: PropTypes.bool,
		  format: PropTypes.string,
		  onChange: PropTypes.func.isRequired,
		  onClear: PropTypes.func,
		  onClick: PropTypes.func.isRequired,
		  invalidLabel: PropTypes.string,
		  emptyLabel: PropTypes.string,
		  labelFunc: PropTypes.func,
		  keyboard: PropTypes.bool,
		  InputProps: PropTypes.shape(),
		  keyboardIcon: PropTypes.node,
		  invalidDateMessage: PropTypes.string,
		  clearable: PropTypes.bool
		};
		DateTextField.defaultProps = {
		  disabled: false,
		  invalidLabel: 'Unknown',
		  emptyLabel: '',
		  value: new Date(),
		  labelFunc: undefined,
		  format: undefined,
		  InputProps: undefined,
		  keyboard: false,
		  mask: undefined,
		  keyboardIcon: 'event',
		  invalidDateMessage: 'Invalid Date Format',
		  clearable: false,
		  onClear: undefined
		};

		var date = PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]);

		var DomainPropTypes = {
		  date: date
		};

		var ModalWrapper = function (_PureComponent) {
		  inherits(ModalWrapper, _PureComponent);

		  function ModalWrapper() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, ModalWrapper);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ModalWrapper.__proto__ || Object.getPrototypeOf(ModalWrapper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      open: false
		    }, _this.open = function () {
		      _this.setState({ open: true });
		    }, _this.close = function () {
		      _this.setState({ open: false });
		    }, _this.handleAccept = function () {
		      _this.close();
		      if (_this.props.onAccept) {
		        _this.props.onAccept();
		      }
		    }, _this.handleDismiss = function () {
		      _this.close();
		      if (_this.props.onDismiss) {
		        _this.props.onDismiss();
		      }
		    }, _this.handleClear = function () {
		      _this.close();
		      if (_this.props.onClear) {
		        _this.props.onClear();
		      }
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(ModalWrapper, [{
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          value = _props.value,
		          format = _props.format,
		          children = _props.children,
		          dialogContentClassName = _props.dialogContentClassName,
		          onAccept = _props.onAccept,
		          onDismiss = _props.onDismiss,
		          invalidLabel = _props.invalidLabel,
		          labelFunc = _props.labelFunc,
		          okLabel = _props.okLabel,
		          cancelLabel = _props.cancelLabel,
		          clearLabel = _props.clearLabel,
		          clearable = _props.clearable,
		          other = objectWithoutProperties(_props, ['value', 'format', 'children', 'dialogContentClassName', 'onAccept', 'onDismiss', 'invalidLabel', 'labelFunc', 'okLabel', 'cancelLabel', 'clearLabel', 'clearable']);


		      return React__default.createElement(
		        React.Fragment,
		        null,
		        React__default.createElement(DateTextField, _extends({
		          value: value,
		          format: format,
		          onClick: this.open
		          // onFocus={this.togglePicker} <- Currently not properly works with .blur() on TextField
		          , invalidLabel: invalidLabel,
		          labelFunc: labelFunc,
		          clearable: clearable
		        }, other)),
		        React__default.createElement(
		          ModalDialog$1,
		          {
		            open: this.state.open,
		            onClear: this.handleClear,
		            onAccept: this.handleAccept,
		            onDismiss: this.handleDismiss,
		            dialogContentClassName: dialogContentClassName,
		            clearLabel: clearLabel,
		            okLabel: okLabel,
		            cancelLabel: cancelLabel,
		            clearable: clearable
		          },
		          children
		        )
		      );
		    }
		  }]);
		  return ModalWrapper;
		}(React.PureComponent);

		ModalWrapper.propTypes = {
		  value: DomainPropTypes.date,
		  children: PropTypes.node.isRequired,
		  format: PropTypes.string,
		  onAccept: PropTypes.func,
		  onDismiss: PropTypes.func,
		  onClear: PropTypes.func,
		  dialogContentClassName: PropTypes.string,
		  invalidLabel: PropTypes.string,
		  labelFunc: PropTypes.func,
		  okLabel: PropTypes.string,
		  cancelLabel: PropTypes.string,
		  clearLabel: PropTypes.string,
		  clearable: PropTypes.bool
		};
		ModalWrapper.defaultProps = {
		  dialogContentClassName: '',
		  invalidLabel: undefined,
		  value: new Date(),
		  labelFunc: undefined,
		  okLabel: undefined,
		  cancelLabel: undefined,
		  clearLabel: undefined,
		  format: undefined,
		  onAccept: undefined,
		  onDismiss: undefined,
		  onClear: undefined,
		  clearable: false
		};

		var momentRange = createCommonjsModule(function (module, exports) {
		(function webpackUniversalModuleDefinition(root, factory) {
			module.exports = factory(moment);
		})(commonjsGlobal, function(__WEBPACK_EXTERNAL_MODULE_1__) {
		return /******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId]) {
		/******/ 			return installedModules[moduleId].exports;
		/******/ 		}
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			i: moduleId,
		/******/ 			l: false,
		/******/ 			exports: {}
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.l = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// identity function for calling harmony imports with the correct context
		/******/ 	__webpack_require__.i = function(value) { return value; };
		/******/
		/******/ 	// define getter function for harmony exports
		/******/ 	__webpack_require__.d = function(exports, name, getter) {
		/******/ 		if(!__webpack_require__.o(exports, name)) {
		/******/ 			Object.defineProperty(exports, name, {
		/******/ 				configurable: false,
		/******/ 				enumerable: true,
		/******/ 				get: getter
		/******/ 			});
		/******/ 		}
		/******/ 	};
		/******/
		/******/ 	// getDefaultExport function for compatibility with non-harmony modules
		/******/ 	__webpack_require__.n = function(module) {
		/******/ 		var getter = module && module.__esModule ?
		/******/ 			function getDefault() { return module['default']; } :
		/******/ 			function getModuleExports() { return module; };
		/******/ 		__webpack_require__.d(getter, 'a', getter);
		/******/ 		return getter;
		/******/ 	};
		/******/
		/******/ 	// Object.prototype.hasOwnProperty.call
		/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "";
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(__webpack_require__.s = 2);
		/******/ })
		/************************************************************************/
		/******/ ([
		/* 0 */
		/***/ (function(module, exports, __webpack_require__) {

		module.exports = __webpack_require__(16)() ? Symbol : __webpack_require__(18);


		/***/ }),
		/* 1 */
		/***/ (function(module, exports) {

		module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

		/***/ }),
		/* 2 */
		/***/ (function(module, exports, __webpack_require__) {

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.DateRange = undefined;

		var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		exports.extendMoment = extendMoment;

		var _moment = __webpack_require__(1);

		var _moment2 = _interopRequireDefault(_moment);

		var _es6Symbol = __webpack_require__(0);

		var _es6Symbol2 = _interopRequireDefault(_es6Symbol);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		//-----------------------------------------------------------------------------
		// Constants
		//-----------------------------------------------------------------------------

		var INTERVALS = {
		  year: true,
		  quarter: true,
		  month: true,
		  week: true,
		  day: true,
		  hour: true,
		  minute: true,
		  second: true
		};

		//-----------------------------------------------------------------------------
		// Date Ranges
		//-----------------------------------------------------------------------------

		var DateRange = exports.DateRange = function () {
		  function DateRange(start, end) {
		    _classCallCheck(this, DateRange);

		    var s = start;
		    var e = end;

		    if (arguments.length === 1 || end === undefined) {
		      if ((typeof start === 'undefined' ? 'undefined' : _typeof(start)) === 'object' && start.length === 2) {
		        var _start = _slicedToArray(start, 2);

		        s = _start[0];
		        e = _start[1];
		      } else if (typeof start === 'string') {
		        var _isoSplit = isoSplit(start);

		        var _isoSplit2 = _slicedToArray(_isoSplit, 2);

		        s = _isoSplit2[0];
		        e = _isoSplit2[1];
		      }
		    }

		    this.start = s || s === 0 ? (0, _moment2.default)(s) : (0, _moment2.default)(-8640000000000000);
		    this.end = e || e === 0 ? (0, _moment2.default)(e) : (0, _moment2.default)(8640000000000000);
		  }

		  _createClass(DateRange, [{
		    key: 'adjacent',
		    value: function adjacent(other) {
		      var sameStartEnd = this.start.isSame(other.end);
		      var sameEndStart = this.end.isSame(other.start);

		      return sameStartEnd && other.start.valueOf() <= this.start.valueOf() || sameEndStart && other.end.valueOf() >= this.end.valueOf();
		    }
		  }, {
		    key: 'add',
		    value: function add(other) {
		      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { adjacent: false };

		      if (this.overlaps(other, options)) {
		        return new this.constructor(_moment2.default.min(this.start, other.start), _moment2.default.max(this.end, other.end));
		      }

		      return null;
		    }
		  }, {
		    key: 'by',
		    value: function by(interval) {
		      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { exclusive: false, step: 1 };

		      var range = this;

		      return _defineProperty({}, _es6Symbol2.default.iterator, function () {
		        var exclusive = options.exclusive || false;
		        var step = options.step || 1;
		        var diff = Math.abs(range.start.diff(range.end, interval)) / step;
		        var iteration = 0;

		        return {
		          next: function next() {
		            var current = range.start.clone().add(iteration * step, interval);
		            var done = exclusive ? !(iteration < diff) : !(iteration <= diff);

		            iteration++;

		            return {
		              done: done,
		              value: done ? undefined : current
		            };
		          }
		        };
		      });
		    }
		  }, {
		    key: 'byRange',
		    value: function byRange(interval) {
		      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { exclusive: false, step: 1 };

		      var range = this;
		      var step = options.step || 1;
		      var diff = this.valueOf() / interval.valueOf() / step;
		      var exclusive = options.exclusive || false;
		      var unit = Math.floor(diff);
		      var iteration = 0;

		      return _defineProperty({}, _es6Symbol2.default.iterator, function () {
		        if (unit === Infinity) {
		          return { done: true };
		        }

		        return {
		          next: function next() {
		            var current = (0, _moment2.default)(range.start.valueOf() + interval.valueOf() * iteration * step);
		            var done = unit === diff && exclusive ? !(iteration < unit) : !(iteration <= unit);

		            iteration++;

		            return {
		              done: done,
		              value: done ? undefined : current
		            };
		          }
		        };
		      });
		    }
		  }, {
		    key: 'center',
		    value: function center() {
		      var center = this.start.valueOf() + this.diff() / 2;

		      return (0, _moment2.default)(center);
		    }
		  }, {
		    key: 'clone',
		    value: function clone() {
		      return new this.constructor(this.start, this.end);
		    }
		  }, {
		    key: 'contains',
		    value: function contains(other) {
		      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { exclusive: false };

		      var start = this.start.valueOf();
		      var end = this.end.valueOf();
		      var oStart = other.valueOf();
		      var oEnd = other.valueOf();

		      if (other instanceof DateRange) {
		        oStart = other.start.valueOf();
		        oEnd = other.end.valueOf();
		      }

		      var startInRange = start < oStart || start <= oStart && !options.exclusive;
		      var endInRange = end > oEnd || end >= oEnd && !options.exclusive;

		      return startInRange && endInRange;
		    }
		  }, {
		    key: 'diff',
		    value: function diff(unit, rounded) {
		      return this.end.diff(this.start, unit, rounded);
		    }
		  }, {
		    key: 'duration',
		    value: function duration(unit, rounded) {
		      return this.diff(unit, rounded);
		    }
		  }, {
		    key: 'intersect',
		    value: function intersect(other) {
		      var start = this.start.valueOf();
		      var end = this.end.valueOf();
		      var oStart = other.start.valueOf();
		      var oEnd = other.end.valueOf();

		      if (start <= oStart && oStart < end && end < oEnd) {
		        return new this.constructor(oStart, end);
		      } else if (oStart < start && start < oEnd && oEnd <= end) {
		        return new this.constructor(start, oEnd);
		      } else if (oStart < start && start <= end && end < oEnd) {
		        return this;
		      } else if (start <= oStart && oStart <= oEnd && oEnd <= end) {
		        return other;
		      }

		      return null;
		    }
		  }, {
		    key: 'isEqual',
		    value: function isEqual(other) {
		      return this.start.isSame(other.start) && this.end.isSame(other.end);
		    }
		  }, {
		    key: 'isSame',
		    value: function isSame(other) {
		      return this.isEqual(other);
		    }
		  }, {
		    key: 'overlaps',
		    value: function overlaps(other) {
		      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { adjacent: false };

		      var intersect = this.intersect(other) !== null;

		      if (options.adjacent && !intersect) {
		        return this.adjacent(other);
		      }

		      return intersect;
		    }
		  }, {
		    key: 'reverseBy',
		    value: function reverseBy(interval) {
		      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { exclusive: false, step: 1 };

		      var range = this;

		      return _defineProperty({}, _es6Symbol2.default.iterator, function () {
		        var exclusive = options.exclusive || false;
		        var step = options.step || 1;
		        var diff = Math.abs(range.start.diff(range.end, interval)) / step;
		        var iteration = 0;

		        return {
		          next: function next() {
		            var current = range.end.clone().subtract(iteration * step, interval);
		            var done = exclusive ? !(iteration < diff) : !(iteration <= diff);

		            iteration++;

		            return {
		              done: done,
		              value: done ? undefined : current
		            };
		          }
		        };
		      });
		    }
		  }, {
		    key: 'reverseByRange',
		    value: function reverseByRange(interval) {
		      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { exclusive: false, step: 1 };

		      var range = this;
		      var step = options.step || 1;
		      var diff = this.valueOf() / interval.valueOf() / step;
		      var exclusive = options.exclusive || false;
		      var unit = Math.floor(diff);
		      var iteration = 0;

		      return _defineProperty({}, _es6Symbol2.default.iterator, function () {
		        if (unit === Infinity) {
		          return { done: true };
		        }

		        return {
		          next: function next() {
		            var current = (0, _moment2.default)(range.end.valueOf() - interval.valueOf() * iteration * step);
		            var done = unit === diff && exclusive ? !(iteration < unit) : !(iteration <= unit);

		            iteration++;

		            return {
		              done: done,
		              value: done ? undefined : current
		            };
		          }
		        };
		      });
		    }
		  }, {
		    key: 'subtract',
		    value: function subtract(other) {
		      var start = this.start.valueOf();
		      var end = this.end.valueOf();
		      var oStart = other.start.valueOf();
		      var oEnd = other.end.valueOf();

		      if (this.intersect(other) === null) {
		        return [this];
		      } else if (oStart <= start && start < end && end <= oEnd) {
		        return [];
		      } else if (oStart <= start && start < oEnd && oEnd < end) {
		        return [new this.constructor(oEnd, end)];
		      } else if (start < oStart && oStart < end && end <= oEnd) {
		        return [new this.constructor(start, oStart)];
		      } else if (start < oStart && oStart < oEnd && oEnd < end) {
		        return [new this.constructor(start, oStart), new this.constructor(oEnd, end)];
		      } else if (start < oStart && oStart < end && oEnd < end) {
		        return [new this.constructor(start, oStart), new this.constructor(oStart, end)];
		      }

		      return [];
		    }
		  }, {
		    key: 'toDate',
		    value: function toDate() {
		      return [this.start.toDate(), this.end.toDate()];
		    }
		  }, {
		    key: 'toString',
		    value: function toString() {
		      return this.start.format() + '/' + this.end.format();
		    }
		  }, {
		    key: 'valueOf',
		    value: function valueOf() {
		      return this.end.valueOf() - this.start.valueOf();
		    }
		  }]);

		  return DateRange;
		}();

		//-----------------------------------------------------------------------------
		// Moment Extensions
		//-----------------------------------------------------------------------------

		function extendMoment(moment$$1) {
		  /**
		   * Build a date range.
		   */
		  moment$$1.range = function range(start, end) {
		    var m = this;

		    if (INTERVALS.hasOwnProperty(start)) {
		      return new DateRange(moment$$1(m).startOf(start), moment$$1(m).endOf(start));
		    }

		    return new DateRange(start, end);
		  };

		  /**
		   * Build a date range between a date (or now) and a specified interval.
		   * @param {String} interval The type of interval
		   * @param {Number} [count=1] The number of intervals (positive or negative)
		   * @param {Moment|Date} [date=moment()] The date to use
		   * @return {DateRange}
		   */
		  moment$$1.rangeFromInterval = function (interval) {
		    var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
		    var date = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : moment$$1();

		    if (!moment$$1.isMoment(date)) date = moment$$1(date);
		    if (!date.isValid()) throw new Error('Invalid date.');

		    var dateWithInterval = date.clone().add(count, interval);

		    // Handle negative interval counts by assembling the dates in chronological order.
		    var dates = [];
		    dates.push(moment$$1.min(date, dateWithInterval));
		    dates.push(moment$$1.max(date, dateWithInterval));

		    return new DateRange(dates);
		  };

		  /**
		   * Uses moment.parseZone on both the start and end of the given time interval
		   * to preserve the time zones on the resulting DateRange object.
		   * @param {string} isoTimeInterval the timeInterval to be parsed
		   * @return {DateRange} constructed using moments that will preserve the time zones
		   */
		  moment$$1.parseZoneRange = function (isoTimeInterval) {
		    var momentStrings = isoSplit(isoTimeInterval);
		    var start = moment$$1.parseZone(momentStrings[0]);
		    var end = moment$$1.parseZone(momentStrings[1]);
		    return new DateRange(start, end);
		  };

		  /**
		   * Alias of static constructor.
		   */
		  moment$$1.fn.range = moment$$1.range;

		  /**
		   * Expose constructor
		   */
		  moment$$1.range.constructor = DateRange;

		  /**
		   * Check if the current object is a date range.
		   */
		  moment$$1.isRange = function (range) {
		    return range instanceof DateRange;
		  };

		  /**
		   * Check if the current moment is within a given date range.
		   */
		  moment$$1.fn.within = function (range) {
		    return range.contains(this.toDate());
		  };

		  return moment$$1;
		}

		//-----------------------------------------------------------------------------
		// Utility Functions
		//-----------------------------------------------------------------------------

		/**
		 * Splits an iso string into two strings.
		 */
		function isoSplit(isoString) {
		  return isoString.split('/');
		}

		/***/ }),
		/* 3 */
		/***/ (function(module, exports, __webpack_require__) {

		var assign        = __webpack_require__(4)
		  , normalizeOpts = __webpack_require__(11)
		  , isCallable    = __webpack_require__(7)
		  , contains      = __webpack_require__(13)

		  , d;

		d = module.exports = function (dscr, value/*, options*/) {
			var c, e, w, options, desc;
			if ((arguments.length < 2) || (typeof dscr !== 'string')) {
				options = value;
				value = dscr;
				dscr = null;
			} else {
				options = arguments[2];
			}
			if (dscr == null) {
				c = w = true;
				e = false;
			} else {
				c = contains.call(dscr, 'c');
				e = contains.call(dscr, 'e');
				w = contains.call(dscr, 'w');
			}

			desc = { value: value, configurable: c, enumerable: e, writable: w };
			return !options ? desc : assign(normalizeOpts(options), desc);
		};

		d.gs = function (dscr, get, set/*, options*/) {
			var c, e, options, desc;
			if (typeof dscr !== 'string') {
				options = set;
				set = get;
				get = dscr;
				dscr = null;
			} else {
				options = arguments[3];
			}
			if (get == null) {
				get = undefined;
			} else if (!isCallable(get)) {
				options = get;
				get = set = undefined;
			} else if (set == null) {
				set = undefined;
			} else if (!isCallable(set)) {
				options = set;
				set = undefined;
			}
			if (dscr == null) {
				c = true;
				e = false;
			} else {
				c = contains.call(dscr, 'c');
				e = contains.call(dscr, 'e');
			}

			desc = { get: get, set: set, configurable: c, enumerable: e };
			return !options ? desc : assign(normalizeOpts(options), desc);
		};


		/***/ }),
		/* 4 */
		/***/ (function(module, exports, __webpack_require__) {

		module.exports = __webpack_require__(5)()
			? Object.assign
			: __webpack_require__(6);


		/***/ }),
		/* 5 */
		/***/ (function(module, exports, __webpack_require__) {

		module.exports = function () {
			var assign = Object.assign, obj;
			if (typeof assign !== 'function') return false;
			obj = { foo: 'raz' };
			assign(obj, { bar: 'dwa' }, { trzy: 'trzy' });
			return (obj.foo + obj.bar + obj.trzy) === 'razdwatrzy';
		};


		/***/ }),
		/* 6 */
		/***/ (function(module, exports, __webpack_require__) {

		var keys  = __webpack_require__(8)
		  , value = __webpack_require__(12)

		  , max = Math.max;

		module.exports = function (dest, src/*, …srcn*/) {
			var error, i, l = max(arguments.length, 2), assign;
			dest = Object(value(dest));
			assign = function (key) {
				try { dest[key] = src[key]; } catch (e) {
					if (!error) error = e;
				}
			};
			for (i = 1; i < l; ++i) {
				src = arguments[i];
				keys(src).forEach(assign);
			}
			if (error !== undefined) throw error;
			return dest;
		};


		/***/ }),
		/* 7 */
		/***/ (function(module, exports, __webpack_require__) {

		module.exports = function (obj) { return typeof obj === 'function'; };


		/***/ }),
		/* 8 */
		/***/ (function(module, exports, __webpack_require__) {

		module.exports = __webpack_require__(9)()
			? Object.keys
			: __webpack_require__(10);


		/***/ }),
		/* 9 */
		/***/ (function(module, exports, __webpack_require__) {

		module.exports = function () {
			try {
				return true;
			} catch (e) { return false; }
		};


		/***/ }),
		/* 10 */
		/***/ (function(module, exports, __webpack_require__) {

		var keys = Object.keys;

		module.exports = function (object) {
			return keys(object == null ? object : Object(object));
		};


		/***/ }),
		/* 11 */
		/***/ (function(module, exports, __webpack_require__) {

		var forEach = Array.prototype.forEach, create = Object.create;

		var process = function (src, obj) {
			var key;
			for (key in src) obj[key] = src[key];
		};

		module.exports = function (options/*, …options*/) {
			var result = create(null);
			forEach.call(arguments, function (options) {
				if (options == null) return;
				process(Object(options), result);
			});
			return result;
		};


		/***/ }),
		/* 12 */
		/***/ (function(module, exports, __webpack_require__) {

		module.exports = function (value) {
			if (value == null) throw new TypeError("Cannot use null or undefined");
			return value;
		};


		/***/ }),
		/* 13 */
		/***/ (function(module, exports, __webpack_require__) {

		module.exports = __webpack_require__(14)()
			? String.prototype.contains
			: __webpack_require__(15);


		/***/ }),
		/* 14 */
		/***/ (function(module, exports, __webpack_require__) {

		var str = 'razdwatrzy';

		module.exports = function () {
			if (typeof str.contains !== 'function') return false;
			return ((str.contains('dwa') === true) && (str.contains('foo') === false));
		};


		/***/ }),
		/* 15 */
		/***/ (function(module, exports, __webpack_require__) {

		var indexOf = String.prototype.indexOf;

		module.exports = function (searchString/*, position*/) {
			return indexOf.call(this, searchString, arguments[1]) > -1;
		};


		/***/ }),
		/* 16 */
		/***/ (function(module, exports, __webpack_require__) {

		var validTypes = { object: true, symbol: true };

		module.exports = function () {
			if (typeof Symbol !== 'function') return false;
			try {  } catch (e) { return false; }

			// Return 'true' also for polyfills
			if (!validTypes[typeof Symbol.iterator]) return false;
			if (!validTypes[typeof Symbol.toPrimitive]) return false;
			if (!validTypes[typeof Symbol.toStringTag]) return false;

			return true;
		};


		/***/ }),
		/* 17 */
		/***/ (function(module, exports, __webpack_require__) {

		module.exports = function (x) {
			if (!x) return false;
			if (typeof x === 'symbol') return true;
			if (!x.constructor) return false;
			if (x.constructor.name !== 'Symbol') return false;
			return (x[x.constructor.toStringTag] === 'Symbol');
		};


		/***/ }),
		/* 18 */
		/***/ (function(module, exports, __webpack_require__) {

		var d              = __webpack_require__(3)
		  , validateSymbol = __webpack_require__(19)

		  , create = Object.create, defineProperties = Object.defineProperties
		  , defineProperty = Object.defineProperty, objPrototype = Object.prototype
		  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)
		  , isNativeSafe;

		if (typeof Symbol === 'function') {
			NativeSymbol = Symbol;
			try {
				String(NativeSymbol());
				isNativeSafe = true;
			} catch (ignore) {}
		}

		var generateName = (function () {
			var created = create(null);
			return function (desc) {
				var postfix = 0, name, ie11BugWorkaround;
				while (created[desc + (postfix || '')]) ++postfix;
				desc += (postfix || '');
				created[desc] = true;
				name = '@@' + desc;
				defineProperty(objPrototype, name, d.gs(null, function (value) {
					// For IE11 issue see:
					// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/
					//    ie11-broken-getters-on-dom-objects
					// https://github.com/medikoo/es6-symbol/issues/12
					if (ie11BugWorkaround) return;
					ie11BugWorkaround = true;
					defineProperty(this, name, d(value));
					ie11BugWorkaround = false;
				}));
				return name;
			};
		}());

		// Internal constructor (not one exposed) for creating Symbol instances.
		// This one is used to ensure that `someSymbol instanceof Symbol` always return false
		HiddenSymbol = function Symbol(description) {
			if (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');
			return SymbolPolyfill(description);
		};

		// Exposed `Symbol` constructor
		// (returns instances of HiddenSymbol)
		module.exports = SymbolPolyfill = function Symbol(description) {
			var symbol;
			if (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');
			if (isNativeSafe) return NativeSymbol(description);
			symbol = create(HiddenSymbol.prototype);
			description = (description === undefined ? '' : String(description));
			return defineProperties(symbol, {
				__description__: d('', description),
				__name__: d('', generateName(description))
			});
		};
		defineProperties(SymbolPolyfill, {
			for: d(function (key) {
				if (globalSymbols[key]) return globalSymbols[key];
				return (globalSymbols[key] = SymbolPolyfill(String(key)));
			}),
			keyFor: d(function (s) {
				var key;
				validateSymbol(s);
				for (key in globalSymbols) if (globalSymbols[key] === s) return key;
			}),

			// To ensure proper interoperability with other native functions (e.g. Array.from)
			// fallback to eventual native implementation of given symbol
			hasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),
			isConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||
				SymbolPolyfill('isConcatSpreadable')),
			iterator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),
			match: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),
			replace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),
			search: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),
			species: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),
			split: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),
			toPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),
			toStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),
			unscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))
		});

		// Internal tweaks for real symbol producer
		defineProperties(HiddenSymbol.prototype, {
			constructor: d(SymbolPolyfill),
			toString: d('', function () { return this.__name__; })
		});

		// Proper implementation of methods exposed on Symbol.prototype
		// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype
		defineProperties(SymbolPolyfill.prototype, {
			toString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),
			valueOf: d(function () { return validateSymbol(this); })
		});
		defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {
			var symbol = validateSymbol(this);
			if (typeof symbol === 'symbol') return symbol;
			return symbol.toString();
		}));
		defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));

		// Proper implementaton of toPrimitive and toStringTag for returned symbol instances
		defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,
			d('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));

		// Note: It's important to define `toPrimitive` as last one, as some implementations
		// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)
		// And that may invoke error in definition flow:
		// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149
		defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,
			d('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));


		/***/ }),
		/* 19 */
		/***/ (function(module, exports, __webpack_require__) {

		var isSymbol = __webpack_require__(17);

		module.exports = function (value) {
			if (!isSymbol(value)) throw new TypeError(value + " is not a symbol");
			return value;
		};


		/***/ })
		/******/ ]);
		});

		});

		unwrapExports(momentRange);
		var momentRange_1 = momentRange.extendMoment;

		var moment$2 = momentRange_1(moment);

		function formatNumber(num) {
		  return num;
		}

		function getCalendarHeaderText(date) {
		  return date.format('MMMM YYYY');
		}

		function getDatePickerHeaderText(date) {
		  return date.format('ddd, MMM DD');
		}

		function getDateTimePickerHeaderText(date) {
		  return date.format('MMM DD');
		}

		function getDayText(date) {
		  return date.format('DD');
		}

		function getHourText(date, ampm) {
		  return date.format(ampm ? 'hh' : 'HH');
		}

		function getMinuteText(date) {
		  return date.format('mm');
		}

		function getMeridiemText(ampm) {
		  return ampm === 'am' ? 'AM' : 'PM';
		}

		function getYearText(date) {
		  return date.format('YYYY');
		}

		function getMonthNumber(date) {
		  return date.get('month');
		}

		function getStartOfMonth(date) {
		  return date.clone().startOf('month');
		}

		function getNextMonth(date) {
		  return date.clone().add(1, 'month');
		}

		function getPreviousMonth(date) {
		  return date.clone().subtract(1, 'month');
		}

		function getYear(date) {
		  return date.get('year');
		}

		function setYear(date, year) {
		  return date.clone().set('year', year);
		}

		function getWeekdays() {
		  return [0, 1, 2, 3, 4, 5, 6].map(function (dayOfWeek) {
		    return moment$2().weekday(dayOfWeek).format('dd');
		  });
		}

		function getWeekArray(date) {
		  var start = date.clone().startOf('month').startOf('week');
		  var end = date.clone().endOf('month').endOf('week');

		  var weeks = Array.from(moment$2.range(start, end).by('week'));

		  var nestedWeeks = [];

		  weeks.forEach(function (week) {
		    var endOfWeek = week.clone().endOf('week');
		    nestedWeeks.push(Array.from(moment$2.range(week, endOfWeek).by('day')));
		  });

		  return nestedWeeks;
		}

		var defaultUtils = Object.freeze({
			formatNumber: formatNumber,
			getCalendarHeaderText: getCalendarHeaderText,
			getDatePickerHeaderText: getDatePickerHeaderText,
			getDateTimePickerHeaderText: getDateTimePickerHeaderText,
			getDayText: getDayText,
			getHourText: getHourText,
			getMinuteText: getMinuteText,
			getMeridiemText: getMeridiemText,
			getYearText: getYearText,
			getMonthNumber: getMonthNumber,
			getStartOfMonth: getStartOfMonth,
			getNextMonth: getNextMonth,
			getPreviousMonth: getPreviousMonth,
			getYear: getYear,
			setYear: setYear,
			getWeekdays: getWeekdays,
			getWeekArray: getWeekArray
		});

		var CalendarHeader = function CalendarHeader(props) {
		  var classes = props.classes,
		      theme = props.theme,
		      currentMonth = props.currentMonth,
		      onMonthChange = props.onMonthChange,
		      leftArrowIcon = props.leftArrowIcon,
		      rightArrowIcon = props.rightArrowIcon,
		      utils = props.utils;


		  var rtl = theme.direction === 'rtl';

		  var selectNextMonth = function selectNextMonth() {
		    return onMonthChange(utils.getNextMonth(currentMonth));
		  };
		  var selectPreviousMonth = function selectPreviousMonth() {
		    return onMonthChange(utils.getPreviousMonth(currentMonth));
		  };

		  return React__default.createElement(
		    'div',
		    null,
		    React__default.createElement(
		      'div',
		      { className: classes.switchHeader },
		      React__default.createElement(
		        materialUi.IconButton,
		        { onClick: selectPreviousMonth },
		        rtl ? rightArrowIcon : leftArrowIcon
		      ),
		      React__default.createElement(
		        materialUi.Typography,
		        { type: 'body1' },
		        utils.getCalendarHeaderText(currentMonth)
		      ),
		      React__default.createElement(
		        materialUi.IconButton,
		        { onClick: selectNextMonth },
		        rtl ? leftArrowIcon : rightArrowIcon
		      )
		    ),
		    React__default.createElement(
		      'div',
		      { className: classes.daysHeader },
		      utils.getWeekdays().map(function (day) {
		        return React__default.createElement(
		          materialUi.Typography,
		          {
		            key: day,
		            type: 'caption',
		            className: classes.dayLabel
		          },
		          day
		        );
		      })
		    )
		  );
		};

		CalendarHeader.propTypes = {
		  currentMonth: PropTypes.object.isRequired,
		  onMonthChange: PropTypes.func.isRequired,
		  classes: PropTypes.object.isRequired,
		  theme: PropTypes.object.isRequired,
		  leftArrowIcon: PropTypes.node,
		  rightArrowIcon: PropTypes.node,
		  utils: PropTypes.object
		};

		CalendarHeader.defaultProps = {
		  leftArrowIcon: 'keyboard_arrow_left',
		  rightArrowIcon: 'keyboard_arrow_right',
		  utils: defaultUtils
		};

		var styles$2 = function styles(theme) {
		  return {
		    switchHeader: {
		      display: 'flex',
		      justifyContent: 'space-between',
		      alignItems: 'center',
		      marginBottom: theme.spacing.unit
		    },
		    daysHeader: {
		      display: 'flex',
		      justifyContent: 'center',
		      alignItems: 'center'
		    },
		    dayLabel: {
		      width: 36,
		      margin: '0 2px',
		      textAlign: 'center',
		      color: theme.palette.text.hint
		    }
		  };
		};

		var CalendarHeader$1 = materialUi.withStyles(styles$2, { withTheme: true, name: 'MuiPickersCalendarHeader' })(CalendarHeader);

		var DayWrapper = function (_PureComponent) {
		  inherits(DayWrapper, _PureComponent);

		  function DayWrapper() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, DayWrapper);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = DayWrapper.__proto__ || Object.getPrototypeOf(DayWrapper)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function () {
		      _this.props.onSelect(_this.props.value);
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(DayWrapper, [{
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          children = _props.children,
		          value = _props.value,
		          dayInCurrentMonth = _props.dayInCurrentMonth,
		          disabled = _props.disabled,
		          onSelect = _props.onSelect,
		          other = objectWithoutProperties(_props, ['children', 'value', 'dayInCurrentMonth', 'disabled', 'onSelect']);

		      return React__default.createElement(
		        'div',
		        _extends({
		          onClick: dayInCurrentMonth && !disabled ? this.handleClick : undefined,
		          onKeyPress: dayInCurrentMonth && !disabled ? this.handleClick : undefined,
		          role: 'presentation'
		        }, other),
		        children
		      );
		    }
		  }]);
		  return DayWrapper;
		}(React.PureComponent);

		DayWrapper.propTypes = {
		  children: PropTypes.node.isRequired,
		  dayInCurrentMonth: PropTypes.bool,
		  disabled: PropTypes.bool,
		  onSelect: PropTypes.func.isRequired,
		  value: PropTypes.any.isRequired
		};
		DayWrapper.defaultProps = {
		  dayInCurrentMonth: true,
		  disabled: false
		};

		var Day = function (_PureComponent) {
		  inherits(Day, _PureComponent);

		  function Day() {
		    classCallCheck(this, Day);
		    return possibleConstructorReturn(this, (Day.__proto__ || Object.getPrototypeOf(Day)).apply(this, arguments));
		  }

		  createClass(Day, [{
		    key: 'render',
		    value: function render() {
		      var _classnames;

		      var _props = this.props,
		          children = _props.children,
		          classes = _props.classes,
		          disabled = _props.disabled,
		          hidden = _props.hidden,
		          current = _props.current,
		          selected = _props.selected,
		          other = objectWithoutProperties(_props, ['children', 'classes', 'disabled', 'hidden', 'current', 'selected']);


		      var className = classnames(classes.day, (_classnames = {}, defineProperty(_classnames, classes.hidden, hidden), defineProperty(_classnames, classes.current, current), defineProperty(_classnames, classes.selected, selected), defineProperty(_classnames, classes.disabled, disabled), _classnames));

		      return React__default.createElement(
		        materialUi.IconButton,
		        _extends({
		          className: className,
		          tabIndex: hidden || disabled ? -1 : 0
		        }, other),
		        React__default.createElement(
		          'span',
		          null,
		          ' ',
		          children,
		          ' '
		        )
		      );
		    }
		  }]);
		  return Day;
		}(React.PureComponent);

		Day.propTypes = {
		  children: PropTypes.node.isRequired,
		  classes: PropTypes.object.isRequired,
		  current: PropTypes.bool,
		  disabled: PropTypes.bool,
		  hidden: PropTypes.bool,
		  selected: PropTypes.bool
		};
		Day.defaultProps = {
		  disabled: false,
		  hidden: false,
		  current: false,
		  selected: false
		};


		var styles$3 = function styles(theme) {
		  return {
		    day: {
		      width: 36,
		      height: 36,
		      fontSize: theme.typography.caption.fontSize,
		      margin: '0 2px',
		      color: theme.palette.text.primary,
		      fontWeight: theme.typography.fontWeightMedium
		    },
		    hidden: {
		      opacity: 0,
		      pointerEvents: 'none'
		    },
		    current: {
		      color: theme.palette.primary[500],
		      fontWeight: 600
		    },
		    selected: {
		      color: theme.palette.common.white,
		      backgroundColor: theme.palette.primary[500],
		      fontWeight: theme.typography.fontWeightMedium
		    },
		    disabled: {
		      pointerEvents: 'none',
		      color: theme.palette.text.hint
		    }
		  };
		};

		var Day$1 = materialUi.withStyles(styles$3)(Day);

		var moment$1 = momentRange_1(moment);

		var Calendar = function (_Component) {
		  inherits(Calendar, _Component);

		  function Calendar() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, Calendar);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Calendar.__proto__ || Object.getPrototypeOf(Calendar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      currentMonth: _this.props.utils.getStartOfMonth(_this.props.date)
		    }, _this.onDateSelect = function (day) {
		      var date = _this.props.date;

		      var updatedDate = day.clone().hours(date.hours()).minutes(date.minutes());

		      _this.props.onChange(updatedDate);
		    }, _this.handleChangeMonth = function (newMonth) {
		      _this.setState({ currentMonth: newMonth });
		    }, _this.validateMinMaxDate = function (day) {
		      var _this$props = _this.props,
		          minDate = _this$props.minDate,
		          maxDate = _this$props.maxDate;

		      var startOfDay = function startOfDay(date) {
		        return moment$1(date).startOf('day');
		      };

		      return minDate && day.isBefore(startOfDay(minDate)) || maxDate && day.isAfter(startOfDay(maxDate));
		    }, _this.shouldDisableDate = function (day) {
		      var _this$props2 = _this.props,
		          disablePast = _this$props2.disablePast,
		          disableFuture = _this$props2.disableFuture,
		          shouldDisableDate = _this$props2.shouldDisableDate;

		      return disableFuture && day.isAfter(moment$1(), 'day') || disablePast && day.isBefore(moment$1(), 'day') || _this.validateMinMaxDate(day) || shouldDisableDate(day);
		    }, _this.renderWeeks = function () {
		      var utils = _this.props.utils;
		      var currentMonth = _this.state.currentMonth;

		      var weeks = utils.getWeekArray(currentMonth);

		      return weeks.map(function (week) {
		        return React__default.createElement(
		          'div',
		          { key: 'week-' + week[0].toString(), className: _this.props.classes.week },
		          _this.renderDays(week)
		        );
		      });
		    }, _this.renderDays = function (week) {
		      var _this$props3 = _this.props,
		          date = _this$props3.date,
		          renderDay = _this$props3.renderDay,
		          utils = _this$props3.utils;


		      var selectedDate = date.clone().startOf('day');
		      var currentMonthNumber = utils.getMonthNumber(_this.state.currentMonth);
		      var now = moment$1();

		      return week.map(function (day) {
		        var disabled = _this.shouldDisableDate(day);
		        var dayInCurrentMonth = utils.getMonthNumber(day) === currentMonthNumber;

		        var dayComponent = React__default.createElement(
		          Day$1,
		          {
		            current: day.isSame(now, 'day'),
		            hidden: !dayInCurrentMonth,
		            disabled: disabled,
		            selected: selectedDate.isSame(day, 'day')
		          },
		          utils.getDayText(day)
		        );

		        if (renderDay) {
		          dayComponent = renderDay(day, selectedDate, dayInCurrentMonth, dayComponent);
		        }

		        return React__default.createElement(
		          DayWrapper,
		          {
		            key: day.toString(),
		            value: day,
		            dayInCurrentMonth: dayInCurrentMonth,
		            disabled: disabled,
		            onSelect: _this.onDateSelect
		          },
		          dayComponent
		        );
		      });
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(Calendar, [{
		    key: 'render',
		    value: function render() {
		      var currentMonth = this.state.currentMonth;
		      var _props = this.props,
		          classes = _props.classes,
		          utils = _props.utils;


		      return React__default.createElement(
		        React.Fragment,
		        null,
		        React__default.createElement(CalendarHeader$1, {
		          currentMonth: currentMonth,
		          onMonthChange: this.handleChangeMonth,
		          leftArrowIcon: this.props.leftArrowIcon,
		          rightArrowIcon: this.props.rightArrowIcon,
		          utils: utils
		        }),
		        React__default.createElement(
		          'div',
		          { className: classes.calendar },
		          this.renderWeeks()
		        )
		      );
		    }
		  }]);
		  return Calendar;
		}(React.Component);

		Calendar.propTypes = {
		  date: PropTypes.object.isRequired,
		  minDate: DomainPropTypes.date,
		  maxDate: DomainPropTypes.date,
		  classes: PropTypes.object.isRequired,
		  onChange: PropTypes.func.isRequired,
		  disablePast: PropTypes.bool,
		  disableFuture: PropTypes.bool,
		  leftArrowIcon: PropTypes.node,
		  rightArrowIcon: PropTypes.node,
		  renderDay: PropTypes.func,
		  utils: PropTypes.object,
		  shouldDisableDate: PropTypes.func
		};
		Calendar.defaultProps = {
		  minDate: '1900-01-01',
		  maxDate: '2100-01-01',
		  disablePast: false,
		  disableFuture: false,
		  leftArrowIcon: undefined,
		  rightArrowIcon: undefined,
		  renderDay: undefined,
		  utils: defaultUtils,
		  shouldDisableDate: function shouldDisableDate() {
		    return false;
		  }
		};
		var styles$1 = function styles(theme) {
		  return {
		    calendar: {
		      height: 36 * 6,
		      marginTop: theme.spacing.unit * 1.5
		    },
		    week: {
		      display: 'flex',
		      justifyContent: 'center'
		    }
		  };
		};

		var Calendar$1 = materialUi.withStyles(styles$1, { name: 'MuiPickersCalendar' })(Calendar);

		var Year = function (_PureComponent) {
		  inherits(Year, _PureComponent);

		  function Year() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, Year);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Year.__proto__ || Object.getPrototypeOf(Year)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function () {
		      _this.props.onSelect(_this.props.value);
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(Year, [{
		    key: 'render',
		    value: function render() {
		      var _classnames;

		      var _props = this.props,
		          classes = _props.classes,
		          selected = _props.selected,
		          disabled = _props.disabled,
		          value = _props.value,
		          children = _props.children,
		          other = objectWithoutProperties(_props, ['classes', 'selected', 'disabled', 'value', 'children']);


		      return React__default.createElement(
		        materialUi.Typography,
		        _extends({
		          role: 'button',
		          component: 'div',
		          className: classnames(classes.root, (_classnames = {}, defineProperty(_classnames, classes.selected, selected), defineProperty(_classnames, classes.disabled, disabled), _classnames)),
		          tabIndex: disabled ? -1 : 0,
		          onClick: this.handleClick,
		          onKeyPress: this.handleClick,
		          color: selected ? 'primary' : 'default',
		          type: selected ? 'headline' : 'subheading'
		        }, other),
		        children
		      );
		    }
		  }]);
		  return Year;
		}(React.PureComponent);

		Year.propTypes = {
		  children: PropTypes.node.isRequired,
		  classes: PropTypes.object.isRequired,
		  disabled: PropTypes.bool,
		  onSelect: PropTypes.func.isRequired,
		  selected: PropTypes.bool,
		  value: PropTypes.any.isRequired
		};
		Year.defaultProps = {
		  selected: false,
		  disabled: false
		};


		var styles$5 = function styles(theme) {
		  return {
		    root: {
		      height: theme.spacing.unit * 5,
		      display: 'flex',
		      alignItems: 'center',
		      justifyContent: 'center',
		      cursor: 'pointer',
		      outline: 'none',
		      '&:focus': {
		        color: theme.palette.primary[500],
		        fontWeight: theme.typography.fontWeightMedium
		      }
		    },
		    selected: {
		      margin: '10px 0',
		      fontWeight: theme.typography.fontWeightMedium
		    },
		    disabled: {
		      pointerEvents: 'none',
		      color: theme.palette.text.hint
		    }
		  };
		};

		var Year$1 = materialUi.withStyles(styles$5)(Year);

		var moment$3 = momentRange_1(moment);

		var YearSelection = function (_PureComponent) {
		  inherits(YearSelection, _PureComponent);

		  function YearSelection() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, YearSelection);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = YearSelection.__proto__ || Object.getPrototypeOf(YearSelection)).call.apply(_ref, [this].concat(args))), _this), _this.componentDidMount = function () {
		      _this.scrollToCurrentYear();
		    }, _this.onYearSelect = function (year) {
		      var _this$props = _this.props,
		          date = _this$props.date,
		          onChange = _this$props.onChange,
		          utils = _this$props.utils;


		      var newDate = utils.setYear(date, year);
		      onChange(newDate);
		    }, _this.getSelectedYearRef = function (ref) {
		      _this.selectedYearRef = ref;
		    }, _this.scrollToCurrentYear = function () {
		      var animateYearScrolling = _this.props.animateYearScrolling;

		      var currentYearElement = reactDom.findDOMNode(_this.selectedYearRef);

		      if (currentYearElement) {
		        currentYearElement.scrollIntoView({
		          behavior: animateYearScrolling ? 'smooth' : 'auto'
		        });
		      }
		    }, _this.selectedYearRef = undefined, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(YearSelection, [{
		    key: 'render',
		    value: function render() {
		      var _this2 = this;

		      var _props = this.props,
		          minDate = _props.minDate,
		          maxDate = _props.maxDate,
		          date = _props.date,
		          classes = _props.classes,
		          disablePast = _props.disablePast,
		          disableFuture = _props.disableFuture,
		          utils = _props.utils;

		      var currentYear = utils.getYear(date);

		      return React__default.createElement(
		        'div',
		        { className: classes.container },
		        Array.from(moment$3.range(minDate, maxDate).by('year')).map(function (year) {
		          var yearNumber = utils.getYear(year);
		          var selected = yearNumber === currentYear;

		          return React__default.createElement(
		            Year$1,
		            {
		              selected: selected,
		              disabled: disablePast && year.isBefore(moment$3(), 'year') || disableFuture && year.isAfter(moment$3(), 'year'),
		              value: yearNumber,
		              key: utils.getYearText(year),
		              onSelect: _this2.onYearSelect,
		              ref: selected ? _this2.getSelectedYearRef : undefined
		            },
		            utils.getYearText(year)
		          );
		        })
		      );
		    }
		  }]);
		  return YearSelection;
		}(React.PureComponent);

		YearSelection.propTypes = {
		  date: PropTypes.shape({}).isRequired,
		  minDate: DomainPropTypes.date.isRequired,
		  maxDate: DomainPropTypes.date.isRequired,
		  classes: PropTypes.object.isRequired,
		  onChange: PropTypes.func.isRequired,
		  disablePast: PropTypes.bool.isRequired,
		  disableFuture: PropTypes.bool.isRequired,
		  animateYearScrolling: PropTypes.bool,
		  utils: PropTypes.object
		};
		YearSelection.defaultProps = {
		  animateYearScrolling: false,
		  utils: defaultUtils
		};
		var styles$4 = {
		  container: {
		    maxHeight: 300,
		    overflowY: 'auto',
		    justifyContent: 'center'
		  }
		};

		var YearSelection$1 = materialUi.withStyles(styles$4, { name: 'MuiPickersYearSelection' })(YearSelection);

		var PickerToolbar = function PickerToolbar(props) {
		  var children = props.children,
		      className = props.className,
		      classes = props.classes,
		      other = objectWithoutProperties(props, ['children', 'className', 'classes']);


		  return React__default.createElement(
		    materialUi.Toolbar,
		    _extends({ className: classnames(classes.toolbar, className) }, other),
		    children
		  );
		};

		PickerToolbar.propTypes = {
		  children: PropTypes.arrayOf(PropTypes.node).isRequired,
		  className: PropTypes.string,
		  classes: PropTypes.object.isRequired
		};

		PickerToolbar.defaultProps = {
		  className: ''
		};

		var styles$6 = function styles(theme) {
		  return {
		    toolbar: {
		      display: 'flex',
		      flexDirection: 'column',
		      alignItems: 'flex-start',
		      justifyContent: 'center',
		      height: 100,
		      backgroundColor: theme.palette.type === 'light' ? theme.palette.primary[500] : theme.palette.background.default
		    }
		  };
		};

		var PickerToolbar$1 = materialUi.withStyles(styles$6, { name: 'MuiPickersToolbar' })(PickerToolbar);

		var ToolbarButton = function ToolbarButton(props) {
		  var classes = props.classes,
		      selected = props.selected,
		      label = props.label,
		      className = props.className,
		      other = objectWithoutProperties(props, ['classes', 'selected', 'label', 'className']);


		  return React__default.createElement(
		    materialUi.Typography,
		    _extends({
		      className: classnames(classes.toolbarBtn, className, defineProperty({}, classes.toolbarBtnSelected, selected))
		    }, other),
		    label
		  );
		};

		ToolbarButton.propTypes = {
		  selected: PropTypes.bool.isRequired,
		  label: PropTypes.string.isRequired,
		  classes: PropTypes.object.isRequired,
		  className: PropTypes.string
		};

		ToolbarButton.defaultProps = {
		  className: ''
		};

		var styles$7 = function styles(theme) {
		  return {
		    toolbarBtn: {
		      cursor: 'pointer',
		      color: theme.palette.common.lightWhite
		    },
		    toolbarBtnSelected: {
		      color: theme.palette.common.white
		    }
		  };
		};

		var ToolbarButton$1 = materialUi.withStyles(styles$7, { name: 'MuiPickersToolbarButton' })(ToolbarButton);

		var DatePicker = function (_PureComponent) {
		  inherits(DatePicker, _PureComponent);

		  function DatePicker() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, DatePicker);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      showYearSelection: _this.props.openToYearSelection
		    }, _this.handleYearSelect = function (date) {
		      _this.props.onChange(date, false);
		      _this.openCalendar();
		    }, _this.openYearSelection = function () {
		      _this.setState({ showYearSelection: true });
		    }, _this.openCalendar = function () {
		      _this.setState({ showYearSelection: false });
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(DatePicker, [{
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          disablePast = _props.disablePast,
		          disableFuture = _props.disableFuture,
		          onChange = _props.onChange,
		          animateYearScrolling = _props.animateYearScrolling,
		          leftArrowIcon = _props.leftArrowIcon,
		          rightArrowIcon = _props.rightArrowIcon,
		          renderDay = _props.renderDay,
		          utils = _props.utils,
		          shouldDisableDate = _props.shouldDisableDate;
		      var showYearSelection = this.state.showYearSelection;


		      return React__default.createElement(
		        React.Fragment,
		        null,
		        React__default.createElement(
		          PickerToolbar$1,
		          null,
		          React__default.createElement(ToolbarButton$1, {
		            type: 'subheading',
		            onClick: this.openYearSelection,
		            selected: showYearSelection,
		            label: utils.getYearText(this.date)
		          }),
		          React__default.createElement(ToolbarButton$1, {
		            type: 'display1',
		            onClick: this.openCalendar,
		            selected: !showYearSelection,
		            label: utils.getDatePickerHeaderText(this.date)
		          })
		        ),
		        this.props.children,
		        showYearSelection ? React__default.createElement(YearSelection$1, {
		          date: this.date,
		          onChange: this.handleYearSelect,
		          minDate: this.minDate,
		          maxDate: this.maxDate,
		          disablePast: disablePast,
		          disableFuture: disableFuture,
		          animateYearScrolling: animateYearScrolling,
		          utils: utils
		        }) : React__default.createElement(Calendar$1, {
		          date: this.date,
		          onChange: onChange,
		          disablePast: disablePast,
		          disableFuture: disableFuture,
		          minDate: this.minDate,
		          maxDate: this.maxDate,
		          leftArrowIcon: leftArrowIcon,
		          rightArrowIcon: rightArrowIcon,
		          renderDay: renderDay,
		          utils: utils,
		          shouldDisableDate: shouldDisableDate
		        })
		      );
		    }
		  }, {
		    key: 'date',
		    get: function get$$1() {
		      return this.props.date.startOf('day');
		    }
		  }, {
		    key: 'minDate',
		    get: function get$$1() {
		      return moment(this.props.minDate);
		    }
		  }, {
		    key: 'maxDate',
		    get: function get$$1() {
		      return moment(this.props.maxDate);
		    }
		  }]);
		  return DatePicker;
		}(React.PureComponent);

		DatePicker.propTypes = {
		  date: PropTypes.object.isRequired,
		  minDate: DomainPropTypes.date,
		  maxDate: DomainPropTypes.date,
		  onChange: PropTypes.func.isRequired,
		  disablePast: PropTypes.bool,
		  disableFuture: PropTypes.bool,
		  animateYearScrolling: PropTypes.bool,
		  openToYearSelection: PropTypes.bool,
		  children: PropTypes.node,
		  leftArrowIcon: PropTypes.node,
		  rightArrowIcon: PropTypes.node,
		  renderDay: PropTypes.func,
		  utils: PropTypes.object,
		  shouldDisableDate: PropTypes.func
		};
		DatePicker.defaultProps = {
		  minDate: '1900-01-01',
		  maxDate: '2100-01-01',
		  disablePast: false,
		  disableFuture: false,
		  animateYearScrolling: undefined,
		  openToYearSelection: false,
		  children: null,
		  leftArrowIcon: undefined,
		  rightArrowIcon: undefined,
		  renderDay: undefined,
		  utils: defaultUtils,
		  shouldDisableDate: undefined
		};

		/* eslint-disable react/sort-comp */

		var PickerBase = function (_PureComponent) {
		  inherits(PickerBase, _PureComponent);

		  function PickerBase() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, PickerBase);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = PickerBase.__proto__ || Object.getPrototypeOf(PickerBase)).call.apply(_ref, [this].concat(args))), _this), _this.getValidDateOrCurrent = function () {
		      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;

		      var date = moment(props.value);

		      return date.isValid() ? date : moment();
		    }, _this.state = {
		      date: _this.getValidDateOrCurrent()
		    }, _this.getFormat = function () {
		      if (_this.props.format || _this.props.labelFunc) {
		        return _this.props.format;
		      }

		      return _this.props.ampm ? _this.default12hFormat : _this.default24hFormat;
		    }, _this.getRef = function (node) {
		      _this.wrapper = node;
		    }, _this.handleClear = function () {
		      _this.props.onChange(null);
		    }, _this.handleAccept = function () {
		      var dateToReturn = _this.props.returnMoment ? _this.state.date : _this.state.date.toDate();

		      _this.props.onChange(dateToReturn);
		    }, _this.handleDismiss = function () {
		      _this.setState({ date: _this.getValidDateOrCurrent(_this.props) });
		    }, _this.handleChange = function (date) {
		      var isFinish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

		      _this.setState({ date: date }, function () {
		        if (isFinish && _this.props.autoOk) {
		          _this.handleAccept();
		          _this.wrapper.close();
		        }
		      });
		    }, _this.handleTextFieldChange = function (date) {
		      if (date === null) {
		        _this.handleClear();
		      } else {
		        _this.setState({ date: date }, _this.handleAccept);
		      }
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(PickerBase, [{
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      if (this.props.value !== nextProps.value) {
		        this.setState({ date: this.getValidDateOrCurrent(nextProps) });
		      }
		    }
		  }]);
		  return PickerBase;
		}(React.PureComponent);

		PickerBase.propTypes = {
		  value: DomainPropTypes.date,
		  onChange: PropTypes.func.isRequired,
		  autoOk: PropTypes.bool,
		  returnMoment: PropTypes.bool,
		  format: PropTypes.string,
		  labelFunc: PropTypes.func,
		  ampm: PropTypes.bool
		};
		PickerBase.defaultProps = {
		  value: new Date(),
		  autoOk: false,
		  returnMoment: false,
		  labelFunc: undefined,
		  format: undefined,
		  ampm: true
		};

		var DatePickerWrapper = function (_PickerBase) {
		  inherits(DatePickerWrapper, _PickerBase);

		  function DatePickerWrapper() {
		    classCallCheck(this, DatePickerWrapper);
		    return possibleConstructorReturn(this, (DatePickerWrapper.__proto__ || Object.getPrototypeOf(DatePickerWrapper)).apply(this, arguments));
		  }

		  createClass(DatePickerWrapper, [{
		    key: 'render',
		    value: function render() {
		      var date = this.state.date;
		      var _props = this.props,
		          value = _props.value,
		          format = _props.format,
		          autoOk = _props.autoOk,
		          minDate = _props.minDate,
		          maxDate = _props.maxDate,
		          onChange = _props.onChange,
		          disablePast = _props.disablePast,
		          disableFuture = _props.disableFuture,
		          animateYearScrolling = _props.animateYearScrolling,
		          openToYearSelection = _props.openToYearSelection,
		          returnMoment = _props.returnMoment,
		          invalidLabel = _props.invalidLabel,
		          leftArrowIcon = _props.leftArrowIcon,
		          rightArrowIcon = _props.rightArrowIcon,
		          renderDay = _props.renderDay,
		          labelFunc = _props.labelFunc,
		          utils = _props.utils,
		          shouldDisableDate = _props.shouldDisableDate,
		          other = objectWithoutProperties(_props, ['value', 'format', 'autoOk', 'minDate', 'maxDate', 'onChange', 'disablePast', 'disableFuture', 'animateYearScrolling', 'openToYearSelection', 'returnMoment', 'invalidLabel', 'leftArrowIcon', 'rightArrowIcon', 'renderDay', 'labelFunc', 'utils', 'shouldDisableDate']);


		      return React__default.createElement(
		        ModalWrapper,
		        _extends({
		          ref: this.getRef,
		          value: value,
		          format: format,
		          onClear: this.handleClear,
		          onAccept: this.handleAccept,
		          onChange: this.handleTextFieldChange,
		          onDismiss: this.handleDismiss,
		          invalidLabel: invalidLabel,
		          labelFunc: labelFunc
		        }, other),
		        React__default.createElement(DatePicker, {
		          date: date,
		          onChange: this.handleChange,
		          disablePast: disablePast,
		          disableFuture: disableFuture,
		          animateYearScrolling: animateYearScrolling,
		          openToYearSelection: openToYearSelection,
		          minDate: minDate,
		          maxDate: maxDate,
		          leftArrowIcon: leftArrowIcon,
		          rightArrowIcon: rightArrowIcon,
		          renderDay: renderDay,
		          utils: utils,
		          shouldDisableDate: shouldDisableDate
		        })
		      );
		    }
		  }]);
		  return DatePickerWrapper;
		}(PickerBase);

		DatePickerWrapper.propTypes = {
		  /* Datepicker value */
		  value: DomainPropTypes.date,
		  /* Min selectable date */
		  minDate: DomainPropTypes.date,
		  /* Max selectable date */
		  maxDate: DomainPropTypes.date,
		  /* Moment format string for input */
		  format: PropTypes.string,
		  /* Callback firing when date accepted */
		  onChange: PropTypes.func.isRequired,
		  /* Auto accept date on selection */
		  autoOk: PropTypes.bool,
		  /* Disable past dates */
		  disablePast: PropTypes.bool,
		  /* Disable future dates */
		  disableFuture: PropTypes.bool,
		  /* To animate scrolling to current year (with scrollIntoView) */
		  animateYearScrolling: PropTypes.bool,
		  /* Open datepicker from year selection */
		  openToYearSelection: PropTypes.bool,
		  /* Return moment object in onChange event */
		  returnMoment: PropTypes.bool,
		  /* Displayed string if date can`t be parsed (or null) */
		  invalidLabel: PropTypes.string,
		  /* Allow to specify dynamic label for text field labelFunc(date, invalidLabel) */
		  labelFunc: PropTypes.func,
		  /* Left arrow icon */
		  leftArrowIcon: PropTypes.node,
		  /* Right arrow icon */
		  rightArrowIcon: PropTypes.node,
		  /* Custom renderer for day renderDay(date, selectedDate, dayInCurrentMonth) */
		  renderDay: PropTypes.func,
		  /* Date displaying utils */
		  utils: PropTypes.object,
		  /* Disable specific date hook */
		  shouldDisableDate: PropTypes.func
		};
		DatePickerWrapper.defaultProps = {
		  value: new Date(),
		  format: 'MMMM Do',
		  autoOk: false,
		  returnMoment: true,
		  minDate: undefined,
		  maxDate: undefined,
		  disablePast: undefined,
		  disableFuture: undefined,
		  animateYearScrolling: undefined,
		  openToYearSelection: undefined,
		  invalidLabel: undefined,
		  leftArrowIcon: undefined,
		  rightArrowIcon: undefined,
		  renderDay: undefined,
		  labelFunc: undefined,
		  utils: defaultUtils,
		  shouldDisableDate: undefined
		};

		var ClockPointer = function (_Component) {
		  inherits(ClockPointer, _Component);

		  function ClockPointer() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, ClockPointer);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ClockPointer.__proto__ || Object.getPrototypeOf(ClockPointer)).call.apply(_ref, [this].concat(args))), _this), _this.getAngleStyle = function () {
		      var _this$props = _this.props,
		          value = _this$props.value,
		          isInner = _this$props.isInner,
		          max = _this$props.max;


		      var angle = 360 / max * value;

		      return {
		        height: isInner ? '26%' : '40%',
		        transform: 'rotateZ(' + angle + 'deg)'
		      };
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(ClockPointer, [{
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          classes = _props.classes,
		          hasSelected = _props.hasSelected;


		      return React__default.createElement(
		        'div',
		        {
		          className: classes.pointer,
		          style: this.getAngleStyle()
		        },
		        React__default.createElement('div', { className: classnames(classes.thumb, defineProperty({}, classes.noPoint, hasSelected)) })
		      );
		    }
		  }]);
		  return ClockPointer;
		}(React.Component);

		ClockPointer.propTypes = {
		  classes: PropTypes.object.isRequired,
		  value: PropTypes.number.isRequired,
		  hasSelected: PropTypes.bool.isRequired,
		  isInner: PropTypes.bool.isRequired,
		  max: PropTypes.number.isRequired
		};
		var styles$10 = function styles(theme) {
		  return {
		    pointer: {
		      width: 2,
		      backgroundColor: theme.palette.primary[500],
		      position: 'absolute',
		      left: 'calc(50% - 1px)',
		      bottom: '50%',
		      transformOrigin: 'center bottom 0px'
		    },
		    thumb: {
		      width: 4,
		      height: 4,
		      backgroundColor: theme.palette.common.white,
		      borderRadius: '100%',
		      position: 'absolute',
		      top: -21,
		      left: -15,
		      border: '14px solid ' + theme.palette.primary[500],
		      boxSizing: 'content-box'
		    },
		    noPoint: {
		      backgroundColor: theme.palette.primary[500]
		    }
		  };
		};

		var ClockPointer$1 = materialUi.withStyles(styles$10, { name: 'MuiPickersClockPointer' })(ClockPointer);

		var HOURS = 'hours';

		var MINUTES = 'minutes';

		var clockType = Object.freeze({
			HOURS: HOURS,
			MINUTES: MINUTES
		});

		var center = {
		  x: 260 / 2,
		  y: 260 / 2
		};

		var basePoint = {
		  x: center.x,
		  y: 0
		};

		var cx = basePoint.x - center.x;
		var cy = basePoint.y - center.y;

		var rad2deg = function rad2deg(rad) {
		  return rad * 57.29577951308232;
		};

		var getAngleValue = function getAngleValue(step, offsetX, offsetY) {
		  var x = offsetX - center.x;
		  var y = offsetY - center.y;

		  var atan = Math.atan2(cx, cy) - Math.atan2(x, y);

		  var deg = rad2deg(atan);
		  deg = Math.round(deg / step) * step;
		  deg %= 360;

		  var value = Math.floor(deg / step) || 0;
		  // eslint-disable-next-line no-restricted-properties
		  var delta = Math.pow(x, 2) + Math.pow(y, 2);
		  var distance = Math.sqrt(delta);

		  return { value: value, distance: distance };
		};

		var getHours = function getHours(offsetX, offsetY, ampm) {
		  // eslint-disable-next-line
		  var _getAngleValue = getAngleValue(30, offsetX, offsetY),
		      value = _getAngleValue.value,
		      distance = _getAngleValue.distance;

		  value = value || 12;

		  if (!ampm) {
		    if (distance < 90) {
		      value += 12;
		      value %= 24;
		    }
		  } else {
		    value %= 12;
		  }

		  return value;
		};

		var getMinutes = function getMinutes(offsetX, offsetY) {
		  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 6;

		  var _getAngleValue2 = getAngleValue(step, offsetX, offsetY),
		      value = _getAngleValue2.value;

		  return value;
		};

		var convertToMeridiem = function convertToMeridiem(time, meridiem, ampm) {
		  if (ampm) {
		    var currentMeridiem = time.hours() >= 12 ? 'pm' : 'am';
		    if (currentMeridiem !== meridiem) {
		      var hours = meridiem === 'am' ? time.hours() - 12 : time.hours() + 12;

		      return time.clone().hours(hours);
		    }
		  }

		  return time;
		};

		var Clock = function (_Component) {
		  inherits(Clock, _Component);

		  function Clock() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, Clock);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Clock.__proto__ || Object.getPrototypeOf(Clock)).call.apply(_ref, [this].concat(args))), _this), _this.handleTouchMove = function (e) {
		      _this.isMoving = true;
		      _this.setTime(e);
		    }, _this.handleMouseUp = function (e) {
		      if (_this.isMoving) {
		        _this.isMoving = false;
		      }
		      _this.setTime(e.nativeEvent, true);
		    }, _this.handleTouchEnd = function (e) {
		      if (_this.isMoving) {
		        _this.setTime(e.nativeEvent, true);
		        _this.isMoving = false;
		      }
		    }, _this.handleMove = function (e) {
		      e.preventDefault();
		      e.stopPropagation();
		      // MouseEvent.which is deprecated, but MouseEvent.buttons is not supported in Safari
		      var isButtonPressed = typeof e.buttons === 'undefined' ? e.nativeEvent.which === 1 : e.buttons === 1;

		      if (isButtonPressed) {
		        _this.setTime(e.nativeEvent, false);
		      }
		    }, _this.hasSelected = function () {
		      var _this$props = _this.props,
		          type = _this$props.type,
		          value = _this$props.value;


		      if (type === HOURS) {
		        return true;
		      }

		      return value % 5 === 0;
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(Clock, [{
		    key: 'setTime',
		    value: function setTime(e) {
		      var isFinish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
		      var offsetX = e.offsetX,
		          offsetY = e.offsetY;


		      if (typeof offsetX === 'undefined') {
		        var rect = e.target.getBoundingClientRect();

		        offsetX = e.changedTouches[0].clientX - rect.left;
		        offsetY = e.changedTouches[0].clientY - rect.top;
		      }

		      var value = this.props.type === MINUTES ? getMinutes(offsetX, offsetY) : getHours(offsetX, offsetY, this.props.ampm);

		      this.props.onChange(value, isFinish);
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          classes = _props.classes,
		          value = _props.value,
		          children = _props.children,
		          type = _props.type,
		          ampm = _props.ampm;


		      var max = type === HOURS ? 12 : 60;
		      var isPointerInner = !ampm && type === HOURS && (value < 1 || value > 12);

		      return React__default.createElement(
		        'div',
		        { className: classes.container },
		        React__default.createElement(
		          'div',
		          {
		            className: classes.clock
		          },
		          React__default.createElement('div', {
		            role: 'menu',
		            tabIndex: -1,
		            className: classes.squareMask,
		            onTouchMove: this.handleTouchMove,
		            onTouchEnd: this.handleTouchEnd,
		            onMouseUp: this.handleMouseUp,
		            onMouseMove: this.handleMove
		          }),
		          React__default.createElement(ClockPointer$1, {
		            max: max,
		            value: value,
		            isInner: isPointerInner,
		            hasSelected: this.hasSelected()
		          }),
		          children
		        )
		      );
		    }
		  }]);
		  return Clock;
		}(React.Component);

		Clock.propTypes = {
		  type: PropTypes.oneOf(Object.keys(clockType).map(function (key) {
		    return clockType[key];
		  })).isRequired,
		  classes: PropTypes.object.isRequired,
		  value: PropTypes.number.isRequired,
		  onChange: PropTypes.func.isRequired,
		  children: PropTypes.arrayOf(PropTypes.node).isRequired,
		  ampm: PropTypes.bool
		};
		Clock.defaultProps = {
		  ampm: false
		};
		var styles$9 = function styles(theme) {
		  return {
		    container: {
		      display: 'flex',
		      justifyContent: 'center',
		      alignItems: 'flex-end',
		      margin: [[theme.spacing.unit * 4, 0, theme.spacing.unit]]
		    },
		    clock: {
		      backgroundColor: 'rgba(0,0,0,.07)',
		      borderRadius: '50%',
		      height: 260,
		      width: 260,
		      position: 'relative',
		      pointerEvents: 'none'
		    },
		    squareMask: {
		      width: '100%',
		      height: '100%',
		      position: 'absolute',
		      pointerEvents: 'auto',
		      outline: 'none'
		    }
		  };
		};

		var Clock$1 = materialUi.withStyles(styles$9, { name: 'MuiPickersClock' })(Clock);

		var positions = {
		  0: [0, 40],
		  1: [55, 19.6],
		  2: [94.4, 59.5],
		  3: [109, 114],
		  4: [94.4, 168.5],
		  5: [54.5, 208.4],
		  6: [0, 223],
		  7: [-54.5, 208.4],
		  8: [-94.4, 168.5],
		  9: [-109, 114],
		  10: [-94.4, 59.5],
		  11: [-54.5, 19.6],
		  12: [0, 5],
		  13: [36.9, 49.9],
		  14: [64, 77],
		  15: [74, 114],
		  16: [64, 151],
		  17: [37, 178],
		  18: [0, 188],
		  19: [-37, 178],
		  20: [-64, 151],
		  21: [-74, 114],
		  22: [-64, 77],
		  23: [-37, 50]
		};

		var ClockNumber = function (_Component) {
		  inherits(ClockNumber, _Component);

		  function ClockNumber() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, ClockNumber);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ClockNumber.__proto__ || Object.getPrototypeOf(ClockNumber)).call.apply(_ref, [this].concat(args))), _this), _this.getTransformStyle = function (index) {
		      var position = positions[index];

		      return {
		        transform: 'translate(' + position[0] + 'px, ' + position[1] + 'px'
		      };
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(ClockNumber, [{
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          selected = _props.selected,
		          label = _props.label,
		          index = _props.index,
		          classes = _props.classes,
		          isInner = _props.isInner;


		      var className = classnames(classes.clockNumber, defineProperty({}, classes.selected, selected));

		      return React__default.createElement(
		        materialUi.Typography,
		        {
		          type: isInner ? 'body1' : 'subheading',
		          component: 'span',
		          className: className,
		          style: this.getTransformStyle(index, isInner)
		        },
		        label
		      );
		    }
		  }]);
		  return ClockNumber;
		}(React.Component);

		ClockNumber.propTypes = {
		  index: PropTypes.number.isRequired,
		  label: PropTypes.string.isRequired,
		  selected: PropTypes.bool.isRequired,
		  classes: PropTypes.object.isRequired,
		  isInner: PropTypes.bool
		};
		ClockNumber.defaultProps = {
		  isInner: false
		};
		var styles$11 = function styles(theme) {
		  var size = theme.spacing.unit * 4;
		  return {
		    clockNumber: {
		      width: size,
		      height: size,
		      position: 'absolute',
		      left: 'calc(50% - ' + size / 2 + 'px)',
		      display: 'inline-flex',
		      justifyContent: 'center',
		      alignItems: 'center',
		      borderRadius: '50%',
		      color: theme.palette.type === 'light' ? theme.palette.text.primary : theme.palette.text.hint
		    },
		    selected: {
		      color: theme.palette.common.white
		    }
		  };
		};

		var ClockNumber$1 = materialUi.withStyles(styles$11, { name: 'MuiPickersClockNumber' })(ClockNumber);

		var HourView = function (_PureComponent) {
		  inherits(HourView, _PureComponent);

		  function HourView() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, HourView);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = HourView.__proto__ || Object.getPrototypeOf(HourView)).call.apply(_ref, [this].concat(args))), _this), _this.getHourNumbers = function () {
		      var _this$props = _this.props,
		          ampm = _this$props.ampm,
		          utils = _this$props.utils,
		          date = _this$props.date;

		      var currentHours = date.get('hours');

		      var hourNumbers = [];
		      var startHour = ampm ? 1 : 0;
		      var endHour = ampm ? 12 : 23;

		      var isSelected = function isSelected(hour) {
		        if (ampm) {
		          if (hour === 12) {
		            return currentHours === 12 || currentHours === 0;
		          }

		          return currentHours === hour || currentHours - 12 === hour;
		        }

		        return currentHours === hour;
		      };

		      for (var hour = startHour; hour <= endHour; hour += 1) {
		        var label = hour.toString();

		        if (hour === 0) {
		          label = '00';
		        }

		        var props = {
		          index: hour,
		          label: utils.formatNumber(label),
		          selected: isSelected(hour),
		          isInner: !ampm && (hour === 0 || hour > 12)
		        };

		        hourNumbers.push(React__default.createElement(ClockNumber$1, _extends({ key: hour }, props)));
		      }

		      return hourNumbers;
		    }, _this.handleChange = function (hours, isFinish) {
		      var updatedTime = _this.props.date.clone().hour(hours);

		      _this.props.onChange(updatedTime, isFinish);
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(HourView, [{
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          date = _props.date,
		          ampm = _props.ampm;

		      var value = date.get('hours');

		      return React__default.createElement(
		        Clock$1,
		        {
		          type: HOURS,
		          value: value,
		          ampm: ampm,
		          onChange: this.handleChange
		        },
		        this.getHourNumbers()
		      );
		    }
		  }]);
		  return HourView;
		}(React.PureComponent);

		HourView.propTypes = {
		  date: PropTypes.object.isRequired,
		  onChange: PropTypes.func.isRequired,
		  utils: PropTypes.object,
		  ampm: PropTypes.bool
		};
		HourView.defaultProps = {
		  utils: defaultUtils,
		  ampm: true
		};

		var MinutesView = function (_Component) {
		  inherits(MinutesView, _Component);

		  function MinutesView() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, MinutesView);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = MinutesView.__proto__ || Object.getPrototypeOf(MinutesView)).call.apply(_ref, [this].concat(args))), _this), _this.handleChange = function (minutes, isFinish) {
		      var updatedDate = _this.props.date.clone().minutes(minutes);
		      _this.props.onChange(updatedDate, isFinish);
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(MinutesView, [{
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          date = _props.date,
		          utils = _props.utils;


		      var f = utils.formatNumber;
		      var value = date.get('minutes');

		      return React__default.createElement(
		        Clock$1,
		        {
		          type: MINUTES,
		          onChange: this.handleChange,
		          value: value
		        },
		        React__default.createElement(ClockNumber$1, { label: f('00'), selected: value === 0, index: 12 }),
		        React__default.createElement(ClockNumber$1, { label: f('05'), selected: value === 5, index: 1 }),
		        React__default.createElement(ClockNumber$1, { label: f('10'), selected: value === 10, index: 2 }),
		        React__default.createElement(ClockNumber$1, { label: f('15'), selected: value === 15, index: 3 }),
		        React__default.createElement(ClockNumber$1, { label: f('20'), selected: value === 20, index: 4 }),
		        React__default.createElement(ClockNumber$1, { label: f('25'), selected: value === 25, index: 5 }),
		        React__default.createElement(ClockNumber$1, { label: f('30'), selected: value === 30, index: 6 }),
		        React__default.createElement(ClockNumber$1, { label: f('35'), selected: value === 35, index: 7 }),
		        React__default.createElement(ClockNumber$1, { label: f('40'), selected: value === 40, index: 8 }),
		        React__default.createElement(ClockNumber$1, { label: f('45'), selected: value === 45, index: 9 }),
		        React__default.createElement(ClockNumber$1, { label: f('50'), selected: value === 50, index: 10 }),
		        React__default.createElement(ClockNumber$1, { label: f('55'), selected: value === 55, index: 11 })
		      );
		    }
		  }]);
		  return MinutesView;
		}(React.Component);

		MinutesView.propTypes = {
		  date: PropTypes.object.isRequired,
		  onChange: PropTypes.func.isRequired,
		  utils: PropTypes.object
		};
		MinutesView.defaultProps = {
		  utils: defaultUtils
		};

		var TimePicker = function (_Component) {
		  inherits(TimePicker, _Component);

		  function TimePicker() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, TimePicker);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TimePicker.__proto__ || Object.getPrototypeOf(TimePicker)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      isHourViewShown: true,
		      meridiemMode: _this.props.date.hours() >= 12 ? 'pm' : 'am'
		    }, _this.setMeridiemMode = function (mode) {
		      return function () {
		        _this.setState({ meridiemMode: mode }, function () {
		          return _this.handleChange(_this.props.date, false, false);
		        });
		      };
		    }, _this.handleHourChange = function (time, isFinish) {
		      _this.handleChange(time, isFinish, true);
		    }, _this.handleMinutesChange = function (time, isFinish) {
		      _this.handleChange(time, isFinish, false);
		    }, _this.openMinutesView = function () {
		      _this.setState({ isHourViewShown: false });
		    }, _this.openHourView = function () {
		      _this.setState({ isHourViewShown: true });
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(TimePicker, [{
		    key: 'handleChange',
		    value: function handleChange(time, isFinish, openMinutes) {
		      var withMeridiem = convertToMeridiem(time, this.state.meridiemMode, this.props.ampm);

		      if (isFinish) {
		        if (!openMinutes) {
		          this.props.onChange(withMeridiem, isFinish);
		          return;
		        }

		        this.openMinutesView();
		      }

		      this.props.onChange(withMeridiem, false);
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          classes = _props.classes,
		          theme = _props.theme,
		          date = _props.date,
		          utils = _props.utils,
		          ampm = _props.ampm;
		      var _state = this.state,
		          isHourViewShown = _state.isHourViewShown,
		          meridiemMode = _state.meridiemMode;


		      var rtl = theme.direction === 'rtl';
		      var hourMinuteClassName = rtl ? classes.hourMinuteLabelReverse : classes.hourMinuteLabel;

		      return React__default.createElement(
		        React.Fragment,
		        null,
		        React__default.createElement(
		          PickerToolbar$1,
		          { className: classes.toolbar },
		          React__default.createElement(
		            'div',
		            { className: hourMinuteClassName },
		            React__default.createElement(ToolbarButton$1, {
		              type: 'display3',
		              onClick: this.openHourView,
		              selected: isHourViewShown,
		              label: utils.getHourText(date, ampm)
		            }),
		            React__default.createElement(ToolbarButton$1, {
		              type: 'display3',
		              label: ':',
		              selected: false,
		              className: classes.separator
		            }),
		            React__default.createElement(ToolbarButton$1, {
		              type: 'display3',
		              onClick: this.openMinutesView,
		              selected: !isHourViewShown,
		              label: utils.getMinuteText(date)
		            })
		          ),
		          ampm && React__default.createElement(
		            'div',
		            { className: classes.ampmSelection },
		            React__default.createElement(ToolbarButton$1, {
		              className: classes.ampmLabel,
		              selected: meridiemMode === 'am',
		              type: 'subheading',
		              label: utils.getMeridiemText('am'),
		              onClick: this.setMeridiemMode('am')
		            }),
		            React__default.createElement(ToolbarButton$1, {
		              className: classes.ampmLabel,
		              selected: meridiemMode === 'pm',
		              type: 'subheading',
		              label: utils.getMeridiemText('pm'),
		              onClick: this.setMeridiemMode('pm')
		            })
		          )
		        ),
		        this.props.children,
		        isHourViewShown ? React__default.createElement(HourView, {
		          date: date,
		          meridiemMode: meridiemMode,
		          onChange: this.handleHourChange,
		          utils: utils,
		          ampm: ampm
		        }) : React__default.createElement(MinutesView, {
		          date: date,
		          onChange: this.handleMinutesChange,
		          utils: utils
		        })
		      );
		    }
		  }]);
		  return TimePicker;
		}(React.Component);

		TimePicker.propTypes = {
		  date: PropTypes.object.isRequired,
		  onChange: PropTypes.func.isRequired,
		  classes: PropTypes.object.isRequired,
		  theme: PropTypes.object.isRequired,
		  children: PropTypes.node,
		  utils: PropTypes.object,
		  ampm: PropTypes.bool
		};
		TimePicker.defaultProps = {
		  children: null,
		  utils: defaultUtils,
		  ampm: true
		};
		var styles$8 = function styles() {
		  return {
		    toolbar: {
		      flexDirection: 'row',
		      alignItems: 'center',
		      paddingLeft: 50
		    },
		    separator: {
		      margin: '0 4px 0 2px',
		      cursor: 'default'
		    },
		    ampmSelection: {
		      marginLeft: 20,
		      marginRight: -20
		    },
		    ampmLabel: {
		      fontSize: 18
		    },
		    hourMinuteLabel: {
		      display: 'flex',
		      justifyContent: 'flex-end',
		      alignItems: 'flex-end'
		    },
		    hourMinuteLabelReverse: {
		      display: 'flex',
		      justifyContent: 'flex-end',
		      alignItems: 'flex-end',
		      flexDirection: 'row-reverse'
		    }
		  };
		};

		var TimePicker$1 = materialUi.withStyles(styles$8, { withTheme: true, name: 'MuiPickersTimePicker' })(TimePicker);

		var TimePickerWrapper = function (_PickerBase) {
		  inherits(TimePickerWrapper, _PickerBase);

		  function TimePickerWrapper() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, TimePickerWrapper);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TimePickerWrapper.__proto__ || Object.getPrototypeOf(TimePickerWrapper)).call.apply(_ref, [this].concat(args))), _this), _this.default12hFormat = 'hh:mm A', _this.default24hFormat = 'HH:mm', _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(TimePickerWrapper, [{
		    key: 'render',
		    value: function render() {
		      var date = this.state.date;
		      var _props = this.props,
		          value = _props.value,
		          format = _props.format,
		          autoOk = _props.autoOk,
		          onChange = _props.onChange,
		          returnMoment = _props.returnMoment,
		          invalidLabel = _props.invalidLabel,
		          utils = _props.utils,
		          ampm = _props.ampm,
		          other = objectWithoutProperties(_props, ['value', 'format', 'autoOk', 'onChange', 'returnMoment', 'invalidLabel', 'utils', 'ampm']);


		      return React__default.createElement(
		        ModalWrapper,
		        _extends({
		          ref: this.getRef,
		          value: value,
		          format: this.getFormat(),
		          onClear: this.handleClear,
		          onAccept: this.handleAccept,
		          onChange: this.handleTextFieldChange,
		          onDismiss: this.handleDismiss,
		          invalidLabel: invalidLabel
		        }, other),
		        React__default.createElement(TimePicker$1, {
		          date: date,
		          onChange: this.handleChange,
		          utils: utils,
		          ampm: ampm
		        })
		      );
		    }
		  }]);
		  return TimePickerWrapper;
		}(PickerBase);

		TimePickerWrapper.propTypes = {
		  value: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),
		  format: PropTypes.string,
		  onChange: PropTypes.func.isRequired,
		  autoOk: PropTypes.bool,
		  returnMoment: PropTypes.bool,
		  invalidLabel: PropTypes.string,
		  utils: PropTypes.object,
		  ampm: PropTypes.bool
		};
		TimePickerWrapper.defaultProps = {
		  value: new Date(),
		  format: undefined,
		  autoOk: false,
		  returnMoment: true,
		  invalidLabel: undefined,
		  utils: defaultUtils,
		  ampm: true
		};

		var DateTimePickerView = function DateTimePickerView(props) {
		  var view = props.view,
		      selected = props.selected,
		      children = props.children,
		      classes = props.classes;


		  if (view !== selected) {
		    return null;
		  }

		  return React__default.createElement(
		    'div',
		    { className: classnames(defineProperty({}, classes.hidden, view !== selected)) },
		    children
		  );
		};

		DateTimePickerView.propTypes = {
		  view: PropTypes.string.isRequired,
		  selected: PropTypes.string.isRequired,
		  children: PropTypes.node.isRequired,
		  classes: PropTypes.object.isRequired
		};

		var styles$13 = {};

		var View = materialUi.withStyles(styles$13, { name: 'MuiPickerDTPickerView ' })(DateTimePickerView);

		var YEAR = 'year';

		var DATE = 'date';

		var HOUR = 'hour';

		var MINUTES$1 = 'minutes';

		var viewType = Object.freeze({
			YEAR: YEAR,
			DATE: DATE,
			HOUR: HOUR,
			MINUTES: MINUTES$1
		});

		var viewToTabIndex = function viewToTabIndex(openView) {
		  if (openView === DATE || openView === YEAR) {
		    return 'date';
		  }

		  return 'time';
		};

		var tabIndexToView = function tabIndexToView(tab) {
		  if (tab === 'date') {
		    return DATE;
		  }

		  return HOUR;
		};

		var DateTimePickerTabs = function DateTimePickerTabs(props) {
		  var view = props.view,
		      onChange = props.onChange,
		      classes = props.classes,
		      theme = props.theme,
		      dateRangeIcon = props.dateRangeIcon,
		      timeIcon = props.timeIcon;


		  var indicatorColor = theme.palette.type === 'light' ? 'accent' : 'primary';
		  var handleChange = function handleChange(e, value) {
		    if (value !== viewToTabIndex(view)) {
		      onChange(tabIndexToView(value));
		    }
		  };

		  return React__default.createElement(
		    materialUi.Paper,
		    null,
		    React__default.createElement(
		      materialUi.Tabs,
		      {
		        fullWidth: true,
		        value: viewToTabIndex(view),
		        onChange: handleChange,
		        className: classes.tabs,
		        indicatorColor: indicatorColor
		      },
		      React__default.createElement(materialUi.Tab, { value: 'date', icon: dateRangeIcon }),
		      React__default.createElement(materialUi.Tab, { value: 'time', icon: timeIcon })
		    )
		  );
		};

		DateTimePickerTabs.propTypes = {
		  view: PropTypes.string.isRequired,
		  onChange: PropTypes.func.isRequired,
		  classes: PropTypes.object.isRequired,
		  theme: PropTypes.object.isRequired,
		  dateRangeIcon: PropTypes.node,
		  timeIcon: PropTypes.node
		};

		DateTimePickerTabs.defaultProps = {
		  dateRangeIcon: 'date_range',
		  timeIcon: 'access_time'
		};

		var styles$14 = function styles(theme) {
		  return {
		    tabs: {
		      color: theme.palette.common.white,
		      backgroundColor: theme.palette.type === 'light' ? theme.palette.primary[500] : theme.palette.background.default
		    }
		  };
		};

		var DateTimePickerTabs$1 = materialUi.withTheme()(materialUi.withStyles(styles$14, { name: 'MuiPickerDTTabs' })(DateTimePickerTabs));

		var DateTimePickerHeader = function DateTimePickerHeader(props) {
		  var date = props.date,
		      classes = props.classes,
		      openView = props.openView,
		      meridiemMode = props.meridiemMode,
		      onOpenViewChange = props.onOpenViewChange,
		      setMeridiemMode = props.setMeridiemMode,
		      theme = props.theme,
		      utils = props.utils,
		      ampm = props.ampm;


		  var changeOpenView = function changeOpenView(view) {
		    return function () {
		      return onOpenViewChange(view);
		    };
		  };

		  var rtl = theme.direction === 'rtl';
		  var hourMinuteClassname = rtl ? classes.hourMinuteLabelReverse : classes.hourMinuteLabel;

		  return React__default.createElement(
		    PickerToolbar$1,
		    { className: classes.toolbar },
		    React__default.createElement(
		      'div',
		      { className: classes.dateHeader },
		      React__default.createElement(ToolbarButton$1, {
		        type: 'subheading',
		        onClick: changeOpenView(YEAR),
		        selected: openView === YEAR,
		        label: utils.getYearText(date)
		      }),
		      React__default.createElement(ToolbarButton$1, {
		        type: 'display1',
		        onClick: changeOpenView(DATE),
		        selected: openView === DATE,
		        label: utils.getDateTimePickerHeaderText(date)
		      })
		    ),
		    React__default.createElement(
		      'div',
		      { className: classes.timeHeader },
		      React__default.createElement(
		        'div',
		        { className: hourMinuteClassname },
		        React__default.createElement(ToolbarButton$1, {
		          type: 'display2',
		          onClick: changeOpenView(HOUR),
		          selected: openView === HOUR,
		          label: utils.getHourText(date, ampm)
		        }),
		        React__default.createElement(ToolbarButton$1, {
		          type: 'display2',
		          label: ':',
		          selected: false,
		          className: classes.separator
		        }),
		        React__default.createElement(ToolbarButton$1, {
		          type: 'display2',
		          onClick: changeOpenView(MINUTES$1),
		          selected: openView === MINUTES$1,
		          label: utils.getMinuteText(date)
		        })
		      ),
		      ampm && React__default.createElement(
		        'div',
		        { className: classes.ampmSelection },
		        React__default.createElement(ToolbarButton$1, {
		          className: classes.ampmLabel,
		          selected: meridiemMode === 'am',
		          type: 'subheading',
		          label: utils.getMeridiemText('am'),
		          onClick: setMeridiemMode('am')
		        }),
		        React__default.createElement(ToolbarButton$1, {
		          className: classes.ampmLabel,
		          selected: meridiemMode === 'pm',
		          type: 'subheading',
		          label: utils.getMeridiemText('pm'),
		          onClick: setMeridiemMode('pm')
		        })
		      )
		    )
		  );
		};

		DateTimePickerHeader.propTypes = {
		  date: PropTypes.object.isRequired,
		  classes: PropTypes.object.isRequired,
		  theme: PropTypes.object.isRequired,
		  meridiemMode: PropTypes.string.isRequired,
		  openView: PropTypes.string.isRequired,
		  onOpenViewChange: PropTypes.func.isRequired,
		  setMeridiemMode: PropTypes.func.isRequired,
		  utils: PropTypes.object,
		  ampm: PropTypes.bool
		};

		DateTimePickerHeader.defaultProps = {
		  utils: defaultUtils,
		  ampm: true
		};

		var styles$15 = function styles() {
		  return {
		    toolbar: {
		      flexDirection: 'row',
		      alignItems: 'center',
		      paddingLeft: 16,
		      paddingRight: 16
		    },
		    separator: {
		      margin: '0 4px 0 2px',
		      cursor: 'default'
		    },
		    ampmSelection: {
		      marginLeft: 10,
		      marginRight: -10
		    },
		    ampmLabel: {
		      fontSize: 18
		    },
		    hourMinuteLabel: {
		      display: 'flex',
		      justifyContent: 'flex-end',
		      alignItems: 'flex-end'
		    },
		    hourMinuteLabelReverse: {
		      display: 'flex',
		      justifyContent: 'flex-end',
		      alignItems: 'flex-end',
		      flexDirection: 'row-reverse'
		    },
		    dateHeader: {
		      width: '42%',
		      height: 65
		    },
		    timeHeader: {
		      height: 65,
		      display: 'flex',
		      justifyContent: 'flex-end',
		      alignItems: 'flex-end'
		    }
		  };
		};

		var DatetimePickerHeader = materialUi.withStyles(styles$15, { withTheme: true })(DateTimePickerHeader);

		var DateTimePicker = function (_Component) {
		  inherits(DateTimePicker, _Component);

		  function DateTimePicker() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, DateTimePicker);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = DateTimePicker.__proto__ || Object.getPrototypeOf(DateTimePicker)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      openView: _this.props.openTo,
		      meridiemMode: _this.props.date.hours() >= 12 ? 'pm' : 'am'
		    }, _this.onChange = function (time) {
		      var isFinish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
		      var nextView = arguments[2];

		      _this.handleChange(time);

		      if (isFinish && _this.props.autoSubmit) {
		        _this.handleViewChange(nextView);
		      }
		    }, _this.setMeridiemMode = function (mode) {
		      return function () {
		        _this.setState({ meridiemMode: mode }, function () {
		          return _this.handleChange(_this.props.date, false);
		        });
		      };
		    }, _this.handleViewChange = function (view) {
		      _this.setState({ openView: view });
		    }, _this.handleChange = function (time) {
		      var isFinish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

		      var withMeridiem = convertToMeridiem(time, _this.state.meridiemMode, _this.props.ampm);
		      _this.props.onChange(withMeridiem, isFinish);
		    }, _this.handleYearChange = function (date, isFinish) {
		      _this.onChange(date, isFinish, DATE);
		    }, _this.handleDayChange = function (date, isFinish) {
		      _this.onChange(date, isFinish, HOUR);
		    }, _this.handleHourChange = function (time, isFinish) {
		      _this.onChange(time, isFinish, MINUTES$1);
		    }, _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(DateTimePicker, [{
		    key: 'render',
		    value: function render() {
		      var _state = this.state,
		          openView = _state.openView,
		          meridiemMode = _state.meridiemMode;
		      var _props = this.props,
		          date = _props.date,
		          minDate = _props.minDate,
		          maxDate = _props.maxDate,
		          showTabs = _props.showTabs,
		          disablePast = _props.disablePast,
		          disableFuture = _props.disableFuture,
		          leftArrowIcon = _props.leftArrowIcon,
		          rightArrowIcon = _props.rightArrowIcon,
		          dateRangeIcon = _props.dateRangeIcon,
		          timeIcon = _props.timeIcon,
		          renderDay = _props.renderDay,
		          utils = _props.utils,
		          ampm = _props.ampm,
		          shouldDisableDate = _props.shouldDisableDate,
		          animateYearScrolling = _props.animateYearScrolling;


		      return React__default.createElement(
		        React.Fragment,
		        null,
		        React__default.createElement(DatetimePickerHeader, {
		          date: date,
		          openView: openView,
		          meridiemMode: meridiemMode,
		          setMeridiemMode: this.setMeridiemMode,
		          onOpenViewChange: this.handleViewChange,
		          utils: utils,
		          ampm: ampm
		        }),
		        showTabs && React__default.createElement(DateTimePickerTabs$1, {
		          view: openView,
		          onChange: this.handleViewChange,
		          dateRangeIcon: dateRangeIcon,
		          timeIcon: timeIcon
		        }),
		        React__default.createElement(
		          View,
		          { view: YEAR, selected: openView },
		          React__default.createElement(YearSelection$1, {
		            date: date,
		            minDate: minDate,
		            maxDate: maxDate,
		            onChange: this.handleYearChange,
		            disablePast: disablePast,
		            disableFuture: disableFuture,
		            utils: utils,
		            animateYearScrolling: animateYearScrolling
		          })
		        ),
		        React__default.createElement(
		          View,
		          { view: DATE, selected: openView },
		          React__default.createElement(Calendar$1, {
		            date: date,
		            minDate: minDate,
		            maxDate: maxDate,
		            onChange: this.handleDayChange,
		            disablePast: disablePast,
		            disableFuture: disableFuture,
		            leftArrowIcon: leftArrowIcon,
		            rightArrowIcon: rightArrowIcon,
		            renderDay: renderDay,
		            utils: utils,
		            shouldDisableDate: shouldDisableDate
		          })
		        ),
		        React__default.createElement(
		          View,
		          { view: HOUR, selected: openView },
		          React__default.createElement(HourView, {
		            date: date,
		            meridiemMode: meridiemMode,
		            onChange: this.handleHourChange,
		            utils: utils,
		            ampm: ampm
		          })
		        ),
		        React__default.createElement(
		          View,
		          { view: MINUTES$1, selected: openView },
		          React__default.createElement(MinutesView, {
		            date: date,
		            onChange: this.handleChange,
		            utils: utils
		          })
		        )
		      );
		    }
		  }]);
		  return DateTimePicker;
		}(React.Component);

		DateTimePicker.propTypes = {
		  date: PropTypes.object.isRequired,
		  onChange: PropTypes.func.isRequired,
		  autoSubmit: PropTypes.bool,
		  openTo: PropTypes.oneOf(Object.keys(viewType).map(function (key) {
		    return viewType[key];
		  })),
		  disablePast: PropTypes.bool,
		  disableFuture: PropTypes.bool,
		  minDate: DomainPropTypes.date,
		  maxDate: DomainPropTypes.date,
		  showTabs: PropTypes.bool,
		  leftArrowIcon: PropTypes.node,
		  rightArrowIcon: PropTypes.node,
		  dateRangeIcon: PropTypes.node,
		  timeIcon: PropTypes.node,
		  renderDay: PropTypes.func,
		  utils: PropTypes.object,
		  ampm: PropTypes.bool,
		  shouldDisableDate: PropTypes.func,
		  animateYearScrolling: PropTypes.bool
		};
		DateTimePicker.defaultProps = {
		  minDate: '1900-01-01',
		  maxDate: '2100-01-01',
		  autoSubmit: true,
		  openTo: DATE,
		  disablePast: false,
		  disableFuture: false,
		  showTabs: true,
		  leftArrowIcon: undefined,
		  rightArrowIcon: undefined,
		  dateRangeIcon: undefined,
		  timeIcon: undefined,
		  renderDay: undefined,
		  utils: defaultUtils,
		  ampm: true,
		  shouldDisableDate: undefined,
		  animateYearScrolling: false
		};

		var DateTimePickerWrapper = function (_PickerBase) {
		  inherits(DateTimePickerWrapper, _PickerBase);

		  function DateTimePickerWrapper() {
		    var _ref;

		    var _temp, _this, _ret;

		    classCallCheck(this, DateTimePickerWrapper);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = DateTimePickerWrapper.__proto__ || Object.getPrototypeOf(DateTimePickerWrapper)).call.apply(_ref, [this].concat(args))), _this), _this.default12hFormat = 'MMMM Do hh:mm a', _this.default24hFormat = 'MMMM Do HH:mm', _temp), possibleConstructorReturn(_this, _ret);
		  }

		  createClass(DateTimePickerWrapper, [{
		    key: 'render',
		    value: function render() {
		      var date = this.state.date;
		      var _props = this.props,
		          value = _props.value,
		          format = _props.format,
		          autoOk = _props.autoOk,
		          openTo = _props.openTo,
		          classes = _props.classes,
		          minDate = _props.minDate,
		          maxDate = _props.maxDate,
		          showTabs = _props.showTabs,
		          autoSubmit = _props.autoSubmit,
		          disablePast = _props.disablePast,
		          disableFuture = _props.disableFuture,
		          returnMoment = _props.returnMoment,
		          invalidLabel = _props.invalidLabel,
		          leftArrowIcon = _props.leftArrowIcon,
		          rightArrowIcon = _props.rightArrowIcon,
		          dateRangeIcon = _props.dateRangeIcon,
		          timeIcon = _props.timeIcon,
		          renderDay = _props.renderDay,
		          labelFunc = _props.labelFunc,
		          utils = _props.utils,
		          ampm = _props.ampm,
		          shouldDisableDate = _props.shouldDisableDate,
		          animateYearScrolling = _props.animateYearScrolling,
		          other = objectWithoutProperties(_props, ['value', 'format', 'autoOk', 'openTo', 'classes', 'minDate', 'maxDate', 'showTabs', 'autoSubmit', 'disablePast', 'disableFuture', 'returnMoment', 'invalidLabel', 'leftArrowIcon', 'rightArrowIcon', 'dateRangeIcon', 'timeIcon', 'renderDay', 'labelFunc', 'utils', 'ampm', 'shouldDisableDate', 'animateYearScrolling']);


		      return React__default.createElement(
		        ModalWrapper,
		        _extends({
		          ref: this.getRef,
		          value: value,
		          format: this.getFormat(),
		          onAccept: this.handleAccept,
		          onChange: this.handleTextFieldChange,
		          onDismiss: this.handleDismiss,
		          onClear: this.handleClear,
		          dialogContentClassName: classes.dialogContent,
		          invalidLabel: invalidLabel,
		          labelFunc: labelFunc
		        }, other),
		        React__default.createElement(DateTimePicker, {
		          date: date,
		          openTo: openTo,
		          autoSubmit: autoSubmit,
		          onChange: this.handleChange,
		          disablePast: disablePast,
		          disableFuture: disableFuture,
		          minDate: minDate,
		          maxDate: maxDate,
		          showTabs: showTabs,
		          leftArrowIcon: leftArrowIcon,
		          rightArrowIcon: rightArrowIcon,
		          dateRangeIcon: dateRangeIcon,
		          timeIcon: timeIcon,
		          renderDay: renderDay,
		          utils: utils,
		          ampm: ampm,
		          shouldDisableDate: shouldDisableDate,
		          animateYearScrolling: animateYearScrolling
		        })
		      );
		    }
		  }]);
		  return DateTimePickerWrapper;
		}(PickerBase);

		DateTimePickerWrapper.propTypes = {
		  value: DomainPropTypes.date,
		  format: PropTypes.string,
		  onChange: PropTypes.func.isRequired,
		  autoOk: PropTypes.bool,
		  classes: PropTypes.object.isRequired,
		  autoSubmit: PropTypes.bool,
		  disableFuture: PropTypes.bool,
		  openTo: PropTypes.string,
		  minDate: DomainPropTypes.date,
		  maxDate: DomainPropTypes.date,
		  showTabs: PropTypes.bool,
		  returnMoment: PropTypes.bool,
		  invalidLabel: PropTypes.string,
		  leftArrowIcon: PropTypes.node,
		  rightArrowIcon: PropTypes.node,
		  dateRangeIcon: PropTypes.node,
		  timeIcon: PropTypes.node,
		  renderDay: PropTypes.func,
		  labelFunc: PropTypes.func,
		  utils: PropTypes.object,
		  ampm: PropTypes.bool,
		  shouldDisableDate: PropTypes.func,
		  animateYearScrolling: PropTypes.bool
		};
		DateTimePickerWrapper.defaultProps = {
		  value: new Date(),
		  format: undefined,
		  autoOk: false,
		  autoSubmit: undefined,
		  openTo: undefined,
		  disableFuture: undefined,
		  minDate: undefined,
		  maxDate: undefined,
		  showTabs: true,
		  returnMoment: true,
		  invalidLabel: undefined,
		  leftArrowIcon: undefined,
		  rightArrowIcon: undefined,
		  dateRangeIcon: undefined,
		  timeIcon: undefined,
		  renderDay: undefined,
		  labelFunc: undefined,
		  utils: defaultUtils,
		  ampm: true,
		  shouldDisableDate: undefined,
		  animateYearScrolling: false
		};
		var styles$12 = {
		  dialogContent: {
		    width: 310
		  }
		};

		var DateTimePickerWrapper$1 = materialUi.withStyles(styles$12, { name: 'MuiPickerDTPickerModal' })(DateTimePickerWrapper);

		exports.DatePicker = DatePickerWrapper;
		exports.TimePicker = TimePickerWrapper;
		exports.DateTimePicker = DateTimePickerWrapper$1;


		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"classnames":642,"material-ui":906,"moment":952,"prop-types":961,"react":1016,"react-dom":971}],755:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _helpers = require('../utils/helpers');

		var _Paper = require('../Paper');

		var _Paper2 = _interopRequireDefault(_Paper);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent Paper

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'flex',
		      flexDirection: 'column',
		      width: '100%',
		      boxSizing: 'border-box', // Prevent padding issue with the Modal and fixed positioned AppBar.
		      zIndex: theme.zIndex.appBar,
		      flexShrink: 0
		    },
		    positionFixed: {
		      position: 'fixed',
		      top: 0,
		      left: 'auto',
		      right: 0
		    },
		    positionAbsolute: {
		      position: 'absolute',
		      top: 0,
		      left: 'auto',
		      right: 0
		    },
		    positionStatic: {
		      position: 'static',
		      flexShrink: 0
		    },
		    colorDefault: {
		      backgroundColor: theme.palette.background.appBar,
		      color: theme.palette.getContrastText(theme.palette.background.appBar)
		    },
		    colorPrimary: {
		      backgroundColor: theme.palette.primary[500],
		      color: theme.palette.getContrastText(theme.palette.primary[500])
		    },
		    colorAccent: {
		      backgroundColor: theme.palette.secondary.A200,
		      color: theme.palette.getContrastText(theme.palette.secondary.A200)
		    }
		  };
		};

		function AppBar(props) {
		  var _classNames;

		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      color = props.color,
		      position = props.position,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'color', 'position']);


		  var className = (0, _classnames2.default)(classes.root, classes['position' + (0, _helpers.capitalizeFirstLetter)(position)], (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'inherit'), (0, _defineProperty3.default)(_classNames, 'mui-fixed', position === 'fixed'), _classNames), classNameProp);

		  return _react2.default.createElement(
		    _Paper2.default,
		    (0, _extends3.default)({ square: true, component: 'header', elevation: 4, className: className }, other),
		    children
		  );
		}

		AppBar.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The color of the component. It's using the theme palette when that makes sense.
		   */
		  color: _propTypes2.default.oneOf(['inherit', 'primary', 'accent', 'default']),
		  /**
		   * The positioning type.
		   */
		  position: _propTypes2.default.oneOf(['static', 'fixed', 'absolute'])
		} : {};

		AppBar.defaultProps = {
		  color: 'primary',
		  position: 'fixed'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiAppBar' })(AppBar);
		}).call(this,require('_process'))
		},{"../Paper":835,"../styles/withStyles":934,"../utils/helpers":945,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],756:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _AppBar = require('./AppBar');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_AppBar).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./AppBar":755}],757:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _colorManipulator = require('../styles/colorManipulator');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      position: 'relative',
		      display: 'flex',
		      alignItems: 'center',
		      justifyContent: 'center',
		      flexShrink: 0,
		      width: 40,
		      height: 40,
		      fontFamily: theme.typography.fontFamily,
		      fontSize: theme.typography.pxToRem(20),
		      borderRadius: '50%',
		      overflow: 'hidden',
		      userSelect: 'none'
		    },
		    colorDefault: {
		      color: theme.palette.background.default,
		      backgroundColor: (0, _colorManipulator.emphasize)(theme.palette.background.default, 0.26)
		    },
		    img: {
		      maxWidth: '100%',
		      width: '100%',
		      height: 'auto',
		      textAlign: 'center'
		    }
		  };
		};

		function Avatar(props) {
		  var alt = props.alt,
		      childrenProp = props.children,
		      childrenClassNameProp = props.childrenClassName,
		      classes = props.classes,
		      classNameProp = props.className,
		      ComponentProp = props.component,
		      imgProps = props.imgProps,
		      sizes = props.sizes,
		      src = props.src,
		      srcSet = props.srcSet,
		      other = (0, _objectWithoutProperties3.default)(props, ['alt', 'children', 'childrenClassName', 'classes', 'className', 'component', 'imgProps', 'sizes', 'src', 'srcSet']);


		  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.colorDefault, childrenProp && !src && !srcSet), classNameProp);
		  var children = null;

		  if (childrenProp) {
		    if (childrenClassNameProp && typeof childrenProp !== 'string' && _react2.default.isValidElement(childrenProp)) {
		      var childrenClassName = (0, _classnames2.default)(childrenClassNameProp, childrenProp.props.className);
		      children = _react2.default.cloneElement(childrenProp, { className: childrenClassName });
		    } else {
		      children = childrenProp;
		    }
		  } else if (src || srcSet) {
		    children = _react2.default.createElement('img', (0, _extends3.default)({
		      alt: alt,
		      src: src,
		      srcSet: srcSet,
		      sizes: sizes,
		      className: classes.img
		    }, imgProps));
		  }

		  return _react2.default.createElement(
		    ComponentProp,
		    (0, _extends3.default)({ className: className }, other),
		    children
		  );
		}

		Avatar.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Used in combination with `src` or `srcSet` to
		   * provide an alt attribute for the rendered `img` element.
		   */
		  alt: _propTypes2.default.string,
		  /**
		   * Used to render icon or text elements inside the Avatar.
		   * `src` and `alt` props will not be used and no `img` will
		   * be rendered by default.
		   *
		   * This can be an element, or just a string.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * @ignore
		   * The className of the child element.
		   * Used by Chip and ListItemIcon to style the Avatar icon.
		   */
		  childrenClassName: _propTypes2.default.string,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * Properties applied to the `img` element when the component
		   * is used to display an image.
		   */
		  imgProps: _propTypes2.default.object,
		  /**
		   * The `sizes` attribute for the `img` element.
		   */
		  sizes: _propTypes2.default.string,
		  /**
		   * The `src` attribute for the `img` element.
		   */
		  src: _propTypes2.default.string,
		  /**
		   * The `srcSet` attribute for the `img` element.
		   */
		  srcSet: _propTypes2.default.string
		} : {};

		Avatar.defaultProps = {
		  component: 'div'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiAvatar' })(Avatar);
		}).call(this,require('_process'))
		},{"../styles/colorManipulator":921,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],758:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Avatar = require('./Avatar');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Avatar).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Avatar":757}],759:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _helpers = require('../utils/helpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var RADIUS = 12;

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      position: 'relative',
		      display: 'inline-flex'
		    },
		    badge: {
		      display: 'flex',
		      flexDirection: 'row',
		      flexWrap: 'wrap',
		      justifyContent: 'center',
		      alignContent: 'center',
		      alignItems: 'center',
		      position: 'absolute',
		      top: -RADIUS,
		      right: -RADIUS,
		      fontFamily: theme.typography.fontFamily,
		      fontWeight: theme.typography.fontWeight,
		      fontSize: theme.typography.pxToRem(RADIUS),
		      width: RADIUS * 2,
		      height: RADIUS * 2,
		      borderRadius: '50%',
		      backgroundColor: theme.palette.color,
		      color: theme.palette.textColor,
		      zIndex: 1 // Render the badge on top of potential ripples.
		    },
		    colorPrimary: {
		      backgroundColor: theme.palette.primary[500],
		      color: theme.palette.getContrastText(theme.palette.primary[500])
		    },
		    colorAccent: {
		      backgroundColor: theme.palette.secondary.A200,
		      color: theme.palette.getContrastText(theme.palette.secondary.A200)
		    }
		  };
		};

		function Badge(props) {
		  var badgeContent = props.badgeContent,
		      classes = props.classes,
		      classNameProp = props.className,
		      color = props.color,
		      children = props.children,
		      other = (0, _objectWithoutProperties3.default)(props, ['badgeContent', 'classes', 'className', 'color', 'children']);


		  var badgeClassName = (0, _classnames2.default)(classes.badge, (0, _defineProperty3.default)({}, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'default'));

		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, classNameProp) }, other),
		    children,
		    _react2.default.createElement(
		      'span',
		      { className: badgeClassName },
		      badgeContent
		    )
		  );
		}

		Badge.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content rendered within the badge.
		   */
		  badgeContent: _propTypes2.default.node.isRequired,
		  /**
		   * The badge will be added relative to this node.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The color of the component. It's using the theme palette when that makes sense.
		   */
		  color: _propTypes2.default.oneOf(['default', 'primary', 'accent'])
		} : {};

		Badge.defaultProps = {
		  color: 'default'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiBadge' })(Badge);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"../utils/helpers":945,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],760:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Badge = require('./Badge');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Badge).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Badge":759}],761:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'flex',
		      justifyContent: 'center',
		      height: 56,
		      backgroundColor: theme.palette.background.paper
		    }
		  };
		};

		function BottomNavigation(props) {
		  var childrenProp = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      onChange = props.onChange,
		      showLabels = props.showLabels,
		      value = props.value,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'onChange', 'showLabels', 'value']);


		  var className = (0, _classnames2.default)(classes.root, classNameProp);

		  var children = _react2.default.Children.map(childrenProp, function (child, childIndex) {
		    if (!_react2.default.isValidElement(child)) {
		      return null;
		    }

		    var childValue = child.props.value || childIndex;
		    return _react2.default.cloneElement(child, {
		      selected: childValue === value,
		      showLabel: child.props.showLabel !== undefined ? child.props.showLabel : showLabels,
		      value: childValue,
		      onChange: onChange
		    });
		  });

		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: className }, other),
		    children
		  );
		}

		BottomNavigation.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * Callback fired when the value changes.
		   *
		   * @param {object} event The event source of the callback
		   * @param {any} value We default to the index of the child
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * If `true`, all `BottomNavigationButton`s will show their labels.
		   * By default only the selected `BottomNavigationButton` will show its label.
		   */
		  showLabels: _propTypes2.default.bool,
		  /**
		   * The value of the currently selected `BottomNavigationButton`.
		   */
		  value: _propTypes2.default.any
		} : {};

		BottomNavigation.defaultProps = {
		  showLabels: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiBottomNavigation' })(BottomNavigation);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],762:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _ButtonBase = require('../ButtonBase');

		var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

		var _Icon = require('../Icon');

		var _Icon2 = _interopRequireDefault(_Icon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent ButtonBase

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      transition: theme.transitions.create(['color', 'padding-top'], {
		        duration: theme.transitions.duration.short
		      }),
		      paddingTop: 8,
		      paddingBottom: 10,
		      paddingLeft: 12,
		      paddingRight: 12,
		      minWidth: 80,
		      maxWidth: 168,
		      color: theme.palette.text.secondary,
		      flex: '1'
		    },
		    selected: {
		      paddingTop: 6,
		      color: theme.palette.primary[500]
		    },
		    selectedIconOnly: {
		      paddingTop: theme.spacing.unit * 2
		    },
		    wrapper: {
		      display: 'inline-flex',
		      alignItems: 'center',
		      justifyContent: 'center',
		      width: '100%',
		      flexDirection: 'column'
		    },
		    label: {
		      fontFamily: theme.typography.fontFamily,
		      fontSize: theme.typography.pxToRem(theme.typography.fontSize - 2),
		      opacity: 1,
		      transition: 'font-size 0.2s, opacity 0.2s',
		      transitionDelay: '0.1s'
		    },
		    selectedLabel: {
		      fontSize: theme.typography.pxToRem(theme.typography.fontSize)
		    },
		    hiddenLabel: {
		      opacity: 0,
		      transitionDelay: '0s'
		    },
		    icon: {
		      display: 'block',
		      margin: 'auto'
		    }
		  };
		};

		var BottomNavigationButton = function (_React$Component) {
		  (0, _inherits3.default)(BottomNavigationButton, _React$Component);

		  function BottomNavigationButton() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, BottomNavigationButton);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = BottomNavigationButton.__proto__ || (0, _getPrototypeOf2.default)(BottomNavigationButton)).call.apply(_ref, [this].concat(args))), _this), _this.handleChange = function (event) {
		      var _this$props = _this.props,
		          onChange = _this$props.onChange,
		          value = _this$props.value,
		          onClick = _this$props.onClick;


		      if (onChange) {
		        onChange(event, value);
		      }

		      if (onClick) {
		        onClick(event);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(BottomNavigationButton, [{
		    key: 'render',
		    value: function render() {
		      var _classNames, _classNames2;

		      var _props = this.props,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          iconProp = _props.icon,
		          label = _props.label,
		          onChange = _props.onChange,
		          onClick = _props.onClick,
		          selected = _props.selected,
		          showLabelProp = _props.showLabel,
		          value = _props.value,
		          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'icon', 'label', 'onChange', 'onClick', 'selected', 'showLabel', 'value']);


		      var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.selected, selected), (0, _defineProperty3.default)(_classNames, classes.selectedIconOnly, !showLabelProp && !selected), _classNames), classNameProp);

		      var icon = null;

		      if (iconProp) {
		        if (_react2.default.isValidElement(iconProp) && typeof iconProp !== 'string') {
		          icon = _react2.default.cloneElement(iconProp, {
		            className: (0, _classnames2.default)(classes.icon, iconProp.props.className)
		          });
		        } else {
		          icon = _react2.default.createElement(
		            _Icon2.default,
		            null,
		            iconProp
		          );
		        }
		      }

		      var labelClassName = (0, _classnames2.default)(classes.label, (_classNames2 = {}, (0, _defineProperty3.default)(_classNames2, classes.selectedLabel, selected), (0, _defineProperty3.default)(_classNames2, classes.hiddenLabel, !showLabelProp && !selected), _classNames2));

		      return _react2.default.createElement(
		        _ButtonBase2.default,
		        (0, _extends3.default)({ className: className, focusRipple: true, onClick: this.handleChange }, other),
		        _react2.default.createElement(
		          'span',
		          { className: classes.wrapper },
		          icon,
		          _react2.default.createElement(
		            'span',
		            { className: labelClassName },
		            label
		          )
		        )
		      );
		    }
		  }]);
		  return BottomNavigationButton;
		}(_react2.default.Component);

		BottomNavigationButton.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The icon element. If a string is provided, it will be used as a font ligature.
		   */
		  icon: _propTypes2.default.node,
		  /**
		   * The label element.
		   */
		  label: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onClick: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  selected: _propTypes2.default.bool,
		  /**
		   * If `true`, the BottomNavigationButton will show its label.
		   */
		  showLabel: _propTypes2.default.bool,
		  /**
		   * You can provide your own value. Otherwise, we fallback to the child position index.
		   */
		  value: _propTypes2.default.any
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiBottomNavigationButton' })(BottomNavigationButton);
		}).call(this,require('_process'))
		},{"../ButtonBase":768,"../Icon":812,"../styles/withStyles":934,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],763:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _BottomNavigation = require('./BottomNavigation');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_BottomNavigation).default;
		  }
		});

		var _BottomNavigationButton = require('./BottomNavigationButton');

		Object.defineProperty(exports, 'BottomNavigationButton', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_BottomNavigationButton).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./BottomNavigation":761,"./BottomNavigationButton":762}],764:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _reactDom = require('react-dom');

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _keycode = require('keycode');

		var _keycode2 = _interopRequireDefault(_keycode);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _keyboardFocus = require('../utils/keyboardFocus');

		var _TouchRipple = require('./TouchRipple');

		var _TouchRipple2 = _interopRequireDefault(_TouchRipple);

		var _createRippleHandler = require('./createRippleHandler');

		var _createRippleHandler2 = _interopRequireDefault(_createRippleHandler);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'inline-flex',
		      alignItems: 'center',
		      justifyContent: 'center',
		      position: 'relative',
		      // Remove grey highlight
		      WebkitTapHighlightColor: theme.palette.common.transparent,
		      backgroundColor: 'transparent', // Reset default value
		      outline: 'none',
		      border: 0,
		      borderRadius: 0,
		      cursor: 'pointer',
		      userSelect: 'none',
		      appearance: 'none',
		      textDecoration: 'none',
		      // So we take precedent over the style of a native <a /> element.
		      color: 'inherit',
		      '&::-moz-focus-inner': {
		        borderStyle: 'none' // Remove Firefox dotted outline.
		      }
		    },
		    disabled: {
		      pointerEvents: 'none', // Disable link interactions
		      cursor: 'default'
		    }
		  };
		};

		var ButtonBase = function (_React$Component) {
		  (0, _inherits3.default)(ButtonBase, _React$Component);

		  function ButtonBase() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, ButtonBase);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ButtonBase.__proto__ || (0, _getPrototypeOf2.default)(ButtonBase)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      keyboardFocused: false
		    }, _this.onKeyboardFocusHandler = function (event) {
		      _this.keyDown = false;
		      _this.setState({ keyboardFocused: true });

		      if (_this.props.onKeyboardFocus) {
		        _this.props.onKeyboardFocus(event);
		      }
		    }, _this.ripple = null, _this.keyDown = false, _this.button = null, _this.keyboardFocusTimeout = null, _this.keyboardFocusCheckTime = 50, _this.keyboardFocusMaxCheckTimes = 5, _this.handleKeyDown = function (event) {
		      var _this$props = _this.props,
		          component = _this$props.component,
		          focusRipple = _this$props.focusRipple,
		          onKeyDown = _this$props.onKeyDown,
		          onClick = _this$props.onClick;

		      var key = (0, _keycode2.default)(event);

		      // Check if key is already down to avoid repeats being counted as multiple activations
		      if (focusRipple && !_this.keyDown && _this.state.keyboardFocused && key === 'space') {
		        _this.keyDown = true;
		        event.persist();
		        _this.ripple.stop(event, function () {
		          _this.ripple.start(event);
		        });
		      }

		      if (onKeyDown) {
		        onKeyDown(event);
		      }

		      // Keyboard accessibility for non interactive elements
		      if (event.target === _this.button && onClick && component && component !== 'a' && component !== 'button' && (key === 'space' || key === 'enter')) {
		        event.preventDefault();
		        onClick(event);
		      }
		    }, _this.handleKeyUp = function (event) {
		      if (_this.props.focusRipple && (0, _keycode2.default)(event) === 'space' && _this.state.keyboardFocused) {
		        _this.keyDown = false;
		        event.persist();
		        _this.ripple.stop(event, function () {
		          return _this.ripple.pulsate(event);
		        });
		      }
		      if (_this.props.onKeyUp) {
		        _this.props.onKeyUp(event);
		      }
		    }, _this.handleMouseDown = (0, _createRippleHandler2.default)(_this, 'MouseDown', 'start', function () {
		      clearTimeout(_this.keyboardFocusTimeout);
		      (0, _keyboardFocus.focusKeyPressed)(false);
		      if (_this.state.keyboardFocused) {
		        _this.setState({ keyboardFocused: false });
		      }
		    }), _this.handleMouseUp = (0, _createRippleHandler2.default)(_this, 'MouseUp', 'stop'), _this.handleMouseLeave = (0, _createRippleHandler2.default)(_this, 'MouseLeave', 'stop', function (event) {
		      if (_this.state.keyboardFocused) {
		        event.preventDefault();
		      }
		    }), _this.handleTouchStart = (0, _createRippleHandler2.default)(_this, 'TouchStart', 'start'), _this.handleTouchEnd = (0, _createRippleHandler2.default)(_this, 'TouchEnd', 'stop'), _this.handleTouchMove = (0, _createRippleHandler2.default)(_this, 'TouchEnd', 'stop'), _this.handleBlur = (0, _createRippleHandler2.default)(_this, 'Blur', 'stop', function () {
		      clearTimeout(_this.keyboardFocusTimeout);
		      (0, _keyboardFocus.focusKeyPressed)(false);
		      _this.setState({ keyboardFocused: false });
		    }), _this.handleFocus = function (event) {
		      if (_this.props.disabled) {
		        return;
		      }

		      // Fix for https://github.com/facebook/react/issues/7769
		      if (!_this.button) {
		        _this.button = event.currentTarget;
		      }

		      event.persist();
		      var keyboardFocusCallback = _this.onKeyboardFocusHandler.bind(_this, event);
		      (0, _keyboardFocus.detectKeyboardFocus)(_this, _this.button, keyboardFocusCallback);

		      if (_this.props.onFocus) {
		        _this.props.onFocus(event);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(ButtonBase, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      this.button = (0, _reactDom.findDOMNode)(this);
		      (0, _keyboardFocus.listenForFocusKeys)();
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      // The blur won't fire when the disabled state is set on a focused input.
		      // We need to book keep the focused state manually.
		      if (!this.props.disabled && nextProps.disabled && this.state.keyboardFocused) {
		        this.setState({
		          keyboardFocused: false
		        });
		      }
		    }
		  }, {
		    key: 'componentWillUpdate',
		    value: function componentWillUpdate(nextProps, nextState) {
		      if (this.props.focusRipple && nextState.keyboardFocused && !this.state.keyboardFocused && !this.props.disableRipple) {
		        this.ripple.pulsate();
		      }
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      this.button = null;
		      clearTimeout(this.keyboardFocusTimeout);
		    } // Used to help track keyboard activation keyDown

		  }, {
		    key: 'render',
		    value: function render() {
		      var _classNames,
		          _this2 = this;

		      var _props = this.props,
		          centerRipple = _props.centerRipple,
		          children = _props.children,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          component = _props.component,
		          disabled = _props.disabled,
		          disableRipple = _props.disableRipple,
		          focusRipple = _props.focusRipple,
		          keyboardFocusedClassName = _props.keyboardFocusedClassName,
		          onBlur = _props.onBlur,
		          onFocus = _props.onFocus,
		          onKeyboardFocus = _props.onKeyboardFocus,
		          onKeyDown = _props.onKeyDown,
		          onKeyUp = _props.onKeyUp,
		          onMouseDown = _props.onMouseDown,
		          onMouseLeave = _props.onMouseLeave,
		          onMouseUp = _props.onMouseUp,
		          onTouchEnd = _props.onTouchEnd,
		          onTouchMove = _props.onTouchMove,
		          onTouchStart = _props.onTouchStart,
		          rootRef = _props.rootRef,
		          tabIndex = _props.tabIndex,
		          type = _props.type,
		          other = (0, _objectWithoutProperties3.default)(_props, ['centerRipple', 'children', 'classes', 'className', 'component', 'disabled', 'disableRipple', 'focusRipple', 'keyboardFocusedClassName', 'onBlur', 'onFocus', 'onKeyboardFocus', 'onKeyDown', 'onKeyUp', 'onMouseDown', 'onMouseLeave', 'onMouseUp', 'onTouchEnd', 'onTouchMove', 'onTouchStart', 'rootRef', 'tabIndex', 'type']);


		      var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, keyboardFocusedClassName || '', this.state.keyboardFocused), _classNames), classNameProp);

		      var buttonProps = {};

		      var ComponentProp = component;

		      if (!ComponentProp) {
		        if (other.href) {
		          ComponentProp = 'a';
		        } else {
		          ComponentProp = 'button';
		        }
		      }

		      if (ComponentProp === 'button') {
		        buttonProps.type = type || 'button';
		      }

		      if (ComponentProp !== 'a') {
		        buttonProps.role = buttonProps.role || 'button';
		        buttonProps.disabled = disabled;
		      }

		      return _react2.default.createElement(
		        ComponentProp,
		        (0, _extends3.default)({
		          onBlur: this.handleBlur,
		          onFocus: this.handleFocus,
		          onKeyDown: this.handleKeyDown,
		          onKeyUp: this.handleKeyUp,
		          onMouseDown: this.handleMouseDown,
		          onMouseLeave: this.handleMouseLeave,
		          onMouseUp: this.handleMouseUp,
		          onTouchEnd: this.handleTouchEnd,
		          onTouchMove: this.handleTouchMove,
		          onTouchStart: this.handleTouchStart,
		          tabIndex: disabled ? -1 : tabIndex,
		          className: className
		        }, buttonProps, other, {
		          ref: rootRef
		        }),
		        children,
		        !disableRipple && !disabled ? _react2.default.createElement(_TouchRipple2.default, {
		          innerRef: function innerRef(node) {
		            _this2.ripple = node;
		          },
		          center: centerRipple
		        }) : null
		      );
		    }
		  }]);
		  return ButtonBase;
		}(_react2.default.Component);

		ButtonBase.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * If `true`, the ripples will be centered.
		   * They won't start at the cursor interaction position.
		   */
		  centerRipple: _propTypes2.default.bool,
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   * The default value is a `button`.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * If `true`, the base button will be disabled.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the ripple effect will be disabled.
		   */
		  disableRipple: _propTypes2.default.bool,
		  /**
		   * If `true`, the base button will have a keyboard focus ripple.
		   * `disableRipple` must also be `false`.
		   */
		  focusRipple: _propTypes2.default.bool,
		  /**
		   * The CSS class applied while the component is keyboard focused.
		   */
		  keyboardFocusedClassName: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  onBlur: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onClick: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onFocus: _propTypes2.default.func,
		  /**
		   * Callback fired when the component is focused with a keyboard.
		   * We trigger a `onFocus` callback too.
		   */
		  onKeyboardFocus: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onKeyDown: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onKeyUp: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onMouseDown: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onMouseLeave: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onMouseUp: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onTouchEnd: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onTouchMove: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onTouchStart: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  role: _propTypes2.default.string,
		  /**
		   * Use that property to pass a ref callback to the root component.
		   */
		  rootRef: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
		  /**
		   * @ignore
		   */
		  type: _propTypes2.default.string
		} : {};

		ButtonBase.defaultProps = {
		  centerRipple: false,
		  disableRipple: false,
		  focusRipple: false,
		  tabIndex: 0,
		  type: 'button'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiButtonBase' })(ButtonBase);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"../utils/keyboardFocus":946,"./TouchRipple":766,"./createRippleHandler":767,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"keycode":731,"prop-types":961,"react":1016,"react-dom":971}],765:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _Transition = require('react-transition-group/Transition');

		var _Transition2 = _interopRequireDefault(_Transition);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var Ripple = function (_React$Component) {
		  (0, _inherits3.default)(Ripple, _React$Component);

		  function Ripple() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Ripple);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Ripple.__proto__ || (0, _getPrototypeOf2.default)(Ripple)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      rippleVisible: false,
		      rippleLeaving: false
		    }, _this.handleEnter = function () {
		      _this.setState({
		        rippleVisible: true
		      });
		    }, _this.handleExit = function () {
		      _this.setState({
		        rippleLeaving: true
		      });
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Ripple, [{
		    key: 'render',
		    value: function render() {
		      var _classNames, _classNames2;

		      var _props = this.props,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          pulsate = _props.pulsate,
		          rippleX = _props.rippleX,
		          rippleY = _props.rippleY,
		          rippleSize = _props.rippleSize,
		          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'pulsate', 'rippleX', 'rippleY', 'rippleSize']);
		      var _state = this.state,
		          rippleVisible = _state.rippleVisible,
		          rippleLeaving = _state.rippleLeaving;


		      var className = (0, _classnames2.default)(classes.wrapper, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.wrapperLeaving, rippleLeaving), (0, _defineProperty3.default)(_classNames, classes.wrapperPulsating, pulsate), _classNames), classNameProp);

		      var rippleClassName = (0, _classnames2.default)(classes.ripple, (_classNames2 = {}, (0, _defineProperty3.default)(_classNames2, classes.rippleVisible, rippleVisible), (0, _defineProperty3.default)(_classNames2, classes.rippleFast, pulsate), _classNames2));

		      var rippleStyles = {
		        width: rippleSize,
		        height: rippleSize,
		        top: -(rippleSize / 2) + rippleY,
		        left: -(rippleSize / 2) + rippleX
		      };

		      return _react2.default.createElement(
		        _Transition2.default,
		        (0, _extends3.default)({ onEnter: this.handleEnter, onExit: this.handleExit }, other),
		        _react2.default.createElement(
		          'span',
		          { className: className },
		          _react2.default.createElement('span', { className: rippleClassName, style: rippleStyles })
		        )
		      );
		    }
		  }]);
		  return Ripple;
		}(_react2.default.Component);

		Ripple.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
		   */
		  pulsate: _propTypes2.default.bool,
		  /**
		   * Diameter of the ripple.
		   */
		  rippleSize: _propTypes2.default.number,
		  /**
		   * Horizontal position of the ripple center.
		   */
		  rippleX: _propTypes2.default.number,
		  /**
		   * Vertical position of the ripple center.
		   */
		  rippleY: _propTypes2.default.number
		} : {};

		Ripple.defaultProps = {
		  pulsate: false
		};

		exports.default = Ripple;
		}).call(this,require('_process'))
		},{"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016,"react-transition-group/Transition":1010}],766:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = exports.DELAY_RIPPLE = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

		var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _reactDom = require('react-dom');

		var _reactDom2 = _interopRequireDefault(_reactDom);

		var _TransitionGroup = require('react-transition-group/TransitionGroup');

		var _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Ripple = require('./Ripple');

		var _Ripple2 = _interopRequireDefault(_Ripple);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var DURATION = 550;
		var DELAY_RIPPLE = exports.DELAY_RIPPLE = 80;

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'block',
		      position: 'absolute',
		      overflow: 'hidden',
		      borderRadius: 'inherit',
		      width: '100%',
		      height: '100%',
		      left: 0,
		      top: 0,
		      pointerEvents: 'none',
		      zIndex: 0
		    },
		    wrapper: {
		      opacity: 1
		    },
		    wrapperLeaving: {
		      opacity: 0,
		      animation: 'mui-ripple-exit ' + DURATION + 'ms ' + theme.transitions.easing.easeInOut
		    },
		    wrapperPulsating: {
		      position: 'absolute',
		      left: 0,
		      top: 0,
		      display: 'block',
		      width: '100%',
		      height: '100%',
		      animation: 'mui-ripple-pulsate 1500ms ' + theme.transitions.easing.easeInOut + ' 200ms infinite',
		      rippleVisible: {
		        opacity: 0.2
		      }
		    },
		    '@keyframes mui-ripple-enter': {
		      '0%': {
		        transform: 'scale(0)'
		      },
		      '100%': {
		        transform: 'scale(1)'
		      }
		    },
		    '@keyframes mui-ripple-exit': {
		      '0%': {
		        opacity: 1
		      },
		      '100%': {
		        opacity: 0
		      }
		    },
		    '@keyframes mui-ripple-pulsate': {
		      '0%': {
		        transform: 'scale(1)'
		      },
		      '50%': {
		        transform: 'scale(0.9)'
		      },
		      '100%': {
		        transform: 'scale(1)'
		      }
		    },
		    ripple: {
		      width: 50,
		      height: 50,
		      left: 0,
		      top: 0,
		      opacity: 0,
		      position: 'absolute',
		      borderRadius: '50%',
		      background: 'currentColor'
		    },
		    rippleVisible: {
		      opacity: 0.3,
		      transform: 'scale(1)',
		      animation: 'mui-ripple-enter ' + DURATION + 'ms ' + theme.transitions.easing.easeInOut
		    },
		    rippleFast: {
		      animationDuration: '200ms'
		    }
		  };
		};

		/**
		 * @ignore - internal component.
		 */

		var TouchRipple = function (_React$Component) {
		  (0, _inherits3.default)(TouchRipple, _React$Component);

		  function TouchRipple() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, TouchRipple);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TouchRipple.__proto__ || (0, _getPrototypeOf2.default)(TouchRipple)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      nextKey: 0,
		      ripples: []
		    }, _this.ignoringMouseDown = false, _this.startTimer = null, _this.startTimerCommit = null, _this.pulsate = function () {
		      _this.start({}, { pulsate: true });
		    }, _this.start = function () {
		      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
		      var cb = arguments[2];
		      var _options$pulsate = options.pulsate,
		          pulsate = _options$pulsate === undefined ? false : _options$pulsate,
		          _options$center = options.center,
		          center = _options$center === undefined ? _this.props.center || options.pulsate : _options$center,
		          _options$fakeElement = options.fakeElement,
		          fakeElement = _options$fakeElement === undefined ? false : _options$fakeElement;


		      if (event.type === 'mousedown' && _this.ignoringMouseDown) {
		        _this.ignoringMouseDown = false;
		        return;
		      }

		      if (event.type === 'touchstart') {
		        _this.ignoringMouseDown = true;
		      }

		      var element = fakeElement ? null : _reactDom2.default.findDOMNode(_this);
		      var rect = element ? element.getBoundingClientRect() : {
		        width: 0,
		        height: 0,
		        left: 0,
		        top: 0
		      };

		      // Get the size of the ripple
		      var rippleX = void 0;
		      var rippleY = void 0;
		      var rippleSize = void 0;

		      if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
		        rippleX = Math.round(rect.width / 2);
		        rippleY = Math.round(rect.height / 2);
		      } else {
		        var clientX = event.clientX ? event.clientX : event.touches[0].clientX;
		        var clientY = event.clientY ? event.clientY : event.touches[0].clientY;
		        rippleX = Math.round(clientX - rect.left);
		        rippleY = Math.round(clientY - rect.top);
		      }

		      if (center) {
		        rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3);

		        // For some reason the animation is broken on Mobile Chrome if the size if even.
		        if (rippleSize % 2 === 0) {
		          rippleSize += 1;
		        }
		      } else {
		        var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
		        var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
		        rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));
		      }

		      // Touche devices
		      if (event.touches) {
		        // Prepare the ripple effect.
		        _this.startTimerCommit = function () {
		          _this.startCommit({ pulsate: pulsate, rippleX: rippleX, rippleY: rippleY, rippleSize: rippleSize, cb: cb });
		        };
		        // Deplay the execution of the ripple effect.
		        _this.startTimer = setTimeout(function () {
		          _this.startTimerCommit();
		          _this.startTimerCommit = null;
		        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.
		      } else {
		        _this.startCommit({ pulsate: pulsate, rippleX: rippleX, rippleY: rippleY, rippleSize: rippleSize, cb: cb });
		      }
		    }, _this.startCommit = function (params) {
		      var pulsate = params.pulsate,
		          rippleX = params.rippleX,
		          rippleY = params.rippleY,
		          rippleSize = params.rippleSize,
		          cb = params.cb;

		      var ripples = _this.state.ripples;

		      // Add a ripple to the ripples array.
		      ripples = [].concat((0, _toConsumableArray3.default)(ripples), [_react2.default.createElement(_Ripple2.default, {
		        key: _this.state.nextKey,
		        classes: _this.props.classes,
		        timeout: {
		          exit: DURATION,
		          enter: DURATION
		        },
		        pulsate: pulsate,
		        rippleX: rippleX,
		        rippleY: rippleY,
		        rippleSize: rippleSize
		      })]);

		      _this.setState({
		        nextKey: _this.state.nextKey + 1,
		        ripples: ripples
		      }, cb);
		    }, _this.stop = function (event, cb) {
		      clearTimeout(_this.startTimer);
		      var ripples = _this.state.ripples;

		      // The touch interaction occures to quickly.
		      // We still want to show ripple effect.

		      if (event.type === 'touchend' && _this.startTimerCommit) {
		        event.persist();
		        _this.startTimerCommit();
		        _this.startTimerCommit = null;
		        _this.startTimer = setTimeout(function () {
		          _this.stop(event, cb);
		        }, 0);
		        return;
		      }

		      _this.startTimerCommit = null;

		      if (ripples && ripples.length) {
		        _this.setState({
		          ripples: ripples.slice(1)
		        }, cb);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(TouchRipple, [{
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      clearTimeout(this.startTimer);
		    }

		    // Used to filter out mouse emulated events on mobile.

		    // We use a timer in order to only show the ripples for touch "click" like events.
		    // We don't want to display the ripple for touch scroll events.

		    // This is the hook called once the previous timeout is ready.

		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          center = _props.center,
		          classes = _props.classes,
		          className = _props.className,
		          other = (0, _objectWithoutProperties3.default)(_props, ['center', 'classes', 'className']);


		      return _react2.default.createElement(
		        _TransitionGroup2.default,
		        (0, _extends3.default)({
		          component: 'span',
		          enter: true,
		          exit: true,
		          className: (0, _classnames2.default)(classes.root, className)
		        }, other),
		        this.state.ripples
		      );
		    }
		  }]);
		  return TouchRipple;
		}(_react2.default.Component);

		TouchRipple.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * If `true`, the ripple starts at the center of the component
		   * rather than at the point of interaction.
		   */
		  center: _propTypes2.default.bool,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string
		} : {};

		TouchRipple.defaultProps = {
		  center: false
		};

		exports.default = (0, _withStyles2.default)(styles, { flip: false, name: 'MuiTouchRipple' })(TouchRipple);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"./Ripple":765,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"babel-runtime/helpers/toConsumableArray":525,"classnames":642,"prop-types":961,"react":1016,"react-dom":971,"react-transition-group/TransitionGroup":1011}],767:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		function createRippleHandler(instance, eventName, action, cb) {
		  return function handleEvent(event) {
		    if (cb) {
		      cb.call(instance, event);
		    }

		    if (event.defaultPrevented) {
		      return false;
		    }

		    if (instance.ripple) {
		      instance.ripple[action](event);
		    }

		    if (instance.props && typeof instance.props['on' + eventName] === 'function') {
		      instance.props['on' + eventName](event);
		    }

		    return true;
		  };
		}

		exports.default = createRippleHandler;
		},{}],768:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _ButtonBase = require('./ButtonBase');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ButtonBase).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./ButtonBase":764}],769:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _colorManipulator = require('../styles/colorManipulator');

		var _ButtonBase = require('../ButtonBase');

		var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent ButtonBase

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: (0, _extends3.default)({}, theme.typography.button, {
		      lineHeight: '1.4em', // Improve readability for multiline button.
		      boxSizing: 'border-box',
		      minWidth: 88,
		      minHeight: 36,
		      padding: theme.spacing.unit + 'px ' + theme.spacing.unit * 2 + 'px',
		      borderRadius: 2,
		      color: theme.palette.text.primary,
		      transition: theme.transitions.create(['background-color', 'box-shadow'], {
		        duration: theme.transitions.duration.short
		      }),
		      '&:hover': {
		        textDecoration: 'none',
		        // Reset on mouse devices
		        backgroundColor: (0, _colorManipulator.fade)(theme.palette.text.primary, 0.12),
		        '@media (hover: none)': {
		          backgroundColor: 'transparent'
		        },
		        '&$disabled': {
		          backgroundColor: 'transparent'
		        }
		      }
		    }),
		    dense: {
		      padding: theme.spacing.unit - 1 + 'px ' + theme.spacing.unit + 'px',
		      minWidth: 64,
		      minHeight: 32,
		      fontSize: theme.typography.pxToRem(theme.typography.fontSize - 1)
		    },
		    label: {
		      width: '100%',
		      display: 'inherit',
		      alignItems: 'inherit',
		      justifyContent: 'inherit'
		    },
		    flatPrimary: {
		      color: theme.palette.primary[500],
		      '&:hover': {
		        backgroundColor: (0, _colorManipulator.fade)(theme.palette.primary[500], 0.12),
		        // Reset on mouse devices
		        '@media (hover: none)': {
		          backgroundColor: 'transparent'
		        }
		      }
		    },
		    flatAccent: {
		      color: theme.palette.secondary.A200,
		      '&:hover': {
		        backgroundColor: (0, _colorManipulator.fade)(theme.palette.secondary.A200, 0.12),
		        // Reset on mouse devices
		        '@media (hover: none)': {
		          backgroundColor: 'transparent'
		        }
		      }
		    },
		    flatContrast: {
		      color: theme.palette.getContrastText(theme.palette.primary[500]),
		      '&:hover': {
		        backgroundColor: (0, _colorManipulator.fade)(theme.palette.getContrastText(theme.palette.primary[500]), 0.12),
		        // Reset on mouse devices
		        '@media (hover: none)': {
		          backgroundColor: 'transparent'
		        }
		      }
		    },
		    colorInherit: {
		      color: 'inherit'
		    },
		    raised: {
		      color: theme.palette.getContrastText(theme.palette.grey[300]),
		      backgroundColor: theme.palette.grey[300],
		      boxShadow: theme.shadows[2],
		      '&$keyboardFocused': {
		        boxShadow: theme.shadows[6]
		      },
		      '&:active': {
		        boxShadow: theme.shadows[8]
		      },
		      '&$disabled': {
		        boxShadow: theme.shadows[0],
		        backgroundColor: theme.palette.text.divider
		      },
		      '&:hover': {
		        backgroundColor: theme.palette.grey.A100,
		        // Reset on mouse devices
		        '@media (hover: none)': {
		          backgroundColor: theme.palette.grey[300]
		        },
		        '&$disabled': {
		          backgroundColor: theme.palette.text.divider,
		          // Reset on mouse devices
		          '@media (hover: none)': {
		            backgroundColor: theme.palette.grey[300]
		          }
		        }
		      }
		    },
		    keyboardFocused: {},
		    raisedPrimary: {
		      color: theme.palette.getContrastText(theme.palette.primary[500]),
		      backgroundColor: theme.palette.primary[500],
		      '&:hover': {
		        backgroundColor: theme.palette.primary[700],
		        // Reset on mouse devices
		        '@media (hover: none)': {
		          backgroundColor: theme.palette.primary[500]
		        }
		      }
		    },
		    raisedAccent: {
		      color: theme.palette.getContrastText(theme.palette.secondary.A200),
		      backgroundColor: theme.palette.secondary.A200,
		      '&:hover': {
		        backgroundColor: theme.palette.secondary.A400,
		        // Reset on mouse devices
		        '@media (hover: none)': {
		          backgroundColor: theme.palette.secondary.A200
		        }
		      }
		    },
		    raisedContrast: {
		      color: theme.palette.getContrastText(theme.palette.primary[500])
		    },
		    disabled: {
		      color: theme.palette.action.disabled
		    },
		    fab: {
		      borderRadius: '50%',
		      padding: 0,
		      minWidth: 0,
		      width: 56,
		      height: 56,
		      boxShadow: theme.shadows[6],
		      '&:active': {
		        boxShadow: theme.shadows[12]
		      }
		    },
		    mini: {
		      width: 40,
		      height: 40
		    }
		  };
		};

		function Button(props) {
		  var _classNames;

		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      color = props.color,
		      dense = props.dense,
		      disabled = props.disabled,
		      disableFocusRipple = props.disableFocusRipple,
		      fab = props.fab,
		      mini = props.mini,
		      raised = props.raised,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'color', 'dense', 'disabled', 'disableFocusRipple', 'fab', 'mini', 'raised']);


		  var flat = !raised && !fab;
		  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.raised, raised || fab), (0, _defineProperty3.default)(_classNames, classes.fab, fab), (0, _defineProperty3.default)(_classNames, classes.mini, fab && mini), (0, _defineProperty3.default)(_classNames, classes.colorInherit, color === 'inherit'), (0, _defineProperty3.default)(_classNames, classes.flatPrimary, flat && color === 'primary'), (0, _defineProperty3.default)(_classNames, classes.flatAccent, flat && color === 'accent'), (0, _defineProperty3.default)(_classNames, classes.flatContrast, flat && color === 'contrast'), (0, _defineProperty3.default)(_classNames, classes.raisedPrimary, !flat && color === 'primary'), (0, _defineProperty3.default)(_classNames, classes.raisedAccent, !flat && color === 'accent'), (0, _defineProperty3.default)(_classNames, classes.raisedContrast, !flat && color === 'contrast'), (0, _defineProperty3.default)(_classNames, classes.dense, dense), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), _classNames), classNameProp);

		  return _react2.default.createElement(
		    _ButtonBase2.default,
		    (0, _extends3.default)({
		      className: className,
		      disabled: disabled,
		      focusRipple: !disableFocusRipple,
		      keyboardFocusedClassName: classes.keyboardFocused
		    }, other),
		    _react2.default.createElement(
		      'span',
		      { className: classes.label },
		      children
		    )
		  );
		}

		Button.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the button.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The color of the component. It's using the theme palette when that makes sense.
		   */
		  color: _propTypes2.default.oneOf(['default', 'inherit', 'primary', 'accent', 'contrast']),
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   * The default value is a `button`.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * Uses a smaller minWidth, ideal for things like card actions.
		   */
		  dense: _propTypes2.default.bool,
		  /**
		   * If `true`, the button will be disabled.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the  keyboard focus ripple will be disabled.
		   * `disableRipple` must also be true.
		   */
		  disableFocusRipple: _propTypes2.default.bool,
		  /**
		   * If `true`, the ripple effect will be disabled.
		   */
		  disableRipple: _propTypes2.default.bool,
		  /**
		   * If `true`, will use floating action button styling.
		   */
		  fab: _propTypes2.default.bool,
		  /**
		   * The URL to link to when the button is clicked.
		   * If defined, an `a` element will be used as the root node.
		   */
		  href: _propTypes2.default.string,
		  /**
		   * If `true`, and `fab` is `true`, will use mini floating action button styling.
		   */
		  mini: _propTypes2.default.bool,
		  /**
		   * If `true`, the button will use raised styling.
		   */
		  raised: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  type: _propTypes2.default.string
		} : {};

		Button.defaultProps = {
		  color: 'default',
		  dense: false,
		  disabled: false,
		  disableFocusRipple: false,
		  disableRipple: false,
		  fab: false,
		  mini: false,
		  raised: false,
		  type: 'button'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiButton' })(Button);
		}).call(this,require('_process'))
		},{"../ButtonBase":768,"../styles/colorManipulator":921,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],770:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Button = require('./Button');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Button).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Button":769}],771:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _Paper = require('../Paper');

		var _Paper2 = _interopRequireDefault(_Paper);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function Card(props) {
		  var raised = props.raised,
		      other = (0, _objectWithoutProperties3.default)(props, ['raised']);


		  return _react2.default.createElement(_Paper2.default, (0, _extends3.default)({ elevation: raised ? 8 : 2 }, other));
		} // @inheritedComponent Paper

		Card.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the card will use raised styling.
		   */
		  raised: _propTypes2.default.bool
		} : {};

		Card.defaultProps = {
		  raised: false
		};

		exports.default = Card;
		}).call(this,require('_process'))
		},{"../Paper":835,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"prop-types":961,"react":1016}],772:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _reactHelpers = require('../utils/reactHelpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = {
		  root: {
		    height: 52,
		    display: 'flex',
		    alignItems: 'center',
		    padding: '2px 4px'
		  },
		  action: {
		    margin: '0 4px'
		  }
		};

		function CardActions(props) {
		  var disableActionSpacing = props.disableActionSpacing,
		      children = props.children,
		      classes = props.classes,
		      className = props.className,
		      other = (0, _objectWithoutProperties3.default)(props, ['disableActionSpacing', 'children', 'classes', 'className']);


		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
		    disableActionSpacing ? children : (0, _reactHelpers.cloneChildrenWithClassName)(children, classes.action)
		  );
		}

		CardActions.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the card actions do not have additional margin.
		   */
		  disableActionSpacing: _propTypes2.default.bool
		} : {};

		CardActions.defaultProps = {
		  disableActionSpacing: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiCardActions' })(CardActions);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"../utils/reactHelpers":948,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],773:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      padding: theme.spacing.unit * 2,
		      '&:last-child': {
		        paddingBottom: theme.spacing.unit * 3
		      }
		    }
		  };
		};

		function CardContent(props) {
		  var classes = props.classes,
		      className = props.className,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className']);


		  return _react2.default.createElement('div', (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other));
		}

		CardContent.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiCardContent' })(CardContent);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],774:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Typography = require('../Typography');

		var _Typography2 = _interopRequireDefault(_Typography);

		var _CardContent = require('./CardContent');

		var _CardContent2 = _interopRequireDefault(_CardContent);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent CardContent

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'flex',
		      alignItems: 'center'
		    },
		    avatar: {
		      flex: '0 0 auto',
		      marginRight: theme.spacing.unit * 2
		    },
		    action: {
		      flex: '0 0 auto',
		      alignSelf: 'flex-start',
		      marginTop: theme.spacing.unit * -1,
		      marginRight: theme.spacing.unit * -2
		    },
		    content: {
		      flex: '1 1 auto'
		    },
		    title: {},
		    subheader: {}
		  };
		};

		function CardHeader(props) {
		  var avatar = props.avatar,
		      action = props.action,
		      classes = props.classes,
		      classNameProp = props.className,
		      subheader = props.subheader,
		      title = props.title,
		      other = (0, _objectWithoutProperties3.default)(props, ['avatar', 'action', 'classes', 'className', 'subheader', 'title']);


		  return _react2.default.createElement(
		    _CardContent2.default,
		    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, classNameProp) }, other),
		    avatar && _react2.default.createElement(
		      'div',
		      { className: classes.avatar },
		      avatar
		    ),
		    _react2.default.createElement(
		      'div',
		      { className: classes.content },
		      _react2.default.createElement(
		        _Typography2.default,
		        { type: avatar ? 'body2' : 'headline', component: 'span', className: classes.title },
		        title
		      ),
		      subheader && _react2.default.createElement(
		        _Typography2.default,
		        {
		          type: avatar ? 'body2' : 'body1',
		          component: 'span',
		          color: 'secondary',
		          className: classes.subheader
		        },
		        subheader
		      )
		    ),
		    action && _react2.default.createElement(
		      'div',
		      { className: classes.action },
		      action
		    )
		  );
		}

		CardHeader.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The action to display in the card header.
		   */
		  action: _propTypes2.default.node,
		  /**
		   * The Avatar for the Card Header.
		   */
		  avatar: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The content of the component.
		   */
		  subheader: _propTypes2.default.node,
		  /**
		   * The content of the Card Title.
		   */
		  title: _propTypes2.default.node
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiCardHeader' })(CardHeader);
		}).call(this,require('_process'))
		},{"../Typography":884,"../styles/withStyles":934,"./CardContent":773,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],775:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = {
		  root: {
		    backgroundSize: 'cover',
		    backgroundRepeat: 'no-repeat',
		    backgroundPosition: 'center'
		  },
		  rootMedia: {
		    width: '100%'
		  }
		};

		var MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];

		function CardMedia(props) {
		  var _classNames;

		  var classes = props.classes,
		      className = props.className,
		      ComponentProp = props.component,
		      image = props.image,
		      src = props.src,
		      style = props.style,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'component', 'image', 'src', 'style']);


		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(Boolean(image || src), 'Material-UI: either `image` or `src` property must be specified.') : void 0;

		  var isMediaComponent = MEDIA_COMPONENTS.indexOf(ComponentProp) !== -1;
		  var composedStyle = !isMediaComponent && image ? (0, _extends3.default)({ backgroundImage: 'url(' + image + ')' }, style) : style;
		  var composedClassName = (0, _classnames2.default)((_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.root, !isMediaComponent), (0, _defineProperty3.default)(_classNames, classes.rootMedia, isMediaComponent), _classNames), className);

		  return _react2.default.createElement(ComponentProp, (0, _extends3.default)({
		    className: composedClassName,
		    style: composedStyle,
		    src: isMediaComponent ? image || src : undefined
		  }, other));
		}

		CardMedia.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * Component for rendering image.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * Image to be displayed as a background image.
		   * Either `image` or `src` prop must be specified.
		   * Note that caller must specify height otherwise the image will not be visible.
		   */
		  image: _propTypes2.default.string,
		  /**
		   * An alias for `image` property.
		   * Available only with media components.
		   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.
		   */
		  src: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  style: _propTypes2.default.object
		} : {};

		CardMedia.defaultProps = {
		  component: 'div'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiCardMedia' })(CardMedia);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016,"warning":1054}],776:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Card = require('./Card');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Card).default;
		  }
		});

		var _CardContent = require('./CardContent');

		Object.defineProperty(exports, 'CardContent', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_CardContent).default;
		  }
		});

		var _CardActions = require('./CardActions');

		Object.defineProperty(exports, 'CardActions', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_CardActions).default;
		  }
		});

		var _CardMedia = require('./CardMedia');

		Object.defineProperty(exports, 'CardMedia', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_CardMedia).default;
		  }
		});

		var _CardHeader = require('./CardHeader');

		Object.defineProperty(exports, 'CardHeader', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_CardHeader).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Card":771,"./CardActions":772,"./CardContent":773,"./CardHeader":774,"./CardMedia":775}],777:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _SwitchBase = require('../internal/SwitchBase');

		var _SwitchBase2 = _interopRequireDefault(_SwitchBase);

		var _IndeterminateCheckBox = require('../internal/svg-icons/IndeterminateCheckBox');

		var _IndeterminateCheckBox2 = _interopRequireDefault(_IndeterminateCheckBox);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    default: {
		      color: theme.palette.text.secondary
		    },
		    checked: {
		      color: theme.palette.primary[500]
		    },
		    disabled: {
		      color: theme.palette.action.disabled
		    }
		  };
		};

		function Checkbox(props) {
		  var checkedIcon = props.checkedIcon,
		      icon = props.icon,
		      indeterminate = props.indeterminate,
		      indeterminateIcon = props.indeterminateIcon,
		      other = (0, _objectWithoutProperties3.default)(props, ['checkedIcon', 'icon', 'indeterminate', 'indeterminateIcon']);


		  return _react2.default.createElement(_SwitchBase2.default, (0, _extends3.default)({
		    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,
		    icon: indeterminate ? indeterminateIcon : icon
		  }, other));
		}

		Checkbox.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * If `true`, the component is checked.
		   */
		  checked: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.string]),
		  /**
		   * The icon to display when the component is checked.
		   * If a string is provided, it will be used as a font ligature.
		   */
		  checkedIcon: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  defaultChecked: _propTypes2.default.bool,
		  /**
		   * If `true`, the switch will be disabled.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the ripple effect will be disabled.
		   */
		  disableRipple: _propTypes2.default.bool,
		  /**
		   * The icon to display when the component is unchecked.
		   * If a string is provided, it will be used as a font ligature.
		   */
		  icon: _propTypes2.default.node,
		  /**
		   * If `true`, the component appears indeterminate.
		   */
		  indeterminate: _propTypes2.default.bool,
		  /**
		   * The icon to display when the component is indeterminate.
		   * If a string is provided, it will be used as a font ligature.
		   */
		  indeterminateIcon: _propTypes2.default.node,
		  /**
		   * Properties applied to the `input` element.
		   */
		  inputProps: _propTypes2.default.object,
		  /**
		   * Use that property to pass a ref callback to the native input component.
		   */
		  inputRef: _propTypes2.default.func,
		  /**
		   * The input component property `type`.
		   */
		  inputType: _propTypes2.default.string,
		  /*
		   * @ignore
		   */
		  name: _propTypes2.default.string,
		  /**
		   * Callback fired when the state is changed.
		   *
		   * @param {object} event The event source of the callback
		   * @param {boolean} checked The `checked` value of the switch
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
		  /**
		   * The value of the component.
		   */
		  value: _propTypes2.default.string
		} : {};

		Checkbox.defaultProps = {
		  indeterminate: false,
		  indeterminateIcon: _react2.default.createElement(_IndeterminateCheckBox2.default, null)
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiCheckbox' })(Checkbox);
		}).call(this,require('_process'))
		},{"../internal/SwitchBase":908,"../internal/svg-icons/IndeterminateCheckBox":915,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"prop-types":961,"react":1016}],778:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Checkbox = require('./Checkbox');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Checkbox).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Checkbox":777}],779:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _keycode = require('keycode');

		var _keycode2 = _interopRequireDefault(_keycode);

		var _Cancel = require('../internal/svg-icons/Cancel');

		var _Cancel2 = _interopRequireDefault(_Cancel);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _colorManipulator = require('../styles/colorManipulator');

		require('../Avatar/Avatar');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// So we don't have any override priority issue.

		var styles = exports.styles = function styles(theme) {
		  var height = 32;
		  var backgroundColor = theme.palette.background.chip;
		  var deleteIconColor = (0, _colorManipulator.fade)(theme.palette.text.primary, 0.26);

		  return {
		    root: {
		      fontFamily: theme.typography.fontFamily,
		      fontSize: theme.typography.pxToRem(13),
		      display: 'flex',
		      alignItems: 'center',
		      justifyContent: 'center',
		      height: height,
		      color: theme.palette.getContrastText(backgroundColor),
		      backgroundColor: backgroundColor,
		      borderRadius: height / 2,
		      whiteSpace: 'nowrap',
		      width: 'fit-content',
		      transition: theme.transitions.create(),
		      // label will inherit this from root, then `clickable` class overrides this for both
		      cursor: 'default',
		      outline: 'none', // No outline on focused element in Chrome (as triggered by tabIndex prop)
		      border: 'none', // Remove `button` border
		      padding: 0 // Remove `button` padding
		    },
		    clickable: {
		      // Remove grey highlight
		      WebkitTapHighlightColor: theme.palette.common.transparent,
		      cursor: 'pointer',
		      '&:hover, &:focus': {
		        backgroundColor: (0, _colorManipulator.emphasize)(backgroundColor, 0.08)
		      },
		      '&:active': {
		        boxShadow: theme.shadows[1],
		        backgroundColor: (0, _colorManipulator.emphasize)(backgroundColor, 0.12)
		      }
		    },
		    deletable: {
		      '&:focus': {
		        backgroundColor: (0, _colorManipulator.emphasize)(backgroundColor, 0.08)
		      }
		    },
		    avatar: {
		      marginRight: -4,
		      width: height,
		      height: height,
		      fontSize: theme.typography.pxToRem(16)
		    },
		    avatarChildren: {
		      width: 19,
		      height: 19
		    },
		    label: {
		      display: 'flex',
		      alignItems: 'center',
		      paddingLeft: 12,
		      paddingRight: 12,
		      userSelect: 'none',
		      whiteSpace: 'nowrap',
		      cursor: 'inherit'
		    },
		    deleteIcon: {
		      // Remove grey highlight
		      WebkitTapHighlightColor: theme.palette.common.transparent,
		      color: deleteIconColor,
		      cursor: 'pointer',
		      height: 'auto',
		      margin: '0 4px 0 -8px',
		      '&:hover': {
		        color: (0, _colorManipulator.fade)(deleteIconColor, 0.4)
		      }
		    }
		  };
		};

		/**
		 * Chips represent complex entities in small blocks, such as a contact.
		 */

		var Chip = function (_React$Component) {
		  (0, _inherits3.default)(Chip, _React$Component);

		  function Chip() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Chip);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Chip.__proto__ || (0, _getPrototypeOf2.default)(Chip)).call.apply(_ref, [this].concat(args))), _this), _this.chipRef = null, _this.handleDeleteIconClick = function (event) {
		      // Stop the event from bubbling up to the `Chip`
		      event.stopPropagation();
		      var onDelete = _this.props.onDelete;

		      if (onDelete) {
		        onDelete(event);
		      }
		    }, _this.handleKeyDown = function (event) {
		      var _this$props = _this.props,
		          onClick = _this$props.onClick,
		          onDelete = _this$props.onDelete,
		          onKeyDown = _this$props.onKeyDown;

		      var key = (0, _keycode2.default)(event);

		      if (onClick && (key === 'space' || key === 'enter')) {
		        event.preventDefault();
		        onClick(event);
		      } else if (onDelete && key === 'backspace') {
		        event.preventDefault();
		        onDelete(event);
		      } else if (key === 'esc') {
		        event.preventDefault();
		        if (_this.chipRef) {
		          _this.chipRef.blur();
		        }
		      }

		      if (onKeyDown) {
		        onKeyDown(event);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Chip, [{
		    key: 'render',
		    value: function render() {
		      var _this2 = this;

		      var _props = this.props,
		          avatarProp = _props.avatar,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          deleteIconProp = _props.deleteIcon,
		          label = _props.label,
		          onClick = _props.onClick,
		          onDelete = _props.onDelete,
		          onKeyDown = _props.onKeyDown,
		          tabIndexProp = _props.tabIndex,
		          other = (0, _objectWithoutProperties3.default)(_props, ['avatar', 'classes', 'className', 'deleteIcon', 'label', 'onClick', 'onDelete', 'onKeyDown', 'tabIndex']);


		      var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.clickable, onClick), (0, _defineProperty3.default)({}, classes.deletable, onDelete), classNameProp);

		      var deleteIcon = null;
		      if (onDelete && deleteIconProp && _react2.default.isValidElement(deleteIconProp)) {
		        deleteIcon = _react2.default.cloneElement(deleteIconProp, {
		          onClick: this.handleDeleteIconClick,
		          className: (0, _classnames2.default)(classes.deleteIcon, deleteIconProp.props.className)
		        });
		      } else if (onDelete) {
		        deleteIcon = _react2.default.createElement(_Cancel2.default, { className: classes.deleteIcon, onClick: this.handleDeleteIconClick });
		      }

		      var avatar = null;
		      if (avatarProp && _react2.default.isValidElement(avatarProp)) {
		        avatar = _react2.default.cloneElement(avatarProp, {
		          className: (0, _classnames2.default)(classes.avatar, avatarProp.props.className),
		          childrenClassName: (0, _classnames2.default)(classes.avatarChildren, avatarProp.props.childrenClassName)
		        });
		      }

		      var tabIndex = tabIndexProp;

		      if (!tabIndex) {
		        tabIndex = onClick || onDelete ? 0 : -1;
		      }

		      return _react2.default.createElement(
		        'div',
		        (0, _extends3.default)({
		          role: 'button',
		          className: className,
		          tabIndex: tabIndex,
		          onClick: onClick,
		          onKeyDown: this.handleKeyDown,
		          ref: function ref(node) {
		            _this2.chipRef = node;
		          }
		        }, other),
		        avatar,
		        _react2.default.createElement(
		          'span',
		          { className: classes.label },
		          label
		        ),
		        deleteIcon
		      );
		    }
		  }]);
		  return Chip;
		}(_react2.default.Component);

		Chip.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Avatar element.
		   */
		  avatar: _propTypes2.default.element,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * Custom delete icon element. Will be shown only if `onDelete` is set.
		   */
		  deleteIcon: _propTypes2.default.element,
		  /**
		   * The content of the label.
		   */
		  label: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  onClick: _propTypes2.default.func,
		  /**
		   * Callback function fired when the delete icon is clicked.
		   * If set, the delete icon will be shown.
		   */
		  onDelete: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onKeyDown: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiChip' })(Chip);
		}).call(this,require('_process'))
		},{"../Avatar/Avatar":757,"../internal/svg-icons/Cancel":911,"../styles/colorManipulator":921,"../styles/withStyles":934,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"keycode":731,"prop-types":961,"react":1016}],780:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Chip = require('./Chip');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Chip).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Chip":779}],781:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _helpers = require('../utils/helpers');

		var _Modal = require('../Modal');

		var _Modal2 = _interopRequireDefault(_Modal);

		var _Fade = require('../transitions/Fade');

		var _Fade2 = _interopRequireDefault(_Fade);

		var _transitions = require('../styles/transitions');

		var _Paper = require('../Paper');

		var _Paper2 = _interopRequireDefault(_Paper);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      justifyContent: 'center',
		      alignItems: 'center'
		    },
		    paper: {
		      display: 'flex',
		      margin: theme.spacing.unit * 4,
		      flexDirection: 'column',
		      flex: '0 1 auto',
		      position: 'relative',
		      maxHeight: '90vh',
		      overflowY: 'auto', // Fix IE11 issue, to remove at some point.
		      '&:focus': {
		        outline: 'none'
		      }
		    },
		    paperWidthXs: {
		      maxWidth: Math.max(theme.breakpoints.values.xs, 360)
		    },
		    paperWidthSm: {
		      maxWidth: theme.breakpoints.values.sm
		    },
		    paperWidthMd: {
		      maxWidth: theme.breakpoints.values.md
		    },
		    fullWidth: {
		      width: '100%'
		    },
		    fullScreen: {
		      margin: 0,
		      width: '100%',
		      maxWidth: '100%',
		      height: '100%',
		      maxHeight: '100%',
		      borderRadius: 0
		    }
		  };
		};

		/**
		 * Dialogs are overlaid modal paper based components with a backdrop.
		 */
		// @inheritedComponent Modal

		function Dialog(props) {
		  var _classNames;

		  var children = props.children,
		      classes = props.classes,
		      className = props.className,
		      fullScreen = props.fullScreen,
		      fullWidth = props.fullWidth,
		      ignoreBackdropClick = props.ignoreBackdropClick,
		      ignoreEscapeKeyUp = props.ignoreEscapeKeyUp,
		      maxWidth = props.maxWidth,
		      onBackdropClick = props.onBackdropClick,
		      onClose = props.onClose,
		      onEnter = props.onEnter,
		      onEntered = props.onEntered,
		      onEntering = props.onEntering,
		      onEscapeKeyUp = props.onEscapeKeyUp,
		      onExit = props.onExit,
		      onExited = props.onExited,
		      onExiting = props.onExiting,
		      open = props.open,
		      TransitionProp = props.transition,
		      transitionDuration = props.transitionDuration,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'fullScreen', 'fullWidth', 'ignoreBackdropClick', 'ignoreEscapeKeyUp', 'maxWidth', 'onBackdropClick', 'onClose', 'onEnter', 'onEntered', 'onEntering', 'onEscapeKeyUp', 'onExit', 'onExited', 'onExiting', 'open', 'transition', 'transitionDuration']);


		  return _react2.default.createElement(
		    _Modal2.default,
		    (0, _extends3.default)({
		      className: (0, _classnames2.default)(classes.root, className),
		      BackdropTransitionDuration: transitionDuration,
		      ignoreBackdropClick: ignoreBackdropClick,
		      ignoreEscapeKeyUp: ignoreEscapeKeyUp,
		      onBackdropClick: onBackdropClick,
		      onEscapeKeyUp: onEscapeKeyUp,
		      onClose: onClose,
		      show: open,
		      role: 'dialog'
		    }, other),
		    _react2.default.createElement(
		      TransitionProp,
		      {
		        appear: true,
		        'in': open,
		        timeout: transitionDuration,
		        onEnter: onEnter,
		        onEntering: onEntering,
		        onEntered: onEntered,
		        onExit: onExit,
		        onExiting: onExiting,
		        onExited: onExited
		      },
		      _react2.default.createElement(
		        _Paper2.default,
		        {
		          elevation: 24,
		          className: (0, _classnames2.default)(classes.paper, classes['paperWidth' + (0, _helpers.capitalizeFirstLetter)(maxWidth)], (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.fullScreen, fullScreen), (0, _defineProperty3.default)(_classNames, classes.fullWidth, fullWidth), _classNames))
		        },
		        children
		      )
		    )
		  );
		}

		Dialog.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Dialog children, usually the included sub-components.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, it will be full-screen
		   */
		  fullScreen: _propTypes2.default.bool,
		  /**
		   * If specified, stretches dialog to max width.
		   */
		  fullWidth: _propTypes2.default.bool,
		  /**
		   * If `true`, clicking the backdrop will not fire the `onClose` callback.
		   */
		  ignoreBackdropClick: _propTypes2.default.bool,
		  /**
		   * If `true`, hitting escape will not fire the `onClose` callback.
		   */
		  ignoreEscapeKeyUp: _propTypes2.default.bool,
		  /**
		   * Determine the max width of the dialog.
		   * The dialog width grows with the size of the screen, this property is useful
		   * on the desktop where you might need some coherent different width size across your
		   * application.
		   */
		  maxWidth: _propTypes2.default.oneOf(['xs', 'sm', 'md']),
		  /**
		   * Callback fired when the backdrop is clicked.
		   */
		  onBackdropClick: _propTypes2.default.func,
		  /**
		   * Callback fired when the component requests to be closed.
		   *
		   * @param {object} event The event source of the callback
		   */
		  onClose: _propTypes2.default.func,
		  /**
		   * Callback fired before the dialog enters.
		   */
		  onEnter: _propTypes2.default.func,
		  /**
		   * Callback fired when the dialog has entered.
		   */
		  onEntered: _propTypes2.default.func,
		  /**
		   * Callback fired when the dialog is entering.
		   */
		  onEntering: _propTypes2.default.func,
		  /**
		   * Callback fires when the escape key is released and the modal is in focus.
		   */
		  onEscapeKeyUp: _propTypes2.default.func,
		  /**
		   * Callback fired before the dialog exits.
		   */
		  onExit: _propTypes2.default.func,
		  /**
		   * Callback fired when the dialog has exited.
		   */
		  onExited: _propTypes2.default.func,
		  /**
		   * Callback fired when the dialog is exiting.
		   */
		  onExiting: _propTypes2.default.func,
		  /**
		   * If `true`, the Dialog is open.
		   */
		  open: _propTypes2.default.bool,
		  /**
		   * Transition component.
		   */
		  transition: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * The duration for the transition, in milliseconds.
		   * You may specify a single timeout for all transitions, or individually with an object.
		   */
		  transitionDuration: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number })])
		} : {};

		Dialog.defaultProps = {
		  fullScreen: false,
		  fullWidth: false,
		  ignoreBackdropClick: false,
		  ignoreEscapeKeyUp: false,
		  maxWidth: 'sm',
		  open: false,
		  transition: _Fade2.default,
		  transitionDuration: { enter: _transitions.duration.enteringScreen, exit: _transitions.duration.leavingScreen }
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiDialog' })(Dialog);
		}).call(this,require('_process'))
		},{"../Modal":832,"../Paper":835,"../styles/transitions":933,"../styles/withStyles":934,"../transitions/Fade":938,"../utils/helpers":945,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],782:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		require('../Button');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// So we don't have any override priority issue.

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'flex',
		      justifyContent: 'flex-end',
		      alignItems: 'center',
		      margin: theme.spacing.unit + 'px ' + theme.spacing.unit / 2 + 'px',
		      flex: '0 0 auto'
		    },
		    action: {
		      margin: '0 ' + theme.spacing.unit / 2 + 'px'
		    },
		    button: {
		      minWidth: 64
		    }
		  };
		};

		function DialogActions(props) {
		  var children = props.children,
		      classes = props.classes,
		      className = props.className,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className']);


		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
		    _react2.default.Children.map(children, function (child) {
		      if (!_react2.default.isValidElement(child)) {
		        return null;
		      }

		      return _react2.default.createElement(
		        'div',
		        { className: classes.action },
		        _react2.default.cloneElement(child, {
		          className: (0, _classnames2.default)(classes.button, child.props.className)
		        })
		      );
		    })
		  );
		}

		DialogActions.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiDialogActions' })(DialogActions);
		}).call(this,require('_process'))
		},{"../Button":770,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],783:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  var spacing = theme.spacing.unit * 3;
		  return {
		    root: {
		      flex: '1 1 auto',
		      overflowY: 'auto',
		      padding: '0 ' + spacing + 'px ' + spacing + 'px ' + spacing + 'px',
		      '&:first-child': {
		        paddingTop: spacing
		      }
		    }
		  };
		};

		function DialogContent(props) {
		  var classes = props.classes,
		      children = props.children,
		      className = props.className,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'children', 'className']);


		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
		    children
		  );
		}

		DialogContent.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiDialogContent' })(DialogContent);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],784:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: (0, _extends3.default)({}, theme.typography.subheading, {
		      color: theme.palette.text.secondary,
		      margin: 0
		    })
		  };
		};

		function DialogContentText(props) {
		  var children = props.children,
		      classes = props.classes,
		      className = props.className,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className']);


		  return _react2.default.createElement(
		    'p',
		    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
		    children
		  );
		}

		DialogContentText.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiDialogContentText' })(DialogContentText);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],785:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Typography = require('../Typography');

		var _Typography2 = _interopRequireDefault(_Typography);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      margin: 0,
		      padding: theme.spacing.unit * 3 + 'px ' + theme.spacing.unit * 3 + 'px       20px ' + theme.spacing.unit * 3 + 'px',
		      flex: '0 0 auto'
		    }
		  };
		};

		function DialogTitle(props) {
		  var children = props.children,
		      classes = props.classes,
		      className = props.className,
		      disableTypography = props.disableTypography,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'disableTypography']);


		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
		    disableTypography ? children : _react2.default.createElement(
		      _Typography2.default,
		      { type: 'title' },
		      children
		    )
		  );
		}

		DialogTitle.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the children won't be wrapped by a typography component.
		   * For instance, this can be useful to render an h4 instead of the default h2.
		   */
		  disableTypography: _propTypes2.default.bool
		} : {};

		DialogTitle.defaultProps = {
		  disableTypography: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiDialogTitle' })(DialogTitle);
		}).call(this,require('_process'))
		},{"../Typography":884,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],786:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Dialog = require('./Dialog');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Dialog).default;
		  }
		});

		var _DialogActions = require('./DialogActions');

		Object.defineProperty(exports, 'DialogActions', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_DialogActions).default;
		  }
		});

		var _DialogTitle = require('./DialogTitle');

		Object.defineProperty(exports, 'DialogTitle', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_DialogTitle).default;
		  }
		});

		var _DialogContent = require('./DialogContent');

		Object.defineProperty(exports, 'DialogContent', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_DialogContent).default;
		  }
		});

		var _DialogContentText = require('./DialogContentText');

		Object.defineProperty(exports, 'DialogContentText', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_DialogContentText).default;
		  }
		});

		var _withMobileDialog = require('./withMobileDialog');

		Object.defineProperty(exports, 'withMobileDialog', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_withMobileDialog).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Dialog":781,"./DialogActions":782,"./DialogContent":783,"./DialogContentText":784,"./DialogTitle":785,"./withMobileDialog":787}],787:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _wrapDisplayName = require('recompose/wrapDisplayName');

		var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

		var _withWidth = require('../utils/withWidth');

		var _withWidth2 = _interopRequireDefault(_withWidth);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * Dialog will responsively be full screen *at or below* the given breakpoint
		 * (defaults to 'sm' for mobile devices).
		 * Notice that this Higher-order Component is incompatible with server side rendering.
		 */
		var withMobileDialog = function withMobileDialog() {
		  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		  return function (Component) {
		    var _options$breakpoint = options.breakpoint,
		        breakpoint = _options$breakpoint === undefined ? 'sm' : _options$breakpoint;


		    function WithMobileDialog(props) {
		      return _react2.default.createElement(Component, (0, _extends3.default)({ fullScreen: (0, _withWidth.isWidthDown)(breakpoint, props.width, true) }, props));
		    }

		    WithMobileDialog.propTypes = process.env.NODE_ENV !== "production" ? {
		      width: _propTypes2.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']).isRequired
		    } : {};

		    if (process.env.NODE_ENV !== 'production') {
		      WithMobileDialog.displayName = (0, _wrapDisplayName2.default)(Component, 'withMobileDialog');
		    }

		    return (0, _withWidth2.default)()(WithMobileDialog);
		  };
		};

		exports.default = withMobileDialog;
		}).call(this,require('_process'))
		},{"../utils/withWidth":950,"_process":957,"babel-runtime/helpers/extends":521,"prop-types":961,"react":1016,"recompose/wrapDisplayName":1036}],788:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      height: 1,
		      margin: 0, // Reset browser default style.
		      border: 'none',
		      flexShrink: 0
		    },
		    default: {
		      backgroundColor: theme.palette.text.divider
		    },
		    inset: {
		      marginLeft: 72
		    },
		    light: {
		      backgroundColor: theme.palette.text.lightDivider
		    },
		    absolute: {
		      position: 'absolute',
		      bottom: 0,
		      left: 0,
		      width: '100%'
		    }
		  };
		};

		function Divider(props) {
		  var _classNames;

		  var absolute = props.absolute,
		      classes = props.classes,
		      classNameProp = props.className,
		      inset = props.inset,
		      light = props.light,
		      other = (0, _objectWithoutProperties3.default)(props, ['absolute', 'classes', 'className', 'inset', 'light']);


		  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.absolute, absolute), (0, _defineProperty3.default)(_classNames, classes.inset, inset), (0, _defineProperty3.default)(_classNames, light ? classes.light : classes.default, true), _classNames), classNameProp);

		  return _react2.default.createElement('hr', (0, _extends3.default)({ className: className }, other));
		}

		Divider.propTypes = process.env.NODE_ENV !== "production" ? {
		  absolute: _propTypes2.default.bool,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the divider will be indented.
		   */
		  inset: _propTypes2.default.bool,
		  /**
		   * If `true`, the divider will have a lighter color.
		   */
		  light: _propTypes2.default.bool
		} : {};

		Divider.defaultProps = {
		  absolute: false,
		  inset: false,
		  light: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiDivider' })(Divider);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],789:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Divider = require('./Divider');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Divider).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Divider":788}],790:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _Modal = require('../Modal');

		var _Modal2 = _interopRequireDefault(_Modal);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Slide = require('../transitions/Slide');

		var _Slide2 = _interopRequireDefault(_Slide);

		var _Paper = require('../Paper');

		var _Paper2 = _interopRequireDefault(_Paper);

		var _helpers = require('../utils/helpers');

		var _transitions = require('../styles/transitions');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function getSlideDirection(anchor) {
		  if (anchor === 'left') {
		    return 'right';
		  } else if (anchor === 'right') {
		    return 'left';
		  } else if (anchor === 'top') {
		    return 'down';
		  }

		  // (anchor === 'bottom')
		  return 'up';
		} // @inheritedComponent Modal

		var styles = exports.styles = function styles(theme) {
		  return {
		    docked: {
		      flex: '0 0 auto'
		    },
		    paper: {
		      overflowY: 'auto',
		      display: 'flex',
		      flexDirection: 'column',
		      height: '100vh',
		      flex: '1 0 auto',
		      zIndex: theme.zIndex.navDrawer,
		      WebkitOverflowScrolling: 'touch', // Add iOS momentum scrolling.
		      // temporary style
		      position: 'fixed',
		      top: 0,
		      // We disable the focus ring for mouse, touch and keyboard users.
		      // At some point, it would be better to keep it for keyboard users.
		      // :focus-ring CSS pseudo-class will help.
		      '&:focus': {
		        outline: 'none'
		      }
		    },
		    paperAnchorLeft: {
		      left: 0,
		      right: 'auto'
		    },
		    paperAnchorRight: {
		      left: 'auto',
		      right: 0
		    },
		    paperAnchorTop: {
		      top: 0,
		      left: 0,
		      bottom: 'auto',
		      right: 0,
		      height: 'auto',
		      maxHeight: '100vh'
		    },
		    paperAnchorBottom: {
		      top: 'auto',
		      left: 0,
		      bottom: 0,
		      right: 0,
		      height: 'auto',
		      maxHeight: '100vh'
		    },
		    paperAnchorDockedLeft: {
		      borderRight: '1px solid ' + theme.palette.text.divider
		    },
		    paperAnchorDockedTop: {
		      borderBottom: '1px solid ' + theme.palette.text.divider
		    },
		    paperAnchorDockedRight: {
		      borderLeft: '1px solid ' + theme.palette.text.divider
		    },
		    paperAnchorDockedBottom: {
		      borderTop: '1px solid ' + theme.palette.text.divider
		    },
		    modal: {} // Just here so people can override the style.
		  };
		};

		var Drawer = function (_React$Component) {
		  (0, _inherits3.default)(Drawer, _React$Component);

		  function Drawer() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Drawer);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Drawer.__proto__ || (0, _getPrototypeOf2.default)(Drawer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      // Let's assume that the Drawer will always be rendered on user space.
		      // We use that state is order to skip the appear transition during the
		      // initial mount of the component.
		      firstMount: true
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Drawer, [{
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps() {
		      this.setState({
		        firstMount: false
		      });
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          anchorProp = _props.anchor,
		          children = _props.children,
		          classes = _props.classes,
		          className = _props.className,
		          elevation = _props.elevation,
		          ModalProps = _props.ModalProps,
		          onClose = _props.onClose,
		          open = _props.open,
		          SlideProps = _props.SlideProps,
		          theme = _props.theme,
		          transitionDuration = _props.transitionDuration,
		          type = _props.type,
		          other = (0, _objectWithoutProperties3.default)(_props, ['anchor', 'children', 'classes', 'className', 'elevation', 'ModalProps', 'onClose', 'open', 'SlideProps', 'theme', 'transitionDuration', 'type']);


		      var rtl = theme && theme.direction === 'rtl';
		      var anchor = anchorProp;
		      if (rtl && ['left', 'right'].includes(anchor)) {
		        anchor = anchor === 'left' ? 'right' : 'left';
		      }

		      var drawer = _react2.default.createElement(
		        _Paper2.default,
		        {
		          elevation: type === 'temporary' ? elevation : 0,
		          square: true,
		          className: (0, _classnames2.default)(classes.paper, classes['paperAnchor' + (0, _helpers.capitalizeFirstLetter)(anchor)], (0, _defineProperty3.default)({}, classes['paperAnchorDocked' + (0, _helpers.capitalizeFirstLetter)(anchor)], type !== 'temporary'))
		        },
		        children
		      );

		      if (type === 'permanent') {
		        return _react2.default.createElement(
		          'div',
		          (0, _extends3.default)({ className: (0, _classnames2.default)(classes.docked, className) }, other),
		          drawer
		        );
		      }

		      var slidingDrawer = _react2.default.createElement(
		        _Slide2.default,
		        (0, _extends3.default)({
		          'in': open,
		          direction: getSlideDirection(anchor),
		          timeout: transitionDuration,
		          appear: !this.state.firstMount
		        }, SlideProps),
		        drawer
		      );

		      if (type === 'persistent') {
		        return _react2.default.createElement(
		          'div',
		          (0, _extends3.default)({ className: (0, _classnames2.default)(classes.docked, className) }, other),
		          slidingDrawer
		        );
		      }

		      // type === temporary
		      return _react2.default.createElement(
		        _Modal2.default,
		        (0, _extends3.default)({
		          BackdropTransitionDuration: transitionDuration,
		          className: (0, _classnames2.default)(classes.modal, className),
		          show: open,
		          onClose: onClose
		        }, other, ModalProps),
		        slidingDrawer
		      );
		    }
		  }]);
		  return Drawer;
		}(_react2.default.Component);

		Drawer.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Side from which the drawer will appear.
		   */
		  anchor: _propTypes2.default.oneOf(['left', 'top', 'right', 'bottom']),
		  /**
		   * The contents of the drawer.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The elevation of the drawer.
		   */
		  elevation: _propTypes2.default.number,
		  /**
		   * Properties applied to the `Modal` element.
		   */
		  ModalProps: _propTypes2.default.object,
		  /**
		   * Callback fired when the component requests to be closed.
		   *
		   * @param {object} event The event source of the callback
		   */
		  onClose: _propTypes2.default.func,
		  /**
		   * If `true`, the drawer is open.
		   */
		  open: _propTypes2.default.bool,
		  /**
		   * Properties applied to the `Slide` element.
		   */
		  SlideProps: _propTypes2.default.object,
		  /**
		   * @ignore
		   */
		  theme: _propTypes2.default.object.isRequired,
		  /**
		   * The duration for the transition, in milliseconds.
		   * You may specify a single timeout for all transitions, or individually with an object.
		   */
		  transitionDuration: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number })]),
		  /**
		   * The type of drawer.
		   */
		  type: _propTypes2.default.oneOf(['permanent', 'persistent', 'temporary'])
		} : {};

		Drawer.defaultProps = {
		  anchor: 'left',
		  elevation: 16,
		  open: false,
		  transitionDuration: { enter: _transitions.duration.enteringScreen, exit: _transitions.duration.leavingScreen },
		  type: 'temporary' // Mobile first.
		};

		exports.default = (0, _withStyles2.default)(styles, { flip: false, withTheme: true, name: 'MuiDrawer' })(Drawer);
		}).call(this,require('_process'))
		},{"../Modal":832,"../Paper":835,"../styles/transitions":933,"../styles/withStyles":934,"../transitions/Slide":940,"../utils/helpers":945,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],791:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Drawer = require('./Drawer');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Drawer).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Drawer":790}],792:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _Collapse = require('../transitions/Collapse');

		var _Collapse2 = _interopRequireDefault(_Collapse);

		var _Paper = require('../Paper');

		var _Paper2 = _interopRequireDefault(_Paper);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _reactHelpers = require('../utils/reactHelpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  var transition = {
		    duration: theme.transitions.duration.shortest,
		    easing: theme.transitions.easing.ease
		  };

		  return {
		    root: {
		      position: 'relative',
		      margin: 0,
		      transition: theme.transitions.create(['margin'], transition),
		      '&:before': {
		        position: 'absolute',
		        left: 0,
		        top: -1,
		        right: 0,
		        height: 1,
		        content: '""',
		        opacity: 1,
		        backgroundColor: theme.palette.text.divider,
		        transition: theme.transitions.create(['opacity', 'background-color'], transition)
		      },
		      '&:first-child': {
		        borderTopLeftRadius: 2,
		        borderTopRightRadius: 2,
		        '&:before': {
		          display: 'none'
		        }
		      },
		      '&:last-child': {
		        borderBottomLeftRadius: 2,
		        borderBottomRightRadius: 2
		      },
		      '&$expanded + &': {
		        '&:before': {
		          display: 'none'
		        }
		      }
		    },
		    expanded: {
		      margin: theme.spacing.unit * 2 + 'px 0',
		      '&:first-child': {
		        marginTop: 0
		      },
		      '&:last-child': {
		        marginBottom: 0
		      },
		      '&:before': {
		        opacity: 0
		      }
		    },
		    disabled: {
		      backgroundColor: theme.palette.text.divider
		    }
		  };
		}; // @inheritedComponent Paper

		var ExpansionPanel = function (_React$Component) {
		  (0, _inherits3.default)(ExpansionPanel, _React$Component);

		  function ExpansionPanel() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, ExpansionPanel);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ExpansionPanel.__proto__ || (0, _getPrototypeOf2.default)(ExpansionPanel)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      expanded: false
		    }, _this.isControlled = null, _this.handleChange = function (event) {
		      var onChange = _this.props.onChange;

		      var expanded = !_this.state.expanded;

		      if (onChange) {
		        onChange(event, expanded);
		      }

		      if (!_this.isControlled) {
		        _this.setState({ expanded: expanded });
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(ExpansionPanel, [{
		    key: 'componentWillMount',
		    value: function componentWillMount() {
		      var _props = this.props,
		          expanded = _props.expanded,
		          defaultExpanded = _props.defaultExpanded;

		      this.isControlled = expanded !== undefined;
		      this.setState({
		        expanded: this.isControlled ? expanded : defaultExpanded
		      });
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      if (this.isControlled) {
		        this.setState({
		          expanded: nextProps.expanded
		        });
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _classNames,
		          _this2 = this;

		      var _props2 = this.props,
		          childrenProp = _props2.children,
		          classes = _props2.classes,
		          classNameProp = _props2.className,
		          CollapsePropsProp = _props2.CollapseProps,
		          defaultExpanded = _props2.defaultExpanded,
		          disabled = _props2.disabled,
		          expandedProp = _props2.expanded,
		          onChange = _props2.onChange,
		          other = (0, _objectWithoutProperties3.default)(_props2, ['children', 'classes', 'className', 'CollapseProps', 'defaultExpanded', 'disabled', 'expanded', 'onChange']);
		      var expanded = this.state.expanded;


		      var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.expanded, expanded), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), _classNames), classNameProp);

		      var summary = null;

		      var children = _react2.default.Children.map(childrenProp, function (child) {
		        if (!_react2.default.isValidElement(child)) {
		          return null;
		        }

		        if ((0, _reactHelpers.isMuiElement)(child, ['ExpansionPanelSummary'])) {
		          summary = _react2.default.cloneElement(child, {
		            disabled: disabled,
		            expanded: expanded,
		            onChange: _this2.handleChange
		          });
		          return null;
		        }

		        return child;
		      });

		      var CollapseProps = !expanded ? {
		        'aria-hidden': 'true'
		      } : null;

		      return _react2.default.createElement(
		        _Paper2.default,
		        (0, _extends3.default)({ className: className, elevation: 1, square: true }, other),
		        summary,
		        _react2.default.createElement(
		          _Collapse2.default,
		          (0, _extends3.default)({ 'in': expanded, timeout: 'auto' }, CollapseProps, CollapsePropsProp),
		          children
		        )
		      );
		    }
		  }]);
		  return ExpansionPanel;
		}(_react2.default.Component);

		ExpansionPanel.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the expansion panel.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * Properties applied to the `Collapse` element.
		   */
		  CollapseProps: _propTypes2.default.object,
		  /**
		   * If `true`, expands the panel by default.
		   */
		  defaultExpanded: _propTypes2.default.bool,
		  /**
		   * If `true`, the panel will be displayed in a disabled state.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, expands the panel, otherwise collapse it.
		   * Setting this prop enables control over the panel.
		   */
		  expanded: _propTypes2.default.bool,
		  /**
		   * Callback fired when the expand/collapse state is changed.
		   *
		   * @param {object} event The event source of the callback
		   * @param {boolean} expanded The `expanded` state of the panel
		   */
		  onChange: _propTypes2.default.func
		} : {};

		ExpansionPanel.defaultProps = {
		  defaultExpanded: false,
		  disabled: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiExpansionPanel' })(ExpansionPanel);
		}).call(this,require('_process'))
		},{"../Paper":835,"../styles/withStyles":934,"../transitions/Collapse":937,"../utils/reactHelpers":948,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],793:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _reactHelpers = require('../utils/reactHelpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'flex',
		      justifyContent: 'flex-end',
		      alignItems: 'center',
		      padding: theme.spacing.unit * 2 + 'px ' + theme.spacing.unit + 'px'
		    },
		    action: {
		      marginLeft: theme.spacing.unit
		    }
		  };
		};

		function ExpansionPanelActions(props) {
		  var children = props.children,
		      classes = props.classes,
		      className = props.className,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className']);


		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
		    (0, _reactHelpers.cloneChildrenWithClassName)(children, classes.action)
		  );
		}

		ExpansionPanelActions.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiExpansionPanelActions' })(ExpansionPanelActions);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"../utils/reactHelpers":948,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],794:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'flex',
		      flexGrow: 1,
		      padding: theme.spacing.unit + 'px ' + theme.spacing.unit * 3 + 'px ' + theme.spacing.unit * 3 + 'px'
		    }
		  };
		};

		function ExpansionPanelDetails(props) {
		  var classes = props.classes,
		      children = props.children,
		      className = props.className,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'children', 'className']);


		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
		    children
		  );
		}

		ExpansionPanelDetails.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the expansion panel details.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiExpansionPanelDetails' })(ExpansionPanelDetails);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],795:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _ButtonBase = require('../ButtonBase');

		var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

		var _IconButton = require('../IconButton');

		var _IconButton2 = _interopRequireDefault(_IconButton);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent ButtonBase

		var styles = exports.styles = function styles(theme) {
		  var transition = {
		    duration: theme.transitions.duration.shortest,
		    easing: theme.transitions.easing.ease
		  };
		  return {
		    root: {
		      display: 'flex',
		      justifyContent: 'space-between',
		      alignItems: 'center',
		      minHeight: theme.spacing.unit * 6,
		      transition: theme.transitions.create(['min-height', 'background-color'], transition),
		      padding: '0 ' + theme.spacing.unit * 3 + 'px 0 ' + theme.spacing.unit * 3 + 'px',
		      position: 'relative',
		      '&:hover:not($disabled)': {
		        cursor: 'pointer'
		      }
		    },
		    expanded: {
		      minHeight: 64
		    },
		    focused: {
		      backgroundColor: theme.palette.grey[300]
		    },
		    disabled: {
		      opacity: 0.38,
		      color: theme.palette.action.disabled
		    },
		    content: {
		      display: 'flex',
		      flexGrow: 1,
		      transition: theme.transitions.create(['margin'], transition),
		      margin: '12px 0',
		      '& > :last-child': {
		        paddingRight: theme.spacing.unit * 4
		      }
		    },
		    contentExpanded: {
		      margin: '20px 0'
		    },
		    expandIcon: {
		      color: theme.palette.text.icon,
		      position: 'absolute',
		      top: '50%',
		      right: theme.spacing.unit,
		      transform: 'translateY(-50%) rotate(0deg)',
		      transition: theme.transitions.create('transform', transition)
		    },
		    expandIconExpanded: {
		      transform: 'translateY(-50%) rotate(180deg)'
		    }
		  };
		};

		var ExpansionPanelSummary = function (_React$Component) {
		  (0, _inherits3.default)(ExpansionPanelSummary, _React$Component);

		  function ExpansionPanelSummary() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, ExpansionPanelSummary);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ExpansionPanelSummary.__proto__ || (0, _getPrototypeOf2.default)(ExpansionPanelSummary)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      focused: false
		    }, _this.handleFocus = function () {
		      _this.setState({
		        focused: true
		      });
		    }, _this.handleBlur = function () {
		      _this.setState({
		        focused: false
		      });
		    }, _this.handleChange = function (event) {
		      var _this$props = _this.props,
		          onChange = _this$props.onChange,
		          onClick = _this$props.onClick;

		      if (onChange) {
		        onChange(event);
		      }
		      if (onClick) {
		        onClick(event);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(ExpansionPanelSummary, [{
		    key: 'render',
		    value: function render() {
		      var _classNames;

		      var _props = this.props,
		          children = _props.children,
		          classes = _props.classes,
		          className = _props.className,
		          disabled = _props.disabled,
		          expanded = _props.expanded,
		          expandIcon = _props.expandIcon,
		          onChange = _props.onChange,
		          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'classes', 'className', 'disabled', 'expanded', 'expandIcon', 'onChange']);
		      var focused = this.state.focused;


		      return _react2.default.createElement(
		        _ButtonBase2.default,
		        (0, _extends3.default)({
		          focusRipple: false,
		          disableRipple: true,
		          disabled: disabled,
		          component: 'div',
		          'aria-expanded': expanded,
		          className: (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, classes.expanded, expanded), (0, _defineProperty3.default)(_classNames, classes.focused, focused), _classNames), className)
		        }, other, {
		          onKeyboardFocus: this.handleFocus,
		          onBlur: this.handleBlur,
		          onClick: this.handleChange
		        }),
		        _react2.default.createElement(
		          'div',
		          { className: (0, _classnames2.default)(classes.content, (0, _defineProperty3.default)({}, classes.contentExpanded, expanded)) },
		          children
		        ),
		        expandIcon && _react2.default.createElement(
		          _IconButton2.default,
		          {
		            disabled: disabled,
		            className: (0, _classnames2.default)(classes.expandIcon, (0, _defineProperty3.default)({}, classes.expandIconExpanded, expanded)),
		            component: 'div',
		            tabIndex: '-1',
		            'aria-hidden': 'true'
		          },
		          expandIcon
		        )
		      );
		    }
		  }]);
		  return ExpansionPanelSummary;
		}(_react2.default.Component);

		ExpansionPanelSummary.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the expansion panel summary.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * @ignore
		   * If `true`, the summary will be displayed in a disabled state.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * @ignore
		   * If `true`, expands the summary, otherwise collapse it.
		   */
		  expanded: _propTypes2.default.bool,
		  /**
		   * The icon to display as the expand indicator.
		   */
		  expandIcon: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onClick: _propTypes2.default.func
		} : {};

		ExpansionPanelSummary.defaultProps = {
		  disabled: false
		};

		ExpansionPanelSummary.muiName = 'ExpansionPanelSummary';

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiExpansionPanelSummary' })(ExpansionPanelSummary);
		}).call(this,require('_process'))
		},{"../ButtonBase":768,"../IconButton":810,"../styles/withStyles":934,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],796:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _ExpansionPanel = require('./ExpansionPanel');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ExpansionPanel).default;
		  }
		});

		var _ExpansionPanelActions = require('./ExpansionPanelActions');

		Object.defineProperty(exports, 'ExpansionPanelActions', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ExpansionPanelActions).default;
		  }
		});

		var _ExpansionPanelDetails = require('./ExpansionPanelDetails');

		Object.defineProperty(exports, 'ExpansionPanelDetails', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ExpansionPanelDetails).default;
		  }
		});

		var _ExpansionPanelSummary = require('./ExpansionPanelSummary');

		Object.defineProperty(exports, 'ExpansionPanelSummary', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ExpansionPanelSummary).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./ExpansionPanel":792,"./ExpansionPanelActions":793,"./ExpansionPanelDetails":794,"./ExpansionPanelSummary":795}],797:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Input = require('../Input/Input');

		var _reactHelpers = require('../utils/reactHelpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'inline-flex',
		      flexDirection: 'column',
		      position: 'relative',
		      // Reset fieldset default style
		      minWidth: 0,
		      padding: 0,
		      margin: 0,
		      border: 0
		    },
		    marginNormal: {
		      marginTop: theme.spacing.unit * 2,
		      marginBottom: theme.spacing.unit
		    },
		    marginDense: {
		      marginTop: theme.spacing.unit,
		      marginBottom: theme.spacing.unit / 2
		    },
		    fullWidth: {
		      width: '100%'
		    }
		  };
		};

		/**
		 * Provides context such as dirty/focused/error/required for form inputs.
		 * Relying on the context provides high flexibilty and ensures that the state always stay
		 * consitent across the children of the `FormControl`.
		 * This context is used by the following components:
		 *  - FormLabel
		 *  - FormHelperText
		 *  - Input
		 *  - InputLabel
		 */

		var FormControl = function (_React$Component) {
		  (0, _inherits3.default)(FormControl, _React$Component);

		  function FormControl(props, context) {
		    (0, _classCallCheck3.default)(this, FormControl);

		    // We need to iterate through the children and find the Input in order
		    // to fully support server side rendering.
		    var _this = (0, _possibleConstructorReturn3.default)(this, (FormControl.__proto__ || (0, _getPrototypeOf2.default)(FormControl)).call(this, props, context));

		    _this.state = {
		      adornedStart: false,
		      dirty: false,
		      focused: false
		    };

		    _this.handleFocus = function (event) {
		      if (_this.props.onFocus) {
		        _this.props.onFocus(event);
		      }
		      if (!_this.state.focused) {
		        _this.setState({ focused: true });
		      }
		    };

		    _this.handleBlur = function (event) {
		      // The event might be undefined.
		      // For instance, a child component might call this hook
		      // when an input is disabled but still having the focus.
		      if (_this.props.onBlur && event) {
		        _this.props.onBlur(event);
		      }
		      if (_this.state.focused) {
		        _this.setState({ focused: false });
		      }
		    };

		    _this.handleDirty = function () {
		      if (!_this.state.dirty) {
		        _this.setState({ dirty: true });
		      }
		    };

		    _this.handleClean = function () {
		      if (_this.state.dirty) {
		        _this.setState({ dirty: false });
		      }
		    };

		    var children = _this.props.children;

		    if (children) {
		      _react2.default.Children.forEach(children, function (child) {
		        if ((0, _reactHelpers.isMuiElement)(child, ['Input', 'Select']) && (0, _Input.isDirty)(child.props, true)) {
		          _this.state.dirty = true;
		        }
		        if ((0, _reactHelpers.isMuiElement)(child, ['Input']) && (0, _Input.isAdornedStart)(child.props)) {
		          _this.state.adornedStart = true;
		        }
		      });
		    }
		    return _this;
		  }

		  (0, _createClass3.default)(FormControl, [{
		    key: 'getChildContext',
		    value: function getChildContext() {
		      var _props = this.props,
		          disabled = _props.disabled,
		          error = _props.error,
		          required = _props.required,
		          margin = _props.margin;
		      var _state = this.state,
		          adornedStart = _state.adornedStart,
		          dirty = _state.dirty,
		          focused = _state.focused;


		      return {
		        muiFormControl: {
		          adornedStart: adornedStart,
		          dirty: dirty,
		          disabled: disabled,
		          error: error,
		          focused: focused,
		          margin: margin,
		          required: required,
		          onDirty: this.handleDirty,
		          onClean: this.handleClean,
		          onFocus: this.handleFocus,
		          onBlur: this.handleBlur
		        }
		      };
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _classNames;

		      var _props2 = this.props,
		          children = _props2.children,
		          classes = _props2.classes,
		          className = _props2.className,
		          _props2$component = _props2.component,
		          ComponentProp = _props2$component === undefined ? 'div' : _props2$component,
		          disabled = _props2.disabled,
		          error = _props2.error,
		          fullWidth = _props2.fullWidth,
		          margin = _props2.margin,
		          other = (0, _objectWithoutProperties3.default)(_props2, ['children', 'classes', 'className', 'component', 'disabled', 'error', 'fullWidth', 'margin']);


		      return _react2.default.createElement(
		        ComponentProp,
		        (0, _extends3.default)({
		          className: (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.marginNormal, margin === 'normal'), (0, _defineProperty3.default)(_classNames, classes.marginDense, margin === 'dense'), (0, _defineProperty3.default)(_classNames, classes.fullWidth, fullWidth), _classNames), className)
		        }, other, {
		          onFocus: this.handleFocus,
		          onBlur: this.handleBlur
		        }),
		        children
		      );
		    }
		  }]);
		  return FormControl;
		}(_react2.default.Component);

		FormControl.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The contents of the form control.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * If `true`, the label, input and helper text should be displayed in a disabled state.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the label should be displayed in an error state.
		   */
		  error: _propTypes2.default.bool,
		  /**
		   * If `true`, the component, as well as its children,
		   * will take up the full width of its container.
		   */
		  fullWidth: _propTypes2.default.bool,
		  /**
		   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
		   */
		  margin: _propTypes2.default.oneOf(['none', 'dense', 'normal']),
		  /**
		   * @ignore
		   */
		  onBlur: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onFocus: _propTypes2.default.func,
		  /**
		   * If `true`, the label will indicate that the input is required.
		   */
		  required: _propTypes2.default.bool
		} : {};

		FormControl.defaultProps = {
		  component: 'div',
		  disabled: false,
		  error: false,
		  fullWidth: false,
		  margin: 'none',
		  required: false
		};

		FormControl.childContextTypes = {
		  muiFormControl: _propTypes2.default.object.isRequired
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiFormControl' })(FormControl);
		}).call(this,require('_process'))
		},{"../Input/Input":813,"../styles/withStyles":934,"../utils/reactHelpers":948,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],798:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Typography = require('../Typography');

		var _Typography2 = _interopRequireDefault(_Typography);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'inline-flex',
		      alignItems: 'center',
		      cursor: 'pointer',
		      // Remove grey highlight
		      WebkitTapHighlightColor: theme.palette.common.transparent,
		      marginLeft: -14,
		      marginRight: theme.spacing.unit * 2 // used for row presentation of radio/checkbox
		    },
		    disabled: {
		      color: theme.palette.text.disabled,
		      cursor: 'default'
		    },
		    label: {
		      userSelect: 'none'
		    }
		  };
		};

		/**
		 * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.
		 * Use this component if you want to display an extra label.
		 */
		/* eslint-disable jsx-a11y/label-has-for */

		function FormControlLabel(props, context) {
		  var checked = props.checked,
		      classes = props.classes,
		      classNameProp = props.className,
		      control = props.control,
		      disabledProp = props.disabled,
		      inputRef = props.inputRef,
		      label = props.label,
		      name = props.name,
		      onChange = props.onChange,
		      value = props.value,
		      other = (0, _objectWithoutProperties3.default)(props, ['checked', 'classes', 'className', 'control', 'disabled', 'inputRef', 'label', 'name', 'onChange', 'value']);
		  var muiFormControl = context.muiFormControl;

		  var disabled = disabledProp;

		  if (typeof control.props.disabled !== 'undefined') {
		    if (typeof disabled === 'undefined') {
		      disabled = control.props.disabled;
		    }
		  }

		  if (muiFormControl) {
		    if (typeof disabled === 'undefined') {
		      disabled = muiFormControl.disabled;
		    }
		  }

		  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.disabled, disabled), classNameProp);

		  return _react2.default.createElement(
		    'label',
		    (0, _extends3.default)({ className: className }, other),
		    _react2.default.cloneElement(control, {
		      disabled: disabled,
		      checked: typeof control.props.checked === 'undefined' ? checked : control.props.checked,
		      name: control.props.name || name,
		      onChange: control.props.onChange || onChange,
		      value: control.props.value || value,
		      inputRef: control.props.inputRef || inputRef
		    }),
		    _react2.default.createElement(
		      _Typography2.default,
		      { component: 'span', className: classes.label },
		      label
		    )
		  );
		}

		FormControlLabel.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * If `true`, the component appears selected.
		   */
		  checked: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.string]),
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.
		   */
		  control: _propTypes2.default.element,
		  /**
		   * If `true`, the control will be disabled.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * Use that property to pass a ref callback to the native input component.
		   */
		  inputRef: _propTypes2.default.func,
		  /**
		   * The text to be used in an enclosing label element.
		   */
		  label: _propTypes2.default.node,
		  /*
		   * @ignore
		   */
		  name: _propTypes2.default.string,
		  /**
		   * Callback fired when the state is changed.
		   *
		   * @param {object} event The event source of the callback
		   * @param {boolean} checked The `checked` value of the switch
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * The value of the component.
		   */
		  value: _propTypes2.default.string
		} : {};

		FormControlLabel.contextTypes = {
		  muiFormControl: _propTypes2.default.object
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiFormControlLabel' })(FormControlLabel);
		}).call(this,require('_process'))
		},{"../Typography":884,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],799:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = {
		  root: {
		    display: 'flex',
		    flexDirection: 'column',
		    flexWrap: 'wrap'
		  },
		  row: {
		    flexDirection: 'row'
		  }
		};

		/**
		 * `FormGroup` wraps controls such as `Checkbox` and `Switch`.
		 * It provides compact row layout.
		 * For the `Radio`, you should be using the `RadioGroup` component instead of this one.
		 */
		function FormGroup(props) {
		  var classes = props.classes,
		      className = props.className,
		      children = props.children,
		      row = props.row,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'children', 'row']);

		  var rootClassName = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.row, row), className);

		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: rootClassName }, other),
		    children
		  );
		}

		FormGroup.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * Display group of elements in a compact row.
		   */
		  row: _propTypes2.default.bool
		} : {};

		FormGroup.defaultProps = {
		  row: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiFormGroup' })(FormGroup);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],800:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      color: theme.palette.input.helperText,
		      fontFamily: theme.typography.fontFamily,
		      fontSize: theme.typography.pxToRem(12),
		      textAlign: 'left',
		      marginTop: theme.spacing.unit,
		      lineHeight: '1em',
		      minHeight: '1em',
		      margin: 0
		    },
		    dense: {
		      marginTop: theme.spacing.unit / 2
		    },
		    error: {
		      color: theme.palette.error.A400
		    },
		    disabled: {
		      color: theme.palette.input.disabled
		    }
		  };
		};

		function FormHelperText(props, context) {
		  var _classNames;

		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      disabledProp = props.disabled,
		      errorProp = props.error,
		      marginProp = props.margin,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'disabled', 'error', 'margin']);
		  var muiFormControl = context.muiFormControl;


		  var disabled = disabledProp;
		  var error = errorProp;
		  var margin = marginProp;

		  if (muiFormControl) {
		    if (typeof disabled === 'undefined') {
		      disabled = muiFormControl.disabled;
		    }

		    if (typeof error === 'undefined') {
		      error = muiFormControl.error;
		    }

		    if (typeof margin === 'undefined') {
		      margin = muiFormControl.margin;
		    }
		  }

		  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, classes.error, error), (0, _defineProperty3.default)(_classNames, classes.dense, margin === 'dense'), _classNames), classNameProp);

		  return _react2.default.createElement(
		    'p',
		    (0, _extends3.default)({ className: className }, other),
		    children
		  );
		}

		FormHelperText.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the helper text should be displayed in a disabled state.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, helper text should be displayed in an error state.
		   */
		  error: _propTypes2.default.bool,
		  /**
		   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
		   * FormControl.
		   */
		  margin: _propTypes2.default.oneOf(['dense'])
		} : {};

		FormHelperText.contextTypes = {
		  muiFormControl: _propTypes2.default.object
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiFormHelperText' })(FormHelperText);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],801:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  var focusColor = theme.palette.primary[theme.palette.type === 'light' ? 'A700' : 'A200'];
		  return {
		    root: {
		      fontFamily: theme.typography.fontFamily,
		      color: theme.palette.input.labelText,
		      fontSize: theme.typography.pxToRem(16),
		      lineHeight: 1,
		      padding: 0
		    },
		    focused: {
		      color: focusColor
		    },
		    error: {
		      color: theme.palette.error.A400
		    },
		    disabled: {
		      color: theme.palette.input.disabled
		    }
		  };
		};

		function FormLabel(props, context) {
		  var _classNames;

		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      Component = props.component,
		      disabledProp = props.disabled,
		      errorProp = props.error,
		      focusedProp = props.focused,
		      requiredProp = props.required,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'component', 'disabled', 'error', 'focused', 'required']);
		  var muiFormControl = context.muiFormControl;


		  var required = requiredProp;
		  var focused = focusedProp;
		  var disabled = disabledProp;
		  var error = errorProp;

		  if (muiFormControl) {
		    if (typeof required === 'undefined') {
		      required = muiFormControl.required;
		    }
		    if (typeof focused === 'undefined') {
		      focused = muiFormControl.focused;
		    }
		    if (typeof disabled === 'undefined') {
		      disabled = muiFormControl.disabled;
		    }
		    if (typeof error === 'undefined') {
		      error = muiFormControl.error;
		    }
		  }

		  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.focused, focused), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, classes.error, error), _classNames), classNameProp);

		  var asteriskClassName = (0, _classnames2.default)((0, _defineProperty3.default)({}, classes.error, error));

		  return _react2.default.createElement(
		    Component,
		    (0, _extends3.default)({ className: className }, other),
		    children,
		    required && _react2.default.createElement(
		      'span',
		      { className: asteriskClassName },
		      '\u2009*'
		    )
		  );
		}

		FormLabel.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * If `true`, the label should be displayed in a disabled state.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the label should be displayed in an error state.
		   */
		  error: _propTypes2.default.bool,
		  /**
		   * If `true`, the input of this label is focused (used by `FormGroup` components).
		   */
		  focused: _propTypes2.default.bool,
		  /**
		   * If `true`, the label will indicate that the input is required.
		   */
		  required: _propTypes2.default.bool
		} : {};

		FormLabel.defaultProps = {
		  component: 'label'
		};

		FormLabel.contextTypes = {
		  muiFormControl: _propTypes2.default.object
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiFormLabel' })(FormLabel);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],802:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _FormGroup = require('./FormGroup');

		Object.defineProperty(exports, 'FormGroup', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_FormGroup).default;
		  }
		});

		var _FormLabel = require('./FormLabel');

		Object.defineProperty(exports, 'FormLabel', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_FormLabel).default;
		  }
		});

		var _FormControl = require('./FormControl');

		Object.defineProperty(exports, 'FormControl', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_FormControl).default;
		  }
		});

		var _FormHelperText = require('./FormHelperText');

		Object.defineProperty(exports, 'FormHelperText', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_FormHelperText).default;
		  }
		});

		var _FormControlLabel = require('./FormControlLabel');

		Object.defineProperty(exports, 'FormControlLabel', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_FormControlLabel).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./FormControl":797,"./FormControlLabel":798,"./FormGroup":799,"./FormHelperText":800,"./FormLabel":801}],803:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _createBreakpoints = require('../styles/createBreakpoints');

		var _requirePropFactory = require('../utils/requirePropFactory');

		var _requirePropFactory2 = _interopRequireDefault(_requirePropFactory);

		var _Hidden = require('../Hidden');

		var _Hidden2 = _interopRequireDefault(_Hidden);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var GUTTERS = [0, 8, 16, 24, 40]; // A grid component using the following libs as inspiration.
		//
		// For the implementation:
		// - http://v4-alpha.getbootstrap.com/layout/flexbox-grid/
		// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css
		// - https://github.com/roylee0704/react-flexbox-grid
		// - https://material.angularjs.org/latest/layout/introduction
		//
		// Follow this flexbox Guide to better understand the underlying model:
		// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/

		var GRID_SIZES = [true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];

		function generateGrid(globalStyles, theme, breakpoint) {
		  // For the auto layouting
		  var styles = (0, _defineProperty3.default)({}, 'grid-' + breakpoint, {
		    flexBasis: 0,
		    flexGrow: 1,
		    maxWidth: '100%'
		  });

		  GRID_SIZES.forEach(function (size) {
		    if (typeof size === 'boolean') {
		      // Skip the first one as handle above.
		      return;
		    }

		    // Only keep 6 significant numbers.
		    var width = Math.round(size / 12 * Math.pow(10, 6)) / Math.pow(10, 4) + '%';

		    /* eslint-disable max-len */
		    // Close to the bootstrap implementation:
		    // https://github.com/twbs/bootstrap/blob/b0508a975d711d6b24c01f57dd5445c22699fac4/scss/mixins/_grid.scss#L69
		    /* eslint-enable max-len */
		    styles['grid-' + breakpoint + '-' + size] = {
		      flexBasis: width,
		      maxWidth: width
		    };
		  });

		  // No need for a media query for the first size.
		  if (breakpoint === 'xs') {
		    (0, _extends3.default)(globalStyles, styles);
		  } else {
		    globalStyles[theme.breakpoints.up(breakpoint)] = styles;
		  }
		}

		function generateGutter(theme, breakpoint) {
		  var styles = {};

		  GUTTERS.forEach(function (spacing, index) {
		    if (index === 0) {
		      // Skip the default style.
		      return;
		    }

		    styles['spacing-' + breakpoint + '-' + spacing] = {
		      margin: -spacing / 2,
		      width: 'calc(100% + ' + spacing + 'px)',
		      '& > $typeItem': {
		        padding: spacing / 2
		      }
		    };
		  });

		  return styles;
		}

		// Default CSS values
		// flex: '0 1 auto',
		// flexDirection: 'row',
		// alignItems: 'flex-start',
		// flexWrap: 'nowrap',
		// justifyContent: 'flex-start',
		var styles = exports.styles = function styles(theme) {
		  return (0, _extends3.default)({
		    typeContainer: {
		      boxSizing: 'border-box',
		      display: 'flex',
		      flexWrap: 'wrap',
		      width: '100%'
		    },
		    typeItem: {
		      boxSizing: 'border-box',
		      flex: '0 0 auto',
		      margin: '0' // For instance, it's useful when used with a `figure` element.
		    },
		    'direction-xs-column': {
		      flexDirection: 'column'
		    },
		    'direction-xs-column-reverse': {
		      flexDirection: 'column-reverse'
		    },
		    'direction-xs-row-reverse': {
		      flexDirection: 'row-reverse'
		    },
		    'wrap-xs-nowrap': {
		      flexWrap: 'nowrap'
		    },
		    'wrap-xs-wrap-reverse': {
		      flexWrap: 'wrap-reverse'
		    },
		    'align-items-xs-center': {
		      alignItems: 'center'
		    },
		    'align-items-xs-flex-start': {
		      alignItems: 'flex-start'
		    },
		    'align-items-xs-flex-end': {
		      alignItems: 'flex-end'
		    },
		    'align-items-xs-baseline': {
		      alignItems: 'baseline'
		    },
		    'align-content-xs-center': {
		      alignContent: 'center'
		    },
		    'align-content-xs-flex-start': {
		      alignContent: 'flex-start'
		    },
		    'align-content-xs-flex-end': {
		      alignContent: 'flex-end'
		    },
		    'align-content-xs-space-between': {
		      alignContent: 'space-between'
		    },
		    'align-content-xs-space-around': {
		      alignContent: 'space-around'
		    },
		    'justify-xs-center': {
		      justifyContent: 'center'
		    },
		    'justify-xs-flex-end': {
		      justifyContent: 'flex-end'
		    },
		    'justify-xs-space-between': {
		      justifyContent: 'space-between'
		    },
		    'justify-xs-space-around': {
		      justifyContent: 'space-around'
		    }
		  }, generateGutter(theme, 'xs'), _createBreakpoints.keys.reduce(function (accumulator, key) {
		    // Use side effect over immutability for better performance.
		    generateGrid(accumulator, theme, key);
		    return accumulator;
		  }, {}));
		};

		function Grid(props) {
		  var _classNames;

		  var alignContent = props.alignContent,
		      alignItems = props.alignItems,
		      classes = props.classes,
		      classNameProp = props.className,
		      ComponentProp = props.component,
		      container = props.container,
		      direction = props.direction,
		      hidden = props.hidden,
		      item = props.item,
		      justify = props.justify,
		      lg = props.lg,
		      md = props.md,
		      sm = props.sm,
		      spacing = props.spacing,
		      wrap = props.wrap,
		      xl = props.xl,
		      xs = props.xs,
		      other = (0, _objectWithoutProperties3.default)(props, ['alignContent', 'alignItems', 'classes', 'className', 'component', 'container', 'direction', 'hidden', 'item', 'justify', 'lg', 'md', 'sm', 'spacing', 'wrap', 'xl', 'xs']);


		  var className = (0, _classnames2.default)((_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.typeContainer, container), (0, _defineProperty3.default)(_classNames, classes.typeItem, item), (0, _defineProperty3.default)(_classNames, classes['spacing-xs-' + String(spacing)], container && spacing !== 0), (0, _defineProperty3.default)(_classNames, classes['direction-xs-' + String(direction)], direction !== Grid.defaultProps.direction), (0, _defineProperty3.default)(_classNames, classes['wrap-xs-' + String(wrap)], wrap !== Grid.defaultProps.wrap), (0, _defineProperty3.default)(_classNames, classes['align-items-xs-' + String(alignItems)], alignItems !== Grid.defaultProps.alignItems), (0, _defineProperty3.default)(_classNames, classes['align-content-xs-' + String(alignContent)], alignContent !== Grid.defaultProps.alignContent), (0, _defineProperty3.default)(_classNames, classes['justify-xs-' + String(justify)], justify !== Grid.defaultProps.justify), (0, _defineProperty3.default)(_classNames, classes['grid-xs'], xs === true), (0, _defineProperty3.default)(_classNames, classes['grid-xs-' + String(xs)], xs && xs !== true), (0, _defineProperty3.default)(_classNames, classes['grid-sm'], sm === true), (0, _defineProperty3.default)(_classNames, classes['grid-sm-' + String(sm)], sm && sm !== true), (0, _defineProperty3.default)(_classNames, classes['grid-md'], md === true), (0, _defineProperty3.default)(_classNames, classes['grid-md-' + String(md)], md && md !== true), (0, _defineProperty3.default)(_classNames, classes['grid-lg'], lg === true), (0, _defineProperty3.default)(_classNames, classes['grid-lg-' + String(lg)], lg && lg !== true), (0, _defineProperty3.default)(_classNames, classes['grid-xl'], xl === true), (0, _defineProperty3.default)(_classNames, classes['grid-xl-' + String(xl)], xl && xl !== true), _classNames), classNameProp);
		  var gridProps = (0, _extends3.default)({ className: className }, other);

		  if (hidden) {
		    return _react2.default.createElement(
		      _Hidden2.default,
		      hidden,
		      _react2.default.createElement(ComponentProp, gridProps)
		    );
		  }

		  return _react2.default.createElement(ComponentProp, gridProps);
		}

		Grid.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Defines the `align-content` style property.
		   * It's applied for all screen sizes.
		   */
		  alignContent: _propTypes2.default.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),
		  /**
		   * Defines the `align-items` style property.
		   * It's applied for all screen sizes.
		   */
		  alignItems: _propTypes2.default.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * If `true`, the component will have the flex *container* behavior.
		   * You should be wrapping *items* with a *container*.
		   */
		  container: _propTypes2.default.bool,
		  /**
		   * Defines the `flex-direction` style property.
		   * It is applied for all screen sizes.
		   */
		  direction: _propTypes2.default.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),
		  /**
		   * If provided, will wrap with [Hidden](/api/hidden) component and given properties.
		   */
		  hidden: _propTypes2.default.object,
		  /**
		   * If `true`, the component will have the flex *item* behavior.
		   * You should be wrapping *items* with a *container*.
		   */
		  item: _propTypes2.default.bool,
		  /**
		   * Defines the `justify-content` style property.
		   * It is applied for all screen sizes.
		   */
		  justify: _propTypes2.default.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around']),
		  /**
		   * Defines the number of grids the component is going to use.
		   * It's applied for the `lg` breakpoint and wider screens if not overridden.
		   */
		  lg: _propTypes2.default.oneOf([true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
		  /**
		   * Defines the number of grids the component is going to use.
		   * It's applied for the `md` breakpoint and wider screens if not overridden.
		   */
		  md: _propTypes2.default.oneOf([true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
		  /**
		   * Defines the number of grids the component is going to use.
		   * It's applied for the `sm` breakpoint and wider screens if not overridden.
		   */
		  sm: _propTypes2.default.oneOf([true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
		  /**
		   * Defines the space between the type `item` component.
		   * It can only be used on a type `container` component.
		   */
		  spacing: _propTypes2.default.oneOf(GUTTERS),
		  /**
		   * Defines the `flex-wrap` style property.
		   * It's applied for all screen sizes.
		   */
		  wrap: _propTypes2.default.oneOf(['nowrap', 'wrap', 'wrap-reverse']),
		  /**
		   * Defines the number of grids the component is going to use.
		   * It's applied for the `xl` breakpoint and wider screens.
		   */
		  xl: _propTypes2.default.oneOf([true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
		  /**
		   * Defines the number of grids the component is going to use.
		   * It's applied for all the screen sizes with the lowest priority.
		   */
		  xs: _propTypes2.default.oneOf([true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])
		} : {};

		Grid.defaultProps = {
		  alignContent: 'stretch',
		  alignItems: 'stretch',
		  component: 'div',
		  container: false,
		  direction: 'row',
		  item: false,
		  justify: 'flex-start',
		  spacing: 16,
		  wrap: 'wrap'
		};

		// Add a wrapper component to generate some helper messages in the development
		// environment.
		/* eslint-disable react/no-multi-comp */
		// eslint-disable-next-line import/no-mutable-exports
		var GridWrapper = Grid;

		if (process.env.NODE_ENV !== 'production') {
		  GridWrapper = function GridWrapper(props) {
		    return _react2.default.createElement(Grid, props);
		  };

		  var requireProp = (0, _requirePropFactory2.default)('Grid');
		  GridWrapper.propTypes = {
		    alignContent: requireProp('container'),
		    alignItems: requireProp('container'),
		    direction: requireProp('container'),
		    justify: requireProp('container'),
		    lg: requireProp('item'),
		    md: requireProp('item'),
		    sm: requireProp('item'),
		    spacing: requireProp('container'),
		    wrap: requireProp('container'),
		    xs: requireProp('item')
		  };
		}

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiGrid' })(GridWrapper);
		}).call(this,require('_process'))
		},{"../Hidden":808,"../styles/createBreakpoints":922,"../styles/withStyles":934,"../utils/requirePropFactory":949,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],804:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Grid = require('./Grid');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Grid).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Grid":803}],805:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _HiddenJs = require('./HiddenJs');

		var _HiddenJs2 = _interopRequireDefault(_HiddenJs);

		var _HiddenCss = require('./HiddenCss');

		var _HiddenCss2 = _interopRequireDefault(_HiddenCss);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * Responsively hides children based on the selected implementation.
		 */
		function Hidden(props) {
		  var implementation = props.implementation,
		      other = (0, _objectWithoutProperties3.default)(props, ['implementation']);


		  if (implementation === 'js') {
		    return _react2.default.createElement(_HiddenJs2.default, other);
		  }

		  return _react2.default.createElement(_HiddenCss2.default, other);
		}

		Hidden.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * Specify which implementation to use.  'js' is the default, 'css' works better for server
		   * side rendering.
		   */
		  implementation: _propTypes2.default.oneOf(['js', 'css']),
		  /**
		   * You can use this property when choosing the `js` implementation with server side rendering.
		   *
		   * As `window.innerWidth` is unavailable on the server,
		   * we default to rendering an empty componenent during the first mount.
		   * In some situation you might want to use an heristic to approximate
		   * the screen width of the client browser screen width.
		   *
		   * For instance, you could be using the user-agent or the client-hints.
		   * http://caniuse.com/#search=client%20hint
		   */
		  initialWidth: _propTypes2.default.number,
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  lgDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  lgUp: _propTypes2.default.bool,
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  mdDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  mdUp: _propTypes2.default.bool,
		  /**
		   * Hide the given breakpoint(s).
		   */
		  only: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  smDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  smUp: _propTypes2.default.bool,
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  xlDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  xlUp: _propTypes2.default.bool,
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  xsDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  xsUp: _propTypes2.default.bool
		} : {};

		Hidden.defaultProps = {
		  implementation: 'js',
		  lgDown: false,
		  lgUp: false,
		  mdDown: false,
		  mdUp: false,
		  smDown: false,
		  smUp: false,
		  xlDown: false,
		  xlUp: false,
		  xsDown: false,
		  xsUp: false
		};

		exports.default = Hidden;
		}).call(this,require('_process'))
		},{"./HiddenCss":806,"./HiddenJs":807,"_process":957,"babel-runtime/helpers/objectWithoutProperties":523,"prop-types":961,"react":1016}],806:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _keys = require('babel-runtime/core-js/object/keys');

		var _keys2 = _interopRequireDefault(_keys);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _createBreakpoints = require('../styles/createBreakpoints');

		var _helpers = require('../utils/helpers');

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = function styles(theme) {
		  var hidden = {
		    display: 'none'
		  };

		  return _createBreakpoints.keys.reduce(function (acc, key) {
		    acc['only' + (0, _helpers.capitalizeFirstLetter)(key)] = (0, _defineProperty3.default)({}, theme.breakpoints.only(key), hidden);
		    acc[key + 'Up'] = (0, _defineProperty3.default)({}, theme.breakpoints.up(key), hidden);
		    acc[key + 'Down'] = (0, _defineProperty3.default)({}, theme.breakpoints.down(key), hidden);

		    return acc;
		  }, {});
		};

		/**
		 * @ignore - internal component.
		 */
		function HiddenCss(props) {
		  var children = props.children,
		      classes = props.classes,
		      lgDown = props.lgDown,
		      lgUp = props.lgUp,
		      mdDown = props.mdDown,
		      mdUp = props.mdUp,
		      only = props.only,
		      smDown = props.smDown,
		      smUp = props.smUp,
		      xlDown = props.xlDown,
		      xlUp = props.xlUp,
		      xsDown = props.xsDown,
		      xsUp = props.xsUp,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'lgDown', 'lgUp', 'mdDown', 'mdUp', 'only', 'smDown', 'smUp', 'xlDown', 'xlUp', 'xsDown', 'xsUp']);


		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)((0, _keys2.default)(other).length === 0 || (0, _keys2.default)(other).length === 1 && other.hasOwnProperty('ref'), 'Material-UI: unsupported properties received ' + (0, _keys2.default)(other).join(', ') + ' by `<Hidden />`.') : void 0;

		  var className = [];

		  for (var i = 0; i < _createBreakpoints.keys.length; i += 1) {
		    var breakpoint = _createBreakpoints.keys[i];
		    var breakpointUp = props[breakpoint + 'Up'];
		    var breakpointDown = props[breakpoint + 'Down'];

		    if (breakpointUp) {
		      className.push(classes[breakpoint + 'Up']);
		    }
		    if (breakpointDown) {
		      className.push(classes[breakpoint + 'Down']);
		    }
		  }

		  if (only) {
		    var onlyBreakpoints = Array.isArray(only) ? only : [only];
		    onlyBreakpoints.forEach(function (breakpoint) {
		      className.push(classes['only' + (0, _helpers.capitalizeFirstLetter)(breakpoint)]);
		    });
		  }

		  return _react2.default.createElement(
		    'span',
		    { className: className },
		    children
		  );
		}

		HiddenCss.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * Specify which implementation to use.  'js' is the default, 'css' works better for server
		   * side rendering.
		   */
		  implementation: _propTypes2.default.oneOf(['js', 'css']),
		  /**
		   * You can use this property when choosing the `js` implementation with server side rendering.
		   *
		   * As `window.innerWidth` is unavailable on the server,
		   * we default to rendering an empty componenent during the first mount.
		   * In some situation you might want to use an heristic to approximate
		   * the screen width of the client browser screen width.
		   *
		   * For instance, you could be using the user-agent or the client-hints.
		   * http://caniuse.com/#search=client%20hint
		   */
		  initialWidth: _propTypes2.default.number,
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  lgDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  lgUp: _propTypes2.default.bool,
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  mdDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  mdUp: _propTypes2.default.bool,
		  /**
		   * Hide the given breakpoint(s).
		   */
		  only: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  smDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  smUp: _propTypes2.default.bool,
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  xlDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  xlUp: _propTypes2.default.bool,
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  xsDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  xsUp: _propTypes2.default.bool
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiHiddenCss' })(HiddenCss);
		}).call(this,require('_process'))
		},{"../styles/createBreakpoints":922,"../styles/withStyles":934,"../utils/helpers":945,"_process":957,"babel-runtime/core-js/object/keys":514,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/objectWithoutProperties":523,"prop-types":961,"react":1016,"warning":1054}],807:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _stringify = require('babel-runtime/core-js/json/stringify');

		var _stringify2 = _interopRequireDefault(_stringify);

		var _keys = require('babel-runtime/core-js/object/keys');

		var _keys2 = _interopRequireDefault(_keys);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _createBreakpoints = require('../styles/createBreakpoints');

		var _withWidth = require('../utils/withWidth');

		var _withWidth2 = _interopRequireDefault(_withWidth);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		function HiddenJs(props) {
		  var children = props.children,
		      lgDown = props.lgDown,
		      lgUp = props.lgUp,
		      mdDown = props.mdDown,
		      mdUp = props.mdUp,
		      only = props.only,
		      smDown = props.smDown,
		      smUp = props.smUp,
		      width = props.width,
		      xlDown = props.xlDown,
		      xlUp = props.xlUp,
		      xsDown = props.xsDown,
		      xsUp = props.xsUp,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'lgDown', 'lgUp', 'mdDown', 'mdUp', 'only', 'smDown', 'smUp', 'width', 'xlDown', 'xlUp', 'xsDown', 'xsUp']);


		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)((0, _keys2.default)(other).length === 0, 'Material-UI: unsupported properties received ' + (0, _stringify2.default)(other) + ' by `<Hidden />`.') : void 0;

		  var visible = true;

		  // `only` check is faster to get out sooner if used.
		  if (only) {
		    if (Array.isArray(only)) {
		      for (var i = 0; i < only.length; i += 1) {
		        var breakpoint = only[i];
		        if (width === breakpoint) {
		          visible = false;
		          break;
		        }
		      }
		    } else if (only && width === only) {
		      visible = false;
		    }
		  }

		  // Allow `only` to be combined with other props. If already hidden, no need to check others.
		  if (visible) {
		    // determine visibility based on the smallest size up
		    for (var _i = 0; _i < _createBreakpoints.keys.length; _i += 1) {
		      var _breakpoint = _createBreakpoints.keys[_i];
		      var breakpointUp = props[_breakpoint + 'Up'];
		      var breakpointDown = props[_breakpoint + 'Down'];
		      if (breakpointUp && (0, _withWidth.isWidthUp)(_breakpoint, width) || breakpointDown && (0, _withWidth.isWidthDown)(_breakpoint, width)) {
		        visible = false;
		        break;
		      }
		    }
		  }

		  if (!visible) {
		    return null;
		  }

		  return children;
		}

		HiddenJs.propTypes = {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * Specify which implementation to use.  'js' is the default, 'css' works better for server
		   * side rendering.
		   */
		  implementation: _propTypes2.default.oneOf(['js', 'css']),
		  /**
		   * You can use this property when choosing the `js` implementation with server side rendering.
		   *
		   * As `window.innerWidth` is unavailable on the server,
		   * we default to rendering an empty componenent during the first mount.
		   * In some situation you might want to use an heristic to approximate
		   * the screen width of the client browser screen width.
		   *
		   * For instance, you could be using the user-agent or the client-hints.
		   * http://caniuse.com/#search=client%20hint
		   */
		  initialWidth: _propTypes2.default.number,
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  lgDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  lgUp: _propTypes2.default.bool,
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  mdDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  mdUp: _propTypes2.default.bool,
		  /**
		   * Hide the given breakpoint(s).
		   */
		  only: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  smDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  smUp: _propTypes2.default.bool,
		  /**
		   * @ignore
		   * width prop provided by withWidth decorator.
		   */
		  width: _propTypes2.default.string.isRequired,
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  xlDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  xlUp: _propTypes2.default.bool,
		  /**
		   * If true, screens before this size and down will be hidden.
		   */
		  xsDown: _propTypes2.default.bool,
		  /**
		   * If true, screens this size and up will be hidden.
		   */
		  xsUp: _propTypes2.default.bool
		};

		exports.default = (0, _withWidth2.default)()(HiddenJs);
		}).call(this,require('_process'))
		},{"../styles/createBreakpoints":922,"../utils/withWidth":950,"_process":957,"babel-runtime/core-js/json/stringify":506,"babel-runtime/core-js/object/keys":514,"babel-runtime/helpers/objectWithoutProperties":523,"prop-types":961,"warning":1054}],808:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Hidden = require('./Hidden');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Hidden).default;
		  }
		});

		var _HiddenJs = require('./HiddenJs');

		Object.defineProperty(exports, 'HiddenJs', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_HiddenJs).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Hidden":805,"./HiddenJs":807}],809:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _ButtonBase = require('../ButtonBase');

		var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

		var _helpers = require('../utils/helpers');

		var _Icon = require('../Icon');

		var _Icon2 = _interopRequireDefault(_Icon);

		var _reactHelpers = require('../utils/reactHelpers');

		require('../SvgIcon');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// Ensure CSS specificity

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      textAlign: 'center',
		      flex: '0 0 auto',
		      fontSize: theme.typography.pxToRem(24),
		      width: theme.spacing.unit * 6,
		      height: theme.spacing.unit * 6,
		      padding: 0,
		      borderRadius: '50%',
		      color: theme.palette.action.active,
		      transition: theme.transitions.create('background-color', {
		        duration: theme.transitions.duration.shortest
		      })
		    },
		    colorAccent: {
		      color: theme.palette.secondary.A200
		    },
		    colorContrast: {
		      color: theme.palette.getContrastText(theme.palette.primary[500])
		    },
		    colorPrimary: {
		      color: theme.palette.primary[500]
		    },
		    colorInherit: {
		      color: 'inherit'
		    },
		    disabled: {
		      color: theme.palette.action.disabled
		    },
		    label: {
		      width: '100%',
		      display: 'flex',
		      alignItems: 'inherit',
		      justifyContent: 'inherit'
		    },
		    icon: {
		      width: '1em',
		      height: '1em'
		    },
		    keyboardFocused: {
		      backgroundColor: theme.palette.text.divider
		    }
		  };
		};

		/**
		 * Refer to the [Icons](/style/icons) section of the documentation
		 * regarding the available icon options.
		 */
		// @inheritedComponent ButtonBase

		function IconButton(props) {
		  var _classNames;

		  var buttonRef = props.buttonRef,
		      children = props.children,
		      classes = props.classes,
		      className = props.className,
		      color = props.color,
		      disabled = props.disabled,
		      rootRef = props.rootRef,
		      other = (0, _objectWithoutProperties3.default)(props, ['buttonRef', 'children', 'classes', 'className', 'color', 'disabled', 'rootRef']);


		  return _react2.default.createElement(
		    _ButtonBase2.default,
		    (0, _extends3.default)({
		      className: (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'default'), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), _classNames), className),
		      centerRipple: true,
		      keyboardFocusedClassName: classes.keyboardFocused,
		      disabled: disabled,
		      rootRef: buttonRef,
		      ref: rootRef
		    }, other),
		    _react2.default.createElement(
		      'span',
		      { className: classes.label },
		      typeof children === 'string' ? _react2.default.createElement(
		        _Icon2.default,
		        { className: classes.icon },
		        children
		      ) : _react2.default.Children.map(children, function (child) {
		        if ((0, _reactHelpers.isMuiElement)(child, ['Icon', 'SvgIcon'])) {
		          return _react2.default.cloneElement(child, {
		            className: (0, _classnames2.default)(classes.icon, child.props.className)
		          });
		        }

		        return child;
		      })
		    )
		  );
		}

		IconButton.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Use that property to pass a ref callback to the native button component.
		   */
		  buttonRef: _propTypes2.default.func,
		  /**
		   * The icon element.
		   * If a string is provided, it will be used as an icon font ligature.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The color of the component. It's using the theme palette when that makes sense.
		   */
		  color: _propTypes2.default.oneOf(['default', 'inherit', 'primary', 'contrast', 'accent']),
		  /**
		   * If `true`, the button will be disabled.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the ripple will be disabled.
		   */
		  disableRipple: _propTypes2.default.bool,
		  /**
		   * Use that property to pass a ref callback to the root component.
		   */
		  rootRef: _propTypes2.default.func
		} : {};

		IconButton.defaultProps = {
		  color: 'default',
		  disabled: false,
		  disableRipple: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiIconButton' })(IconButton);
		}).call(this,require('_process'))
		},{"../ButtonBase":768,"../Icon":812,"../SvgIcon":860,"../styles/withStyles":934,"../utils/helpers":945,"../utils/reactHelpers":948,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],810:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _IconButton = require('./IconButton');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_IconButton).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./IconButton":809}],811:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _helpers = require('../utils/helpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      userSelect: 'none'
		    },
		    colorAccent: {
		      color: theme.palette.secondary.A200
		    },
		    colorAction: {
		      color: theme.palette.action.active
		    },
		    colorContrast: {
		      color: theme.palette.getContrastText(theme.palette.primary[500])
		    },
		    colorDisabled: {
		      color: theme.palette.action.disabled
		    },
		    colorError: {
		      color: theme.palette.error[500]
		    },
		    colorPrimary: {
		      color: theme.palette.primary[500]
		    }
		  };
		};

		function Icon(props) {
		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      color = props.color,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'color']);


		  var className = (0, _classnames2.default)('material-icons', classes.root, (0, _defineProperty3.default)({}, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'inherit'), classNameProp);

		  return _react2.default.createElement(
		    'span',
		    (0, _extends3.default)({ className: className, 'aria-hidden': 'true' }, other),
		    children
		  );
		}

		Icon.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The name of the icon font ligature.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The color of the component. It's using the theme palette when that makes sense.
		   */
		  color: _propTypes2.default.oneOf(['inherit', 'accent', 'action', 'contrast', 'disabled', 'error', 'primary'])
		} : {};

		Icon.defaultProps = {
		  color: 'inherit'
		};

		Icon.muiName = 'Icon';

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiIcon' })(Icon);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"../utils/helpers":945,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],812:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Icon = require('./Icon');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Icon).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Icon":811}],813:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		exports.hasValue = hasValue;
		exports.isDirty = isDirty;
		exports.isAdornedStart = isAdornedStart;

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _reactHelpers = require('../utils/reactHelpers');

		var _Textarea = require('./Textarea');

		var _Textarea2 = _interopRequireDefault(_Textarea);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// Supports determination of isControlled().
		// Controlled input accepts its current value as a prop.
		//
		// @see https://facebook.github.io/react/docs/forms.html#controlled-components
		// @param value
		// @returns {boolean} true if string (including '') or number (including zero)
		function hasValue(value) {
		  return value !== undefined && value !== null && !(Array.isArray(value) && value.length === 0);
		}

		// Determine if field is dirty (a.k.a. filled).
		//
		// Response determines if label is presented above field or as placeholder.
		//
		// @param obj
		// @param SSR
		// @returns {boolean} False when not present or empty string.
//		                    True when any number or string with length.
		function isDirty(obj) {
		  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

		  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');
		}

		// Determine if an Input is adorned on start.
		// It's corresponding to the left with LTR.
		//
		// @param obj
		// @returns {boolean} False when no adornments.
//		                    True when adorned at the start.
		function isAdornedStart(obj) {
		  return obj.startAdornment;
		}

		var styles = exports.styles = function styles(theme) {
		  var placeholder = {
		    color: 'currentColor',
		    opacity: theme.palette.type === 'light' ? 0.42 : 0.5,
		    transition: theme.transitions.create('opacity', {
		      duration: theme.transitions.duration.shorter,
		      easing: theme.transitions.easing.ease
		    })
		  };
		  var placeholderHidden = {
		    opacity: 0
		  };
		  var placeholderVisible = {
		    opacity: theme.palette.type === 'light' ? 0.42 : 0.5
		  };

		  return {
		    root: {
		      // Mimics the default input display property used by browsers for an input.
		      display: 'inline-flex',
		      alignItems: 'baseline',
		      position: 'relative',
		      fontFamily: theme.typography.fontFamily,
		      color: theme.palette.input.inputText,
		      fontSize: theme.typography.pxToRem(16)
		    },
		    formControl: {
		      'label + &': {
		        marginTop: theme.spacing.unit * 2
		      }
		    },
		    inkbar: {
		      '&:after': {
		        backgroundColor: theme.palette.primary[theme.palette.type === 'light' ? 'A700' : 'A200'],
		        left: 0,
		        bottom: 0,
		        // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
		        content: '""',
		        height: 2,
		        position: 'absolute',
		        right: 0,
		        transform: 'scaleX(0)',
		        transition: theme.transitions.create('transform', {
		          duration: theme.transitions.duration.shorter,
		          easing: theme.transitions.easing.easeOut
		        }),
		        pointerEvents: 'none' // Transparent to the hover style.
		      },
		      '&$focused:after': {
		        transform: 'scaleX(1)'
		      }
		    },
		    error: {
		      '&:after': {
		        backgroundColor: theme.palette.error.A400,
		        transform: 'scaleX(1)' // error is always underlined in red
		      }
		    },
		    focused: {},
		    disabled: {
		      color: theme.palette.text.disabled
		    },
		    underline: {
		      '&:before': {
		        backgroundColor: theme.palette.input.bottomLine,
		        left: 0,
		        bottom: 0,
		        // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
		        content: '""',
		        height: 1,
		        position: 'absolute',
		        right: 0,
		        transition: theme.transitions.create('background-color', {
		          duration: theme.transitions.duration.shorter,
		          easing: theme.transitions.easing.ease
		        }),
		        pointerEvents: 'none' // Transparent to the hover style.
		      },
		      '&:hover:not($disabled):before': {
		        backgroundColor: theme.palette.text.primary,
		        height: 2
		      },
		      '&$disabled:before': {
		        background: 'transparent',
		        backgroundImage: 'linear-gradient(to right, ' + theme.palette.input.bottomLine + ' 33%, transparent 0%)',
		        backgroundPosition: 'left top',
		        backgroundRepeat: 'repeat-x',
		        backgroundSize: '5px 1px'
		      }
		    },
		    multiline: {
		      padding: theme.spacing.unit - 2 + 'px 0 ' + (theme.spacing.unit - 1) + 'px'
		    },
		    fullWidth: {
		      width: '100%'
		    },
		    input: {
		      font: 'inherit',
		      color: 'currentColor',
		      padding: theme.spacing.unit - 2 + 'px 0 ' + (theme.spacing.unit - 1) + 'px',
		      border: 0,
		      boxSizing: 'content-box',
		      verticalAlign: 'middle',
		      background: 'none',
		      margin: 0, // Reset for Safari
		      // Remove grey highlight
		      WebkitTapHighlightColor: theme.palette.common.transparent,
		      display: 'block',
		      // Make the flex item shrink with Firefox
		      minWidth: 0,
		      width: '100%',
		      '&::-webkit-input-placeholder': placeholder,
		      '&::-moz-placeholder': placeholder, // Firefox 19+
		      '&:-ms-input-placeholder': placeholder, // IE 11
		      '&::-ms-input-placeholder': placeholder, // Edge
		      '&:focus': {
		        outline: 0
		      },
		      // Reset Firefox invalid required input style
		      '&:invalid': {
		        boxShadow: 'none'
		      },
		      '&::-webkit-search-decoration': {
		        // Remove the padding when type=search.
		        appearance: 'none'
		      },
		      // Show and hide the placeholder logic
		      'label[data-shrink=false] + $formControl &': {
		        '&::-webkit-input-placeholder': placeholderHidden,
		        '&::-moz-placeholder': placeholderHidden, // Firefox 19+
		        '&:-ms-input-placeholder': placeholderHidden, // IE 11
		        '&::-ms-input-placeholder': placeholderHidden, // Edge
		        '&:focus::-webkit-input-placeholder': placeholderVisible,
		        '&:focus::-moz-placeholder': placeholderVisible, // Firefox 19+
		        '&:focus:-ms-input-placeholder': placeholderVisible, // IE 11
		        '&:focus::-ms-input-placeholder': placeholderVisible // Edge
		      }
		    },
		    inputDense: {
		      paddingTop: theme.spacing.unit / 2 - 1
		    },
		    inputDisabled: {
		      opacity: 1 // Reset iOS opacity
		    },
		    inputSingleline: {
		      height: '1.1875em' // Reset (19px)
		    },
		    inputMultiline: {
		      resize: 'none',
		      padding: 0
		    },
		    inputSearch: {
		      appearance: 'textfield' // Improve type search style.
		    }
		  };
		};

		function formControlState(props, context) {
		  var disabled = props.disabled;
		  var error = props.error;
		  var margin = props.margin;

		  if (context.muiFormControl) {
		    if (typeof disabled === 'undefined') {
		      disabled = context.muiFormControl.disabled;
		    }

		    if (typeof error === 'undefined') {
		      error = context.muiFormControl.error;
		    }

		    if (typeof margin === 'undefined') {
		      margin = context.muiFormControl.margin;
		    }
		  }

		  return {
		    disabled: disabled,
		    error: error,
		    margin: margin
		  };
		}

		var Input = function (_React$Component) {
		  (0, _inherits3.default)(Input, _React$Component);

		  function Input() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Input);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Input.__proto__ || (0, _getPrototypeOf2.default)(Input)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      focused: false
		    }, _this.input = null, _this.handleFocus = function (event) {
		      // Fix an bug with IE11 where the focus/blur events are triggered
		      // while the input is disabled.
		      if (formControlState(_this.props, _this.context).disabled) {
		        event.stopPropagation();
		        return;
		      }

		      _this.setState({ focused: true });
		      if (_this.props.onFocus) {
		        _this.props.onFocus(event);
		      }
		    }, _this.handleBlur = function (event) {
		      _this.setState({ focused: false });
		      if (_this.props.onBlur) {
		        _this.props.onBlur(event);
		      }
		    }, _this.handleChange = function (event) {
		      if (!_this.isControlled()) {
		        _this.checkDirty(_this.input);
		      }

		      // Perform in the willUpdate
		      if (_this.props.onChange) {
		        _this.props.onChange(event);
		      }
		    }, _this.handleRefInput = function (node) {
		      _this.input = node;
		      if (_this.props.inputRef) {
		        _this.props.inputRef(node);
		      } else if (_this.props.inputProps && _this.props.inputProps.ref) {
		        _this.props.inputProps.ref(node);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Input, [{
		    key: 'componentWillMount',
		    value: function componentWillMount() {
		      if (this.isControlled()) {
		        this.checkDirty(this.props);
		      }
		    }
		  }, {
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      if (!this.isControlled()) {
		        this.checkDirty(this.input);
		      }
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps, nextContext) {
		      // The blur won't fire when the disabled state is set on a focused input.
		      // We need to book keep the focused state manually.
		      if (!formControlState(this.props, this.context).disabled && formControlState(nextProps, nextContext).disabled) {
		        this.setState({
		          focused: false
		        });
		      }
		    }
		  }, {
		    key: 'componentWillUpdate',
		    value: function componentWillUpdate(nextProps, nextState, nextContext) {
		      if (this.isControlled(nextProps)) {
		        this.checkDirty(nextProps);
		      } // else performed in the onChange

		      // Book keep the focused state.
		      if (!formControlState(this.props, this.context).disabled && formControlState(nextProps, nextContext).disabled) {
		        var muiFormControl = this.context.muiFormControl;

		        if (muiFormControl && muiFormControl.onBlur) {
		          muiFormControl.onBlur();
		        }
		      }
		    }

		    // Holds the input reference

		  }, {
		    key: 'isControlled',


		    // A controlled input accepts its current value as a prop.
		    //
		    // @see https://facebook.github.io/react/docs/forms.html#controlled-components
		    // @returns {boolean} true if string (including '') or number (including zero)
		    value: function isControlled() {
		      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;

		      return hasValue(props.value);
		    }
		  }, {
		    key: 'checkDirty',
		    value: function checkDirty(obj) {
		      var muiFormControl = this.context.muiFormControl;


		      if (isDirty(obj)) {
		        if (muiFormControl && muiFormControl.onDirty) {
		          muiFormControl.onDirty();
		        }
		        if (this.props.onDirty) {
		          this.props.onDirty();
		        }
		        return;
		      }

		      if (muiFormControl && muiFormControl.onClean) {
		        muiFormControl.onClean();
		      }
		      if (this.props.onClean) {
		        this.props.onClean();
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _classNames, _classNames2;

		      var _props = this.props,
		          autoComplete = _props.autoComplete,
		          autoFocus = _props.autoFocus,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          defaultValue = _props.defaultValue,
		          disabledProp = _props.disabled,
		          disableUnderline = _props.disableUnderline,
		          endAdornment = _props.endAdornment,
		          errorProp = _props.error,
		          fullWidth = _props.fullWidth,
		          id = _props.id,
		          inputComponent = _props.inputComponent,
		          _props$inputProps = _props.inputProps;
		      _props$inputProps = _props$inputProps === undefined ? {} : _props$inputProps;
		      var inputPropsClassName = _props$inputProps.className,
		          inputPropsProp = (0, _objectWithoutProperties3.default)(_props$inputProps, ['className']),
		          inputRef = _props.inputRef,
		          marginProp = _props.margin,
		          multiline = _props.multiline,
		          name = _props.name,
		          onBlur = _props.onBlur,
		          onChange = _props.onChange,
		          onClean = _props.onClean,
		          onDirty = _props.onDirty,
		          onFocus = _props.onFocus,
		          onKeyDown = _props.onKeyDown,
		          onKeyUp = _props.onKeyUp,
		          placeholder = _props.placeholder,
		          readOnly = _props.readOnly,
		          rows = _props.rows,
		          rowsMax = _props.rowsMax,
		          startAdornment = _props.startAdornment,
		          type = _props.type,
		          value = _props.value,
		          other = (0, _objectWithoutProperties3.default)(_props, ['autoComplete', 'autoFocus', 'classes', 'className', 'defaultValue', 'disabled', 'disableUnderline', 'endAdornment', 'error', 'fullWidth', 'id', 'inputComponent', 'inputProps', 'inputRef', 'margin', 'multiline', 'name', 'onBlur', 'onChange', 'onClean', 'onDirty', 'onFocus', 'onKeyDown', 'onKeyUp', 'placeholder', 'readOnly', 'rows', 'rowsMax', 'startAdornment', 'type', 'value']);
		      var muiFormControl = this.context.muiFormControl;

		      var _formControlState = formControlState(this.props, this.context),
		          disabled = _formControlState.disabled,
		          error = _formControlState.error,
		          margin = _formControlState.margin;

		      var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, classes.error, error), (0, _defineProperty3.default)(_classNames, classes.fullWidth, fullWidth), (0, _defineProperty3.default)(_classNames, classes.focused, this.state.focused), (0, _defineProperty3.default)(_classNames, classes.formControl, muiFormControl), (0, _defineProperty3.default)(_classNames, classes.inkbar, !disableUnderline), (0, _defineProperty3.default)(_classNames, classes.multiline, multiline), (0, _defineProperty3.default)(_classNames, classes.underline, !disableUnderline), _classNames), classNameProp);

		      var inputClassName = (0, _classnames2.default)(classes.input, (_classNames2 = {}, (0, _defineProperty3.default)(_classNames2, classes.inputDisabled, disabled), (0, _defineProperty3.default)(_classNames2, classes.inputSingleline, !multiline), (0, _defineProperty3.default)(_classNames2, classes.inputMultiline, multiline), (0, _defineProperty3.default)(_classNames2, classes.inputSearch, type === 'search'), (0, _defineProperty3.default)(_classNames2, classes.inputDense, margin === 'dense'), _classNames2), inputPropsClassName);

		      var required = muiFormControl && muiFormControl.required === true;

		      var InputComponent = 'input';
		      var inputProps = (0, _extends3.default)({}, inputPropsProp, {
		        ref: this.handleRefInput
		      });

		      if (inputComponent) {
		        InputComponent = inputComponent;

		        if ((0, _reactHelpers.isMuiComponent)(InputComponent, ['SelectInput'])) {
		          inputProps = (0, _extends3.default)({
		            selectRef: this.handleRefInput
		          }, inputProps, {
		            ref: null
		          });
		        }
		      } else if (multiline) {
		        if (rows && !rowsMax) {
		          InputComponent = 'textarea';
		        } else {
		          inputProps = (0, _extends3.default)({
		            rowsMax: rowsMax,
		            textareaRef: this.handleRefInput
		          }, inputProps, {
		            ref: null
		          });
		          InputComponent = _Textarea2.default;
		        }
		      }

		      return _react2.default.createElement(
		        'div',
		        (0, _extends3.default)({ onBlur: this.handleBlur, onFocus: this.handleFocus, className: className }, other),
		        startAdornment,
		        _react2.default.createElement(InputComponent, (0, _extends3.default)({
		          autoComplete: autoComplete,
		          autoFocus: autoFocus,
		          className: inputClassName,
		          onChange: this.handleChange,
		          onKeyUp: onKeyUp,
		          onKeyDown: onKeyDown,
		          disabled: disabled,
		          required: required ? true : undefined,
		          value: value,
		          id: id,
		          name: name,
		          defaultValue: defaultValue,
		          placeholder: placeholder,
		          type: type,
		          readOnly: readOnly,
		          rows: rows
		        }, inputProps)),
		        endAdornment
		      );
		    }
		  }]);
		  return Input;
		}(_react2.default.Component);

		Input.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * This property helps users to fill forms faster, especially on mobile devices.
		   * The name can be confusing, it's more like an autofill.
		   * You can learn more about it in this article
		   * https://developers.google.com/web/updates/2015/06/checkout-faster-with-autofill
		   */
		  autoComplete: _propTypes2.default.string,
		  /**
		   * If `true`, the input will be focused during the first mount.
		   */
		  autoFocus: _propTypes2.default.bool,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * The CSS class name of the wrapper element.
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The default input value, useful when not controlling the component.
		   */
		  defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
		  /**
		   * If `true`, the input will be disabled.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the input will not have an underline.
		   */
		  disableUnderline: _propTypes2.default.bool,
		  /**
		   * End `InputAdornment` for this component.
		   */
		  endAdornment: _propTypes2.default.node,
		  /**
		   * If `true`, the input will indicate an error. This is normally obtained via context from
		   * FormControl.
		   */
		  error: _propTypes2.default.bool,
		  /**
		   * If `true`, the input will take up the full width of its container.
		   */
		  fullWidth: _propTypes2.default.bool,
		  /**
		   * The id of the `input` element.
		   */
		  id: _propTypes2.default.string,
		  /**
		   * The component used for the native input.
		   * Either a string to use a DOM element or a component.
		   */
		  inputComponent: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * Properties applied to the `input` element.
		   */
		  inputProps: _propTypes2.default.object,
		  /**
		   * Use that property to pass a ref callback to the native input component.
		   */
		  inputRef: _propTypes2.default.func,
		  /**
		   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
		   * FormControl.
		   */
		  margin: _propTypes2.default.oneOf(['dense', 'none']),
		  /**
		   * If `true`, a textarea element will be rendered.
		   */
		  multiline: _propTypes2.default.bool,
		  /**
		   * Name attribute of the `input` element.
		   */
		  name: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  onBlur: _propTypes2.default.func,
		  /**
		   * Callback fired when the value is changed.
		   *
		   * @param {object} event The event source of the callback
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * TODO
		   */
		  onClean: _propTypes2.default.func,
		  /**
		   * TODO
		   */
		  onDirty: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onFocus: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onKeyDown: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onKeyUp: _propTypes2.default.func,
		  /**
		   * The short hint displayed in the input before the user enters a value.
		   */
		  placeholder: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  readOnly: _propTypes2.default.bool,
		  /**
		   * Number of rows to display when multiline option is set to true.
		   */
		  rows: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
		  /**
		   * Maximum number of rows to display when multiline option is set to true.
		   */
		  rowsMax: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
		  /**
		   * Start `InputAdornment` for this component.
		   */
		  startAdornment: _propTypes2.default.node,
		  /**
		   * Type of the input element. It should be a valid HTML5 input type.
		   */
		  type: _propTypes2.default.string,
		  /**
		   * The input value, required for a controlled component.
		   */
		  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]))])
		} : {};

		Input.muiName = 'Input';

		Input.defaultProps = {
		  disableUnderline: false,
		  fullWidth: false,
		  multiline: false,
		  type: 'text'
		};

		Input.contextTypes = {
		  muiFormControl: _propTypes2.default.object
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiInput' })(Input);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"../utils/reactHelpers":948,"./Textarea":816,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],814:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _Typography = require('../Typography');

		var _Typography2 = _interopRequireDefault(_Typography);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      'label + div > &': {
		        marginTop: -theme.spacing.unit * 2,
		        height: 26
		      }
		    },
		    positionStart: {
		      marginRight: theme.spacing.unit
		    },
		    positionEnd: {
		      marginLeft: theme.spacing.unit
		    }
		  };
		};

		function InputAdornment(props) {
		  var _classNames;

		  var children = props.children,
		      Component = props.component,
		      classes = props.classes,
		      className = props.className,
		      disableTypography = props.disableTypography,
		      position = props.position,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'component', 'classes', 'className', 'disableTypography', 'position']);


		  return _react2.default.createElement(
		    Component,
		    (0, _extends3.default)({
		      className: (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.positionStart, position === 'start'), (0, _defineProperty3.default)(_classNames, classes.positionEnd, position === 'end'), _classNames), className)
		    }, other),
		    typeof children === 'string' && !disableTypography ? _react2.default.createElement(
		      _Typography2.default,
		      { color: 'secondary' },
		      children
		    ) : children
		  );
		}

		InputAdornment.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component, normally an `IconButton` or string.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * If children is a string then disable wrapping in a Typography component.
		   */
		  disableTypography: _propTypes2.default.bool,
		  /**
		   * The position this adornment should appear relative to the `Input`.
		   */
		  position: _propTypes2.default.oneOf(['start', 'end'])
		} : {};

		InputAdornment.defaultProps = {
		  component: 'div',
		  disableTypography: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiInputAdornment' })(InputAdornment);
		}).call(this,require('_process'))
		},{"../Typography":884,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],815:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Form = require('../Form');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      transformOrigin: 'top left'
		    },
		    formControl: {
		      position: 'absolute',
		      left: 0,
		      top: 0,
		      // slight alteration to spec spacing to match visual spec result
		      transform: 'translate(0, ' + (theme.spacing.unit * 3 - 1) + 'px) scale(1)'
		    },
		    labelDense: {
		      // Compensation for the `Input.inputDense` style.
		      transform: 'translate(0, ' + (theme.spacing.unit * 2.5 + 1) + 'px) scale(1)'
		    },
		    shrink: {
		      transform: 'translate(0, 1.5px) scale(0.75)',
		      transformOrigin: 'top left'
		    },
		    animated: {
		      transition: theme.transitions.create('transform', {
		        duration: theme.transitions.duration.shorter,
		        easing: theme.transitions.easing.easeOut
		      })
		    },
		    disabled: {
		      color: theme.palette.input.disabled
		    }
		  };
		};

		function InputLabel(props, context) {
		  var _classNames;

		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      disableAnimation = props.disableAnimation,
		      disabled = props.disabled,
		      FormControlClasses = props.FormControlClasses,
		      marginProp = props.margin,
		      shrinkProp = props.shrink,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'disableAnimation', 'disabled', 'FormControlClasses', 'margin', 'shrink']);
		  var muiFormControl = context.muiFormControl;

		  var shrink = shrinkProp;

		  if (typeof shrink === 'undefined' && muiFormControl) {
		    shrink = muiFormControl.dirty || muiFormControl.focused || muiFormControl.adornedStart;
		  }

		  var margin = marginProp;
		  if (typeof margin === 'undefined' && muiFormControl) {
		    margin = muiFormControl.margin;
		  }

		  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.formControl, muiFormControl), (0, _defineProperty3.default)(_classNames, classes.animated, !disableAnimation), (0, _defineProperty3.default)(_classNames, classes.shrink, shrink), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, classes.labelDense, margin === 'dense'), _classNames), classNameProp);

		  return _react2.default.createElement(
		    _Form.FormLabel,
		    (0, _extends3.default)({ 'data-shrink': shrink, className: className, classes: FormControlClasses }, other),
		    children
		  );
		}

		InputLabel.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The contents of the `InputLabel`.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the transition animation is disabled.
		   */
		  disableAnimation: _propTypes2.default.bool,
		  /**
		   * If `true`, apply disabled class.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the label will be displayed in an error state.
		   */
		  error: _propTypes2.default.bool,
		  /**
		   * If `true`, the input of this label is focused.
		   */
		  focused: _propTypes2.default.bool,
		  /**
		   * `classes` property applied to the `FormControl` element.
		   */
		  FormControlClasses: _propTypes2.default.object,
		  /**
		   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
		   * FormControl.
		   */
		  margin: _propTypes2.default.oneOf(['dense']),
		  /**
		   * if `true`, the label will indicate that the input is required.
		   */
		  required: _propTypes2.default.bool,
		  /**
		   * If `true`, the label is shrunk.
		   */
		  shrink: _propTypes2.default.bool
		} : {};

		InputLabel.defaultProps = {
		  disabled: false,
		  disableAnimation: false
		};

		InputLabel.contextTypes = {
		  muiFormControl: _propTypes2.default.object
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiInputLabel' })(InputLabel);
		}).call(this,require('_process'))
		},{"../Form":802,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],816:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _debounce = require('lodash/debounce');

		var _debounce2 = _interopRequireDefault(_debounce);

		var _reactEventListener = require('react-event-listener');

		var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var ROWS_HEIGHT = 24;

		var styles = exports.styles = {
		  root: {
		    position: 'relative', // because the shadow has position: 'absolute',
		    width: '100%'
		  },
		  textarea: {
		    width: '100%',
		    height: '100%',
		    resize: 'none',
		    font: 'inherit',
		    padding: 0,
		    cursor: 'inherit',
		    boxSizing: 'border-box',
		    lineHeight: 'inherit',
		    border: 'none',
		    outline: 'none',
		    background: 'transparent'
		  },
		  shadow: {
		    resize: 'none',
		    // Overflow also needed to here to remove the extra row
		    // added to textareas in Firefox.
		    overflow: 'hidden',
		    // Visibility needed to hide the extra text area on ipads
		    visibility: 'hidden',
		    position: 'absolute',
		    height: 'auto',
		    whiteSpace: 'pre-wrap'
		  }
		};

		/**
		 * @ignore - internal component.
		 */

		var Textarea = function (_React$Component) {
		  (0, _inherits3.default)(Textarea, _React$Component);

		  function Textarea() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Textarea);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Textarea.__proto__ || (0, _getPrototypeOf2.default)(Textarea)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      height: null
		    }, _this.shadow = null, _this.singlelineShadow = null, _this.input = null, _this.value = null, _this.handleResize = (0, _debounce2.default)(function (event) {
		      _this.syncHeightWithShadow(event);
		    }, 166), _this.handleRefInput = function (node) {
		      _this.input = node;
		      if (_this.props.textareaRef) {
		        _this.props.textareaRef(node);
		      }
		    }, _this.handleRefSinglelineShadow = function (node) {
		      _this.singlelineShadow = node;
		    }, _this.handleRefShadow = function (node) {
		      _this.shadow = node;
		    }, _this.handleChange = function (event) {
		      _this.value = event.target.value;

		      if (typeof _this.props.value === 'undefined' && _this.shadow) {
		        // The component is not controlled, we need to update the shallow value.
		        _this.shadow.value = _this.value;
		        _this.syncHeightWithShadow(event);
		      }

		      if (_this.props.onChange) {
		        _this.props.onChange(event);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Textarea, [{
		    key: 'componentWillMount',
		    value: function componentWillMount() {
		      // <Input> expects the components it renders to respond to 'value'
		      // so that it can check whether they are dirty
		      this.value = this.props.value || this.props.defaultValue || '';
		      this.setState({
		        height: Number(this.props.rows) * ROWS_HEIGHT
		      });
		    }
		  }, {
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      this.syncHeightWithShadow(null);
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      if (nextProps.value !== this.props.value || Number(nextProps.rowsMax) !== Number(this.props.rowsMax)) {
		        this.syncHeightWithShadow(null, nextProps);
		      }
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      this.handleResize.cancel();
		    }
		  }, {
		    key: 'syncHeightWithShadow',
		    value: function syncHeightWithShadow(event) {
		      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;

		      if (this.shadow && this.singlelineShadow) {
		        // The component is controlled, we need to update the shallow value.
		        if (typeof this.props.value !== 'undefined') {
		          this.shadow.value = props.value == null ? '' : String(props.value);
		        }

		        var lineHeight = this.singlelineShadow.scrollHeight;
		        var newHeight = this.shadow.scrollHeight;

		        // Guarding for jsdom, where scrollHeight isn't present.
		        // See https://github.com/tmpvar/jsdom/issues/1013
		        if (newHeight === undefined) {
		          return;
		        }

		        if (Number(props.rowsMax) >= Number(props.rows)) {
		          newHeight = Math.min(Number(props.rowsMax) * lineHeight, newHeight);
		        }

		        newHeight = Math.max(newHeight, lineHeight);

		        if (this.state.height !== newHeight) {
		          this.setState({
		            height: newHeight
		          });
		        }
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          classes = _props.classes,
		          className = _props.className,
		          defaultValue = _props.defaultValue,
		          onChange = _props.onChange,
		          rows = _props.rows,
		          rowsMax = _props.rowsMax,
		          textareaRef = _props.textareaRef,
		          value = _props.value,
		          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'defaultValue', 'onChange', 'rows', 'rowsMax', 'textareaRef', 'value']);


		      return _react2.default.createElement(
		        'div',
		        { className: classes.root, style: { height: this.state.height } },
		        _react2.default.createElement(_reactEventListener2.default, { target: 'window', onResize: this.handleResize }),
		        _react2.default.createElement('textarea', {
		          ref: this.handleRefSinglelineShadow,
		          className: (0, _classnames2.default)(classes.shadow, classes.textarea),
		          tabIndex: -1,
		          rows: '1',
		          readOnly: true,
		          'aria-hidden': 'true',
		          value: ''
		        }),
		        _react2.default.createElement('textarea', {
		          ref: this.handleRefShadow,
		          className: (0, _classnames2.default)(classes.shadow, classes.textarea),
		          tabIndex: -1,
		          rows: rows,
		          'aria-hidden': 'true',
		          readOnly: true,
		          defaultValue: defaultValue,
		          value: value
		        }),
		        _react2.default.createElement('textarea', (0, _extends3.default)({
		          rows: rows,
		          className: (0, _classnames2.default)(classes.textarea, className),
		          defaultValue: defaultValue,
		          value: value,
		          onChange: this.handleChange
		        }, other, {
		          ref: this.handleRefInput
		        }))
		      );
		    }
		  }]);
		  return Textarea;
		}(_react2.default.Component);

		Textarea.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
		  /**
		   * @ignore
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * Number of rows to display when multiline option is set to true.
		   */
		  rows: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
		  /**
		   * Maximum number of rows to display when multiline option is set to true.
		   */
		  rowsMax: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
		  /**
		   * Use that property to pass a ref callback to the native textarea element.
		   */
		  textareaRef: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
		} : {};

		Textarea.defaultProps = {
		  rows: 1
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTextarea' })(Textarea);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"lodash/debounce":740,"prop-types":961,"react":1016,"react-event-listener":972}],817:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Input = require('./Input');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Input).default;
		  }
		});

		var _InputAdornment = require('./InputAdornment');

		Object.defineProperty(exports, 'InputAdornment', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_InputAdornment).default;
		  }
		});

		var _InputLabel = require('./InputLabel');

		Object.defineProperty(exports, 'InputLabel', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_InputLabel).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Input":813,"./InputAdornment":814,"./InputLabel":815}],818:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      flex: '1 1 auto',
		      listStyle: 'none',
		      margin: 0,
		      padding: 0,
		      position: 'relative'
		    },
		    padding: {
		      paddingTop: theme.spacing.unit,
		      paddingBottom: theme.spacing.unit
		    },
		    dense: {
		      paddingTop: theme.spacing.unit / 2,
		      paddingBottom: theme.spacing.unit / 2
		    },
		    subheader: {
		      paddingTop: 0
		    }
		  };
		};

		var List = function (_React$Component) {
		  (0, _inherits3.default)(List, _React$Component);

		  function List() {
		    (0, _classCallCheck3.default)(this, List);
		    return (0, _possibleConstructorReturn3.default)(this, (List.__proto__ || (0, _getPrototypeOf2.default)(List)).apply(this, arguments));
		  }

		  (0, _createClass3.default)(List, [{
		    key: 'getChildContext',
		    value: function getChildContext() {
		      return {
		        dense: this.props.dense
		      };
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _classNames;

		      var _props = this.props,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          ComponentProp = _props.component,
		          disablePadding = _props.disablePadding,
		          children = _props.children,
		          dense = _props.dense,
		          subheader = _props.subheader,
		          rootRef = _props.rootRef,
		          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'component', 'disablePadding', 'children', 'dense', 'subheader', 'rootRef']);

		      var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.dense, dense && !disablePadding), (0, _defineProperty3.default)(_classNames, classes.padding, !disablePadding), (0, _defineProperty3.default)(_classNames, classes.subheader, subheader), _classNames), classNameProp);

		      return _react2.default.createElement(
		        ComponentProp,
		        (0, _extends3.default)({ className: className }, other, { ref: rootRef }),
		        subheader,
		        children
		      );
		    }
		  }]);
		  return List;
		}(_react2.default.Component);

		List.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for
		   * the list and list items. The property is available to descendant components as the
		   * `dense` context.
		   */
		  dense: _propTypes2.default.bool,
		  /**
		   * If `true`, vertical padding will be removed from the list.
		   */
		  disablePadding: _propTypes2.default.bool,
		  /**
		   * Use that property to pass a ref callback to the root component.
		   */
		  rootRef: _propTypes2.default.func,
		  /**
		   * The content of the subheader, normally `ListSubheader`.
		   */
		  subheader: _propTypes2.default.node
		} : {};

		List.defaultProps = {
		  component: 'ul',
		  dense: false,
		  disablePadding: false
		};

		List.childContextTypes = {
		  dense: _propTypes2.default.bool
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiList' })(List);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],819:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _ButtonBase = require('../ButtonBase');

		var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

		var _reactHelpers = require('../utils/reactHelpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'flex',
		      justifyContent: 'flex-start',
		      alignItems: 'center',
		      position: 'relative',
		      textDecoration: 'none'
		    },
		    container: {
		      position: 'relative'
		    },
		    keyboardFocused: {
		      background: theme.palette.text.divider
		    },
		    default: {
		      paddingTop: 12,
		      paddingBottom: 12
		    },
		    dense: {
		      paddingTop: theme.spacing.unit,
		      paddingBottom: theme.spacing.unit
		    },
		    disabled: {
		      opacity: 0.5
		    },
		    divider: {
		      borderBottom: '1px solid ' + theme.palette.text.lightDivider
		    },
		    gutters: {
		      paddingLeft: theme.spacing.unit * 2,
		      paddingRight: theme.spacing.unit * 2
		    },
		    button: {
		      transition: theme.transitions.create('background-color', {
		        duration: theme.transitions.duration.shortest
		      }),
		      '&:hover': {
		        textDecoration: 'none',
		        backgroundColor: theme.palette.text.divider,
		        // Reset on mouse devices
		        '@media (hover: none)': {
		          backgroundColor: 'transparent'
		        },
		        '&$disabled': {
		          backgroundColor: 'transparent'
		        }
		      }
		    },
		    secondaryAction: {
		      // Add some space to avoid collision as `ListItemSecondaryAction`
		      // is absolutely positionned.
		      paddingRight: theme.spacing.unit * 4
		    }
		  };
		};

		var ListItem = function (_React$Component) {
		  (0, _inherits3.default)(ListItem, _React$Component);

		  function ListItem() {
		    (0, _classCallCheck3.default)(this, ListItem);
		    return (0, _possibleConstructorReturn3.default)(this, (ListItem.__proto__ || (0, _getPrototypeOf2.default)(ListItem)).apply(this, arguments));
		  }

		  (0, _createClass3.default)(ListItem, [{
		    key: 'getChildContext',
		    value: function getChildContext() {
		      return {
		        dense: this.props.dense || this.context.dense || false
		      };
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _classNames;

		      var _props = this.props,
		          button = _props.button,
		          childrenProp = _props.children,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          componentProp = _props.component,
		          dense = _props.dense,
		          disabled = _props.disabled,
		          disableGutters = _props.disableGutters,
		          divider = _props.divider,
		          other = (0, _objectWithoutProperties3.default)(_props, ['button', 'children', 'classes', 'className', 'component', 'dense', 'disabled', 'disableGutters', 'divider']);

		      var isDense = dense || this.context.dense || false;
		      var children = _react2.default.Children.toArray(childrenProp);

		      var hasAvatar = children.some(function (value) {
		        return (0, _reactHelpers.isMuiElement)(value, ['ListItemAvatar']);
		      });
		      var hasSecondaryAction = children.length && (0, _reactHelpers.isMuiElement)(children[children.length - 1], ['ListItemSecondaryAction']);

		      var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.gutters, !disableGutters), (0, _defineProperty3.default)(_classNames, classes.divider, divider), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, classes.button, button), (0, _defineProperty3.default)(_classNames, classes.secondaryAction, hasSecondaryAction), (0, _defineProperty3.default)(_classNames, isDense || hasAvatar ? classes.dense : classes.default, true), _classNames), classNameProp);

		      var listItemProps = (0, _extends3.default)({ className: className, disabled: disabled }, other);
		      var ComponentMain = componentProp;

		      if (button) {
		        ComponentMain = _ButtonBase2.default;
		        listItemProps.component = componentProp;
		        listItemProps.keyboardFocusedClassName = classes.keyboardFocused;
		      }

		      if (hasSecondaryAction) {
		        return _react2.default.createElement(
		          'div',
		          { className: classes.container },
		          _react2.default.createElement(
		            ComponentMain,
		            listItemProps,
		            children
		          ),
		          children.pop()
		        );
		      }

		      return _react2.default.createElement(
		        ComponentMain,
		        listItemProps,
		        children
		      );
		    }
		  }]);
		  return ListItem;
		}(_react2.default.Component);

		ListItem.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * If `true`, the ListItem will be a button.
		   */
		  button: _propTypes2.default.bool,
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.
		   */
		  dense: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the left and right padding is removed.
		   */
		  disableGutters: _propTypes2.default.bool,
		  /**
		   * If `true`, a 1px light border is added to the bottom of the list item.
		   */
		  divider: _propTypes2.default.bool
		} : {};

		ListItem.defaultProps = {
		  button: false,
		  component: 'li',
		  dense: false,
		  disabled: false,
		  disableGutters: false,
		  divider: false
		};

		ListItem.contextTypes = {
		  dense: _propTypes2.default.bool
		};

		ListItem.childContextTypes = {
		  dense: _propTypes2.default.bool
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiListItem' })(ListItem);
		}).call(this,require('_process'))
		},{"../ButtonBase":768,"../styles/withStyles":934,"../utils/reactHelpers":948,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],820:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      width: 36,
		      height: 36,
		      fontSize: theme.typography.pxToRem(18),
		      marginRight: 4
		    },
		    icon: {
		      width: 20,
		      height: 20,
		      fontSize: theme.typography.pxToRem(20)
		    }
		  };
		};

		/**
		 * It's a simple wrapper to apply the `dense` mode styles to `Avatar`.
		 */
		function ListItemAvatar(props, context) {
		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className']);


		  if (context.dense === undefined) {
		    process.env.NODE_ENV !== "production" ? (0, _warning2.default)(false, 'Material-UI: <ListItemAvatar> is a simple wrapper to apply the dense styles\n      to <Avatar>. You do not need it unless you are controlling the <List> dense property.') : void 0;
		    return props.children;
		  }

		  return _react2.default.cloneElement(children, (0, _extends3.default)({
		    className: (0, _classnames2.default)((0, _defineProperty3.default)({}, classes.root, context.dense), classNameProp, children.props.className),
		    childrenClassName: (0, _classnames2.default)((0, _defineProperty3.default)({}, classes.icon, context.dense), children.props.childrenClassName)
		  }, other));
		}

		ListItemAvatar.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component, normally `Avatar`.
		   */
		  children: _propTypes2.default.element.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string
		} : {};

		ListItemAvatar.contextTypes = {
		  dense: _propTypes2.default.bool
		};

		ListItemAvatar.muiName = 'ListItemAvatar';

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiListItemAvatar' })(ListItemAvatar);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016,"warning":1054}],821:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      height: 24,
		      marginRight: theme.spacing.unit * 2,
		      width: 24,
		      color: theme.palette.action.active,
		      flexShrink: 0
		    }
		  };
		};

		/**
		 * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.
		 */
		function ListItemIcon(props) {
		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className']);


		  return _react2.default.cloneElement(children, (0, _extends3.default)({
		    className: (0, _classnames2.default)(classes.root, classNameProp, children.props.className)
		  }, other));
		}

		ListItemIcon.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component, normally `Icon`, `SvgIcon`,
		   * or a `material-ui-icons` SVG icon component.
		   */
		  children: _propTypes2.default.element.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiListItemIcon' })(ListItemIcon);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],822:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      position: 'absolute',
		      right: 4,
		      top: '50%',
		      marginTop: -theme.spacing.unit * 3
		    }
		  };
		};

		function ListItemSecondaryAction(props) {
		  var children = props.children,
		      classes = props.classes,
		      className = props.className,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className']);


		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
		    children
		  );
		}

		ListItemSecondaryAction.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component, normally an `IconButton` or selection control.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string
		} : {};

		ListItemSecondaryAction.muiName = 'ListItemSecondaryAction';

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiListItemSecondaryAction' })(ListItemSecondaryAction);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],823:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Typography = require('../Typography');

		var _Typography2 = _interopRequireDefault(_Typography);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      flex: '1 1 auto',
		      padding: '0 16px',
		      '&:first-child': {
		        paddingLeft: 0
		      }
		    },
		    inset: {
		      '&:first-child': {
		        paddingLeft: theme.spacing.unit * 7
		      }
		    },
		    dense: {
		      fontSize: theme.typography.pxToRem(13)
		    },
		    text: {}, // Present to allow external customization
		    textDense: {
		      fontSize: 'inherit'
		    }
		  };
		};

		function ListItemText(props, context) {
		  var _classNames;

		  var classes = props.classes,
		      classNameProp = props.className,
		      disableTypography = props.disableTypography,
		      inset = props.inset,
		      primary = props.primary,
		      secondary = props.secondary,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'disableTypography', 'inset', 'primary', 'secondary']);
		  var dense = context.dense;

		  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.dense, dense), (0, _defineProperty3.default)(_classNames, classes.inset, inset), _classNames), classNameProp);

		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: className }, other),
		    primary && (disableTypography ? primary : _react2.default.createElement(
		      _Typography2.default,
		      {
		        type: 'subheading',
		        className: (0, _classnames2.default)(classes.text, (0, _defineProperty3.default)({}, classes.textDense, dense))
		      },
		      primary
		    )),
		    secondary && (disableTypography ? secondary : _react2.default.createElement(
		      _Typography2.default,
		      {
		        color: 'secondary',
		        type: 'body1',
		        className: (0, _classnames2.default)(classes.text, (0, _defineProperty3.default)({}, classes.textDense, dense))
		      },
		      secondary
		    ))
		  );
		}

		ListItemText.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the children won't be wrapped by a typography component.
		   * For instance, that can be useful to can render an h4 instead of a
		   */
		  disableTypography: _propTypes2.default.bool,
		  /**
		   * If `true`, the children will be indented.
		   * This should be used if there is no left avatar or left icon.
		   */
		  inset: _propTypes2.default.bool,
		  primary: _propTypes2.default.node,
		  secondary: _propTypes2.default.node
		} : {};

		ListItemText.defaultProps = {
		  disableTypography: false,
		  inset: false,
		  primary: false,
		  secondary: false
		};

		ListItemText.contextTypes = {
		  dense: _propTypes2.default.bool
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiListItemText' })(ListItemText);
		}).call(this,require('_process'))
		},{"../Typography":884,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],824:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _helpers = require('../utils/helpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      boxSizing: 'border-box',
		      lineHeight: '48px',
		      listStyle: 'none',
		      paddingLeft: theme.spacing.unit * 2,
		      paddingRight: theme.spacing.unit * 2,
		      color: theme.palette.text.secondary,
		      fontFamily: theme.typography.fontFamily,
		      fontWeight: theme.typography.fontWeightMedium,
		      fontSize: theme.typography.pxToRem(theme.typography.fontSize)
		    },
		    colorPrimary: {
		      color: theme.palette.primary[500]
		    },
		    colorInherit: {
		      color: 'inherit'
		    },
		    inset: {
		      paddingLeft: theme.spacing.unit * 9
		    },
		    sticky: {
		      position: 'sticky',
		      top: 0,
		      zIndex: 1,
		      backgroundColor: 'inherit'
		    }
		  };
		};

		function ListSubheader(props) {
		  var _classNames;

		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      color = props.color,
		      ComponentProp = props.component,
		      disableSticky = props.disableSticky,
		      inset = props.inset,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'color', 'component', 'disableSticky', 'inset']);

		  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'default'), (0, _defineProperty3.default)(_classNames, classes.inset, inset), (0, _defineProperty3.default)(_classNames, classes.sticky, !disableSticky), _classNames), classNameProp);

		  return _react2.default.createElement(
		    ComponentProp,
		    (0, _extends3.default)({ className: className }, other),
		    children
		  );
		}

		ListSubheader.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The color of the component. It's using the theme palette when that makes sense.
		   */
		  color: _propTypes2.default.oneOf(['default', 'primary', 'inherit']),
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * If `true`, the List Subheader will not stick to the top during scroll.
		   */
		  disableSticky: _propTypes2.default.bool,
		  /**
		   * If `true`, the List Subheader will be indented.
		   */
		  inset: _propTypes2.default.bool
		} : {};

		ListSubheader.defaultProps = {
		  color: 'default',
		  component: 'li',
		  disableSticky: false,
		  inset: false
		};

		ListSubheader.muiName = 'ListSubheader';

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiListSubheader' })(ListSubheader);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"../utils/helpers":945,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],825:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _List = require('./List');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_List).default;
		  }
		});

		var _ListItem = require('./ListItem');

		Object.defineProperty(exports, 'ListItem', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ListItem).default;
		  }
		});

		var _ListItemAvatar = require('./ListItemAvatar');

		Object.defineProperty(exports, 'ListItemAvatar', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ListItemAvatar).default;
		  }
		});

		var _ListItemText = require('./ListItemText');

		Object.defineProperty(exports, 'ListItemText', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ListItemText).default;
		  }
		});

		var _ListItemIcon = require('./ListItemIcon');

		Object.defineProperty(exports, 'ListItemIcon', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ListItemIcon).default;
		  }
		});

		var _ListItemSecondaryAction = require('./ListItemSecondaryAction');

		Object.defineProperty(exports, 'ListItemSecondaryAction', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ListItemSecondaryAction).default;
		  }
		});

		var _ListSubheader = require('./ListSubheader');

		Object.defineProperty(exports, 'ListSubheader', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ListSubheader).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./List":818,"./ListItem":819,"./ListItemAvatar":820,"./ListItemIcon":821,"./ListItemSecondaryAction":822,"./ListItemText":823,"./ListSubheader":824}],826:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _reactDom = require('react-dom');

		var _scrollbarSize = require('dom-helpers/util/scrollbarSize');

		var _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Popover = require('../Popover');

		var _Popover2 = _interopRequireDefault(_Popover);

		var _MenuList = require('./MenuList');

		var _MenuList2 = _interopRequireDefault(_MenuList);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var RTL_ORIGIN = {
		  vertical: 'top',
		  horizontal: 'right'
		}; // @inheritedComponent Popover

		var LTR_ORIGIN = {
		  vertical: 'top',
		  horizontal: 'left'
		};

		var styles = exports.styles = {
		  paper: {
		    // specZ: The maximum height of a simple menu should be one or more rows less than the view
		    // height. This ensures a tappable area outside of the simple menu with which to dismiss
		    // the menu.
		    maxHeight: 'calc(100vh - 96px)',
		    // Add iOS momentum scrolling.
		    WebkitOverflowScrolling: 'touch'
		  }
		};

		var Menu = function (_React$Component) {
		  (0, _inherits3.default)(Menu, _React$Component);

		  function Menu() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Menu);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Menu.__proto__ || (0, _getPrototypeOf2.default)(Menu)).call.apply(_ref, [this].concat(args))), _this), _this.getContentAnchorEl = function () {
		      if (!_this.menuList || !_this.menuList.selectedItem) {
		        return (0, _reactDom.findDOMNode)(_this.menuList).firstChild;
		      }

		      return (0, _reactDom.findDOMNode)(_this.menuList.selectedItem);
		    }, _this.menuList = undefined, _this.focus = function () {
		      if (_this.menuList && _this.menuList.selectedItem) {
		        (0, _reactDom.findDOMNode)(_this.menuList.selectedItem).focus();
		        return;
		      }

		      var menuList = (0, _reactDom.findDOMNode)(_this.menuList);
		      if (menuList && menuList.firstChild) {
		        menuList.firstChild.focus();
		      }
		    }, _this.handleEnter = function (element) {
		      var theme = _this.props.theme;


		      var menuList = (0, _reactDom.findDOMNode)(_this.menuList);

		      // Focus so the scroll computation of the Popover works as expected.
		      _this.focus();

		      // Let's ignore that piece of logic if users are already overriding the width
		      // of the menu.

		      if (menuList && element.clientHeight < menuList.clientHeight && !menuList.style.width) {
		        var size = (0, _scrollbarSize2.default)() + 'px';

		        menuList.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = size;

		        menuList.style.width = 'calc(100% + ' + size + ')';
		      }

		      if (_this.props.onEnter) {
		        _this.props.onEnter(element);
		      }
		    }, _this.handleListKeyDown = function (event, key) {
		      if (key === 'tab') {
		        event.preventDefault();

		        if (_this.props.onClose) {
		          _this.props.onClose(event);
		        }
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Menu, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      if (this.props.open) {
		        this.focus();
		      }
		    }
		  }, {
		    key: 'componentDidUpdate',
		    value: function componentDidUpdate(prevProps) {
		      if (!prevProps.open && this.props.open) {
		        // Needs to refocus as when a menu is rendered into another Modal,
		        // the first modal might change the focus to prevent any leak.
		        this.focus();
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this2 = this;

		      var _props = this.props,
		          children = _props.children,
		          classes = _props.classes,
		          MenuListProps = _props.MenuListProps,
		          onEnter = _props.onEnter,
		          open = _props.open,
		          _props$PaperProps = _props.PaperProps,
		          PaperProps = _props$PaperProps === undefined ? {} : _props$PaperProps,
		          PopoverClasses = _props.PopoverClasses,
		          theme = _props.theme,
		          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'classes', 'MenuListProps', 'onEnter', 'open', 'PaperProps', 'PopoverClasses', 'theme']);


		      var themeDirection = theme && theme.direction;
		      return _react2.default.createElement(
		        _Popover2.default,
		        (0, _extends3.default)({
		          getContentAnchorEl: this.getContentAnchorEl,
		          classes: PopoverClasses,
		          onEnter: this.handleEnter,
		          open: open,
		          anchorOrigin: themeDirection === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,
		          transformOrigin: themeDirection === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,
		          PaperProps: (0, _extends3.default)({}, PaperProps, {
		            classes: (0, _extends3.default)({}, PaperProps.classes, {
		              root: classes.paper
		            })
		          })
		        }, other),
		        _react2.default.createElement(
		          _MenuList2.default,
		          (0, _extends3.default)({
		            role: 'menu',
		            onKeyDown: this.handleListKeyDown
		          }, MenuListProps, {
		            ref: function ref(node) {
		              _this2.menuList = node;
		            }
		          }),
		          children
		        )
		      );
		    }
		  }]);
		  return Menu;
		}(_react2.default.Component);

		Menu.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The DOM element used to set the position of the menu.
		   */
		  anchorEl: _propTypes2.default.object,
		  /**
		   * Menu contents, normally `MenuItem`s.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * Properties applied to the `MenuList` element.
		   */
		  MenuListProps: _propTypes2.default.object,
		  /**
		   * Callback fired when the component requests to be closed.
		   *
		   * @param {object} event The event source of the callback
		   */
		  onClose: _propTypes2.default.func,
		  /**
		   * Callback fired before the Menu enters.
		   */
		  onEnter: _propTypes2.default.func,
		  /**
		   * Callback fired when the Menu has entered.
		   */
		  onEntered: _propTypes2.default.func,
		  /**
		   * Callback fired when the Menu is entering.
		   */
		  onEntering: _propTypes2.default.func,
		  /**
		   * Callback fired before the Menu exits.
		   */
		  onExit: _propTypes2.default.func,
		  /**
		   * Callback fired when the Menu has exited.
		   */
		  onExited: _propTypes2.default.func,
		  /**
		   * Callback fired when the Menu is exiting.
		   */
		  onExiting: _propTypes2.default.func,
		  /**
		   * If `true`, the menu is visible.
		   */
		  open: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  PaperProps: _propTypes2.default.object,
		  /**
		   * `classes` property applied to the `Popover` element.
		   */
		  PopoverClasses: _propTypes2.default.object,
		  /**
		   * @ignore
		   */
		  theme: _propTypes2.default.object.isRequired,
		  /**
		   * The length of the transition in `ms`, or 'auto'
		   */
		  transitionDuration: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number }), _propTypes2.default.oneOf(['auto'])])
		} : {};

		Menu.defaultProps = {
		  open: false,
		  transitionDuration: 'auto'
		};

		exports.default = (0, _withStyles2.default)(styles, { withTheme: true, name: 'MuiMenu' })(Menu);
		}).call(this,require('_process'))
		},{"../Popover":837,"../styles/withStyles":934,"./MenuList":828,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"dom-helpers/util/scrollbarSize":663,"prop-types":961,"react":1016,"react-dom":971}],827:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _ListItem = require('../List/ListItem');

		var _ListItem2 = _interopRequireDefault(_ListItem);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: (0, _extends3.default)({}, theme.typography.subheading, {
		      height: 24,
		      boxSizing: 'content-box',
		      background: 'none',
		      overflow: 'hidden',
		      textOverflow: 'ellipsis',
		      whiteSpace: 'nowrap',
		      '&:focus': {
		        background: theme.palette.text.divider
		      },
		      '&:hover': {
		        backgroundColor: theme.palette.text.divider
		      }
		    }),
		    selected: {
		      backgroundColor: theme.palette.text.divider
		    }
		  };
		}; // @inheritedComponent ListItem

		function MenuItem(props) {
		  var classes = props.classes,
		      classNameProp = props.className,
		      component = props.component,
		      selected = props.selected,
		      role = props.role,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'component', 'selected', 'role']);


		  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.selected, selected), classNameProp);

		  return _react2.default.createElement(_ListItem2.default, (0, _extends3.default)({
		    button: true,
		    role: role,
		    tabIndex: -1,
		    className: className,
		    component: component
		  }, other));
		}

		MenuItem.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Menu item contents.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * @ignore
		   */
		  role: _propTypes2.default.string,
		  /**
		   * Use to apply selected styling.
		   */
		  selected: _propTypes2.default.bool
		} : {};

		MenuItem.defaultProps = {
		  role: 'menuitem',
		  selected: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiMenuItem' })(MenuItem);
		}).call(this,require('_process'))
		},{"../List/ListItem":819,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],828:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

		var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _reactDom = require('react-dom');

		var _keycode = require('keycode');

		var _keycode2 = _interopRequireDefault(_keycode);

		var _contains = require('dom-helpers/query/contains');

		var _contains2 = _interopRequireDefault(_contains);

		var _activeElement = require('dom-helpers/activeElement');

		var _activeElement2 = _interopRequireDefault(_activeElement);

		var _ownerDocument = require('dom-helpers/ownerDocument');

		var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

		var _List = require('../List');

		var _List2 = _interopRequireDefault(_List);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent List

		var MenuList = function (_React$Component) {
		  (0, _inherits3.default)(MenuList, _React$Component);

		  function MenuList() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, MenuList);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = MenuList.__proto__ || (0, _getPrototypeOf2.default)(MenuList)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      currentTabIndex: undefined
		    }, _this.list = undefined, _this.selectedItem = undefined, _this.blurTimer = undefined, _this.handleBlur = function (event) {
		      _this.blurTimer = setTimeout(function () {
		        if (_this.list) {
		          var list = (0, _reactDom.findDOMNode)(_this.list);
		          var currentFocus = (0, _activeElement2.default)((0, _ownerDocument2.default)(list));
		          if (!(0, _contains2.default)(list, currentFocus)) {
		            _this.resetTabIndex();
		          }
		        }
		      }, 30);

		      if (_this.props.onBlur) {
		        _this.props.onBlur(event);
		      }
		    }, _this.handleKeyDown = function (event) {
		      var list = (0, _reactDom.findDOMNode)(_this.list);
		      var key = (0, _keycode2.default)(event);
		      var currentFocus = (0, _activeElement2.default)((0, _ownerDocument2.default)(list));

		      if ((key === 'up' || key === 'down') && (!currentFocus || currentFocus && !(0, _contains2.default)(list, currentFocus))) {
		        if (_this.selectedItem) {
		          (0, _reactDom.findDOMNode)(_this.selectedItem).focus();
		        } else {
		          list.firstChild.focus();
		        }
		      } else if (key === 'down') {
		        event.preventDefault();
		        if (currentFocus.nextElementSibling) {
		          currentFocus.nextElementSibling.focus();
		        }
		      } else if (key === 'up') {
		        event.preventDefault();
		        if (currentFocus.previousElementSibling) {
		          currentFocus.previousElementSibling.focus();
		        }
		      }

		      if (_this.props.onKeyDown) {
		        _this.props.onKeyDown(event, key);
		      }
		    }, _this.handleItemFocus = function (event) {
		      var list = (0, _reactDom.findDOMNode)(_this.list);
		      if (list) {
		        for (var i = 0; i < list.children.length; i += 1) {
		          if (list.children[i] === event.currentTarget) {
		            _this.setTabIndex(i);
		            break;
		          }
		        }
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(MenuList, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      this.resetTabIndex();
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      clearTimeout(this.blurTimer);
		    }
		  }, {
		    key: 'setTabIndex',
		    value: function setTabIndex(index) {
		      this.setState({ currentTabIndex: index });
		    }
		  }, {
		    key: 'focus',
		    value: function focus() {
		      var currentTabIndex = this.state.currentTabIndex;

		      var list = (0, _reactDom.findDOMNode)(this.list);
		      if (!list || !list.children || !list.firstChild) {
		        return;
		      }

		      if (currentTabIndex && currentTabIndex >= 0) {
		        list.children[currentTabIndex].focus();
		      } else {
		        list.firstChild.focus();
		      }
		    }
		  }, {
		    key: 'resetTabIndex',
		    value: function resetTabIndex() {
		      var list = (0, _reactDom.findDOMNode)(this.list);
		      var currentFocus = (0, _activeElement2.default)((0, _ownerDocument2.default)(list));
		      var items = [].concat((0, _toConsumableArray3.default)(list.children));
		      var currentFocusIndex = items.indexOf(currentFocus);

		      if (currentFocusIndex !== -1) {
		        return this.setTabIndex(currentFocusIndex);
		      }

		      if (this.selectedItem) {
		        return this.setTabIndex(items.indexOf((0, _reactDom.findDOMNode)(this.selectedItem)));
		      }

		      return this.setTabIndex(0);
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this2 = this;

		      var _props = this.props,
		          children = _props.children,
		          className = _props.className,
		          onBlur = _props.onBlur,
		          onKeyDown = _props.onKeyDown,
		          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'className', 'onBlur', 'onKeyDown']);


		      return _react2.default.createElement(
		        _List2.default,
		        (0, _extends3.default)({
		          role: 'menu',
		          rootRef: function rootRef(node) {
		            _this2.list = node;
		          },
		          className: className,
		          onKeyDown: this.handleKeyDown,
		          onBlur: this.handleBlur
		        }, other),
		        _react2.default.Children.map(children, function (child, index) {
		          if (!_react2.default.isValidElement(child)) {
		            return null;
		          }

		          return _react2.default.cloneElement(child, {
		            tabIndex: index === _this2.state.currentTabIndex ? 0 : -1,
		            ref: child.props.selected ? function (node) {
		              _this2.selectedItem = node;
		            } : undefined,
		            onFocus: _this2.handleItemFocus
		          });
		        })
		      );
		    }
		  }]);
		  return MenuList;
		}(_react2.default.Component);

		MenuList.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * MenuList contents, normally `MenuItem`s.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  onBlur: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onKeyDown: _propTypes2.default.func
		} : {};

		exports.default = MenuList;
		}).call(this,require('_process'))
		},{"../List":825,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"babel-runtime/helpers/toConsumableArray":525,"dom-helpers/activeElement":653,"dom-helpers/ownerDocument":659,"dom-helpers/query/contains":660,"keycode":731,"prop-types":961,"react":1016,"react-dom":971}],829:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Menu = require('./Menu');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Menu).default;
		  }
		});

		var _MenuList = require('./MenuList');

		Object.defineProperty(exports, 'MenuList', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_MenuList).default;
		  }
		});

		var _MenuItem = require('./MenuItem');

		Object.defineProperty(exports, 'MenuItem', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_MenuItem).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Menu":826,"./MenuItem":827,"./MenuList":828}],830:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      zIndex: -1,
		      width: '100%',
		      height: '100%',
		      position: 'fixed',
		      top: 0,
		      left: 0,
		      // Remove grey highlight
		      WebkitTapHighlightColor: theme.palette.common.transparent,
		      backgroundColor: theme.palette.common.lightBlack,
		      transition: theme.transitions.create('opacity'),
		      willChange: 'opacity',
		      opacity: 0
		    },
		    invisible: {
		      backgroundColor: theme.palette.common.transparent
		    }
		  };
		};

		/**
		 * @ignore - internal component.
		 */
		function Backdrop(props) {
		  var classes = props.classes,
		      classNameProp = props.className,
		      invisible = props.invisible,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'invisible']);


		  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.invisible, invisible), classNameProp);

		  return _react2.default.createElement('div', (0, _extends3.default)({ className: className, 'aria-hidden': 'true' }, other));
		}

		Backdrop.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the backdrop is invisible.
		   */
		  invisible: _propTypes2.default.bool
		} : {};

		Backdrop.defaultProps = {
		  invisible: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiBackdrop' })(Backdrop);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],831:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _keys = require('babel-runtime/core-js/object/keys');

		var _keys2 = _interopRequireDefault(_keys);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _reactDom = require('react-dom');

		var _reactDom2 = _interopRequireDefault(_reactDom);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _keycode = require('keycode');

		var _keycode2 = _interopRequireDefault(_keycode);

		var _inDOM = require('dom-helpers/util/inDOM');

		var _inDOM2 = _interopRequireDefault(_inDOM);

		var _contains = require('dom-helpers/query/contains');

		var _contains2 = _interopRequireDefault(_contains);

		var _activeElement = require('dom-helpers/activeElement');

		var _activeElement2 = _interopRequireDefault(_activeElement);

		var _ownerDocument = require('dom-helpers/ownerDocument');

		var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

		var _addEventListener = require('../utils/addEventListener');

		var _addEventListener2 = _interopRequireDefault(_addEventListener);

		var _helpers = require('../utils/helpers');

		var _Fade = require('../transitions/Fade');

		var _Fade2 = _interopRequireDefault(_Fade);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _modalManager = require('./modalManager');

		var _modalManager2 = _interopRequireDefault(_modalManager);

		var _Backdrop = require('./Backdrop');

		var _Backdrop2 = _interopRequireDefault(_Backdrop);

		var _Portal = require('../internal/Portal');

		var _Portal2 = _interopRequireDefault(_Portal);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// Modals don't open on the server so this won't break concurrency.
		// Could also put this on context.
		var modalManager = (0, _modalManager2.default)();

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'flex',
		      width: '100%',
		      height: '100%',
		      position: 'fixed',
		      zIndex: theme.zIndex.dialog,
		      top: 0,
		      left: 0
		    },
		    hidden: {
		      visibility: 'hidden'
		    }
		  };
		};

		/**
		 * The modal component provides a solid foundation for creating dialogs,
		 * popovers, or whatever else.
		 * The component renders its `children` node in front of a backdrop component.
		 *
		 * The `Modal` offers a few helpful features over using just a `Portal` component and some styles:
		 * - Manages dialog stacking when one-at-a-time just isn't enough.
		 * - Creates a backdrop, for disabling interaction below the modal.
		 * - It properly manages focus; moving to the modal content,
		 *   and keeping it there until the modal is closed.
		 * - It disables scrolling of the page content while open.
		 * - Adds the appropriate ARIA roles are automatically.
		 *
		 * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
		 */

		var Modal = function (_React$Component) {
		  (0, _inherits3.default)(Modal, _React$Component);

		  function Modal() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Modal);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Modal.__proto__ || (0, _getPrototypeOf2.default)(Modal)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Modal, [{
		    key: 'componentWillMount',
		    value: function componentWillMount() {
		      if (!this.props.show) {
		        this.setState({ exited: true });
		      }
		    }
		  }, {
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      this.mounted = true;
		      if (this.props.show) {
		        this.handleShow();
		      }
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      if (nextProps.show && this.state.exited) {
		        this.setState({ exited: false });
		      }
		    }
		  }, {
		    key: 'componentWillUpdate',
		    value: function componentWillUpdate(nextProps) {
		      if (!this.props.show && nextProps.show) {
		        this.checkForFocus();
		      }
		    }
		  }, {
		    key: 'componentDidUpdate',
		    value: function componentDidUpdate(prevProps) {
		      if (!prevProps.show && this.props.show) {
		        this.handleShow();
		      }
		      // We are waiting for the onExited callback to call handleHide.
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      if (this.props.show || !this.state.exited) {
		        this.handleHide();
		      }
		      this.mounted = false;
		    }
		  }, {
		    key: 'checkForFocus',
		    value: function checkForFocus() {
		      if (_inDOM2.default) {
		        this.lastFocus = (0, _activeElement2.default)();
		      }
		    }
		  }, {
		    key: 'restoreLastFocus',
		    value: function restoreLastFocus() {
		      if (this.lastFocus && this.lastFocus.focus) {
		        this.lastFocus.focus();
		        this.lastFocus = undefined;
		      }
		    }
		  }, {
		    key: 'handleShow',
		    value: function handleShow() {
		      var doc = (0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(this));
		      this.props.modalManager.add(this);
		      this.onDocumentKeyUpListener = (0, _addEventListener2.default)(doc, 'keyup', this.handleDocumentKeyUp);
		      this.onFocusListener = (0, _addEventListener2.default)(doc, 'focus', this.handleFocusListener, true);
		      this.focus();
		    }
		  }, {
		    key: 'focus',
		    value: function focus() {
		      var currentFocus = (0, _activeElement2.default)((0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(this)));
		      var modalContent = this.modal && this.modal.lastChild;
		      var focusInModal = currentFocus && (0, _contains2.default)(modalContent, currentFocus);

		      if (modalContent instanceof HTMLElement && !focusInModal) {
		        if (!modalContent.hasAttribute('tabIndex')) {
		          modalContent.setAttribute('tabIndex', -1);
		          process.env.NODE_ENV !== "production" ? (0, _warning2.default)(false, 'Material-UI: the modal content node does not accept focus. ' + 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to "-1".') : void 0;
		        }

		        modalContent.focus();
		      }
		    }
		  }, {
		    key: 'handleHide',
		    value: function handleHide() {
		      this.props.modalManager.remove(this);
		      if (this.onDocumentKeyUpListener) this.onDocumentKeyUpListener.remove();
		      if (this.onFocusListener) this.onFocusListener.remove();
		      this.restoreLastFocus();
		    }
		  }, {
		    key: 'renderBackdrop',
		    value: function renderBackdrop() {
		      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		      var _props = this.props,
		          BackdropClassName = _props.BackdropClassName,
		          BackdropComponent = _props.BackdropComponent,
		          BackdropInvisible = _props.BackdropInvisible,
		          BackdropTransitionDuration = _props.BackdropTransitionDuration,
		          show = _props.show;


		      return _react2.default.createElement(
		        _Fade2.default,
		        (0, _extends3.default)({ appear: true, 'in': show, timeout: BackdropTransitionDuration }, other),
		        _react2.default.createElement(BackdropComponent, {
		          invisible: BackdropInvisible,
		          className: BackdropClassName,
		          onClick: this.handleBackdropClick
		        })
		      );
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this2 = this;

		      var _props2 = this.props,
		          BackdropClassName = _props2.BackdropClassName,
		          BackdropComponent = _props2.BackdropComponent,
		          BackdropInvisible = _props2.BackdropInvisible,
		          BackdropTransitionDuration = _props2.BackdropTransitionDuration,
		          children = _props2.children,
		          classes = _props2.classes,
		          className = _props2.className,
		          disableBackdrop = _props2.disableBackdrop,
		          ignoreBackdropClick = _props2.ignoreBackdropClick,
		          ignoreEscapeKeyUp = _props2.ignoreEscapeKeyUp,
		          keepMounted = _props2.keepMounted,
		          modalManagerProp = _props2.modalManager,
		          onBackdropClick = _props2.onBackdropClick,
		          onClose = _props2.onClose,
		          onEnter = _props2.onEnter,
		          onEntered = _props2.onEntered,
		          onEntering = _props2.onEntering,
		          onEscapeKeyUp = _props2.onEscapeKeyUp,
		          onExit = _props2.onExit,
		          onExited = _props2.onExited,
		          onExiting = _props2.onExiting,
		          show = _props2.show,
		          other = (0, _objectWithoutProperties3.default)(_props2, ['BackdropClassName', 'BackdropComponent', 'BackdropInvisible', 'BackdropTransitionDuration', 'children', 'classes', 'className', 'disableBackdrop', 'ignoreBackdropClick', 'ignoreEscapeKeyUp', 'keepMounted', 'modalManager', 'onBackdropClick', 'onClose', 'onEnter', 'onEntered', 'onEntering', 'onEscapeKeyUp', 'onExit', 'onExited', 'onExiting', 'show']);


		      if (!keepMounted && !show && this.state.exited) {
		        return null;
		      }

		      var transitionCallbacks = {
		        onEnter: onEnter,
		        onEntering: onEntering,
		        onEntered: onEntered,
		        onExit: onExit,
		        onExiting: onExiting,
		        onExited: this.handleTransitionExited
		      };

		      var modalChild = _react2.default.Children.only(children);
		      var _modalChild$props = modalChild.props,
		          role = _modalChild$props.role,
		          tabIndex = _modalChild$props.tabIndex;

		      var childProps = {};

		      if (role === undefined) {
		        childProps.role = role === undefined ? 'document' : role;
		      }

		      if (tabIndex === undefined) {
		        childProps.tabIndex = tabIndex == null ? -1 : tabIndex;
		      }

		      var backdropProps = void 0;

		      // It's a Transition like component
		      if (modalChild.props.hasOwnProperty('in')) {
		        (0, _keys2.default)(transitionCallbacks).forEach(function (key) {
		          childProps[key] = (0, _helpers.createChainedFunction)(transitionCallbacks[key], modalChild.props[key]);
		        });
		      } else {
		        backdropProps = transitionCallbacks;
		      }

		      if ((0, _keys2.default)(childProps).length) {
		        modalChild = _react2.default.cloneElement(modalChild, childProps);
		      }

		      return _react2.default.createElement(
		        _Portal2.default,
		        {
		          open: true,
		          ref: function ref(node) {
		            _this2.mountNode = node ? node.getLayer() : null;
		          }
		        },
		        _react2.default.createElement(
		          'div',
		          (0, _extends3.default)({
		            className: (0, _classnames2.default)(classes.root, className, (0, _defineProperty3.default)({}, classes.hidden, this.state.exited))
		          }, other, {
		            ref: function ref(node) {
		              _this2.modal = node;
		            }
		          }),
		          !disableBackdrop && (!keepMounted || show || !this.state.exited) && this.renderBackdrop(backdropProps),
		          modalChild
		        )
		      );
		    }
		  }]);
		  return Modal;
		}(_react2.default.Component);

		var _initialiseProps = function _initialiseProps() {
		  var _this3 = this;

		  this.state = {
		    exited: false
		  };
		  this.onDocumentKeyUpListener = null;
		  this.onFocusListener = null;
		  this.mounted = false;
		  this.lastFocus = undefined;
		  this.modal = null;
		  this.mountNode = null;

		  this.handleFocusListener = function () {
		    if (!_this3.mounted || !_this3.props.modalManager.isTopModal(_this3)) {
		      return;
		    }

		    var currentFocus = (0, _activeElement2.default)((0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(_this3)));
		    var modalContent = _this3.modal && _this3.modal.lastChild;

		    if (modalContent instanceof HTMLElement && modalContent !== currentFocus && !(0, _contains2.default)(modalContent, currentFocus)) {
		      modalContent.focus();
		    }
		  };

		  this.handleDocumentKeyUp = function (event) {
		    if (!_this3.mounted || !_this3.props.modalManager.isTopModal(_this3)) {
		      return;
		    }

		    if ((0, _keycode2.default)(event) !== 'esc') {
		      return;
		    }

		    var _props3 = _this3.props,
		        onEscapeKeyUp = _props3.onEscapeKeyUp,
		        onClose = _props3.onClose,
		        ignoreEscapeKeyUp = _props3.ignoreEscapeKeyUp;


		    if (onEscapeKeyUp) {
		      onEscapeKeyUp(event);
		    }

		    if (onClose && !ignoreEscapeKeyUp) {
		      onClose(event);
		    }
		  };

		  this.handleBackdropClick = function (event) {
		    if (event.target !== event.currentTarget) {
		      return;
		    }

		    var _props4 = _this3.props,
		        onBackdropClick = _props4.onBackdropClick,
		        onClose = _props4.onClose,
		        ignoreBackdropClick = _props4.ignoreBackdropClick;


		    if (onBackdropClick) {
		      onBackdropClick(event);
		    }

		    if (onClose && !ignoreBackdropClick) {
		      onClose(event);
		    }
		  };

		  this.handleTransitionExited = function () {
		    if (_this3.props.onExited) {
		      var _props5;

		      (_props5 = _this3.props).onExited.apply(_props5, arguments);
		    }

		    _this3.setState({ exited: true });
		    _this3.handleHide();
		  };
		};

		Modal.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The CSS class name of the backdrop element.
		   */
		  BackdropClassName: _propTypes2.default.string,
		  /**
		   * Pass a component class to use as the backdrop.
		   */
		  BackdropComponent: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * If `true`, the backdrop is invisible.
		   */
		  BackdropInvisible: _propTypes2.default.bool,
		  /**
		   * The duration for the backdrop transition, in milliseconds.
		   * You may specify a single timeout for all transitions, or individually with an object.
		   */
		  BackdropTransitionDuration: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number })]),
		  /**
		   * A single child content element.
		   */
		  children: _propTypes2.default.element,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the backdrop is disabled.
		   */
		  disableBackdrop: _propTypes2.default.bool,
		  /**
		   * If `true`, clicking the backdrop will not fire the `onClose` callback.
		   */
		  ignoreBackdropClick: _propTypes2.default.bool,
		  /**
		   * If `true`, hitting escape will not fire the `onClose` callback.
		   */
		  ignoreEscapeKeyUp: _propTypes2.default.bool,
		  /**
		   * Always keep the children in the DOM.
		   * This property can be useful in SEO situation or
		   * when you want to maximize the responsiveness of the Modal.
		   */
		  keepMounted: _propTypes2.default.bool,
		  /**
		   * Instance of the modal manager.
		   */
		  modalManager: _propTypes2.default.object,
		  /**
		   * Callback fires when the backdrop is clicked on.
		   */
		  onBackdropClick: _propTypes2.default.func,
		  /**
		   * Callback fired when the component requests to be closed.
		   *
		   * @param {object} event The event source of the callback
		   */
		  onClose: _propTypes2.default.func,
		  /**
		   * Callback fired before the modal is entering.
		   */
		  onEnter: _propTypes2.default.func,
		  /**
		   * Callback fired when the modal has entered.
		   */
		  onEntered: _propTypes2.default.func,
		  /**
		   * Callback fired when the modal is entering.
		   */
		  onEntering: _propTypes2.default.func,
		  /**
		   * Callback fires when the escape key is pressed and the modal is in focus.
		   */
		  onEscapeKeyUp: _propTypes2.default.func,
		  /**
		   * Callback fired before the modal is exiting.
		   */
		  onExit: _propTypes2.default.func,
		  /**
		   * Callback fired when the modal has exited.
		   */
		  onExited: _propTypes2.default.func,
		  /**
		   * Callback fired when the modal is exiting.
		   */
		  onExiting: _propTypes2.default.func,
		  /**
		   * If `true`, the Modal is visible.
		   */
		  show: _propTypes2.default.bool
		} : {};

		Modal.defaultProps = {
		  BackdropComponent: _Backdrop2.default,
		  BackdropInvisible: false,
		  BackdropTransitionDuration: 300,
		  disableBackdrop: false,
		  ignoreBackdropClick: false,
		  ignoreEscapeKeyUp: false,
		  keepMounted: false,
		  modalManager: modalManager
		};

		exports.default = (0, _withStyles2.default)(styles, { flip: false, name: 'MuiModal' })(Modal);
		}).call(this,require('_process'))
		},{"../internal/Portal":907,"../styles/withStyles":934,"../transitions/Fade":938,"../utils/addEventListener":943,"../utils/helpers":945,"./Backdrop":830,"./modalManager":833,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/core-js/object/keys":514,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"dom-helpers/activeElement":653,"dom-helpers/ownerDocument":659,"dom-helpers/query/contains":660,"dom-helpers/util/inDOM":662,"keycode":731,"prop-types":961,"react":1016,"react-dom":971,"warning":1054}],832:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Modal = require('./Modal');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Modal).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Modal":831}],833:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _isWindow = require('dom-helpers/query/isWindow');

		var _isWindow2 = _interopRequireDefault(_isWindow);

		var _ownerDocument = require('dom-helpers/ownerDocument');

		var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

		var _inDOM = require('dom-helpers/util/inDOM');

		var _inDOM2 = _interopRequireDefault(_inDOM);

		var _scrollbarSize = require('dom-helpers/util/scrollbarSize');

		var _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);

		var _manageAriaHidden = require('../utils/manageAriaHidden');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// Taken from https://github.com/react-bootstrap/react-overlays/blob/master/src/ModalManager.js

		function getPaddingRight(node) {
		  return parseInt(node.style.paddingRight || 0, 10);
		}

		// Do we have a scroll bar?
		function bodyIsOverflowing(node) {
		  var doc = (0, _ownerDocument2.default)(node);
		  var win = (0, _isWindow2.default)(doc);

		  // Takes in account potential non zero margin on the body.
		  var style = window.getComputedStyle(doc.body);
		  var marginLeft = parseInt(style.getPropertyValue('margin-left'), 10);
		  var marginRight = parseInt(style.getPropertyValue('margin-right'), 10);

		  return marginLeft + doc.body.clientWidth + marginRight < win.innerWidth;
		}

		function getContainer() {
		  var container = _inDOM2.default ? window.document.body : {};
		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(container !== null, '\nMaterial-UI: you are most likely evaluating the code before the\nbrowser has a chance to reach the <body>.\nPlease move the import at the end of the <body>.\n  ') : void 0;
		  return container;
		}
		/**
		 * State management helper for modals/layers.
		 * Simplified, but inspired by react-overlay's ModalManager class
		 *
		 * @internal Used by the Modal to ensure proper focus management.
		 */
		function createModalManager() {
		  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
		      _ref$hideSiblingNodes = _ref.hideSiblingNodes,
		      hideSiblingNodes = _ref$hideSiblingNodes === undefined ? true : _ref$hideSiblingNodes;

		  var modals = [];

		  var prevOverflow = void 0;
		  var prevPaddings = [];

		  function add(modal) {
		    var container = getContainer();
		    var modalIdx = modals.indexOf(modal);

		    if (modalIdx !== -1) {
		      return modalIdx;
		    }

		    modalIdx = modals.length;
		    modals.push(modal);

		    if (hideSiblingNodes) {
		      (0, _manageAriaHidden.hideSiblings)(container, modal.mountNode);
		    }

		    if (modals.length === 1) {
		      // Save our current overflow so we can revert
		      // back to it when all modals are closed!
		      prevOverflow = container.style.overflow;

		      if (bodyIsOverflowing(container)) {
		        prevPaddings = [getPaddingRight(container)];
		        var scrollbarSize = (0, _scrollbarSize2.default)();
		        container.style.paddingRight = prevPaddings[0] + scrollbarSize + 'px';

		        var fixedNodes = document.querySelectorAll('.mui-fixed');
		        for (var i = 0; i < fixedNodes.length; i += 1) {
		          var paddingRight = getPaddingRight(fixedNodes[i]);
		          prevPaddings.push(paddingRight);
		          fixedNodes[i].style.paddingRight = paddingRight + scrollbarSize + 'px';
		        }
		      }

		      container.style.overflow = 'hidden';
		    }

		    return modalIdx;
		  }

		  function remove(modal) {
		    var container = getContainer();
		    var modalIdx = modals.indexOf(modal);

		    if (modalIdx === -1) {
		      return modalIdx;
		    }

		    modals.splice(modalIdx, 1);

		    if (modals.length === 0) {
		      container.style.overflow = prevOverflow;
		      container.style.paddingRight = prevPaddings[0];

		      var fixedNodes = document.querySelectorAll('.mui-fixed');
		      for (var i = 0; i < fixedNodes.length; i += 1) {
		        fixedNodes[i].style.paddingRight = prevPaddings[i + 1] + 'px';
		      }

		      prevOverflow = undefined;
		      prevPaddings = [];
		      if (hideSiblingNodes) {
		        (0, _manageAriaHidden.showSiblings)(container, modal.mountNode);
		      }
		    } else if (hideSiblingNodes) {
		      // otherwise make sure the next top modal is visible to a SR
		      (0, _manageAriaHidden.ariaHidden)(false, modals[modals.length - 1].mountNode);
		    }

		    return modalIdx;
		  }

		  function isTopModal(modal) {
		    return !!modals.length && modals[modals.length - 1] === modal;
		  }

		  var modalManager = { add: add, remove: remove, isTopModal: isTopModal };

		  return modalManager;
		}

		exports.default = createModalManager;
		}).call(this,require('_process'))
		},{"../utils/manageAriaHidden":947,"_process":957,"dom-helpers/ownerDocument":659,"dom-helpers/query/isWindow":661,"dom-helpers/util/inDOM":662,"dom-helpers/util/scrollbarSize":663,"warning":1054}],834:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  var shadows = {};
		  theme.shadows.forEach(function (shadow, index) {
		    shadows['shadow' + index] = {
		      boxShadow: shadow
		    };
		  });

		  return (0, _extends3.default)({
		    root: {
		      backgroundColor: theme.palette.background.paper
		    },
		    rounded: {
		      borderRadius: 2
		    }
		  }, shadows);
		};

		function Paper(props) {
		  var classes = props.classes,
		      classNameProp = props.className,
		      ComponentProp = props.component,
		      square = props.square,
		      elevation = props.elevation,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'component', 'square', 'elevation']);


		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(elevation >= 0 && elevation < 25, 'Material-UI: this elevation `' + elevation + '` is not implemented.') : void 0;

		  var className = (0, _classnames2.default)(classes.root, classes['shadow' + (elevation >= 0 ? elevation : 0)], (0, _defineProperty3.default)({}, classes.rounded, !square), classNameProp);

		  return _react2.default.createElement(ComponentProp, (0, _extends3.default)({ className: className }, other));
		}

		Paper.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * @ignore
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * Shadow depth, corresponds to `dp` in the spec.
		   * It's accepting values between 0 and 24 inclusive.
		   */
		  elevation: _propTypes2.default.number,
		  /**
		   * If `true`, rounded corners are disabled.
		   */
		  square: _propTypes2.default.bool
		} : {};

		Paper.defaultProps = {
		  component: 'div',
		  elevation: 2,
		  square: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiPaper' })(Paper);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016,"warning":1054}],835:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Paper = require('./Paper');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Paper).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Paper":834}],836:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _reactDom = require('react-dom');

		var _reactDom2 = _interopRequireDefault(_reactDom);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _contains = require('dom-helpers/query/contains');

		var _contains2 = _interopRequireDefault(_contains);

		var _debounce = require('lodash/debounce');

		var _debounce2 = _interopRequireDefault(_debounce);

		var _reactEventListener = require('react-event-listener');

		var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Modal = require('../Modal');

		var _Modal2 = _interopRequireDefault(_Modal);

		var _Grow = require('../transitions/Grow');

		var _Grow2 = _interopRequireDefault(_Grow);

		var _Paper = require('../Paper');

		var _Paper2 = _interopRequireDefault(_Paper);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function getOffsetTop(rect, vertical) {
		  var offset = 0;

		  if (typeof vertical === 'number') {
		    offset = vertical;
		  } else if (vertical === 'center') {
		    offset = rect.height / 2;
		  } else if (vertical === 'bottom') {
		    offset = rect.height;
		  }

		  return offset;
		} // @inheritedComponent Modal

		function getOffsetLeft(rect, horizontal) {
		  var offset = 0;

		  if (typeof horizontal === 'number') {
		    offset = horizontal;
		  } else if (horizontal === 'center') {
		    offset = rect.width / 2;
		  } else if (horizontal === 'right') {
		    offset = rect.width;
		  }

		  return offset;
		}

		function getTransformOriginValue(transformOrigin) {
		  return [transformOrigin.horizontal, transformOrigin.vertical].map(function (n) {
		    return typeof n === 'number' ? n + 'px' : n;
		  }).join(' ');
		}

		// Sum the scrollTop between two elements.
		function getScrollParent(parent, child) {
		  var element = child;
		  var scrollTop = 0;

		  while (element && element !== parent) {
		    element = element.parentNode;
		    scrollTop += element.scrollTop;
		  }
		  return scrollTop;
		}

		var styles = exports.styles = {
		  paper: {
		    position: 'absolute',
		    overflowY: 'auto',
		    overflowX: 'hidden',
		    // So we see the popover when it's empty.
		    // It's most likely on issue on userland.
		    minWidth: 16,
		    minHeight: 16,
		    maxWidth: 'calc(100vw - 32px)',
		    maxHeight: 'calc(100vh - 32px)',
		    '&:focus': {
		      outline: 'none'
		    }
		  }
		};

		var Popover = function (_React$Component) {
		  (0, _inherits3.default)(Popover, _React$Component);

		  function Popover() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Popover);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Popover.__proto__ || (0, _getPrototypeOf2.default)(Popover)).call.apply(_ref, [this].concat(args))), _this), _this.componentWillUnmount = function () {
		      _this.handleResize.cancel();
		    }, _this.setPositioningStyles = function (element) {
		      if (element && element.style) {
		        var positioning = _this.getPositioningStyle(element);
		        element.style.top = positioning.top;
		        element.style.left = positioning.left;
		        element.style.transformOrigin = positioning.transformOrigin;
		      }
		    }, _this.getPositioningStyle = function (element) {
		      var marginThreshold = _this.props.marginThreshold;

		      // Check if the parent has requested anchoring on an inner content node

		      var contentAnchorOffset = _this.getContentAnchorOffset(element);
		      // Get the offset of of the anchoring element
		      var anchorOffset = _this.getAnchorOffset(contentAnchorOffset);

		      var elemRect = {
		        width: element.clientWidth,
		        height: element.clientHeight
		      };
		      // Get the transform origin point on the element itself
		      var transformOrigin = _this.getTransformOrigin(elemRect, contentAnchorOffset);

		      // Calculate element positioning
		      var top = anchorOffset.top - transformOrigin.vertical;
		      var left = anchorOffset.left - transformOrigin.horizontal;
		      var bottom = top + elemRect.height;
		      var right = left + elemRect.width;

		      // Window thresholds taking required margin into account
		      var heightThreshold = window.innerHeight - marginThreshold;
		      var widthThreshold = window.innerWidth - marginThreshold;

		      // Check if the vertical axis needs shifting
		      if (top < marginThreshold) {
		        var diff = top - marginThreshold;
		        top -= diff;
		        transformOrigin.vertical += diff;
		      } else if (bottom > heightThreshold) {
		        var _diff = bottom - heightThreshold;
		        top -= _diff;
		        transformOrigin.vertical += _diff;
		      }

		      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(elemRect.height < heightThreshold || !elemRect.height || !heightThreshold, ['Material-UI: the popover component is too tall.', 'Some part of it can not be seen on the screen (' + (elemRect.height - heightThreshold) + 'px).', 'Please consider adding a `max-height` to improve the user-experience.'].join('\n')) : void 0;

		      // Check if the horizontal axis needs shifting
		      if (left < marginThreshold) {
		        var _diff2 = left - marginThreshold;
		        left -= _diff2;
		        transformOrigin.horizontal += _diff2;
		      } else if (right > widthThreshold) {
		        var _diff3 = right - widthThreshold;
		        left -= _diff3;
		        transformOrigin.horizontal += _diff3;
		      }

		      return {
		        top: top + 'px',
		        left: left + 'px',
		        transformOrigin: getTransformOriginValue(transformOrigin)
		      };
		    }, _this.transitionEl = undefined, _this.handleGetOffsetTop = getOffsetTop, _this.handleGetOffsetLeft = getOffsetLeft, _this.handleEnter = function (element) {
		      if (_this.props.onEnter) {
		        _this.props.onEnter(element);
		      }

		      _this.setPositioningStyles(element);
		    }, _this.handleResize = (0, _debounce2.default)(function () {
		      var element = _reactDom2.default.findDOMNode(_this.transitionEl);
		      _this.setPositioningStyles(element);
		    }, 166), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Popover, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      if (this.props.action) {
		        this.props.action({
		          updatePosition: this.handleResize
		        });
		      }
		    }
		  }, {
		    key: 'getAnchorOffset',


		    // Returns the top/left offset of the position
		    // to attach to on the anchor element (or body if none is provided)
		    value: function getAnchorOffset(contentAnchorOffset) {
		      var _props = this.props,
		          anchorEl = _props.anchorEl,
		          anchorOrigin = _props.anchorOrigin,
		          anchorReference = _props.anchorReference,
		          anchorPosition = _props.anchorPosition;


		      if (anchorReference === 'anchorPosition') {
		        return anchorPosition;
		      }

		      var anchorElement = anchorEl || document.body;
		      var anchorRect = anchorElement.getBoundingClientRect();
		      var anchorVertical = contentAnchorOffset === 0 ? anchorOrigin.vertical : 'center';

		      return {
		        top: anchorRect.top + this.handleGetOffsetTop(anchorRect, anchorVertical),
		        left: anchorRect.left + this.handleGetOffsetLeft(anchorRect, anchorOrigin.horizontal)
		      };
		    }

		    // Returns the vertical offset of inner content to anchor the transform on if provided

		  }, {
		    key: 'getContentAnchorOffset',
		    value: function getContentAnchorOffset(element) {
		      var _props2 = this.props,
		          getContentAnchorEl = _props2.getContentAnchorEl,
		          anchorReference = _props2.anchorReference;

		      var contentAnchorOffset = 0;

		      if (getContentAnchorEl && anchorReference === 'anchorEl') {
		        var contentAnchorEl = getContentAnchorEl(element);

		        if (contentAnchorEl && (0, _contains2.default)(element, contentAnchorEl)) {
		          var scrollTop = getScrollParent(element, contentAnchorEl);
		          contentAnchorOffset = contentAnchorEl.offsetTop + contentAnchorEl.clientHeight / 2 - scrollTop || 0;
		        }

		        // != the default value
		        process.env.NODE_ENV !== "production" ? (0, _warning2.default)(this.props.anchorOrigin.vertical === 'top', ['Material-UI: you can not change the default `anchorOrigin.vertical` value ', 'when also providing the `getContentAnchorEl` property to the popover component.', 'Only use one of the two properties.', 'Set `getContentAnchorEl` to null or left `anchorOrigin.vertical` unchanged.'].join('\n')) : void 0;
		      }

		      return contentAnchorOffset;
		    }

		    // Return the base transform origin using the element
		    // and taking the content anchor offset into account if in use

		  }, {
		    key: 'getTransformOrigin',
		    value: function getTransformOrigin(elemRect) {
		      var contentAnchorOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
		      var transformOrigin = this.props.transformOrigin;

		      return {
		        vertical: this.handleGetOffsetTop(elemRect, transformOrigin.vertical) + contentAnchorOffset,
		        horizontal: this.handleGetOffsetLeft(elemRect, transformOrigin.horizontal)
		      };
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this2 = this;

		      var _props3 = this.props,
		          anchorEl = _props3.anchorEl,
		          anchorOrigin = _props3.anchorOrigin,
		          anchorPosition = _props3.anchorPosition,
		          anchorReference = _props3.anchorReference,
		          children = _props3.children,
		          classes = _props3.classes,
		          elevation = _props3.elevation,
		          getContentAnchorEl = _props3.getContentAnchorEl,
		          marginThreshold = _props3.marginThreshold,
		          onEnter = _props3.onEnter,
		          onEntered = _props3.onEntered,
		          onEntering = _props3.onEntering,
		          onExit = _props3.onExit,
		          onExited = _props3.onExited,
		          onExiting = _props3.onExiting,
		          open = _props3.open,
		          PaperProps = _props3.PaperProps,
		          role = _props3.role,
		          transformOrigin = _props3.transformOrigin,
		          transitionClasses = _props3.transitionClasses,
		          transitionDuration = _props3.transitionDuration,
		          action = _props3.action,
		          other = (0, _objectWithoutProperties3.default)(_props3, ['anchorEl', 'anchorOrigin', 'anchorPosition', 'anchorReference', 'children', 'classes', 'elevation', 'getContentAnchorEl', 'marginThreshold', 'onEnter', 'onEntered', 'onEntering', 'onExit', 'onExited', 'onExiting', 'open', 'PaperProps', 'role', 'transformOrigin', 'transitionClasses', 'transitionDuration', 'action']);


		      return _react2.default.createElement(
		        _Modal2.default,
		        (0, _extends3.default)({ show: open, BackdropInvisible: true }, other),
		        _react2.default.createElement(
		          _Grow2.default,
		          {
		            appear: true,
		            'in': open,
		            onEnter: this.handleEnter,
		            onEntering: onEntering,
		            onEntered: onEntered,
		            onExit: onExit,
		            onExiting: onExiting,
		            onExited: onExited,
		            role: role,
		            transitionClasses: transitionClasses,
		            timeout: transitionDuration,
		            rootRef: function rootRef(node) {
		              _this2.transitionEl = node;
		            }
		          },
		          _react2.default.createElement(
		            _Paper2.default,
		            (0, _extends3.default)({
		              className: classes.paper,
		              elevation: elevation
		            }, PaperProps),
		            _react2.default.createElement(_reactEventListener2.default, { target: 'window', onResize: this.handleResize }),
		            children
		          )
		        )
		      );
		    }
		  }]);
		  return Popover;
		}(_react2.default.Component);

		Popover.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * This is callback property. It's called by the component on mount.
		   * This is useful when you want to trigger an action programmatically.
		   * It currently only supports updatePosition() action.
		   *
		   * @param {object} actions This object contains all posible actions
		   * that can be triggered programmatically.
		   */
		  action: _propTypes2.default.func,
		  /**
		   * This is the DOM element that may be used
		   * to set the position of the popover.
		   */
		  anchorEl: _propTypes2.default.object,
		  /**
		   * This is the point on the anchor where the popover's
		   * `anchorEl` will attach to. This is not used when the
		   * anchorReference is 'anchorPosition'.
		   *
		   * Options:
		   * vertical: [top, center, bottom];
		   * horizontal: [left, center, right].
		   */
		  anchorOrigin: _propTypes2.default.shape({
		    horizontal: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.oneOf(['left', 'center', 'right'])]),
		    vertical: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.oneOf(['top', 'center', 'bottom'])])
		  }),
		  /**
		   * This is the position that may be used
		   * to set the position of the popover.
		   * The coordinates are relative to
		   * the application's client area.
		   */
		  anchorPosition: _propTypes2.default.shape({
		    top: _propTypes2.default.number,
		    left: _propTypes2.default.number
		  }),
		  /*
		   * This determines which anchor prop to refer to to set
		   * the position of the popover.
		   */
		  anchorReference: _propTypes2.default.oneOf(['anchorEl', 'anchorPosition']),
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * The elevation of the popover.
		   */
		  elevation: _propTypes2.default.number,
		  /**
		   * This function is called in order to retrieve the content anchor element.
		   * It's the opposite of the `anchorEl` property.
		   * The content anchor element should be an element inside the popover.
		   * It's used to correctly scroll and set the position of the popover.
		   * The positioning strategy tries to make the content anchor element just above the
		   * anchor element.
		   */
		  getContentAnchorEl: _propTypes2.default.func,
		  /**
		   * Specifies how close to the edge of the window the popover can appear.
		   */
		  marginThreshold: _propTypes2.default.number,
		  /**
		   * Callback fired when the component requests to be closed.
		   *
		   * @param {object} event The event source of the callback.
		   */
		  onClose: _propTypes2.default.func,
		  /**
		   * Callback fired before the component is entering.
		   */
		  onEnter: _propTypes2.default.func,
		  /**
		   * Callback fired when the component has entered.
		   */
		  onEntered: _propTypes2.default.func,
		  /**
		   * Callback fired when the component is entering.
		   */
		  onEntering: _propTypes2.default.func,
		  /**
		   * Callback fired before the component is exiting.
		   */
		  onExit: _propTypes2.default.func,
		  /**
		   * Callback fired when the component has exited.
		   */
		  onExited: _propTypes2.default.func,
		  /**
		   * Callback fired when the component is exiting.
		   */
		  onExiting: _propTypes2.default.func,
		  /**
		   * If `true`, the popover is visible.
		   */
		  open: _propTypes2.default.bool,
		  /**
		   * Properties applied to the `Paper` element.
		   */
		  PaperProps: _propTypes2.default.object,
		  /**
		   * @ignore
		   */
		  role: _propTypes2.default.string,
		  /**
		   * This is the point on the popover which
		   * will attach to the anchor's origin.
		   *
		   * Options:
		   * vertical: [top, center, bottom, x(px)];
		   * horizontal: [left, center, right, x(px)].
		   */
		  transformOrigin: _propTypes2.default.shape({
		    horizontal: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.oneOf(['left', 'center', 'right'])]),
		    vertical: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.oneOf(['top', 'center', 'bottom'])])
		  }),
		  /**
		   * The animation classNames applied to the component as it enters or exits.
		   * This property is a direct binding to [`CSSTransition.classNames`](https://reactcommunity.org/react-transition-group/#CSSTransition-prop-classNames).
		   */
		  transitionClasses: _propTypes2.default.shape({
		    appear: _propTypes2.default.string,
		    appearActive: _propTypes2.default.string,
		    enter: _propTypes2.default.string,
		    enterActive: _propTypes2.default.string,
		    exit: _propTypes2.default.string,
		    exitActive: _propTypes2.default.string
		  }),
		  /**
		   * Set to 'auto' to automatically calculate transition time based on height.
		   */
		  transitionDuration: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number }), _propTypes2.default.oneOf(['auto'])])
		} : {};

		Popover.defaultProps = {
		  anchorReference: 'anchorEl',
		  anchorOrigin: {
		    vertical: 'top',
		    horizontal: 'left'
		  },
		  elevation: 8,
		  marginThreshold: 16,
		  transformOrigin: {
		    vertical: 'top',
		    horizontal: 'left'
		  },
		  transitionDuration: 'auto'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiPopover' })(Popover);
		}).call(this,require('_process'))
		},{"../Modal":832,"../Paper":835,"../styles/withStyles":934,"../transitions/Grow":939,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"dom-helpers/query/contains":660,"lodash/debounce":740,"prop-types":961,"react":1016,"react-dom":971,"react-event-listener":972,"warning":1054}],837:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Popover = require('./Popover');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Popover).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Popover":836}],838:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var SIZE = 50;

		function getRelativeValue(value, min, max) {
		  var clampedValue = Math.min(Math.max(min, value), max);
		  return (clampedValue - min) / (max - min);
		}

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'inline-block'
		    },
		    primaryColor: {
		      color: theme.palette.primary[500]
		    },
		    accentColor: {
		      color: theme.palette.secondary.A200
		    },
		    svgIndeterminate: {
		      animation: 'mui-progress-circular-rotate 1.4s linear infinite'
		    },
		    svgDeterminate: {
		      transform: 'rotate(-90deg)'
		    },
		    circle: {
		      stroke: 'currentColor',
		      strokeLinecap: 'round'
		    },
		    circleIndeterminate: {
		      animation: 'mui-progress-circular-dash 1.4s ease-in-out infinite',
		      // Some default value that looks fine waiting for the animation to kicks in.
		      strokeDasharray: '80,200',
		      strokeDashoffset: 0
		    },
		    '@keyframes mui-progress-circular-rotate': {
		      '100%': {
		        transform: 'rotate(360deg)'
		      }
		    },
		    '@keyframes mui-progress-circular-dash': {
		      '0%': {
		        strokeDasharray: '1,200',
		        strokeDashoffset: 0
		      },
		      '50%': {
		        strokeDasharray: '100,200',
		        strokeDashoffset: -15
		      },
		      '100%': {
		        strokeDasharray: '100,200',
		        strokeDashoffset: -120
		      }
		    }
		  };
		};

		function CircularProgress(props) {
		  var _classNames;

		  var classes = props.classes,
		      className = props.className,
		      color = props.color,
		      max = props.max,
		      min = props.min,
		      mode = props.mode,
		      size = props.size,
		      style = props.style,
		      thickness = props.thickness,
		      value = props.value,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'color', 'max', 'min', 'mode', 'size', 'style', 'thickness', 'value']);


		  var rootProps = {};

		  var circleStyle = {};
		  if (mode === 'determinate') {
		    var relVal = getRelativeValue(value, min, max) * 100;
		    var circumference = 2 * Math.PI * (SIZE / 2 - 5);

		    circleStyle.strokeDashoffset = Math.round((100 - relVal) / 100 * circumference * 1000) / 1000 + 'px';
		    circleStyle.strokeDasharray = Math.round(circumference * 1000) / 1000;

		    rootProps['aria-valuenow'] = value;
		    rootProps['aria-valuemin'] = min;
		    rootProps['aria-valuemax'] = max;
		  }

		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({
		      className: (0, _classnames2.default)(classes.root, color !== 'inherit' && classes[color + 'Color'], className),
		      style: (0, _extends3.default)({ width: size, height: size }, style),
		      role: 'progressbar'
		    }, rootProps, other),
		    _react2.default.createElement(
		      'svg',
		      {
		        className: (0, _classnames2.default)((_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.svgIndeterminate, mode === 'indeterminate'), (0, _defineProperty3.default)(_classNames, classes.svgDeterminate, mode === 'determinate'), _classNames)),
		        viewBox: '0 0 ' + SIZE + ' ' + SIZE
		      },
		      _react2.default.createElement('circle', {
		        className: (0, _classnames2.default)(classes.circle, (0, _defineProperty3.default)({}, classes.circleIndeterminate, mode === 'indeterminate')),
		        style: circleStyle,
		        cx: SIZE / 2,
		        cy: SIZE / 2,
		        r: SIZE / 2 - 5,
		        fill: 'none',
		        strokeWidth: thickness
		      })
		    )
		  );
		}

		CircularProgress.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The color of the component. It's using the theme palette when that makes sense.
		   */
		  color: _propTypes2.default.oneOf(['primary', 'accent', 'inherit']),
		  /**
		   * The max value of progress in determinate mode.
		   */
		  max: _propTypes2.default.number,
		  /**
		   * The min value of progress in determinate mode.
		   */
		  min: _propTypes2.default.number,
		  /**
		   * The mode of show your progress. Indeterminate
		   * for when there is no value for progress.
		   * Determinate for controlled progress value.
		   */
		  mode: _propTypes2.default.oneOf(['determinate', 'indeterminate']),
		  /**
		   * The size of the circle.
		   */
		  size: _propTypes2.default.number,
		  /**
		   * @ignore
		   */
		  style: _propTypes2.default.object,
		  /**
		   * The thickness of the circle.
		   */
		  thickness: _propTypes2.default.number,
		  /**
		   * The value of progress in determinate mode.
		   */
		  value: _propTypes2.default.number
		} : {};

		CircularProgress.defaultProps = {
		  color: 'primary',
		  max: 100,
		  min: 0,
		  mode: 'indeterminate',
		  size: 40,
		  thickness: 3.6,
		  value: 0
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiCircularProgress', flip: false })(CircularProgress);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],839:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var TRANSITION_DURATION = 4; // 400ms

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      position: 'relative',
		      overflow: 'hidden',
		      height: 5
		    },
		    primaryColor: {
		      backgroundColor: theme.palette.primary[100]
		    },
		    primaryColorBar: {
		      backgroundColor: theme.palette.primary[500]
		    },
		    primaryDashed: {
		      background: 'radial-gradient(' + theme.palette.primary[100] + ' 0%, ' + theme.palette.primary[100] + ' 16%, transparent 42%)',
		      backgroundSize: '10px 10px',
		      backgroundPosition: '0px -23px'
		    },
		    accentColor: {
		      backgroundColor: theme.palette.secondary.A100
		    },
		    accentColorBar: {
		      backgroundColor: theme.palette.secondary.A400
		    },
		    accentDashed: {
		      background: 'radial-gradient(' + theme.palette.secondary.A100 + ' 0%, ' + theme.palette.secondary.A100 + ' 16%, transparent 42%)',
		      backgroundSize: '10px 10px',
		      backgroundPosition: '0px -23px'
		    },
		    bar: {
		      width: '100%',
		      position: 'absolute',
		      left: 0,
		      bottom: 0,
		      top: 0,
		      transition: 'transform 0.2s linear',
		      transformOrigin: 'left'
		    },
		    dashed: {
		      position: 'absolute',
		      marginTop: 0,
		      height: '100%',
		      width: '100%',
		      animation: 'buffer 3s infinite linear'
		    },
		    bufferBar2: {
		      transition: 'transform .' + TRANSITION_DURATION + 's linear'
		    },
		    rootBuffer: {
		      backgroundColor: 'transparent'
		    },
		    rootQuery: {
		      transform: 'rotate(180deg)'
		    },
		    indeterminateBar1: {
		      width: 'auto',
		      willChange: 'left, right',
		      animation: 'mui-indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'
		    },
		    indeterminateBar2: {
		      width: 'auto',
		      willChange: 'left, right',
		      animation: 'mui-indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) infinite',
		      animationDelay: '1.15s'
		    },
		    determinateBar1: {
		      willChange: 'transform',
		      transition: 'transform .' + TRANSITION_DURATION + 's linear'
		    },
		    bufferBar1: {
		      zIndex: 1,
		      transition: 'transform .' + TRANSITION_DURATION + 's linear'
		    },
		    bufferBar2Primary: {
		      transition: 'transform .' + TRANSITION_DURATION + 's linear',
		      backgroundColor: theme.palette.primary[100]
		    },
		    bufferBar2Accent: {
		      transition: 'transform .' + TRANSITION_DURATION + 's linear',
		      backgroundColor: theme.palette.secondary.A100
		    },
		    // Legends:
		    // || represents the viewport
		    // -  represents a light background
		    // x  represents a dark background
		    '@keyframes mui-indeterminate1': {
		      //  |-----|---x-||-----||-----|
		      '0%': {
		        left: '-35%',
		        right: '100%'
		      },
		      //  |-----|-----||-----||xxxx-|
		      '60%': {
		        left: '100%',
		        right: '-90%'
		      },
		      '100%': {
		        left: '100%',
		        right: '-90%'
		      }
		    },
		    '@keyframes mui-indeterminate2': {
		      //  |xxxxx|xxxxx||-----||-----|
		      '0%': {
		        left: '-200%',
		        right: '100%'
		      },
		      //  |-----|-----||-----||-x----|
		      '60%': {
		        left: '107%',
		        right: '-8%'
		      },
		      '100%': {
		        left: '107%',
		        right: '-8%'
		      }
		    },
		    '@keyframes buffer': {
		      '0%': {
		        opacity: 1,
		        backgroundPosition: '0px -23px'
		      },
		      '50%': {
		        opacity: 0,
		        backgroundPosition: '0px -23px'
		      },
		      '100%': {
		        opacity: 1,
		        backgroundPosition: '-200px -23px'
		      }
		    }
		  };
		};

		function LinearProgress(props) {
		  var _classNames, _classNames2, _classNames3, _classNames4;

		  var classes = props.classes,
		      className = props.className,
		      color = props.color,
		      mode = props.mode,
		      value = props.value,
		      valueBuffer = props.valueBuffer,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'color', 'mode', 'value', 'valueBuffer']);


		  var dashedClass = (0, _classnames2.default)(classes.dashed, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.primaryDashed, color === 'primary'), (0, _defineProperty3.default)(_classNames, classes.accentDashed, color === 'accent'), _classNames));

		  var rootClassName = (0, _classnames2.default)(classes.root, (_classNames2 = {}, (0, _defineProperty3.default)(_classNames2, classes.primaryColor, color === 'primary'), (0, _defineProperty3.default)(_classNames2, classes.accentColor, color === 'accent'), (0, _defineProperty3.default)(_classNames2, classes.rootBuffer, mode === 'buffer'), (0, _defineProperty3.default)(_classNames2, classes.rootQuery, mode === 'query'), _classNames2), className);
		  var primaryClassName = (0, _classnames2.default)(classes.bar, (_classNames3 = {}, (0, _defineProperty3.default)(_classNames3, classes.primaryColorBar, color === 'primary'), (0, _defineProperty3.default)(_classNames3, classes.accentColorBar, color === 'accent'), (0, _defineProperty3.default)(_classNames3, classes.indeterminateBar1, mode === 'indeterminate' || mode === 'query'), (0, _defineProperty3.default)(_classNames3, classes.determinateBar1, mode === 'determinate'), (0, _defineProperty3.default)(_classNames3, classes.bufferBar1, mode === 'buffer'), _classNames3));
		  var secondaryClassName = (0, _classnames2.default)(classes.bar, (_classNames4 = {}, (0, _defineProperty3.default)(_classNames4, classes.bufferBar2, mode === 'buffer'), (0, _defineProperty3.default)(_classNames4, classes.primaryColorBar, color === 'primary' && mode !== 'buffer'), (0, _defineProperty3.default)(_classNames4, classes.primaryColor, color === 'primary' && mode === 'buffer'), (0, _defineProperty3.default)(_classNames4, classes.accentColorBar, color === 'accent' && mode !== 'buffer'), (0, _defineProperty3.default)(_classNames4, classes.accentColor, color === 'accent' && mode === 'buffer'), (0, _defineProperty3.default)(_classNames4, classes.indeterminateBar2, mode === 'indeterminate' || mode === 'query'), _classNames4));
		  var inlineStyles = { primary: {}, secondary: {} };
		  var rootProps = {};

		  if (mode === 'determinate') {
		    if (value !== undefined) {
		      inlineStyles.primary.transform = 'scaleX(' + value / 100 + ')';
		      rootProps['aria-valuenow'] = Math.round(value);
		    } else {
		      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(false, 'Material-UI: you need to provide a value property ' + 'when LinearProgress is in determinate mode.') : void 0;
		    }
		  } else if (mode === 'buffer') {
		    if (value !== undefined) {
		      inlineStyles.primary.transform = 'scaleX(' + value / 100 + ')';
		      inlineStyles.secondary.transform = 'scaleX(' + (valueBuffer || 0) / 100 + ')';
		    } else {
		      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(false, 'Material-UI: you need to provide a value property when LinearProgress is ' + 'in buffer mode.') : void 0;
		    }
		  }

		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: rootClassName }, rootProps, other),
		    mode === 'buffer' ? _react2.default.createElement('div', { className: dashedClass }) : null,
		    _react2.default.createElement('div', { className: primaryClassName, style: inlineStyles.primary }),
		    mode === 'determinate' ? null : _react2.default.createElement('div', { className: secondaryClassName, style: inlineStyles.secondary })
		  );
		}

		LinearProgress.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The color of the component. It's using the theme palette when that makes sense.
		   */
		  color: _propTypes2.default.oneOf(['primary', 'accent']),
		  /**
		   * The mode of show your progress, indeterminate
		   * for when there is no value for progress.
		   */
		  mode: _propTypes2.default.oneOf(['determinate', 'indeterminate', 'buffer', 'query']),
		  /**
		   * The value of progress, only works in determinate and buffer mode.
		   * Value between 0 and 100.
		   */
		  value: _propTypes2.default.number,
		  /**
		   * The value of buffer, only works in buffer mode.
		   * Value between 0 and 100.
		   */
		  valueBuffer: _propTypes2.default.number
		} : {};

		LinearProgress.defaultProps = {
		  color: 'primary',
		  mode: 'indeterminate'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiLinearProgress' })(LinearProgress);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016,"warning":1054}],840:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _CircularProgress = require('./CircularProgress');

		Object.defineProperty(exports, 'CircularProgress', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_CircularProgress).default;
		  }
		});

		var _LinearProgress = require('./LinearProgress');

		Object.defineProperty(exports, 'LinearProgress', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_LinearProgress).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./CircularProgress":838,"./LinearProgress":839}],841:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _SwitchBase = require('../internal/SwitchBase');

		var _SwitchBase2 = _interopRequireDefault(_SwitchBase);

		var _RadioButtonChecked = require('../internal/svg-icons/RadioButtonChecked');

		var _RadioButtonChecked2 = _interopRequireDefault(_RadioButtonChecked);

		var _RadioButtonUnchecked = require('../internal/svg-icons/RadioButtonUnchecked');

		var _RadioButtonUnchecked2 = _interopRequireDefault(_RadioButtonUnchecked);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    default: {
		      color: theme.palette.text.secondary
		    },
		    checked: {
		      color: theme.palette.primary[500]
		    },
		    disabled: {
		      color: theme.palette.action.disabled
		    }
		  };
		};

		var _ref = _react2.default.createElement(_RadioButtonUnchecked2.default, null);

		var _ref2 = _react2.default.createElement(_RadioButtonChecked2.default, null);

		function Radio(props) {
		  return _react2.default.createElement(_SwitchBase2.default, (0, _extends3.default)({
		    inputType: 'radio',
		    icon: _ref,
		    checkedIcon: _ref2
		  }, props));
		}

		Radio.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * If `true`, the component is checked.
		   */
		  checked: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.string]),
		  /**
		   * The icon to display when the component is checked.
		   * If a string is provided, it will be used as a font ligature.
		   */
		  checkedIcon: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  defaultChecked: _propTypes2.default.bool,
		  /**
		   * If `true`, the switch will be disabled.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the ripple effect will be disabled.
		   */
		  disableRipple: _propTypes2.default.bool,
		  /**
		   * The icon to display when the component is unchecked.
		   * If a string is provided, it will be used as a font ligature.
		   */
		  icon: _propTypes2.default.node,
		  /**
		   * Properties applied to the `input` element.
		   */
		  inputProps: _propTypes2.default.object,
		  /**
		   * Use that property to pass a ref callback to the native input component.
		   */
		  inputRef: _propTypes2.default.func,
		  /**
		   * The input component property `type`.
		   */
		  inputType: _propTypes2.default.string,
		  /*
		   * @ignore
		   */
		  name: _propTypes2.default.string,
		  /**
		   * Callback fired when the state is changed.
		   *
		   * @param {object} event The event source of the callback
		   * @param {boolean} checked The `checked` value of the switch
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
		  /**
		   * The value of the component.
		   */
		  value: _propTypes2.default.string
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiRadio' })(Radio);
		}).call(this,require('_process'))
		},{"../internal/SwitchBase":908,"../internal/svg-icons/RadioButtonChecked":918,"../internal/svg-icons/RadioButtonUnchecked":919,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"prop-types":961,"react":1016}],842:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _FormGroup = require('../Form/FormGroup');

		var _FormGroup2 = _interopRequireDefault(_FormGroup);

		var _helpers = require('../utils/helpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent FormGroup

		var RadioGroup = function (_React$Component) {
		  (0, _inherits3.default)(RadioGroup, _React$Component);

		  function RadioGroup() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, RadioGroup);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = RadioGroup.__proto__ || (0, _getPrototypeOf2.default)(RadioGroup)).call.apply(_ref, [this].concat(args))), _this), _this.radios = [], _this.focus = function () {
		      if (!_this.radios || !_this.radios.length) {
		        return;
		      }

		      var focusRadios = _this.radios.filter(function (n) {
		        return !n.disabled;
		      });

		      if (!focusRadios.length) {
		        return;
		      }

		      var selectedRadio = (0, _helpers.find)(focusRadios, function (n) {
		        return n.checked;
		      });

		      if (selectedRadio) {
		        selectedRadio.focus();
		        return;
		      }

		      focusRadios[0].focus();
		    }, _this.handleRadioChange = function (event, checked) {
		      if (checked && _this.props.onChange) {
		        _this.props.onChange(event, event.target.value);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(RadioGroup, [{
		    key: 'render',
		    value: function render() {
		      var _this2 = this;

		      var _props = this.props,
		          children = _props.children,
		          name = _props.name,
		          value = _props.value,
		          onChange = _props.onChange,
		          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'name', 'value', 'onChange']);


		      this.radios = [];

		      return _react2.default.createElement(
		        _FormGroup2.default,
		        (0, _extends3.default)({ role: 'radiogroup' }, other),
		        _react2.default.Children.map(children, function (child, index) {
		          if (!_react2.default.isValidElement(child)) {
		            return null;
		          }

		          return _react2.default.cloneElement(child, {
		            key: index,
		            name: name,
		            inputRef: function inputRef(node) {
		              if (node) {
		                _this2.radios.push(node);
		              }
		            },
		            checked: value === child.props.value,
		            onChange: _this2.handleRadioChange
		          });
		        })
		      );
		    }
		  }]);
		  return RadioGroup;
		}(_react2.default.Component);

		RadioGroup.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * The name used to reference the value of the control.
		   */
		  name: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  onBlur: _propTypes2.default.func,
		  /**
		   * Callback fired when a radio button is selected.
		   *
		   * @param {object} event The event source of the callback
		   * @param {string} value The `value` of the selected radio button
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onKeyDown: _propTypes2.default.func,
		  /**
		   * Value of the selected radio button.
		   */
		  value: _propTypes2.default.string
		} : {};

		exports.default = RadioGroup;
		}).call(this,require('_process'))
		},{"../Form/FormGroup":799,"../utils/helpers":945,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"prop-types":961,"react":1016}],843:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Radio = require('./Radio');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Radio).default;
		  }
		});

		var _RadioGroup = require('./RadioGroup');

		Object.defineProperty(exports, 'RadioGroup', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_RadioGroup).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Radio":841,"./RadioGroup":842}],844:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _SelectInput = require('./SelectInput');

		var _SelectInput2 = _interopRequireDefault(_SelectInput);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Input = require('../Input');

		var _Input2 = _interopRequireDefault(_Input);

		var _reactHelpers = require('../utils/reactHelpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      position: 'relative',
		      width: '100%'
		    },
		    select: {
		      '-moz-appearance': 'none', // Remove Firefox custom style
		      '-webkit-appearance': 'none', // Fix SSR issue
		      appearance: 'none', // Reset
		      // When interacting quickly, the text can end up selected.
		      // Native select can't be selected either.
		      userSelect: 'none',
		      padding: '0 ' + theme.spacing.unit * 4 + 'px 2px 0',
		      width: 'calc(100% - ' + theme.spacing.unit * 4 + 'px)',
		      minWidth: theme.spacing.unit * 2, // So it doesn't collapse.
		      height: 'calc(1em + ' + (theme.spacing.unit * 2 - 2) + 'px)',
		      cursor: 'pointer',
		      '&:focus': {
		        // Show that it's not an text input
		        background: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',
		        borderRadius: 0 // Reset Chrome style
		      },
		      // Remove Firefox focus border
		      '&:-moz-focusring': {
		        color: 'transparent',
		        textShadow: '0 0 0 #000'
		      },
		      // Remove IE11 arrow
		      '&::-ms-expand': {
		        display: 'none'
		      }
		    },
		    selectMenu: {
		      width: 'auto', // Fix Safari textOverflow
		      textOverflow: 'ellipsis',
		      whiteSpace: 'nowrap',
		      overflow: 'hidden',
		      lineHeight: 'calc(1em + ' + (theme.spacing.unit * 2 - 2) + 'px)'
		    },
		    disabled: {
		      cursor: 'default'
		    },
		    icon: {
		      position: 'absolute',
		      right: 0,
		      top: 4,
		      color: theme.palette.text.secondary,
		      'pointer-events': 'none' // Don't block pointer events on the select under the icon.
		    }
		  };
		}; // Import to enforce the CSS injection order
		// @inheritedComponent Input

		function Select(props) {
		  var autoWidth = props.autoWidth,
		      children = props.children,
		      classes = props.classes,
		      displayEmpty = props.displayEmpty,
		      input = props.input,
		      MenuProps = props.MenuProps,
		      multiple = props.multiple,
		      native = props.native,
		      renderValue = props.renderValue,
		      other = (0, _objectWithoutProperties3.default)(props, ['autoWidth', 'children', 'classes', 'displayEmpty', 'input', 'MenuProps', 'multiple', 'native', 'renderValue']);

		  // Instead of `Element<typeof Input>` to have more flexibility.

		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)((0, _reactHelpers.isMuiElement)(input, ['Input']), ['Material-UI: you have provided an invalid value to the `input` property.', 'We expect an element instance of the `Input` component.'].join('\n')) : void 0;

		  return _react2.default.cloneElement(input, (0, _extends3.default)({
		    // Most of the logic is implemented in `SelectInput`.
		    // The `Select` component is a simple API wrapper to expose something better to play with.
		    inputComponent: _SelectInput2.default
		  }, other, {
		    inputProps: (0, _extends3.default)({}, input ? input.props.inputProps : {}, {
		      autoWidth: autoWidth,
		      children: children,
		      classes: classes,
		      displayEmpty: displayEmpty,
		      native: native,
		      multiple: multiple,
		      MenuProps: MenuProps,
		      renderValue: renderValue
		    })
		  }));
		}

		Select.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * If true, the width of the popover will automatically be set according to the items inside the
		   * menu, otherwise it will be at least the width of the select input.
		   */
		  autoWidth: _propTypes2.default.bool,
		  /**
		   * The option elements to populate the select with.
		   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * If `true`, the selected item is displayed even if its value is empty.
		   * You can only use it when the `native` property is `false` (default).
		   */
		  displayEmpty: _propTypes2.default.bool,
		  /**
		   * An `Input` element; does not have to be a material-ui specific `Input`.
		   */
		  input: _propTypes2.default.element,
		  /**
		   * Properties applied to the `Menu` element.
		   */
		  MenuProps: _propTypes2.default.object,
		  /**
		   * If true, `value` must be an array and the menu will support multiple selections.
		   * You can only use it when the `native` property is `false` (default).
		   */
		  multiple: _propTypes2.default.bool,
		  /**
		   * If `true`, the component will be using a native `select` element.
		   */
		  native: _propTypes2.default.bool,
		  /**
		   * Render the selected value.
		   * You can only use it when the `native` property is `false` (default).
		   */
		  renderValue: _propTypes2.default.func,
		  /**
		   * The input value, required for a controlled component.
		   */
		  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]))])
		} : {};

		Select.defaultProps = {
		  autoWidth: false,
		  displayEmpty: false,
		  input: _react2.default.createElement(_Input2.default, null),
		  multiple: false,
		  native: false
		};

		Select.muiName = 'Select';

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiSelect' })(Select);
		}).call(this,require('_process'))
		},{"../Input":817,"../styles/withStyles":934,"../utils/reactHelpers":948,"./SelectInput":845,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"prop-types":961,"react":1016,"warning":1054}],845:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

		var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _keycode = require('keycode');

		var _keycode2 = _interopRequireDefault(_keycode);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _ArrowDropDown = require('../internal/svg-icons/ArrowDropDown');

		var _ArrowDropDown2 = _interopRequireDefault(_ArrowDropDown);

		var _Menu = require('../Menu/Menu');

		var _Menu2 = _interopRequireDefault(_Menu);

		var _Input = require('../Input/Input');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var SelectInput = function (_React$Component) {
		  (0, _inherits3.default)(SelectInput, _React$Component);

		  function SelectInput() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, SelectInput);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = SelectInput.__proto__ || (0, _getPrototypeOf2.default)(SelectInput)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      anchorEl: null,
		      open: false
		    }, _this.ignoreNextBlur = false, _this.handleClick = function (event) {
		      // Opening the menu is going to blur the. It will be focused back when closed.
		      _this.ignoreNextBlur = true;
		      _this.setState({
		        open: true,
		        anchorEl: event.currentTarget
		      });
		    }, _this.handleClose = function () {
		      _this.setState({
		        open: false
		      });
		    }, _this.handleItemClick = function (child) {
		      return function (event) {
		        if (!_this.props.multiple) {
		          _this.setState({
		            open: false
		          });
		        }

		        if (_this.props.onChange) {
		          var _this$props = _this.props,
		              onChange = _this$props.onChange,
		              name = _this$props.name;

		          var value = void 0;
		          var _target = void 0;

		          if (event.target) {
		            _target = event.target;
		          }

		          if (_this.props.multiple) {
		            value = Array.isArray(_this.props.value) ? [].concat((0, _toConsumableArray3.default)(_this.props.value)) : [];
		            var itemIndex = value.indexOf(child.props.value);
		            if (itemIndex === -1) {
		              value.push(child.props.value);
		            } else {
		              value.splice(itemIndex, 1);
		            }
		          } else {
		            value = child.props.value;
		          }

		          event.persist();
		          event.target = (0, _extends3.default)({}, _target, { value: value, name: name });

		          onChange(event, child);
		        }
		      };
		    }, _this.handleBlur = function (event) {
		      if (_this.ignoreNextBlur === true) {
		        // The parent components are relying on the bubbling of the event.
		        event.stopPropagation();
		        _this.ignoreNextBlur = false;
		        return;
		      }

		      if (_this.props.onBlur) {
		        _this.props.onBlur(event);
		      }
		    }, _this.handleKeyDown = function (event) {
		      if (_this.props.readOnly) {
		        return;
		      }

		      if (['space', 'up', 'down'].includes((0, _keycode2.default)(event))) {
		        event.preventDefault();
		        // Opening the menu is going to blur the. It will be focused back when closed.
		        _this.ignoreNextBlur = true;
		        _this.setState({
		          open: true,
		          anchorEl: event.currentTarget
		        });
		      }
		    }, _this.handleSelectRef = function (node) {
		      if (!_this.props.selectRef) {
		        return;
		      }

		      _this.props.selectRef({
		        node: node,
		        // By pass the native input as we expose a rich object (array).
		        value: _this.props.value
		      });
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(SelectInput, [{
		    key: 'render',
		    value: function render() {
		      var _this2 = this;

		      var _props = this.props,
		          autoWidth = _props.autoWidth,
		          children = _props.children,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          disabled = _props.disabled,
		          displayEmpty = _props.displayEmpty,
		          _props$MenuProps = _props.MenuProps,
		          MenuProps = _props$MenuProps === undefined ? {} : _props$MenuProps,
		          multiple = _props.multiple,
		          name = _props.name,
		          native = _props.native,
		          onBlur = _props.onBlur,
		          onChange = _props.onChange,
		          onFocus = _props.onFocus,
		          readOnly = _props.readOnly,
		          renderValue = _props.renderValue,
		          selectRef = _props.selectRef,
		          value = _props.value,
		          other = (0, _objectWithoutProperties3.default)(_props, ['autoWidth', 'children', 'classes', 'className', 'disabled', 'displayEmpty', 'MenuProps', 'multiple', 'name', 'native', 'onBlur', 'onChange', 'onFocus', 'readOnly', 'renderValue', 'selectRef', 'value']);


		      if (native) {
		        process.env.NODE_ENV !== "production" ? (0, _warning2.default)(multiple === false, 'Material-UI: you can not use the `native` and `multiple` properties ' + 'at the same time on a `Select` component.') : void 0;
		        process.env.NODE_ENV !== "production" ? (0, _warning2.default)(!renderValue, 'Material-UI: the `renderValue` property is not used by the native implementation.') : void 0;
		        process.env.NODE_ENV !== "production" ? (0, _warning2.default)(!displayEmpty, 'Material-UI: the `displayEmpty` property is not used by the native implementation.') : void 0;

		        return _react2.default.createElement(
		          'div',
		          { className: classes.root },
		          _react2.default.createElement(
		            'select',
		            (0, _extends3.default)({
		              className: (0, _classnames2.default)(classes.select, (0, _defineProperty3.default)({}, classes.disabled, disabled), classNameProp),
		              name: name,
		              disabled: disabled,
		              onBlur: onBlur,
		              onChange: onChange,
		              onFocus: onFocus,
		              value: value,
		              readOnly: readOnly,
		              ref: selectRef
		            }, other),
		            children
		          ),
		          _react2.default.createElement(_ArrowDropDown2.default, { className: classes.icon })
		        );
		      }

		      if (value === undefined) {
		        throw new Error('Material-UI: the `value` property is required ' + 'when using the `Select` component with `native=false`.');
		      }

		      var display = void 0;
		      var displaySingle = '';
		      var displayMultiple = [];
		      var computeDisplay = false;

		      // No need to display any value if the field is empty.
		      if ((0, _Input.isDirty)(this.props) || displayEmpty) {
		        if (renderValue) {
		          display = renderValue(value);
		        } else {
		          computeDisplay = true;
		        }
		      }

		      var items = _react2.default.Children.map(children, function (child) {
		        if (!_react2.default.isValidElement(child)) {
		          return null;
		        }
		        var selected = void 0;

		        if (multiple) {
		          if (!Array.isArray(value)) {
		            throw new Error('Material-UI: the `value` property must be an array ' + 'when using the `Select` component with `multiple`.');
		          }

		          selected = value.indexOf(child.props.value) !== -1;
		          if (selected && computeDisplay) {
		            displayMultiple.push(child.props.children);
		          }
		        } else {
		          selected = value === child.props.value;
		          if (selected && computeDisplay) {
		            displaySingle = child.props.children;
		          }
		        }

		        return _react2.default.cloneElement(child, {
		          role: 'option',
		          selected: selected,
		          onClick: _this2.handleItemClick(child)
		        });
		      });

		      if (computeDisplay) {
		        display = multiple ? displayMultiple.join(', ') : displaySingle;
		      }

		      var minimumMenuWidth = this.state.anchorEl != null && !autoWidth ? this.state.anchorEl.clientWidth : undefined;

		      return _react2.default.createElement(
		        'div',
		        { className: classes.root },
		        _react2.default.createElement(
		          'div',
		          {
		            className: (0, _classnames2.default)(classes.select, classes.selectMenu, (0, _defineProperty3.default)({}, classes.disabled, disabled), classNameProp),

		            'aria-pressed': this.state.open ? 'true' : 'false',
		            tabIndex: disabled ? null : 0,
		            role: 'button',
		            'aria-owns': this.state.open ? 'menu-' + (name || '') : null,
		            'aria-haspopup': 'true',
		            onKeyDown: this.handleKeyDown,
		            onBlur: this.handleBlur,
		            onClick: disabled || readOnly ? null : this.handleClick,
		            onFocus: onFocus
		          },
		          display
		        ),
		        _react2.default.createElement('input', (0, _extends3.default)({
		          value: Array.isArray(value) ? value.join(',') : value,
		          name: name,
		          readOnly: readOnly
		        }, other, {
		          ref: this.handleSelectRef,
		          type: 'hidden'
		        })),
		        _react2.default.createElement(_ArrowDropDown2.default, { className: classes.icon }),
		        _react2.default.createElement(
		          _Menu2.default,
		          (0, _extends3.default)({
		            id: 'menu-' + (name || ''),
		            anchorEl: this.state.anchorEl,
		            open: this.state.open,
		            onClose: this.handleClose
		          }, MenuProps, {
		            MenuListProps: (0, _extends3.default)({}, MenuProps.MenuListProps, {
		              role: 'listbox'
		            }),
		            PaperProps: (0, _extends3.default)({}, MenuProps.PaperProps, {
		              style: (0, _extends3.default)({
		                minWidth: minimumMenuWidth
		              }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)
		            })
		          }),
		          items
		        )
		      );
		    }
		  }]);
		  return SelectInput;
		}(_react2.default.Component);

		SelectInput.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * If true, the width of the popover will automatically be set according to the items inside the
		   * menu, otherwise it will be at least the width of the select input.
		   */
		  autoWidth: _propTypes2.default.bool,
		  /**
		   * The option elements to populate the select with.
		   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * The CSS class name of the select element.
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the select will be disabled.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the selected item is displayed even if its value is empty.
		   * You can only use it when the `native` property is `false` (default).
		   */
		  displayEmpty: _propTypes2.default.bool,
		  /**
		   * Properties applied to the `Menu` element.
		   */
		  MenuProps: _propTypes2.default.object,
		  /**
		   * If true, `value` must be an array and the menu will support multiple selections.
		   * You can only use it when the `native` property is `false` (default).
		   */
		  multiple: _propTypes2.default.bool,
		  /**
		   * Name attribute of the `select` or hidden `input` element.
		   */
		  name: _propTypes2.default.string,
		  /**
		   * If `true`, the component will be using a native `select` element.
		   */
		  native: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  onBlur: _propTypes2.default.func,
		  /**
		   * Callback function fired when a menu item is selected.
		   *
		   * @param {object} event The event source of the callback
		   * @param {object} child The react element that was selected
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onFocus: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  readOnly: _propTypes2.default.bool,
		  /**
		   * Render the selected value.
		   * You can only use it when the `native` property is `false` (default).
		   */
		  renderValue: _propTypes2.default.func,
		  /**
		   * Use that property to pass a ref callback to the native select element.
		   */
		  selectRef: _propTypes2.default.func,
		  /**
		   * The value of the component, required for a controlled component.
		   */
		  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]))])
		} : {};

		SelectInput.muiName = 'SelectInput';

		exports.default = SelectInput;
		}).call(this,require('_process'))
		},{"../Input/Input":813,"../Menu/Menu":826,"../internal/svg-icons/ArrowDropDown":910,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"babel-runtime/helpers/toConsumableArray":525,"classnames":642,"keycode":731,"prop-types":961,"react":1016,"warning":1054}],846:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Select = require('./Select');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Select).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Select":844}],847:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _extends8 = require('babel-runtime/helpers/extends');

		var _extends9 = _interopRequireDefault(_extends8);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _reactEventListener = require('react-event-listener');

		var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _transitions = require('../styles/transitions');

		var _ClickAwayListener = require('../utils/ClickAwayListener');

		var _ClickAwayListener2 = _interopRequireDefault(_ClickAwayListener);

		var _helpers = require('../utils/helpers');

		var _Slide = require('../transitions/Slide');

		var _Slide2 = _interopRequireDefault(_Slide);

		var _SnackbarContent = require('./SnackbarContent');

		var _SnackbarContent2 = _interopRequireDefault(_SnackbarContent);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  var gutter = theme.spacing.unit * 3;
		  var top = { top: 0 };
		  var bottom = { bottom: 0 };
		  var right = { justifyContent: 'flex-end' };
		  var left = { justifyContent: 'flex-start' };
		  var topSpace = { top: gutter };
		  var bottomSpace = { bottom: gutter };
		  var rightSpace = { right: gutter };
		  var leftSpace = { left: gutter };
		  var center = {
		    left: '50%',
		    right: 'auto',
		    transform: 'translateX(-50%)'
		  };

		  return {
		    root: {
		      zIndex: theme.zIndex.snackbar,
		      position: 'fixed',
		      display: 'flex',
		      left: 0,
		      right: 0,
		      justifyContent: 'center',
		      alignItems: 'center'
		    },
		    anchorTopCenter: (0, _extends9.default)({}, top, (0, _defineProperty3.default)({}, theme.breakpoints.up('md'), (0, _extends9.default)({}, center))),
		    anchorBottomCenter: (0, _extends9.default)({}, bottom, (0, _defineProperty3.default)({}, theme.breakpoints.up('md'), (0, _extends9.default)({}, center))),
		    anchorTopRight: (0, _extends9.default)({}, top, right, (0, _defineProperty3.default)({}, theme.breakpoints.up('md'), (0, _extends9.default)({
		      left: 'auto'
		    }, topSpace, rightSpace))),
		    anchorBottomRight: (0, _extends9.default)({}, bottom, right, (0, _defineProperty3.default)({}, theme.breakpoints.up('md'), (0, _extends9.default)({
		      left: 'auto'
		    }, bottomSpace, rightSpace))),
		    anchorTopLeft: (0, _extends9.default)({}, top, left, (0, _defineProperty3.default)({}, theme.breakpoints.up('md'), (0, _extends9.default)({
		      right: 'auto'
		    }, topSpace, leftSpace))),
		    anchorBottomLeft: (0, _extends9.default)({}, bottom, left, (0, _defineProperty3.default)({}, theme.breakpoints.up('md'), (0, _extends9.default)({
		      right: 'auto'
		    }, bottomSpace, leftSpace)))
		  };
		};

		var Snackbar = function (_React$Component) {
		  (0, _inherits3.default)(Snackbar, _React$Component);

		  function Snackbar() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Snackbar);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Snackbar.__proto__ || (0, _getPrototypeOf2.default)(Snackbar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      // Used to only render active snackbars.
		      exited: false
		    }, _this.timerAutoHide = null, _this.handleMouseEnter = function (event) {
		      if (_this.props.onMouseEnter) {
		        _this.props.onMouseEnter(event);
		      }
		      _this.handlePause();
		    }, _this.handleMouseLeave = function (event) {
		      if (_this.props.onMouseLeave) {
		        _this.props.onMouseLeave(event);
		      }
		      _this.handleResume();
		    }, _this.handleClickAway = function (event) {
		      if (_this.props.onClose) {
		        _this.props.onClose(event, 'clickaway');
		      }
		    }, _this.handlePause = function () {
		      clearTimeout(_this.timerAutoHide);
		    }, _this.handleResume = function () {
		      if (_this.props.autoHideDuration != null) {
		        if (_this.props.resumeHideDuration !== undefined) {
		          _this.setAutoHideTimer(_this.props.resumeHideDuration);
		          return;
		        }
		        _this.setAutoHideTimer((_this.props.autoHideDuration || 0) * 0.5);
		      }
		    }, _this.handleTransitionExited = function () {
		      _this.setState({ exited: true });
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Snackbar, [{
		    key: 'componentWillMount',
		    value: function componentWillMount() {
		      if (!this.props.open) {
		        this.setState({ exited: true });
		      }
		    }
		  }, {
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      if (this.props.open) {
		        this.setAutoHideTimer();
		      }
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      if (nextProps.open && this.state.exited) {
		        this.setState({ exited: false });
		      }
		    }
		  }, {
		    key: 'componentDidUpdate',
		    value: function componentDidUpdate(prevProps) {
		      if (prevProps.open !== this.props.open) {
		        if (this.props.open) {
		          this.setAutoHideTimer();
		        } else {
		          clearTimeout(this.timerAutoHide);
		        }
		      }
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      clearTimeout(this.timerAutoHide);
		    }

		    // Timer that controls delay before snackbar auto hides

		  }, {
		    key: 'setAutoHideTimer',
		    value: function setAutoHideTimer() {
		      var _this2 = this;

		      var autoHideDuration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

		      if (!this.props.onClose || this.props.autoHideDuration == null) {
		        return;
		      }

		      clearTimeout(this.timerAutoHide);
		      this.timerAutoHide = setTimeout(function () {
		        if (!_this2.props.onClose || _this2.props.autoHideDuration == null) {
		          return;
		        }

		        _this2.props.onClose(null, 'timeout');
		      }, autoHideDuration || this.props.autoHideDuration || 0);
		    }

		    // Pause the timer when the user is interacting with the Snackbar
		    // or when the user hide the window.


		    // Restart the timer when the user is no longer interacting with the Snackbar
		    // or when the window is shown back.

		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          action = _props.action,
		          _props$anchorOrigin = _props.anchorOrigin,
		          vertical = _props$anchorOrigin.vertical,
		          horizontal = _props$anchorOrigin.horizontal,
		          autoHideDuration = _props.autoHideDuration,
		          children = _props.children,
		          classes = _props.classes,
		          className = _props.className,
		          message = _props.message,
		          onClose = _props.onClose,
		          onEnter = _props.onEnter,
		          onEntered = _props.onEntered,
		          onEntering = _props.onEntering,
		          onExit = _props.onExit,
		          onExited = _props.onExited,
		          onExiting = _props.onExiting,
		          onMouseEnter = _props.onMouseEnter,
		          onMouseLeave = _props.onMouseLeave,
		          open = _props.open,
		          resumeHideDuration = _props.resumeHideDuration,
		          SnackbarContentProps = _props.SnackbarContentProps,
		          TransitionProp = _props.transition,
		          transitionDuration = _props.transitionDuration,
		          other = (0, _objectWithoutProperties3.default)(_props, ['action', 'anchorOrigin', 'autoHideDuration', 'children', 'classes', 'className', 'message', 'onClose', 'onEnter', 'onEntered', 'onEntering', 'onExit', 'onExited', 'onExiting', 'onMouseEnter', 'onMouseLeave', 'open', 'resumeHideDuration', 'SnackbarContentProps', 'transition', 'transitionDuration']);


		      if (!open && this.state.exited) {
		        return null;
		      }

		      var transitionProps = {
		        in: open,
		        appear: true,
		        timeout: transitionDuration,
		        onEnter: onEnter,
		        onEntering: onEntering,
		        onEntered: onEntered,
		        onExit: onExit,
		        onExiting: onExiting,
		        onExited: (0, _helpers.createChainedFunction)(this.handleTransitionExited, onExited)
		      };
		      var transitionContent = children || _react2.default.createElement(_SnackbarContent2.default, (0, _extends9.default)({ message: message, action: action }, SnackbarContentProps));

		      var transition = void 0;
		      if (TransitionProp) {
		        transition = _react2.default.createElement(
		          TransitionProp,
		          transitionProps,
		          transitionContent
		        );
		      } else {
		        transition = _react2.default.createElement(
		          _Slide2.default,
		          (0, _extends9.default)({ direction: vertical === 'top' ? 'down' : 'up' }, transitionProps),
		          transitionContent
		        );
		      }

		      return _react2.default.createElement(
		        _reactEventListener2.default,
		        { target: 'window', onFocus: this.handleResume, onBlur: this.handlePause },
		        _react2.default.createElement(
		          _ClickAwayListener2.default,
		          { onClickAway: this.handleClickAway },
		          _react2.default.createElement(
		            'div',
		            (0, _extends9.default)({
		              className: (0, _classnames2.default)(classes.root, classes['anchor' + (0, _helpers.capitalizeFirstLetter)(vertical) + (0, _helpers.capitalizeFirstLetter)(horizontal)], className),
		              onMouseEnter: this.handleMouseEnter,
		              onMouseLeave: this.handleMouseLeave
		            }, other),
		            transition
		          )
		        )
		      );
		    }
		  }]);
		  return Snackbar;
		}(_react2.default.Component);

		Snackbar.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The action to display.
		   */
		  action: _propTypes2.default.node,
		  /**
		   * The anchor of the `Snackbar`.
		   */
		  anchorOrigin: _propTypes2.default.shape({
		    horizontal: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.oneOf(['left', 'center', 'right'])]),
		    vertical: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.oneOf(['top', 'center', 'bottom'])])
		  }),
		  /**
		   * The number of milliseconds to wait before automatically dismissing.
		   * This behavior is disabled by default with the `null` value.
		   */
		  autoHideDuration: _propTypes2.default.number,
		  /**
		   * If you wish the take control over the children of the component you can use this property.
		   * When used, you replace the `SnackbarContent` component with the children.
		   */
		  children: _propTypes2.default.element,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * When displaying multiple consecutive Snackbars from a parent rendering a single
		   * <Snackbar/>, add the key property to ensure independent treatment of each message.
		   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and
		   * features such as autoHideDuration may be canceled.
		   */
		  key: _propTypes2.default.any,
		  /**
		   * The message to display.
		   */
		  message: _propTypes2.default.node,
		  /**
		   * Callback fired when the component requests to be closed.
		   *
		   * Typically `onClose` is used to set state in the parent component,
		   * which is used to control the `Snackbar` `open` prop.
		   *
		   * The `reason` parameter can optionally be used to control the response to `onClose`,
		   * for example ignoring `clickaway`.
		   *
		   * @param {object} event The event source of the callback
		   * @param {string} reason Can be:`"timeout"` (`autoHideDuration` expired) or: `"clickaway"`
		   */
		  onClose: _propTypes2.default.func,
		  /**
		   * Callback fired before the transition is entering.
		   */
		  onEnter: _propTypes2.default.func,
		  /**
		   * Callback fired when the transition has entered.
		   */
		  onEntered: _propTypes2.default.func,
		  /**
		   * Callback fired when the transition is entering.
		   */
		  onEntering: _propTypes2.default.func,
		  /**
		   * Callback fired before the transition is exiting.
		   */
		  onExit: _propTypes2.default.func,
		  /**
		   * Callback fired when the transition has exited.
		   */
		  onExited: _propTypes2.default.func,
		  /**
		   * Callback fired when the transition is exiting.
		   */
		  onExiting: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onMouseEnter: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onMouseLeave: _propTypes2.default.func,
		  /**
		   * If true, `Snackbar` is open.
		   */
		  open: _propTypes2.default.bool,
		  /**
		   * The number of milliseconds to wait before dismissing after user interaction.
		   * If `autoHideDuration` property isn't specified, it does nothing.
		   * If `autoHideDuration` property is specified but `resumeHideDuration` isn't,
		   * we default to `autoHideDuration / 2` ms.
		   */
		  resumeHideDuration: _propTypes2.default.number,
		  /**
		   * Properties applied to the `SnackbarContent` element.
		   */
		  SnackbarContentProps: _propTypes2.default.object,
		  /**
		   * Transition component.
		   */
		  transition: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * The duration for the transition, in milliseconds.
		   * You may specify a single timeout for all transitions, or individually with an object.
		   */
		  transitionDuration: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number })])
		} : {};

		Snackbar.defaultProps = {
		  anchorOrigin: {
		    vertical: 'bottom',
		    horizontal: 'center'
		  },
		  transitionDuration: {
		    enter: _transitions.duration.enteringScreen,
		    exit: _transitions.duration.leavingScreen
		  }
		};

		exports.default = (0, _withStyles2.default)(styles, { flip: false, name: 'MuiSnackbar' })(Snackbar);
		}).call(this,require('_process'))
		},{"../styles/transitions":933,"../styles/withStyles":934,"../transitions/Slide":940,"../utils/ClickAwayListener":942,"../utils/helpers":945,"./SnackbarContent":848,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016,"react-event-listener":972}],848:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Paper = require('../Paper');

		var _Paper2 = _interopRequireDefault(_Paper);

		var _Typography = require('../Typography');

		var _Typography2 = _interopRequireDefault(_Typography);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent Paper

		var styles = exports.styles = function styles(theme) {
		  var _root;

		  var reverseType = theme.palette.type === 'light' ? 'dark' : 'light';
		  var backgroundColor = theme.palette.shades[reverseType].background.default;

		  return {
		    root: (_root = {
		      pointerEvents: 'initial',
		      color: theme.palette.getContrastText(backgroundColor),
		      backgroundColor: backgroundColor,
		      display: 'flex',
		      alignItems: 'center',
		      flexWrap: 'wrap',
		      padding: '6px ' + theme.spacing.unit * 3 + 'px'
		    }, (0, _defineProperty3.default)(_root, theme.breakpoints.up('md'), {
		      minWidth: 288,
		      maxWidth: 568,
		      borderRadius: 2
		    }), (0, _defineProperty3.default)(_root, theme.breakpoints.down('md'), {
		      flexGrow: 1
		    }), _root),
		    message: {
		      padding: theme.spacing.unit + 'px 0'
		    },
		    action: {
		      display: 'flex',
		      alignItems: 'center',
		      marginLeft: 'auto',
		      paddingLeft: theme.spacing.unit * 3,
		      marginRight: -theme.spacing.unit
		    }
		  };
		};

		function SnackbarContent(props) {
		  var action = props.action,
		      classes = props.classes,
		      className = props.className,
		      message = props.message,
		      other = (0, _objectWithoutProperties3.default)(props, ['action', 'classes', 'className', 'message']);


		  return _react2.default.createElement(
		    _Paper2.default,
		    (0, _extends3.default)({
		      component: _Typography2.default,
		      headlineMapping: {
		        body1: 'div'
		      },
		      role: 'alertdialog',
		      square: true,
		      elevation: 6,
		      className: (0, _classnames2.default)(classes.root, className)
		    }, other),
		    _react2.default.createElement(
		      'div',
		      { className: classes.message },
		      message
		    ),
		    action ? _react2.default.createElement(
		      'div',
		      { className: classes.action },
		      action
		    ) : null
		  );
		}

		SnackbarContent.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The action to display.
		   */
		  action: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The message to display.
		   */
		  message: _propTypes2.default.node
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiSnackbarContent' })(SnackbarContent);
		}).call(this,require('_process'))
		},{"../Paper":835,"../Typography":884,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],849:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Snackbar = require('./Snackbar');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Snackbar).default;
		  }
		});

		var _SnackbarContent = require('./SnackbarContent');

		Object.defineProperty(exports, 'SnackbarContent', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_SnackbarContent).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Snackbar":847,"./SnackbarContent":848}],850:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {},
		    horizontal: {
		      paddingLeft: theme.spacing.unit,
		      paddingRight: theme.spacing.unit,
		      '&:first-child': {
		        paddingLeft: 0
		      },
		      '&:last-child': {
		        paddingRight: 0
		      }
		    },
		    alternativeLabel: {
		      flex: 1,
		      position: 'relative',
		      marginLeft: 0
		    }
		  };
		};

		function Step(props) {
		  var active = props.active,
		      alternativeLabel = props.alternativeLabel,
		      children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      completed = props.completed,
		      connector = props.connector,
		      disabled = props.disabled,
		      index = props.index,
		      last = props.last,
		      orientation = props.orientation,
		      other = (0, _objectWithoutProperties3.default)(props, ['active', 'alternativeLabel', 'children', 'classes', 'className', 'completed', 'connector', 'disabled', 'index', 'last', 'orientation']);


		  var className = (0, _classnames2.default)(classes.root, classes[orientation], (0, _defineProperty3.default)({}, classes.alternativeLabel, alternativeLabel), classNameProp);

		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: className }, other),
		    _react2.default.Children.map(children, function (child) {
		      return _react2.default.cloneElement(child, (0, _extends3.default)({
		        active: active,
		        alternativeLabel: alternativeLabel,
		        completed: completed,
		        disabled: disabled,
		        icon: index + 1,
		        last: last,
		        orientation: orientation
		      }, child.props));
		    }),
		    connector && alternativeLabel && !last && _react2.default.cloneElement(connector, { orientation: orientation, alternativeLabel: alternativeLabel })
		  );
		}

		Step.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Sets the step as active. Is passed to child components.
		   */
		  active: _propTypes2.default.bool,
		  /**
		   * @ignore
		   * Set internally by Stepper when it's supplied with the alternativeLabel property.
		   */
		  alternativeLabel: _propTypes2.default.bool,
		  /**
		   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * Mark the step as completed. Is passed to child components.
		   */
		  completed: _propTypes2.default.bool,
		  /**
		   * @ignore
		   * Passed down from Stepper if alternativeLabel is also set.
		   */
		  connector: _propTypes2.default.element,
		  /**
		   * Mark the step as disabled, will also disable the button if
		   * `StepButton` is a child of `Step`. Is passed to child components.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * @ignore
		   * Used internally for numbering.
		   */
		  index: _propTypes2.default.number,
		  /**
		   * @ignore
		   */
		  last: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  orientation: _propTypes2.default.oneOf(['horizontal', 'vertical'])
		} : {};

		Step.defaultProps = {
		  active: false,
		  completed: false,
		  disabled: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiStep' })(Step);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],851:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _ButtonBase = require('../ButtonBase');

		var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

		var _StepLabel = require('./StepLabel');

		var _StepLabel2 = _interopRequireDefault(_StepLabel);

		var _reactHelpers = require('../utils/reactHelpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = {
		  root: {
		    display: 'flex',
		    alignItems: 'center',
		    paddingLeft: 0,
		    paddingRight: 0,
		    background: 'none'
		  },
		  alternativeLabel: {
		    margin: '0 auto'
		  }
		}; // @inheritedComponent ButtonBase

		function StepButton(props) {
		  var active = props.active,
		      alternativeLabel = props.alternativeLabel,
		      children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      completed = props.completed,
		      disabled = props.disabled,
		      icon = props.icon,
		      last = props.last,
		      optional = props.optional,
		      orientation = props.orientation,
		      other = (0, _objectWithoutProperties3.default)(props, ['active', 'alternativeLabel', 'children', 'classes', 'className', 'completed', 'disabled', 'icon', 'last', 'optional', 'orientation']);


		  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.alternativeLabel, alternativeLabel), classNameProp);
		  var childProps = {
		    active: active,
		    alternativeLabel: alternativeLabel,
		    completed: completed,
		    disabled: disabled,
		    icon: icon,
		    optional: optional,
		    orientation: orientation
		  };
		  var child = (0, _reactHelpers.isMuiElement)(children, ['StepLabel']) ? _react2.default.cloneElement(children, childProps) : _react2.default.createElement(
		    _StepLabel2.default,
		    childProps,
		    children
		  );

		  return _react2.default.createElement(
		    _ButtonBase2.default,
		    (0, _extends3.default)({ disabled: disabled, className: className }, other),
		    child
		  );
		}

		StepButton.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * @ignore
		   * Passed in via `Step` - passed through to `StepLabel`.
		   */
		  active: _propTypes2.default.bool,
		  /**
		   * @ignore
		   * Set internally by Stepper when it's supplied with the alternativeLabel property.
		   */
		  alternativeLabel: _propTypes2.default.bool,
		  /**
		   * Can be a `StepLabel` or a node to place inside `StepLabel` as children.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * @ignore
		   * Sets completed styling. Is passed to StepLabel.
		   */
		  completed: _propTypes2.default.bool,
		  /**
		   * @ignore
		   * Disables the button and sets disabled styling. Is passed to StepLabel.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * The icon displayed by the step label.
		   */
		  icon: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  last: _propTypes2.default.bool,
		  /**
		   * The optional node to display.
		   */
		  optional: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  orientation: _propTypes2.default.oneOf(['horizontal', 'vertical'])
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiStepButton' })(StepButton);
		}).call(this,require('_process'))
		},{"../ButtonBase":768,"../styles/withStyles":934,"../utils/reactHelpers":948,"./StepLabel":855,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],852:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      flex: '1 1 auto'
		    },
		    line: {
		      display: 'block',
		      borderColor: theme.palette.line.stepper
		    },
		    rootVertical: {
		      marginLeft: 12, // half icon
		      padding: '0 0 ' + theme.spacing.unit + 'px'
		    },
		    lineHorizontal: {
		      borderTopStyle: 'solid',
		      borderTopWidth: 1
		    },
		    lineVertical: {
		      borderLeftStyle: 'solid',
		      borderLeftWidth: 1,
		      minHeight: 24
		    },
		    alternativeLabelRoot: {
		      position: 'absolute',
		      top: theme.spacing.unit + 4,
		      left: 'calc(50% + 20px)',
		      right: 'calc(-50% + 20px)'
		    },
		    alternativeLabelLine: {
		      marginLeft: 0
		    }
		  };
		};

		/**
		 * @ignore - internal component.
		 */
		function StepConnector(props) {
		  var _classNames, _classNames2;

		  var alternativeLabel = props.alternativeLabel,
		      classNameProp = props.className,
		      classes = props.classes,
		      orientation = props.orientation,
		      other = (0, _objectWithoutProperties3.default)(props, ['alternativeLabel', 'className', 'classes', 'orientation']);


		  var className = (0, _classnames2.default)((_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.root, !alternativeLabel), (0, _defineProperty3.default)(_classNames, classes.rootVertical, orientation === 'vertical'), (0, _defineProperty3.default)(_classNames, classes.alternativeLabelRoot, alternativeLabel), _classNames), classNameProp);
		  var lineClassName = (0, _classnames2.default)(classes.line, (_classNames2 = {}, (0, _defineProperty3.default)(_classNames2, classes.lineHorizontal, orientation === 'horizontal'), (0, _defineProperty3.default)(_classNames2, classes.lineVertical, orientation === 'vertical'), (0, _defineProperty3.default)(_classNames2, classes.alternativeLabelLine, alternativeLabel), _classNames2));

		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: className }, other),
		    _react2.default.createElement('span', { className: lineClassName })
		  );
		}

		StepConnector.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * @ignore
		   * Set internally by Step when it's supplied with the alternativeLabel property.
		   */
		  alternativeLabel: _propTypes2.default.bool,
		  /**
		   * Useful to extend the style applied to the component.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  orientation: _propTypes2.default.oneOf(['horizontal', 'vertical'])
		} : {};

		StepConnector.defaultProps = {
		  alternativeLabel: false,
		  orientation: 'horizontal'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiStepConnector' })(StepConnector);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],853:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _Collapse = require('../transitions/Collapse');

		var _Collapse2 = _interopRequireDefault(_Collapse);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      marginTop: theme.spacing.unit,
		      marginLeft: 12, // half icon
		      paddingLeft: theme.spacing.unit + 12, // margin + half icon
		      paddingRight: theme.spacing.unit,
		      borderLeft: '1px solid ' + theme.palette.line.stepper
		    },
		    last: {
		      borderLeft: 'none'
		    },
		    transition: {}
		  };
		};

		function StepContent(props) {
		  var active = props.active,
		      alternativeLabel = props.alternativeLabel,
		      children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      completed = props.completed,
		      last = props.last,
		      optional = props.optional,
		      orientation = props.orientation,
		      Transition = props.transition,
		      transitionDuration = props.transitionDuration,
		      other = (0, _objectWithoutProperties3.default)(props, ['active', 'alternativeLabel', 'children', 'classes', 'className', 'completed', 'last', 'optional', 'orientation', 'transition', 'transitionDuration']);


		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(orientation === 'vertical', 'Material-UI: <StepContent /> is only designed for use with the vertical stepper.') : void 0;

		  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.last, last), classNameProp);

		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: className }, other),
		    _react2.default.createElement(
		      Transition,
		      {
		        'in': active,
		        className: classes.transition,
		        timeout: transitionDuration,
		        unmountOnExit: true
		      },
		      children
		    )
		  );
		}

		StepContent.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * @ignore
		   * Expands the content.
		   */
		  active: _propTypes2.default.bool,
		  /**
		   * @ignore
		   * Set internally by Step when it's supplied with the alternativeLabel property.
		   */
		  alternativeLabel: _propTypes2.default.bool,
		  /**
		   * Step content.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  completed: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  last: _propTypes2.default.bool,
		  /**
		   * @ignore
		   * Set internally by Step when it's supplied with the optional property.
		   */
		  optional: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  orientation: _propTypes2.default.oneOf(['horizontal', 'vertical']),
		  /**
		   * Collapse component.
		   */
		  transition: _propTypes2.default.func,
		  /**
		   * Adjust the duration of the content expand transition.
		   * Passed as a property to the transition component.
		   *
		   * Set to 'auto' to automatically calculate transition time based on height.
		   */
		  transitionDuration: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number }), _propTypes2.default.oneOf(['auto'])])
		} : {};

		StepContent.defaultProps = {
		  transition: _Collapse2.default,
		  transitionDuration: 'auto'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiStepContent' })(StepContent);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"../transitions/Collapse":937,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016,"warning":1054}],854:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _CheckCircle = require('../internal/svg-icons/CheckCircle');

		var _CheckCircle2 = _interopRequireDefault(_CheckCircle);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _StepPositionIcon = require('./StepPositionIcon');

		var _StepPositionIcon2 = _interopRequireDefault(_StepPositionIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'block'
		    },
		    completed: {
		      fill: theme.palette.primary[500]
		    }
		  };
		};

		/**
		 * @ignore - internal component.
		 */
		function StepIcon(props) {
		  var completed = props.completed,
		      icon = props.icon,
		      active = props.active,
		      classes = props.classes;


		  if (typeof icon === 'number' || typeof icon === 'string') {
		    if (completed) {
		      return _react2.default.createElement(_CheckCircle2.default, { className: (0, _classnames2.default)(classes.root, classes.completed) });
		    }
		    return _react2.default.createElement(_StepPositionIcon2.default, { className: classes.root, position: icon, active: active });
		  }

		  return icon;
		}

		StepIcon.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Whether this step is active.
		   */
		  active: _propTypes2.default.bool,
		  /**
		   * Classses for component style customizations.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * Mark the step as completed. Is passed to child components.
		   */
		  completed: _propTypes2.default.bool,
		  /**
		   * The icon displayed by the step label.
		   */
		  icon: _propTypes2.default.node
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiStepIcon' })(StepIcon);
		}).call(this,require('_process'))
		},{"../internal/svg-icons/CheckCircle":914,"../styles/withStyles":934,"./StepPositionIcon":856,"_process":957,"classnames":642,"prop-types":961,"react":1016}],855:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Typography = require('../Typography');

		var _Typography2 = _interopRequireDefault(_Typography);

		var _StepIcon = require('./StepIcon');

		var _StepIcon2 = _interopRequireDefault(_StepIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'flex',
		      alignItems: 'center'
		    },
		    horizontal: {},
		    vertical: {},
		    active: {
		      fontWeight: 500
		    },
		    completed: {
		      fontWeight: 500
		    },
		    disabled: {
		      cursor: 'default'
		    },
		    iconContainer: {},
		    iconContainerNoAlternative: {
		      paddingRight: theme.spacing.unit
		    },
		    alternativeLabelRoot: {
		      flexDirection: 'column'
		    },
		    alternativeLabel: {
		      textAlign: 'center',
		      marginTop: theme.spacing.unit * 2
		    }
		  };
		};

		function StepLabel(props) {
		  var _classNames, _classNames2;

		  var active = props.active,
		      alternativeLabel = props.alternativeLabel,
		      children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      completed = props.completed,
		      disabled = props.disabled,
		      icon = props.icon,
		      last = props.last,
		      optional = props.optional,
		      orientation = props.orientation,
		      other = (0, _objectWithoutProperties3.default)(props, ['active', 'alternativeLabel', 'children', 'classes', 'className', 'completed', 'disabled', 'icon', 'last', 'optional', 'orientation']);


		  var className = (0, _classnames2.default)(classes.root, classes[orientation], (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), (0, _defineProperty3.default)(_classNames, classes.completed, completed), (0, _defineProperty3.default)(_classNames, classes.alternativeLabelRoot, alternativeLabel), (0, _defineProperty3.default)(_classNames, 'classNameProp', classNameProp), _classNames));
		  var labelClassName = (0, _classnames2.default)((_classNames2 = {}, (0, _defineProperty3.default)(_classNames2, classes.alternativeLabel, alternativeLabel), (0, _defineProperty3.default)(_classNames2, classes.completed, completed), (0, _defineProperty3.default)(_classNames2, classes.active, active), _classNames2));

		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: className }, other),
		    icon && _react2.default.createElement(
		      'div',
		      {
		        className: (0, _classnames2.default)(classes.iconContainer, (0, _defineProperty3.default)({}, classes.iconContainerNoAlternative, !alternativeLabel))
		      },
		      _react2.default.createElement(_StepIcon2.default, {
		        completed: completed,
		        active: active,
		        icon: icon,
		        alternativeLabel: alternativeLabel
		      })
		    ),
		    _react2.default.createElement(
		      'div',
		      null,
		      _react2.default.createElement(
		        _Typography2.default,
		        { type: 'body1', className: labelClassName },
		        children
		      ),
		      optional
		    )
		  );
		}

		StepLabel.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * @ignore
		   * Sets the step as active. Is passed to child components.
		   */
		  active: _propTypes2.default.bool,
		  /**
		   * @ignore
		   * Set internally by Stepper when it's supplied with the alternativeLabel property.
		   */
		  alternativeLabel: _propTypes2.default.bool,
		  /**
		   * In most cases will simply be a string containing a title for the label.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Custom styles for component.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * @ignore
		   * Mark the step as completed. Is passed to child components.
		   */
		  completed: _propTypes2.default.bool,
		  /**
		   * Mark the step as disabled, will also disable the button if
		   * `StepLabelButton` is a child of `StepLabel`. Is passed to child components.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * The icon displayed by the step label - if not set will be set by Step component.
		   */
		  icon: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  last: _propTypes2.default.bool,
		  /**
		   * The optional node to display.
		   */
		  optional: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  orientation: _propTypes2.default.oneOf(['horizontal', 'vertical'])
		} : {};

		StepLabel.defaultProps = {
		  active: false,
		  alternativeLabel: false,
		  completed: false,
		  disabled: false,
		  last: false,
		  orientation: 'horizontal'
		};

		StepLabel.muiName = 'StepLabel';

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiStepLabel' })(StepLabel);
		}).call(this,require('_process'))
		},{"../Typography":884,"../styles/withStyles":934,"./StepIcon":854,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],856:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _SvgIcon = require('../SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      fill: theme.palette.action.disabled
		    },
		    active: {
		      fill: theme.palette.primary[500]
		    },
		    text: {
		      fill: theme.palette.getContrastText(theme.palette.primary[500]),
		      fontSize: theme.typography.caption.fontSize,
		      fontFamily: theme.typography.fontFamily
		    }
		  };
		};

		/**
		 * @ignore - internal component.
		 */

		var _ref = _react2.default.createElement('circle', { cx: '12', cy: '12', r: '10' });

		function StepPositionIcon(props) {
		  var position = props.position,
		      classes = props.classes,
		      classNameProp = props.className,
		      active = props.active;

		  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.active, active), classNameProp);

		  return _react2.default.createElement(
		    _SvgIcon2.default,
		    { className: className },
		    _ref,
		    _react2.default.createElement(
		      'text',
		      { className: classes.text, x: '12', y: '16', textAnchor: 'middle' },
		      position
		    )
		  );
		}

		StepPositionIcon.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Whether this step is active.
		   */
		  active: _propTypes2.default.bool,
		  /**
		   * Classses for component style customizations.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The step position as a number.
		   */
		  position: _propTypes2.default.node
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiStepPosition' })(StepPositionIcon);
		}).call(this,require('_process'))
		},{"../SvgIcon":860,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"classnames":642,"prop-types":961,"react":1016}],857:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _Paper = require('../Paper');

		var _Paper2 = _interopRequireDefault(_Paper);

		var _StepConnector = require('./StepConnector');

		var _StepConnector2 = _interopRequireDefault(_StepConnector);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent Paper

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'flex',
		      padding: theme.spacing.unit * 3
		    },
		    horizontal: {
		      flexDirection: 'row',
		      alignItems: 'center'
		    },
		    vertical: {
		      flexDirection: 'column'
		    }
		  };
		};

		function Stepper(props) {
		  var activeStep = props.activeStep,
		      alternativeLabel = props.alternativeLabel,
		      classes = props.classes,
		      classNameProp = props.className,
		      children = props.children,
		      connectorProp = props.connector,
		      nonLinear = props.nonLinear,
		      orientation = props.orientation,
		      other = (0, _objectWithoutProperties3.default)(props, ['activeStep', 'alternativeLabel', 'classes', 'className', 'children', 'connector', 'nonLinear', 'orientation']);


		  var className = (0, _classnames2.default)(classes.root, classNameProp, alternativeLabel ? null : classes[orientation]);

		  var connector = connectorProp ? _react2.default.cloneElement(connectorProp, { orientation: orientation }) : null;
		  var childrenArray = _react2.default.Children.toArray(children);
		  var steps = childrenArray.map(function (step, index) {
		    var controlProps = {
		      index: index,
		      orientation: orientation,
		      active: false,
		      completed: false,
		      disabled: false,
		      last: index + 1 === childrenArray.length,
		      alternativeLabel: alternativeLabel,
		      connector: connectorProp
		    };

		    if (activeStep === index) {
		      controlProps.active = true;
		    } else if (!nonLinear && activeStep > index) {
		      controlProps.completed = true;
		    } else if (!nonLinear && activeStep < index) {
		      controlProps.disabled = true;
		    }

		    return [!alternativeLabel && connector && index > 0 && _react2.default.cloneElement(connector, {
		      key: 'connect-' + (index - 1) + '-to-' + index // eslint-disable-line react/no-array-index-key
		    }), _react2.default.cloneElement(step, (0, _extends3.default)({}, controlProps, step.props))];
		  });

		  return _react2.default.createElement(
		    _Paper2.default,
		    (0, _extends3.default)({ square: true, elevation: 0, className: className }, other),
		    steps
		  );
		}

		Stepper.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Set the active step (zero based index).
		   */
		  activeStep: _propTypes2.default.number,
		  /**
		   * If set to 'true' and orientation is horizontal,
		   * then the step label will be positioned under the icon.
		   */
		  alternativeLabel: _propTypes2.default.bool,
		  /**
		   * Two or more `<Step />` components.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * A component to be placed between each step.
		   */
		  connector: _propTypes2.default.element,
		  /**
		   * If set the `Stepper` will not assist in controlling steps for linear flow.
		   */
		  nonLinear: _propTypes2.default.bool,
		  /**
		   * The stepper orientation (layout flow direction).
		   */
		  orientation: _propTypes2.default.oneOf(['horizontal', 'vertical'])
		} : {};

		Stepper.defaultProps = {
		  activeStep: 0,
		  alternativeLabel: false,
		  connector: _react2.default.createElement(_StepConnector2.default, null),
		  nonLinear: false,
		  orientation: 'horizontal'
		};

		Stepper.muiName = 'Stepper';

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiStepper' })(Stepper);
		}).call(this,require('_process'))
		},{"../Paper":835,"../styles/withStyles":934,"./StepConnector":852,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],858:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Stepper = require('./Stepper');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Stepper).default;
		  }
		});

		var _Step = require('./Step');

		Object.defineProperty(exports, 'Step', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Step).default;
		  }
		});

		var _StepButton = require('./StepButton');

		Object.defineProperty(exports, 'StepButton', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_StepButton).default;
		  }
		});

		var _StepContent = require('./StepContent');

		Object.defineProperty(exports, 'StepContent', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_StepContent).default;
		  }
		});

		var _StepLabel = require('./StepLabel');

		Object.defineProperty(exports, 'StepLabel', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_StepLabel).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Step":850,"./StepButton":851,"./StepContent":853,"./StepLabel":855,"./Stepper":857}],859:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _helpers = require('../utils/helpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'inline-block',
		      fill: 'currentColor',
		      height: 24,
		      width: 24,
		      userSelect: 'none',
		      flexShrink: 0,
		      transition: theme.transitions.create('fill', {
		        duration: theme.transitions.duration.shorter
		      })
		    },
		    colorAccent: {
		      color: theme.palette.secondary.A200
		    },
		    colorAction: {
		      color: theme.palette.action.active
		    },
		    colorContrast: {
		      color: theme.palette.getContrastText(theme.palette.primary[500])
		    },
		    colorDisabled: {
		      color: theme.palette.action.disabled
		    },
		    colorError: {
		      color: theme.palette.error[500]
		    },
		    colorPrimary: {
		      color: theme.palette.primary[500]
		    }
		  };
		};

		function SvgIcon(props) {
		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      color = props.color,
		      titleAccess = props.titleAccess,
		      viewBox = props.viewBox,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'color', 'titleAccess', 'viewBox']);


		  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'inherit'), classNameProp);

		  return _react2.default.createElement(
		    'svg',
		    (0, _extends3.default)({
		      className: className,
		      focusable: 'false',
		      viewBox: viewBox,
		      'aria-hidden': titleAccess ? 'false' : 'true'
		    }, other),
		    titleAccess ? _react2.default.createElement(
		      'title',
		      null,
		      titleAccess
		    ) : null,
		    children
		  );
		}

		SvgIcon.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Node passed into the SVG Icon.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The color of the component. It's using the theme palette when that makes sense.
		   */
		  color: _propTypes2.default.oneOf(['inherit', 'accent', 'action', 'contrast', 'disabled', 'error', 'primary']),
		  /**
		   * Provides a human-readable title for the element that contains it.
		   * https://www.w3.org/TR/SVG-access/#Equivalent
		   */
		  titleAccess: _propTypes2.default.string,
		  /**
		   * Allows you to redefine what the coordinates without units mean inside an svg element.
		   * For example, if the SVG element is 500 (width) by 200 (height),
		   * and you pass viewBox="0 0 50 20",
		   * this means that the coordinates inside the svg will go from the top left corner (0,0)
		   * to bottom right (50,20) and each unit will be worth 10px.
		   */
		  viewBox: _propTypes2.default.string
		} : {};

		SvgIcon.defaultProps = {
		  color: 'inherit',
		  viewBox: '0 0 24 24'
		};

		SvgIcon.muiName = 'SvgIcon';

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiSvgIcon' })(SvgIcon);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"../utils/helpers":945,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],860:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _SvgIcon = require('./SvgIcon');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_SvgIcon).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./SvgIcon":859}],861:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _SwitchBase = require('../internal/SwitchBase');

		var _SwitchBase2 = _interopRequireDefault(_SwitchBase);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'inline-flex',
		      width: 62,
		      position: 'relative',
		      flexShrink: 0
		    },
		    bar: {
		      borderRadius: 7,
		      display: 'block',
		      position: 'absolute',
		      width: 34,
		      height: 14,
		      top: '50%',
		      marginTop: -7,
		      left: '50%',
		      marginLeft: -17,
		      transition: theme.transitions.create(['opacity', 'background-color'], {
		        duration: theme.transitions.duration.shortest
		      }),
		      backgroundColor: theme.palette.type === 'light' ? '#000' : '#fff',
		      opacity: theme.palette.type === 'light' ? 0.38 : 0.3
		    },
		    icon: {
		      boxShadow: theme.shadows[1],
		      backgroundColor: 'currentColor',
		      width: 20,
		      height: 20,
		      borderRadius: '50%'
		    },
		    // For SwitchBase
		    default: {
		      zIndex: 1,
		      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],
		      transition: theme.transitions.create('transform', {
		        duration: theme.transitions.duration.shortest
		      })
		    },
		    checked: {
		      color: theme.palette.primary[500],
		      transform: 'translateX(14px)',
		      '& + $bar': {
		        backgroundColor: theme.palette.primary[500],
		        opacity: 0.5
		      }
		    },
		    disabled: {
		      color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],
		      '& + $bar': {
		        backgroundColor: theme.palette.type === 'light' ? '#000' : '#fff',
		        opacity: theme.palette.type === 'light' ? 0.12 : 0.1
		      }
		    }
		  };
		};

		function Switch(props) {
		  var classes = props.classes,
		      className = props.className,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className']);

		  var icon = _react2.default.createElement('span', { className: classes.icon });

		  return _react2.default.createElement(
		    'span',
		    { className: (0, _classnames2.default)(classes.root, className) },
		    _react2.default.createElement(_SwitchBase2.default, (0, _extends3.default)({
		      icon: icon,
		      classes: {
		        default: classes.default,
		        checked: classes.checked,
		        disabled: classes.disabled
		      },
		      checkedIcon: icon
		    }, other)),
		    _react2.default.createElement('span', { className: classes.bar })
		  );
		}

		Switch.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * If `true`, the component is checked.
		   */
		  checked: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.string]),
		  /**
		   * The icon to display when the component is checked.
		   * If a string is provided, it will be used as a font ligature.
		   */
		  checkedIcon: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  defaultChecked: _propTypes2.default.bool,
		  /**
		   * If `true`, the switch will be disabled.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the ripple effect will be disabled.
		   */
		  disableRipple: _propTypes2.default.bool,
		  /**
		   * The icon to display when the component is unchecked.
		   * If a string is provided, it will be used as a font ligature.
		   */
		  icon: _propTypes2.default.node,
		  /**
		   * Properties applied to the `input` element.
		   */
		  inputProps: _propTypes2.default.object,
		  /**
		   * Use that property to pass a ref callback to the native input component.
		   */
		  inputRef: _propTypes2.default.func,
		  /**
		   * The input component property `type`.
		   */
		  inputType: _propTypes2.default.string,
		  /*
		   * @ignore
		   */
		  name: _propTypes2.default.string,
		  /**
		   * Callback fired when the state is changed.
		   *
		   * @param {object} event The event source of the callback
		   * @param {boolean} checked The `checked` value of the switch
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
		  /**
		   * The value of the component.
		   */
		  value: _propTypes2.default.string
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiSwitch' })(Switch);
		}).call(this,require('_process'))
		},{"../internal/SwitchBase":908,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],862:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Switch = require('./Switch');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Switch).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Switch":861}],863:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      fontFamily: theme.typography.fontFamily,
		      width: '100%',
		      borderCollapse: 'collapse',
		      borderSpacing: 0,
		      overflow: 'hidden'
		    }
		  };
		};

		var Table = function (_React$Component) {
		  (0, _inherits3.default)(Table, _React$Component);

		  function Table() {
		    (0, _classCallCheck3.default)(this, Table);
		    return (0, _possibleConstructorReturn3.default)(this, (Table.__proto__ || (0, _getPrototypeOf2.default)(Table)).apply(this, arguments));
		  }

		  (0, _createClass3.default)(Table, [{
		    key: 'getChildContext',
		    value: function getChildContext() {
		      // eslint-disable-line class-methods-use-this
		      return {
		        table: {}
		      };
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          children = _props.children,
		          ComponentProp = _props.component,
		          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'children', 'component']);


		      return _react2.default.createElement(
		        ComponentProp,
		        (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, classNameProp) }, other),
		        children
		      );
		    }
		  }]);
		  return Table;
		}(_react2.default.Component);

		Table.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the table, normally `TableHeader` and `TableBody`.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])
		} : {};

		Table.defaultProps = {
		  component: 'table'
		};

		Table.childContextTypes = {
		  table: _propTypes2.default.object
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTable' })(Table);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],864:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      fontSize: theme.typography.pxToRem(13),
		      color: theme.palette.text.primary
		    }
		  };
		};

		var TableBody = function (_React$Component) {
		  (0, _inherits3.default)(TableBody, _React$Component);

		  function TableBody() {
		    (0, _classCallCheck3.default)(this, TableBody);
		    return (0, _possibleConstructorReturn3.default)(this, (TableBody.__proto__ || (0, _getPrototypeOf2.default)(TableBody)).apply(this, arguments));
		  }

		  (0, _createClass3.default)(TableBody, [{
		    key: 'getChildContext',
		    value: function getChildContext() {
		      // eslint-disable-line class-methods-use-this
		      return {
		        table: {
		          body: true
		        }
		      };
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          children = _props.children,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          ComponentProp = _props.component,
		          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'classes', 'className', 'component']);

		      var className = (0, _classnames2.default)(classes.root, classNameProp);

		      return _react2.default.createElement(
		        ComponentProp,
		        (0, _extends3.default)({ className: className }, other),
		        children
		      );
		    }
		  }]);
		  return TableBody;
		}(_react2.default.Component);

		TableBody.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component, normally `TableRow`.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])
		} : {};

		TableBody.defaultProps = {
		  component: 'tbody'
		};

		TableBody.childContextTypes = {
		  table: _propTypes2.default.object
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTableBody' })(TableBody);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],865:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _helpers = require('../utils/helpers');

		var _colorManipulator = require('../styles/colorManipulator');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      // Workaround for a rendering bug with spanned columns in Chrome 62.0.
		      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
		      borderBottom: '1px solid\n    ' + (theme.palette.type === 'light' ? (0, _colorManipulator.lighten)((0, _colorManipulator.fade)(theme.palette.text.lightDivider, 1), 0.925) : (0, _colorManipulator.darken)((0, _colorManipulator.fade)(theme.palette.text.lightDivider, 1), 0.685)),
		      textAlign: 'left'
		    },
		    numeric: {
		      textAlign: 'right',
		      flexDirection: 'row-reverse' // can be dynamically inherited at runtime by contents
		    },
		    head: {
		      fontWeight: theme.typography.fontWeightMedium,
		      position: 'relative' // Workaround for Tooltip positioning issue.
		    },
		    paddingDefault: {
		      padding: theme.spacing.unit / 2 + 'px ' + theme.spacing.unit * 7 + 'px ' + theme.spacing.unit / 2 + 'px ' + theme.spacing.unit * 3 + 'px',
		      '&:last-child': {
		        paddingRight: theme.spacing.unit * 3
		      }
		    },
		    paddingDense: {
		      paddingRight: theme.spacing.unit * 3
		    },
		    paddingCheckbox: {
		      padding: '0 12px'
		    },
		    footer: {
		      borderBottom: 0
		    }
		  };
		};

		function TableCell(props, context) {
		  var _classNames;

		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      component = props.component,
		      sortDirection = props.sortDirection,
		      numeric = props.numeric,
		      padding = props.padding,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'component', 'sortDirection', 'numeric', 'padding']);
		  var table = context.table;

		  var Component = void 0;
		  if (component) {
		    Component = component;
		  } else {
		    Component = table && table.head ? 'th' : 'td';
		  }

		  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.numeric, numeric), (0, _defineProperty3.default)(_classNames, classes['padding' + (0, _helpers.capitalizeFirstLetter)(padding)], padding !== 'none' && padding !== 'default'), (0, _defineProperty3.default)(_classNames, classes.paddingDefault, padding !== 'none'), (0, _defineProperty3.default)(_classNames, classes.head, table && table.head), (0, _defineProperty3.default)(_classNames, classes.footer, table && table.footer), _classNames), classNameProp);

		  var ariaSort = null;
		  if (sortDirection) {
		    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';
		  }

		  return _react2.default.createElement(
		    Component,
		    (0, _extends3.default)({ className: className, 'aria-sort': ariaSort }, other),
		    children
		  );
		}

		TableCell.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The table cell contents.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * If `true`, content will align to the right.
		   */
		  numeric: _propTypes2.default.bool,
		  /**
		   * Sets the padding applied to the cell.
		   */
		  padding: _propTypes2.default.oneOf(['default', 'checkbox', 'dense', 'none']),
		  /**
		   * Set aria-sort direction.
		   */
		  sortDirection: _propTypes2.default.oneOf(['asc', 'desc', false])
		} : {};

		TableCell.defaultProps = {
		  numeric: false,
		  padding: 'default'
		};

		TableCell.contextTypes = {
		  table: _propTypes2.default.object.isRequired
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTableCell' })(TableCell);
		}).call(this,require('_process'))
		},{"../styles/colorManipulator":921,"../styles/withStyles":934,"../utils/helpers":945,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],866:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      fontSize: theme.typography.pxToRem(12),
		      color: theme.palette.text.secondary
		    }
		  };
		};

		var TableFooter = function (_React$Component) {
		  (0, _inherits3.default)(TableFooter, _React$Component);

		  function TableFooter() {
		    (0, _classCallCheck3.default)(this, TableFooter);
		    return (0, _possibleConstructorReturn3.default)(this, (TableFooter.__proto__ || (0, _getPrototypeOf2.default)(TableFooter)).apply(this, arguments));
		  }

		  (0, _createClass3.default)(TableFooter, [{
		    key: 'getChildContext',
		    value: function getChildContext() {
		      // eslint-disable-line class-methods-use-this
		      return {
		        table: {
		          footer: true
		        }
		      };
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          children = _props.children,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          ComponentProp = _props.component,
		          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'classes', 'className', 'component']);


		      return _react2.default.createElement(
		        ComponentProp,
		        (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, classNameProp) }, other),
		        children
		      );
		    }
		  }]);
		  return TableFooter;
		}(_react2.default.Component);

		TableFooter.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component, normally `TableRow`.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])
		} : {};

		TableFooter.defaultProps = {
		  component: 'tfoot'
		};

		TableFooter.childContextTypes = {
		  table: _propTypes2.default.object
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTableFooter' })(TableFooter);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],867:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      fontSize: theme.typography.pxToRem(12),
		      fontWeight: theme.typography.fontWeightMedium,
		      color: theme.palette.text.secondary
		    }
		  };
		};

		var TableHead = function (_React$Component) {
		  (0, _inherits3.default)(TableHead, _React$Component);

		  function TableHead() {
		    (0, _classCallCheck3.default)(this, TableHead);
		    return (0, _possibleConstructorReturn3.default)(this, (TableHead.__proto__ || (0, _getPrototypeOf2.default)(TableHead)).apply(this, arguments));
		  }

		  (0, _createClass3.default)(TableHead, [{
		    key: 'getChildContext',
		    value: function getChildContext() {
		      // eslint-disable-line class-methods-use-this
		      return {
		        table: {
		          head: true
		        }
		      };
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          children = _props.children,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          ComponentProp = _props.component,
		          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'classes', 'className', 'component']);


		      return _react2.default.createElement(
		        ComponentProp,
		        (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, classNameProp) }, other),
		        children
		      );
		    }
		  }]);
		  return TableHead;
		}(_react2.default.Component);

		TableHead.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content of the component, normally `TableRow`.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])
		} : {};

		TableHead.defaultProps = {
		  component: 'thead'
		};

		TableHead.childContextTypes = {
		  table: _propTypes2.default.object
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTableHead' })(TableHead);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],868:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _KeyboardArrowLeft = require('../internal/svg-icons/KeyboardArrowLeft');

		var _KeyboardArrowLeft2 = _interopRequireDefault(_KeyboardArrowLeft);

		var _KeyboardArrowRight = require('../internal/svg-icons/KeyboardArrowRight');

		var _KeyboardArrowRight2 = _interopRequireDefault(_KeyboardArrowRight);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _IconButton = require('../IconButton');

		var _IconButton2 = _interopRequireDefault(_IconButton);

		var _Input = require('../Input');

		var _Input2 = _interopRequireDefault(_Input);

		var _Menu = require('../Menu');

		var _Select = require('../Select');

		var _Select2 = _interopRequireDefault(_Select);

		var _TableCell = require('./TableCell');

		var _TableCell2 = _interopRequireDefault(_TableCell);

		var _Toolbar = require('../Toolbar');

		var _Toolbar2 = _interopRequireDefault(_Toolbar);

		var _Typography = require('../Typography');

		var _Typography2 = _interopRequireDefault(_Typography);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent TableCell

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      // Increase the specificity to override TableCell.
		      '&:last-child': {
		        padding: 0
		      }
		    },
		    toolbar: {
		      height: 56,
		      minHeight: 56,
		      paddingRight: 2
		    },
		    spacer: {
		      flex: '1 1 100%'
		    },
		    caption: {
		      flexShrink: 0
		    },
		    input: {
		      fontSize: 'inherit',
		      flexShrink: 0
		    },
		    selectRoot: {
		      marginRight: theme.spacing.unit * 4
		    },
		    select: {
		      marginLeft: theme.spacing.unit,
		      width: 34,
		      textAlign: 'right',
		      paddingRight: 22,
		      color: theme.palette.text.secondary,
		      height: 32,
		      lineHeight: '32px'
		    },
		    actions: {
		      flexShrink: 0,
		      color: theme.palette.text.secondary,
		      marginLeft: theme.spacing.unit * 2.5
		    }
		  };
		};

		/**
		 * A `TableCell` based component for placing inside `TableFooter` for pagination.
		 */

		var _ref2 = _react2.default.createElement(_KeyboardArrowRight2.default, null);

		var _ref3 = _react2.default.createElement(_KeyboardArrowLeft2.default, null);

		var _ref4 = _react2.default.createElement(_KeyboardArrowLeft2.default, null);

		var _ref5 = _react2.default.createElement(_KeyboardArrowRight2.default, null);

		var TablePagination = function (_React$Component) {
		  (0, _inherits3.default)(TablePagination, _React$Component);

		  function TablePagination() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, TablePagination);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TablePagination.__proto__ || (0, _getPrototypeOf2.default)(TablePagination)).call.apply(_ref, [this].concat(args))), _this), _this.handleBackButtonClick = function (event) {
		      _this.props.onChangePage(event, _this.props.page - 1);
		    }, _this.handleNextButtonClick = function (event) {
		      _this.props.onChangePage(event, _this.props.page + 1);
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(TablePagination, [{
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      var count = nextProps.count,
		          onChangePage = nextProps.onChangePage,
		          rowsPerPage = nextProps.rowsPerPage;

		      var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);
		      if (this.props.page > newLastPage) {
		        onChangePage(null, newLastPage);
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          classes = _props.classes,
		          colSpanProp = _props.colSpan,
		          Component = _props.component,
		          count = _props.count,
		          labelDisplayedRows = _props.labelDisplayedRows,
		          labelRowsPerPage = _props.labelRowsPerPage,
		          onChangePage = _props.onChangePage,
		          onChangeRowsPerPage = _props.onChangeRowsPerPage,
		          page = _props.page,
		          rowsPerPage = _props.rowsPerPage,
		          rowsPerPageOptions = _props.rowsPerPageOptions,
		          theme = _props.theme,
		          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'colSpan', 'component', 'count', 'labelDisplayedRows', 'labelRowsPerPage', 'onChangePage', 'onChangeRowsPerPage', 'page', 'rowsPerPage', 'rowsPerPageOptions', 'theme']);


		      var colSpan = void 0;

		      if (Component === _TableCell2.default || Component === 'td') {
		        colSpan = colSpanProp || 1000; // col-span over everything
		      }

		      var themeDirection = theme && theme.direction;

		      return _react2.default.createElement(
		        Component,
		        (0, _extends3.default)({ className: classes.root, colSpan: colSpan }, other),
		        _react2.default.createElement(
		          _Toolbar2.default,
		          { className: classes.toolbar },
		          _react2.default.createElement('div', { className: classes.spacer }),
		          rowsPerPageOptions.length > 1 && _react2.default.createElement(
		            _Typography2.default,
		            { type: 'caption', className: classes.caption },
		            labelRowsPerPage
		          ),
		          rowsPerPageOptions.length > 1 && _react2.default.createElement(
		            _Select2.default,
		            {
		              classes: { root: classes.selectRoot, select: classes.select },
		              input: _react2.default.createElement(_Input2.default, {
		                classes: {
		                  root: classes.input
		                },
		                disableUnderline: true
		              }),
		              value: rowsPerPage,
		              onChange: onChangeRowsPerPage
		            },
		            rowsPerPageOptions.map(function (rowsPerPageOption) {
		              return _react2.default.createElement(
		                _Menu.MenuItem,
		                { key: rowsPerPageOption, value: rowsPerPageOption },
		                rowsPerPageOption
		              );
		            })
		          ),
		          _react2.default.createElement(
		            _Typography2.default,
		            { type: 'caption', className: classes.caption },
		            labelDisplayedRows({
		              from: count === 0 ? 0 : page * rowsPerPage + 1,
		              to: Math.min(count, (page + 1) * rowsPerPage),
		              count: count,
		              page: page
		            })
		          ),
		          _react2.default.createElement(
		            'div',
		            { className: classes.actions },
		            _react2.default.createElement(
		              _IconButton2.default,
		              { onClick: this.handleBackButtonClick, disabled: page === 0 },
		              themeDirection === 'rtl' ? _ref2 : _ref3
		            ),
		            _react2.default.createElement(
		              _IconButton2.default,
		              {
		                onClick: this.handleNextButtonClick,
		                disabled: page >= Math.ceil(count / rowsPerPage) - 1
		              },
		              themeDirection === 'rtl' ? _ref4 : _ref5
		            )
		          )
		        )
		      );
		    }
		  }]);
		  return TablePagination;
		}(_react2.default.Component);

		TablePagination.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  colSpan: _propTypes2.default.number,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * The total number of rows.
		   */
		  count: _propTypes2.default.number.isRequired,
		  /**
		   * Useful to customize the displayed rows label.
		   */
		  labelDisplayedRows: _propTypes2.default.func,
		  /**
		   * Useful to customize the rows per page label. Invoked with a `{ from, to, count, page }`
		   * object.
		   */
		  labelRowsPerPage: _propTypes2.default.node,
		  /**
		   * Callback fired when the page is changed.
		   *
		   * @param {object} event The event source of the callback
		   * @param {number} page The page selected
		   */
		  onChangePage: _propTypes2.default.func.isRequired,
		  /**
		   * Callback fired when the number of rows per page is changed.
		   *
		   * @param {object} event The event source of the callback
		   */
		  onChangeRowsPerPage: _propTypes2.default.func,
		  /**
		   * The zero-based index of the current page.
		   */
		  page: _propTypes2.default.number.isRequired,
		  /**
		   * The number of rows per page.
		   */
		  rowsPerPage: _propTypes2.default.number.isRequired,
		  /**
		   * Customizes the options of the rows per page select field. If less than two options are
		   * available, no select field will be displayed.
		   */
		  rowsPerPageOptions: _propTypes2.default.array,
		  /**
		   * @ignore
		   */
		  theme: _propTypes2.default.object.isRequired
		} : {};

		TablePagination.defaultProps = {
		  component: _TableCell2.default,
		  labelDisplayedRows: function labelDisplayedRows(_ref6) {
		    var from = _ref6.from,
		        to = _ref6.to,
		        count = _ref6.count;
		    return from + '-' + to + ' of ' + count;
		  },
		  labelRowsPerPage: 'Rows per page:',
		  rowsPerPageOptions: [5, 10, 25]
		};

		exports.default = (0, _withStyles2.default)(styles, { withTheme: true, name: 'MuiTablePagination' })(TablePagination);
		}).call(this,require('_process'))
		},{"../IconButton":810,"../Input":817,"../Menu":829,"../Select":846,"../Toolbar":880,"../Typography":884,"../internal/svg-icons/KeyboardArrowLeft":916,"../internal/svg-icons/KeyboardArrowRight":917,"../styles/withStyles":934,"./TableCell":865,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"prop-types":961,"react":1016}],869:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      color: 'inherit',
		      display: 'table-row',
		      height: 48,
		      '&:focus': {
		        outline: 'none'
		      },
		      verticalAlign: 'middle'
		    },
		    head: {
		      height: 56
		    },
		    footer: {
		      height: 56
		    },
		    hover: {
		      '&:hover': {
		        background: theme.palette.background.contentFrame
		      }
		    },
		    selected: {
		      background: theme.palette.background.appBar
		    }
		  };
		};

		/**
		 * Will automatically set dynamic row height
		 * based on the material table element parent (head, body, etc).
		 */
		function TableRow(props, context) {
		  var _classNames;

		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      Component = props.component,
		      hover = props.hover,
		      selected = props.selected,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'component', 'hover', 'selected']);
		  var table = context.table;


		  var className = (0, _classnames2.default)(classes.root, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.head, table && table.head), (0, _defineProperty3.default)(_classNames, classes.footer, table && table.footer), (0, _defineProperty3.default)(_classNames, classes.hover, table && hover), (0, _defineProperty3.default)(_classNames, classes.selected, table && selected), _classNames), classNameProp);

		  return _react2.default.createElement(
		    Component,
		    (0, _extends3.default)({ className: className }, other),
		    children
		  );
		}

		TableRow.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Should be valid `<tr>` children such as `TableCell`.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * If `true`, the table row will shade on hover.
		   */
		  hover: _propTypes2.default.bool,
		  /**
		   * If `true`, the table row will have the selected shading.
		   */
		  selected: _propTypes2.default.bool
		} : {};

		TableRow.defaultProps = {
		  component: 'tr',
		  hover: false,
		  selected: false
		};

		TableRow.contextTypes = {
		  table: _propTypes2.default.object
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTableRow' })(TableRow);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],870:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _ArrowDownward = require('../internal/svg-icons/ArrowDownward');

		var _ArrowDownward2 = _interopRequireDefault(_ArrowDownward);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _ButtonBase = require('../ButtonBase');

		var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent ButtonBase

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      cursor: 'pointer',
		      display: 'inline-flex',
		      justifyContent: 'flex-start',
		      flexDirection: 'inherit',
		      alignItems: 'center',
		      '&:hover': {
		        color: theme.palette.text.primary
		      },
		      '&:focus': {
		        color: theme.palette.text.primary
		      }
		    },
		    active: {
		      color: theme.palette.text.primary,
		      '& $icon': {
		        opacity: 1
		      }
		    },
		    icon: {
		      height: 16,
		      marginRight: 4,
		      marginLeft: 4,
		      opacity: 0,
		      transition: theme.transitions.create(['opacity', 'transform'], {
		        duration: theme.transitions.duration.shorter
		      }),
		      userSelect: 'none',
		      width: 16
		    },
		    desc: {
		      transform: 'rotate(0deg)'
		    },
		    asc: {
		      transform: 'rotate(180deg)'
		    }
		  };
		};

		/**
		 * A button based label for placing inside `TableCell` for column sorting.
		 */
		function TableSortLabel(props) {
		  var active = props.active,
		      classes = props.classes,
		      classNameProp = props.className,
		      children = props.children,
		      direction = props.direction,
		      other = (0, _objectWithoutProperties3.default)(props, ['active', 'classes', 'className', 'children', 'direction']);

		  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.active, active), classNameProp);

		  var iconClassName = (0, _classnames2.default)(classes.icon, (0, _defineProperty3.default)({}, classes[direction], !!direction));

		  return _react2.default.createElement(
		    _ButtonBase2.default,
		    (0, _extends3.default)({ className: className, component: 'span', disableRipple: true }, other),
		    children,
		    _react2.default.createElement(_ArrowDownward2.default, { className: iconClassName })
		  );
		}

		TableSortLabel.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * If `true`, the label will have the active styling (should be true for the sorted column).
		   */
		  active: _propTypes2.default.bool,
		  /**
		   * Label contents, the arrow will be appended automatically.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The current sort direction.
		   */
		  direction: _propTypes2.default.oneOf(['asc', 'desc'])
		} : {};

		TableSortLabel.defaultProps = {
		  active: false,
		  direction: 'desc'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTableSortLabel' })(TableSortLabel);
		}).call(this,require('_process'))
		},{"../ButtonBase":768,"../internal/svg-icons/ArrowDownward":909,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],871:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Table = require('./Table');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Table).default;
		  }
		});

		var _TableBody = require('./TableBody');

		Object.defineProperty(exports, 'TableBody', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_TableBody).default;
		  }
		});

		var _TableCell = require('./TableCell');

		Object.defineProperty(exports, 'TableCell', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_TableCell).default;
		  }
		});

		var _TableFooter = require('./TableFooter');

		Object.defineProperty(exports, 'TableFooter', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_TableFooter).default;
		  }
		});

		var _TableHead = require('./TableHead');

		Object.defineProperty(exports, 'TableHead', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_TableHead).default;
		  }
		});

		var _TablePagination = require('./TablePagination');

		Object.defineProperty(exports, 'TablePagination', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_TablePagination).default;
		  }
		});

		var _TableRow = require('./TableRow');

		Object.defineProperty(exports, 'TableRow', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_TableRow).default;
		  }
		});

		var _TableSortLabel = require('./TableSortLabel');

		Object.defineProperty(exports, 'TableSortLabel', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_TableSortLabel).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Table":863,"./TableBody":864,"./TableCell":865,"./TableFooter":866,"./TableHead":867,"./TablePagination":868,"./TableRow":869,"./TableSortLabel":870}],872:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _keys = require('babel-runtime/core-js/object/keys');

		var _keys2 = _interopRequireDefault(_keys);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _extends3 = require('babel-runtime/helpers/extends');

		var _extends4 = _interopRequireDefault(_extends3);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _ButtonBase = require('../ButtonBase');

		var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

		var _helpers = require('../utils/helpers');

		var _Icon = require('../Icon');

		var _Icon2 = _interopRequireDefault(_Icon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: (0, _extends4.default)({}, theme.typography.button, (0, _defineProperty3.default)({
		      maxWidth: 264,
		      position: 'relative',
		      minWidth: 72,
		      padding: 0,
		      height: 48,
		      flex: 'none',
		      overflow: 'hidden'
		    }, theme.breakpoints.up('md'), {
		      minWidth: 160
		    })),
		    rootLabelIcon: {
		      height: 72
		    },
		    rootAccent: {
		      color: theme.palette.text.secondary
		    },
		    rootAccentSelected: {
		      color: theme.palette.secondary.A200
		    },
		    rootAccentDisabled: {
		      color: theme.palette.text.disabled
		    },
		    rootPrimary: {
		      color: theme.palette.text.secondary
		    },
		    rootPrimarySelected: {
		      color: theme.palette.primary[500]
		    },
		    rootPrimaryDisabled: {
		      color: theme.palette.text.disabled
		    },
		    rootInherit: {
		      color: 'inherit',
		      opacity: 0.7
		    },
		    rootInheritSelected: {
		      opacity: 1
		    },
		    rootInheritDisabled: {
		      opacity: 0.4
		    },
		    fullWidth: {
		      flexGrow: 1
		    },
		    wrapper: {
		      display: 'inline-flex',
		      alignItems: 'center',
		      justifyContent: 'center',
		      width: '100%',
		      flexDirection: 'column'
		    },
		    labelContainer: (0, _defineProperty3.default)({
		      paddingTop: 6,
		      paddingBottom: 6,
		      paddingLeft: 12,
		      paddingRight: 12
		    }, theme.breakpoints.up('md'), {
		      paddingLeft: theme.spacing.unit * 3,
		      paddingRight: theme.spacing.unit * 3
		    }),
		    label: (0, _defineProperty3.default)({
		      fontSize: theme.typography.pxToRem(theme.typography.fontSize),
		      whiteSpace: 'normal'
		    }, theme.breakpoints.up('md'), {
		      fontSize: theme.typography.pxToRem(theme.typography.fontSize - 1)
		    }),
		    labelWrapped: (0, _defineProperty3.default)({}, theme.breakpoints.down('md'), {
		      fontSize: theme.typography.pxToRem(theme.typography.fontSize - 2)
		    })
		  };
		}; // @inheritedComponent ButtonBase

		var Tab = function (_React$Component) {
		  (0, _inherits3.default)(Tab, _React$Component);

		  function Tab() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Tab);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Tab.__proto__ || (0, _getPrototypeOf2.default)(Tab)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      wrappedText: false
		    }, _this.handleChange = function (event) {
		      var _this$props = _this.props,
		          onChange = _this$props.onChange,
		          value = _this$props.value,
		          onClick = _this$props.onClick;


		      if (onChange) {
		        onChange(event, value);
		      }

		      if (onClick) {
		        onClick(event);
		      }
		    }, _this.label = undefined, _this.checkTextWrap = function () {
		      if (_this.label) {
		        var wrappedText = _this.label.getClientRects().length > 1;
		        if (_this.state.wrappedText !== wrappedText) {
		          _this.setState({ wrappedText: wrappedText });
		        }
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Tab, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      this.checkTextWrap();
		    }
		  }, {
		    key: 'componentDidUpdate',
		    value: function componentDidUpdate(prevProps, prevState) {
		      if (this.state.wrappedText === prevState.wrappedText) {
		        /**
		         * At certain text and tab lengths, a larger font size may wrap to two lines while the smaller
		         * font size still only requires one line.  This check will prevent an infinite render loop
		         * fron occurring in that scenario.
		         */
		        this.checkTextWrap();
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this2 = this,
		          _classNames2;

		      var _props = this.props,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          disabled = _props.disabled,
		          fullWidth = _props.fullWidth,
		          iconProp = _props.icon,
		          indicator = _props.indicator,
		          labelProp = _props.label,
		          onChange = _props.onChange,
		          selected = _props.selected,
		          styleProp = _props.style,
		          textColor = _props.textColor,
		          value = _props.value,
		          other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'className', 'disabled', 'fullWidth', 'icon', 'indicator', 'label', 'onChange', 'selected', 'style', 'textColor', 'value']);


		      var icon = void 0;

		      if (iconProp !== undefined) {
		        icon = _react2.default.isValidElement(iconProp) ? iconProp : _react2.default.createElement(
		          _Icon2.default,
		          null,
		          iconProp
		        );
		      }

		      var label = void 0;

		      if (labelProp !== undefined) {
		        label = _react2.default.createElement(
		          'div',
		          { className: classes.labelContainer },
		          _react2.default.createElement(
		            'span',
		            {
		              className: (0, _classnames2.default)(classes.label, (0, _defineProperty3.default)({}, classes.labelWrapped, this.state.wrappedText)),
		              ref: function ref(node) {
		                _this2.label = node;
		              }
		            },
		            labelProp
		          )
		        );
		      }

		      var className = (0, _classnames2.default)(classes.root, (_classNames2 = {}, (0, _defineProperty3.default)(_classNames2, classes['root' + (0, _helpers.capitalizeFirstLetter)(textColor)], true), (0, _defineProperty3.default)(_classNames2, classes['root' + (0, _helpers.capitalizeFirstLetter)(textColor) + 'Disabled'], disabled), (0, _defineProperty3.default)(_classNames2, classes['root' + (0, _helpers.capitalizeFirstLetter)(textColor) + 'Selected'], selected), (0, _defineProperty3.default)(_classNames2, classes.rootLabelIcon, icon && label), (0, _defineProperty3.default)(_classNames2, classes.fullWidth, fullWidth), _classNames2), classNameProp);

		      var style = {};

		      if (textColor !== 'accent' && textColor !== 'inherit') {
		        style.color = textColor;
		      }

		      style = (0, _keys2.default)(style).length > 0 ? (0, _extends4.default)({}, style, styleProp) : styleProp;

		      return _react2.default.createElement(
		        _ButtonBase2.default,
		        (0, _extends4.default)({
		          focusRipple: true,
		          className: className,
		          style: style,
		          role: 'tab',
		          'aria-selected': selected,
		          disabled: disabled
		        }, other, {
		          onClick: this.handleChange
		        }),
		        _react2.default.createElement(
		          'span',
		          { className: classes.wrapper },
		          icon,
		          label
		        ),
		        indicator
		      );
		    }
		  }]);
		  return Tab;
		}(_react2.default.Component);

		Tab.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the tab will be disabled.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  fullWidth: _propTypes2.default.bool,
		  /**
		   * The icon element. If a string is provided, it will be used as a font ligature.
		   */
		  icon: _propTypes2.default.node,
		  /**
		   * @ignore
		   * For server side rendering consideration, we let the selected tab
		   * render the indicator.
		   */
		  indicator: _propTypes2.default.node,
		  /**
		   * The label element.
		   */
		  label: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onClick: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  selected: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  style: _propTypes2.default.object,
		  /**
		   * @ignore
		   */
		  textColor: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.oneOf(['accent', 'primary', 'inherit'])]),
		  /**
		   * You can provide your own value. Otherwise, we fallback to the child position index.
		   */
		  value: _propTypes2.default.any
		} : {};

		Tab.defaultProps = {
		  disabled: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTab' })(Tab);
		}).call(this,require('_process'))
		},{"../ButtonBase":768,"../Icon":812,"../styles/withStyles":934,"../utils/helpers":945,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/core-js/object/keys":514,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],873:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _helpers = require('../utils/helpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      position: 'absolute',
		      height: 2,
		      bottom: 0,
		      width: '100%',
		      transition: theme.transitions.create(),
		      willChange: 'left, width'
		    },
		    colorAccent: {
		      backgroundColor: theme.palette.secondary.A200
		    },
		    colorPrimary: {
		      backgroundColor: theme.palette.primary[500]
		    }
		  };
		};

		/**
		 * @ignore - internal component.
		 */
		function TabIndicator(props) {
		  var classes = props.classes,
		      classNameProp = props.className,
		      color = props.color,
		      styleProp = props.style;

		  var colorPredefined = ['primary', 'accent'].indexOf(color) !== -1;
		  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], colorPredefined), classNameProp);

		  var style = colorPredefined ? styleProp : (0, _extends3.default)({}, styleProp, {
		    backgroundColor: color
		  });

		  return _react2.default.createElement('div', { className: className, style: style });
		}

		TabIndicator.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * @ignore
		   * The color of the tab indicator.
		   */
		  color: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.oneOf(['accent', 'primary'])]),
		  /**
		   * @ignore
		   * The style of the root element.
		   */
		  style: _propTypes2.default.object
		} : {};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTabIndicator' })(TabIndicator);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"../utils/helpers":945,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"classnames":642,"prop-types":961,"react":1016}],874:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _KeyboardArrowLeft = require('../internal/svg-icons/KeyboardArrowLeft');

		var _KeyboardArrowLeft2 = _interopRequireDefault(_KeyboardArrowLeft);

		var _KeyboardArrowRight = require('../internal/svg-icons/KeyboardArrowRight');

		var _KeyboardArrowRight2 = _interopRequireDefault(_KeyboardArrowRight);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _ButtonBase = require('../ButtonBase');

		var _ButtonBase2 = _interopRequireDefault(_ButtonBase);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      color: 'inherit',
		      flex: '0 0 ' + theme.spacing.unit * 7 + 'px'
		    }
		  };
		};

		/**
		 * @ignore - internal component.
		 */

		var _ref = _react2.default.createElement(_KeyboardArrowLeft2.default, null);

		var _ref2 = _react2.default.createElement(_KeyboardArrowRight2.default, null);

		function TabScrollButton(props) {
		  var classes = props.classes,
		      classNameProp = props.className,
		      direction = props.direction,
		      onClick = props.onClick,
		      visible = props.visible,
		      other = (0, _objectWithoutProperties3.default)(props, ['classes', 'className', 'direction', 'onClick', 'visible']);


		  var className = (0, _classnames2.default)(classes.root, classNameProp);

		  if (!visible) {
		    return _react2.default.createElement('div', { className: className });
		  }

		  return _react2.default.createElement(
		    _ButtonBase2.default,
		    (0, _extends3.default)({ className: className, onClick: onClick, tabIndex: -1 }, other),
		    direction === 'left' ? _ref : _ref2
		  );
		}

		TabScrollButton.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * Which direction should the button indicate?
		   */
		  direction: _propTypes2.default.oneOf(['left', 'right']),
		  /**
		   * Callback to execute for button press.
		   */
		  onClick: _propTypes2.default.func,
		  /**
		   * Should the button be present or just consume space.
		   */
		  visible: _propTypes2.default.bool
		} : {};

		TabScrollButton.defaultProps = {
		  visible: true
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTabScrollButton' })(TabScrollButton);
		}).call(this,require('_process'))
		},{"../ButtonBase":768,"../internal/svg-icons/KeyboardArrowLeft":916,"../internal/svg-icons/KeyboardArrowRight":917,"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],875:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _isNan = require('babel-runtime/core-js/number/is-nan');

		var _isNan2 = _interopRequireDefault(_isNan);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _reactEventListener = require('react-event-listener');

		var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

		var _debounce = require('lodash/debounce');

		var _debounce2 = _interopRequireDefault(_debounce);

		var _reactScrollbarSize = require('react-scrollbar-size');

		var _reactScrollbarSize2 = _interopRequireDefault(_reactScrollbarSize);

		var _normalizeScrollLeft = require('normalize-scroll-left');

		var _scroll = require('scroll');

		var _scroll2 = _interopRequireDefault(_scroll);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _TabIndicator = require('./TabIndicator');

		var _TabIndicator2 = _interopRequireDefault(_TabIndicator);

		var _TabScrollButton = require('./TabScrollButton');

		var _TabScrollButton2 = _interopRequireDefault(_TabScrollButton);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      overflow: 'hidden',
		      minHeight: 48,
		      WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.
		    },
		    flexContainer: {
		      display: 'flex'
		    },
		    scrollingContainer: {
		      position: 'relative',
		      display: 'inline-block',
		      flex: '1 1 auto',
		      whiteSpace: 'nowrap'
		    },
		    fixed: {
		      overflowX: 'hidden',
		      width: '100%'
		    },
		    scrollable: {
		      overflowX: 'scroll'
		    },
		    centered: {
		      justifyContent: 'center'
		    },
		    buttonAuto: (0, _defineProperty3.default)({}, theme.breakpoints.down('sm'), {
		      display: 'none'
		    })
		  };
		};

		var Tabs = function (_React$Component) {
		  (0, _inherits3.default)(Tabs, _React$Component);

		  function Tabs() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Tabs);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Tabs.__proto__ || (0, _getPrototypeOf2.default)(Tabs)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      indicatorStyle: {},
		      scrollerStyle: {
		        marginBottom: 0
		      },
		      showLeftScroll: false,
		      showRightScroll: false,
		      mounted: false
		    }, _this.getConditionalElements = function () {
		      var _this$props = _this.props,
		          classes = _this$props.classes,
		          buttonClassName = _this$props.buttonClassName,
		          scrollable = _this$props.scrollable,
		          scrollButtons = _this$props.scrollButtons,
		          TabScrollButtonProp = _this$props.TabScrollButton,
		          theme = _this$props.theme;

		      var conditionalElements = {};
		      conditionalElements.scrollbarSizeListener = scrollable ? _react2.default.createElement(_reactScrollbarSize2.default, {
		        onLoad: _this.handleScrollbarSizeChange,
		        onChange: _this.handleScrollbarSizeChange
		      }) : null;

		      var showScrollButtons = scrollable && (scrollButtons === 'auto' || scrollButtons === 'on');

		      conditionalElements.scrollButtonLeft = showScrollButtons ? _react2.default.createElement(TabScrollButtonProp, {
		        direction: theme && theme.direction === 'rtl' ? 'right' : 'left',
		        onClick: _this.handleLeftScrollClick,
		        visible: _this.state.showLeftScroll,
		        className: (0, _classnames2.default)((0, _defineProperty3.default)({}, classes.buttonAuto, scrollButtons === 'auto'), buttonClassName)
		      }) : null;

		      conditionalElements.scrollButtonRight = showScrollButtons ? _react2.default.createElement(TabScrollButtonProp, {
		        direction: theme && theme.direction === 'rtl' ? 'left' : 'right',
		        onClick: _this.handleRightScrollClick,
		        visible: _this.state.showRightScroll,
		        className: (0, _classnames2.default)((0, _defineProperty3.default)({}, classes.buttonAuto, scrollButtons === 'auto'), buttonClassName)
		      }) : null;

		      return conditionalElements;
		    }, _this.getTabsMeta = function (value, direction) {
		      var tabsMeta = void 0;
		      if (_this.tabs) {
		        var rect = _this.tabs.getBoundingClientRect();
		        // create a new object with ClientRect class props + scrollLeft
		        tabsMeta = {
		          clientWidth: _this.tabs ? _this.tabs.clientWidth : 0,
		          scrollLeft: _this.tabs ? _this.tabs.scrollLeft : 0,
		          scrollLeftNormalized: _this.tabs ? (0, _normalizeScrollLeft.getNormalizedScrollLeft)(_this.tabs, direction) : 0,
		          scrollWidth: _this.tabs ? _this.tabs.scrollWidth : 0,
		          left: rect.left,
		          right: rect.right
		        };
		      }

		      var tabMeta = void 0;
		      if (_this.tabs && value !== false) {
		        var children = _this.tabs.children[0].children;

		        if (children.length > 0) {
		          var tab = children[_this.valueToIndex[value]];
		          process.env.NODE_ENV !== "production" ? (0, _warning2.default)(Boolean(tab), 'Material-UI: the value provided `' + value + '` is invalid') : void 0;
		          tabMeta = tab ? tab.getBoundingClientRect() : null;
		        }
		      }
		      return { tabsMeta: tabsMeta, tabMeta: tabMeta };
		    }, _this.tabs = undefined, _this.valueToIndex = {}, _this.handleResize = (0, _debounce2.default)(function () {
		      _this.updateIndicatorState(_this.props);
		      _this.updateScrollButtonState();
		    }, 166), _this.handleLeftScrollClick = function () {
		      if (_this.tabs) {
		        _this.moveTabsScroll(-_this.tabs.clientWidth);
		      }
		    }, _this.handleRightScrollClick = function () {
		      if (_this.tabs) {
		        _this.moveTabsScroll(_this.tabs.clientWidth);
		      }
		    }, _this.handleScrollbarSizeChange = function (_ref2) {
		      var scrollbarHeight = _ref2.scrollbarHeight;

		      _this.setState({
		        scrollerStyle: {
		          marginBottom: -scrollbarHeight
		        }
		      });
		    }, _this.handleTabsScroll = (0, _debounce2.default)(function () {
		      _this.updateScrollButtonState();
		    }, 166), _this.moveTabsScroll = function (delta) {
		      var theme = _this.props.theme;


		      if (_this.tabs) {
		        var themeDirection = theme && theme.direction;
		        var multiplier = themeDirection === 'rtl' ? -1 : 1;
		        var nextScrollLeft = _this.tabs.scrollLeft + delta * multiplier;
		        // Fix for Edge
		        var invert = themeDirection === 'rtl' && (0, _normalizeScrollLeft.detectScrollType)() === 'reverse' ? -1 : 1;
		        _scroll2.default.left(_this.tabs, invert * nextScrollLeft);
		      }
		    }, _this.scrollSelectedIntoView = function () {
		      var _this$props2 = _this.props,
		          theme = _this$props2.theme,
		          value = _this$props2.value;


		      var themeDirection = theme && theme.direction;

		      var _this$getTabsMeta = _this.getTabsMeta(value, themeDirection),
		          tabsMeta = _this$getTabsMeta.tabsMeta,
		          tabMeta = _this$getTabsMeta.tabMeta;

		      if (!tabMeta || !tabsMeta) {
		        return;
		      }

		      if (tabMeta.left < tabsMeta.left) {
		        // left side of button is out of view
		        var nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.left - tabsMeta.left);
		        _scroll2.default.left(_this.tabs, nextScrollLeft);
		      } else if (tabMeta.right > tabsMeta.right) {
		        // right side of button is out of view
		        var _nextScrollLeft = tabsMeta.scrollLeft + (tabMeta.right - tabsMeta.right);
		        _scroll2.default.left(_this.tabs, _nextScrollLeft);
		      }
		    }, _this.updateScrollButtonState = function () {
		      var _this$props3 = _this.props,
		          scrollable = _this$props3.scrollable,
		          scrollButtons = _this$props3.scrollButtons,
		          theme = _this$props3.theme;

		      var themeDirection = theme && theme.direction;

		      if (_this.tabs && scrollable && scrollButtons !== 'off') {
		        var _this$tabs = _this.tabs,
		            scrollWidth = _this$tabs.scrollWidth,
		            clientWidth = _this$tabs.clientWidth;

		        var scrollLeft = (0, _normalizeScrollLeft.getNormalizedScrollLeft)(_this.tabs, themeDirection);

		        var showLeftScroll = themeDirection === 'rtl' ? scrollWidth > clientWidth + scrollLeft : scrollLeft > 0;

		        var showRightScroll = themeDirection === 'rtl' ? scrollLeft > 0 : scrollWidth > clientWidth + scrollLeft;

		        if (showLeftScroll !== _this.state.showLeftScroll || showRightScroll !== _this.state.showRightScroll) {
		          _this.setState({ showLeftScroll: showLeftScroll, showRightScroll: showRightScroll });
		        }
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Tabs, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      // eslint-disable-next-line react/no-did-mount-set-state
		      this.setState({ mounted: true });
		      this.updateIndicatorState(this.props);
		      this.updateScrollButtonState();
		    }
		  }, {
		    key: 'componentDidUpdate',
		    value: function componentDidUpdate(prevProps, prevState) {
		      this.updateScrollButtonState();

		      // The index might have changed at the same time.
		      // We need to check again the right indicator position.
		      this.updateIndicatorState(this.props);

		      if (this.state.indicatorStyle !== prevState.indicatorStyle) {
		        this.scrollSelectedIntoView();
		      }
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      this.handleResize.cancel();
		      this.handleTabsScroll.cancel();
		    }
		  }, {
		    key: 'updateIndicatorState',
		    value: function updateIndicatorState(props) {
		      var theme = props.theme,
		          value = props.value;


		      var themeDirection = theme && theme.direction;

		      var _getTabsMeta = this.getTabsMeta(value, themeDirection),
		          tabsMeta = _getTabsMeta.tabsMeta,
		          tabMeta = _getTabsMeta.tabMeta;

		      var left = 0;

		      if (tabMeta && tabsMeta) {
		        var correction = themeDirection === 'rtl' ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;
		        left = tabMeta.left - tabsMeta.left + correction;
		      }

		      var indicatorStyle = {
		        left: left,
		        // May be wrong until the font is loaded.
		        width: tabMeta ? tabMeta.width : 0
		      };

		      if ((indicatorStyle.left !== this.state.indicatorStyle.left || indicatorStyle.width !== this.state.indicatorStyle.width) && !(0, _isNan2.default)(indicatorStyle.left) && !(0, _isNan2.default)(indicatorStyle.width)) {
		        this.setState({ indicatorStyle: indicatorStyle });
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _classNames3,
		          _this2 = this;

		      var _props = this.props,
		          buttonClassName = _props.buttonClassName,
		          centered = _props.centered,
		          childrenProp = _props.children,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          fullWidth = _props.fullWidth,
		          indicatorClassName = _props.indicatorClassName,
		          indicatorColor = _props.indicatorColor,
		          onChange = _props.onChange,
		          scrollable = _props.scrollable,
		          scrollButtons = _props.scrollButtons,
		          TabScrollButtonProp = _props.TabScrollButton,
		          textColor = _props.textColor,
		          theme = _props.theme,
		          value = _props.value,
		          other = (0, _objectWithoutProperties3.default)(_props, ['buttonClassName', 'centered', 'children', 'classes', 'className', 'fullWidth', 'indicatorClassName', 'indicatorColor', 'onChange', 'scrollable', 'scrollButtons', 'TabScrollButton', 'textColor', 'theme', 'value']);


		      var className = (0, _classnames2.default)(classes.root, classNameProp);
		      var scrollerClassName = (0, _classnames2.default)(classes.scrollingContainer, (_classNames3 = {}, (0, _defineProperty3.default)(_classNames3, classes.fixed, !scrollable), (0, _defineProperty3.default)(_classNames3, classes.scrollable, scrollable), _classNames3));
		      var tabItemContainerClassName = (0, _classnames2.default)(classes.flexContainer, (0, _defineProperty3.default)({}, classes.centered, centered && !scrollable));

		      var indicator = _react2.default.createElement(_TabIndicator2.default, {
		        style: this.state.indicatorStyle,
		        className: indicatorClassName,
		        color: indicatorColor
		      });

		      this.valueToIndex = {};
		      var childIndex = 0;
		      var children = _react2.default.Children.map(childrenProp, function (child) {
		        if (!_react2.default.isValidElement(child)) {
		          return null;
		        }

		        var childValue = child.props.value || childIndex;
		        _this2.valueToIndex[childValue] = childIndex;
		        var selected = childValue === value;

		        childIndex += 1;
		        return _react2.default.cloneElement(child, {
		          fullWidth: fullWidth,
		          indicator: selected && !_this2.state.mounted && indicator,
		          selected: selected,
		          onChange: onChange,
		          textColor: textColor,
		          value: childValue
		        });
		      });

		      var conditionalElements = this.getConditionalElements();

		      return _react2.default.createElement(
		        'div',
		        (0, _extends3.default)({ className: className }, other),
		        _react2.default.createElement(_reactEventListener2.default, { target: 'window', onResize: this.handleResize }),
		        conditionalElements.scrollbarSizeListener,
		        _react2.default.createElement(
		          'div',
		          { className: classes.flexContainer },
		          conditionalElements.scrollButtonLeft,
		          _react2.default.createElement(
		            'div',
		            {
		              className: scrollerClassName,
		              style: this.state.scrollerStyle,
		              ref: function ref(node) {
		                _this2.tabs = node;
		              },
		              role: 'tablist',
		              onScroll: this.handleTabsScroll
		            },
		            _react2.default.createElement(
		              'div',
		              { className: tabItemContainerClassName },
		              children
		            ),
		            this.state.mounted && indicator
		          ),
		          conditionalElements.scrollButtonRight
		        )
		      );
		    }
		  }]);
		  return Tabs;
		}(_react2.default.Component);

		Tabs.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The CSS class name of the scroll button elements.
		   */
		  buttonClassName: _propTypes2.default.string,
		  /**
		   * If `true`, the tabs will be centered.
		   * This property is intended for large views.
		   */
		  centered: _propTypes2.default.bool,
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, the tabs will grow to use all the available space.
		   * This property is intended for small views, like on mobile.
		   */
		  fullWidth: _propTypes2.default.bool,
		  /**
		   * The CSS class name of the indicator element.
		   */
		  indicatorClassName: _propTypes2.default.string,
		  /**
		   * Determines the color of the indicator.
		   */
		  indicatorColor: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.oneOf(['accent', 'primary'])]),
		  /**
		   * Callback fired when the value changes.
		   *
		   * @param {object} event The event source of the callback
		   * @param {number} value We default to the index of the child
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * True invokes scrolling properties and allow for horizontally scrolling
		   * (or swiping) the tab bar.
		   */
		  scrollable: _propTypes2.default.bool,
		  /**
		   * Determine behavior of scroll buttons when tabs are set to scroll
		   * `auto` will only present them on medium and larger viewports
		   * `on` will always present them
		   * `off` will never present them
		   */
		  scrollButtons: _propTypes2.default.oneOf(['auto', 'on', 'off']),
		  /**
		   * The component used to render the scroll buttons.
		   */
		  TabScrollButton: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * Determines the color of the `Tab`.
		   */
		  textColor: _propTypes2.default.oneOf(['accent', 'primary', 'inherit']),
		  /**
		   * @ignore
		   */
		  theme: _propTypes2.default.object.isRequired,
		  /**
		   * The value of the currently selected `Tab`.
		   * If you don't want any selected `Tab`, you can set this property to `false`.
		   */
		  value: _propTypes2.default.any
		} : {};

		Tabs.defaultProps = {
		  centered: false,
		  fullWidth: false,
		  indicatorColor: 'accent',
		  scrollable: false,
		  scrollButtons: 'auto',
		  TabScrollButton: _TabScrollButton2.default,
		  textColor: 'inherit'
		};

		exports.default = (0, _withStyles2.default)(styles, { withTheme: true, name: 'MuiTabs' })(Tabs);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"./TabIndicator":873,"./TabScrollButton":874,"_process":957,"babel-runtime/core-js/number/is-nan":508,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"lodash/debounce":740,"normalize-scroll-left":953,"prop-types":961,"react":1016,"react-event-listener":972,"react-scrollbar-size":1008,"scroll":1045,"warning":1054}],876:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Tabs = require('./Tabs');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Tabs).default;
		  }
		});

		var _Tab = require('./Tab');

		Object.defineProperty(exports, 'Tab', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Tab).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Tab":872,"./Tabs":875}],877:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _Input = require('../Input');

		var _Input2 = _interopRequireDefault(_Input);

		var _FormControl = require('../Form/FormControl');

		var _FormControl2 = _interopRequireDefault(_FormControl);

		var _FormHelperText = require('../Form/FormHelperText');

		var _FormHelperText2 = _interopRequireDefault(_FormHelperText);

		var _Select = require('../Select/Select');

		var _Select2 = _interopRequireDefault(_Select);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * The `TextField` is a convenience wrapper for the most common cases (80%).
		 * It cannot be all things to all people, otherwise the API would grow out of control.
		 *
		 * ## Advanced Configuration
		 *
		 * It's important to understand that the text field is a simple abstraction
		 * on top of the following components:
		 * - [FormControl](/api/form-control)
		 * - [InputLabel](/api/input-label)
		 * - [Input](/api/input)
		 * - [FormHelperText](/api/form-helper-text)
		 *
		 * If you wish to alter the properties applied to the native input, you can do as follow:
		 *
		 * ```jsx
		 * const InputProps = {
		 *   inputProps: {
		 *     step: 300,
		 *   },
		 * };
		 *
		 * return <TextField id="time" type="time" InputProps={InputProps} />;
		 * ```
		 *
		 * For advanced cases, please look at the source of TextField and consider either:
		 * - using the upper case props for passing values direct to the components.
		 * - using the underlying components directly as shown in the demos.
		 */
		function TextField(props) {
		  var autoComplete = props.autoComplete,
		      autoFocus = props.autoFocus,
		      children = props.children,
		      className = props.className,
		      defaultValue = props.defaultValue,
		      disabled = props.disabled,
		      error = props.error,
		      FormHelperTextProps = props.FormHelperTextProps,
		      fullWidth = props.fullWidth,
		      helperText = props.helperText,
		      helperTextClassName = props.helperTextClassName,
		      id = props.id,
		      InputLabelProps = props.InputLabelProps,
		      InputProps = props.InputProps,
		      inputRef = props.inputRef,
		      label = props.label,
		      labelClassName = props.labelClassName,
		      multiline = props.multiline,
		      name = props.name,
		      onChange = props.onChange,
		      placeholder = props.placeholder,
		      required = props.required,
		      rootRef = props.rootRef,
		      rows = props.rows,
		      rowsMax = props.rowsMax,
		      select = props.select,
		      SelectProps = props.SelectProps,
		      type = props.type,
		      value = props.value,
		      other = (0, _objectWithoutProperties3.default)(props, ['autoComplete', 'autoFocus', 'children', 'className', 'defaultValue', 'disabled', 'error', 'FormHelperTextProps', 'fullWidth', 'helperText', 'helperTextClassName', 'id', 'InputLabelProps', 'InputProps', 'inputRef', 'label', 'labelClassName', 'multiline', 'name', 'onChange', 'placeholder', 'required', 'rootRef', 'rows', 'rowsMax', 'select', 'SelectProps', 'type', 'value']);


		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(!select || Boolean(children), 'Material-UI: `children` must be passed when using the `TextField` component with `select`.') : void 0;

		  var InputComponent = _react2.default.createElement(_Input2.default, (0, _extends3.default)({
		    autoComplete: autoComplete,
		    autoFocus: autoFocus,
		    defaultValue: defaultValue,
		    disabled: disabled,
		    multiline: multiline,
		    name: name,
		    rows: rows,
		    rowsMax: rowsMax,
		    type: type,
		    value: value,
		    id: id,
		    inputRef: inputRef,
		    onChange: onChange,
		    placeholder: placeholder
		  }, InputProps));

		  return _react2.default.createElement(
		    _FormControl2.default,
		    (0, _extends3.default)({
		      fullWidth: fullWidth,
		      className: className,
		      error: error,
		      required: required
		    }, other, {
		      ref: rootRef
		    }),
		    label && _react2.default.createElement(
		      _Input.InputLabel,
		      (0, _extends3.default)({ htmlFor: id, className: labelClassName }, InputLabelProps),
		      label
		    ),
		    select ? _react2.default.createElement(
		      _Select2.default,
		      (0, _extends3.default)({ value: value, input: InputComponent }, SelectProps),
		      children
		    ) : InputComponent,
		    helperText && _react2.default.createElement(
		      _FormHelperText2.default,
		      (0, _extends3.default)({ className: helperTextClassName }, FormHelperTextProps),
		      helperText
		    )
		  );
		} // @inheritedComponent FormControl

		TextField.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * This property helps users to fill forms faster, especially on mobile devices.
		   * The name can be confusion, it's more like an autofill.
		   * You can learn about it with that article
		   * https://developers.google.com/web/updates/2015/06/checkout-faster-with-autofill
		   */
		  autoComplete: _propTypes2.default.string,
		  /**
		   * If `true`, the input will be focused during the first mount.
		   */
		  autoFocus: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  children: _propTypes2.default.node,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The default value of the `Input` element.
		   */
		  defaultValue: _propTypes2.default.string,
		  /**
		   * If `true`, the input will be disabled.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the label will be displayed in an error state.
		   */
		  error: _propTypes2.default.bool,
		  /**
		   * Properties applied to the `FormHelperText` element.
		   */
		  FormHelperTextProps: _propTypes2.default.object,
		  /**
		   * If `true`, the input will take up the full width of its container.
		   */
		  fullWidth: _propTypes2.default.bool,
		  /**
		   * The helper text content.
		   */
		  helperText: _propTypes2.default.node,
		  /**
		   * The CSS class name of the helper text element.
		   */
		  helperTextClassName: _propTypes2.default.string,
		  /**
		   * The id of the `input` element.
		   */
		  id: _propTypes2.default.string,
		  /**
		   * Properties applied to the `InputLabel` element.
		   */
		  InputLabelProps: _propTypes2.default.object,
		  /**
		   * Properties applied to the `Input` element.
		   */
		  InputProps: _propTypes2.default.object,
		  /**
		   * Use that property to pass a ref callback to the native input component.
		   */
		  inputRef: _propTypes2.default.func,
		  /**
		   * The label content.
		   */
		  label: _propTypes2.default.node,
		  /**
		   * The CSS class name of the label element.
		   */
		  labelClassName: _propTypes2.default.string,
		  /**
		   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
		   */
		  margin: _propTypes2.default.oneOf(['none', 'dense', 'normal']),
		  /**
		   * If `true`, a textarea element will be rendered instead of an input.
		   */
		  multiline: _propTypes2.default.bool,
		  /**
		   * Name attribute of the `input` element.
		   */
		  name: _propTypes2.default.string,
		  /**
		   * Callback fired when the value is changed.
		   *
		   * @param {object} event The event source of the callback
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * The short hint displayed in the input before the user enters a value.
		   */
		  placeholder: _propTypes2.default.string,
		  /**
		   * If `true`, the label is displayed as required.
		   */
		  required: _propTypes2.default.bool,
		  /**
		   * Use that property to pass a ref callback to the root component.
		   */
		  rootRef: _propTypes2.default.func,
		  /**
		   * Number of rows to display when multiline option is set to true.
		   */
		  rows: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
		  /**
		   * Maximum number of rows to display when multiline option is set to true.
		   */
		  rowsMax: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
		  /**
		   * Render a `Select` element while passing the `Input` element to `Select` as `input` parameter.
		   * If this option is set you must pass the options of the select as children.
		   */
		  select: _propTypes2.default.bool,
		  /**
		   * Properties applied to the `Select` element.
		   */
		  SelectProps: _propTypes2.default.object,
		  /**
		   * Type attribute of the `Input` element. It should be a valid HTML5 input type.
		   */
		  type: _propTypes2.default.string,
		  /**
		   * The value of the `Input` element, required for a controlled component.
		   */
		  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]))])
		} : {};

		TextField.defaultProps = {
		  required: false,
		  select: false
		};

		exports.default = TextField;
		}).call(this,require('_process'))
		},{"../Form/FormControl":797,"../Form/FormHelperText":800,"../Input":817,"../Select/Select":844,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"prop-types":961,"react":1016,"warning":1054}],878:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _TextField = require('./TextField');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_TextField).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./TextField":877}],879:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: (0, _extends3.default)({
		      position: 'relative',
		      display: 'flex',
		      alignItems: 'center'
		    }, theme.mixins.toolbar),
		    gutters: theme.mixins.gutters({})
		  };
		};

		function Toolbar(props) {
		  var children = props.children,
		      classes = props.classes,
		      classNameProp = props.className,
		      disableGutters = props.disableGutters,
		      other = (0, _objectWithoutProperties3.default)(props, ['children', 'classes', 'className', 'disableGutters']);


		  var className = (0, _classnames2.default)(classes.root, (0, _defineProperty3.default)({}, classes.gutters, !disableGutters), classNameProp);

		  return _react2.default.createElement(
		    'div',
		    (0, _extends3.default)({ className: className }, other),
		    children
		  );
		}

		Toolbar.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * If `true`, disables gutter padding.
		   */
		  disableGutters: _propTypes2.default.bool
		} : {};

		Toolbar.defaultProps = {
		  disableGutters: false
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiToolbar' })(Toolbar);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],880:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Toolbar = require('./Toolbar');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Toolbar).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Toolbar":879}],881:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _reactDom = require('react-dom');

		var _reactEventListener = require('react-event-listener');

		var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

		var _debounce = require('lodash/debounce');

		var _debounce2 = _interopRequireDefault(_debounce);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _reactPopper = require('react-popper');

		var _helpers = require('../utils/helpers');

		var _common = require('../colors/common');

		var _common2 = _interopRequireDefault(_common);

		var _grey = require('../colors/grey');

		var _grey2 = _interopRequireDefault(_grey);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// Use a class component so we can get a reference.
		/* eslint-disable react/no-multi-comp, no-underscore-dangle */

		var TargetChildren = function (_React$Component) {
		  (0, _inherits3.default)(TargetChildren, _React$Component);

		  function TargetChildren() {
		    (0, _classCallCheck3.default)(this, TargetChildren);
		    return (0, _possibleConstructorReturn3.default)(this, (TargetChildren.__proto__ || (0, _getPrototypeOf2.default)(TargetChildren)).apply(this, arguments));
		  }

		  (0, _createClass3.default)(TargetChildren, [{
		    key: 'render',
		    value: function render() {
		      return this.props.children;
		    }
		  }]);
		  return TargetChildren;
		}(_react2.default.Component);

		TargetChildren.propTypes = process.env.NODE_ENV !== "production" ? {
		  children: _propTypes2.default.node.isRequired
		} : {};

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'inline',
		      flexDirection: 'inherit' // Makes the wrapper more transparent.
		    },
		    popper: {
		      zIndex: theme.zIndex.tooltip
		    },
		    popperClose: {
		      pointerEvents: 'none'
		    },
		    tooltip: (0, _defineProperty3.default)({
		      background: _grey2.default[700],
		      borderRadius: 2,
		      color: _common2.default.fullWhite,
		      fontFamily: theme.typography.fontFamily,
		      fontSize: theme.typography.pxToRem(14),
		      minHeight: theme.spacing.unit * 4,
		      lineHeight: '32px',
		      opacity: 0,
		      padding: '0 ' + theme.spacing.unit + 'px',
		      transform: 'scale(0)',
		      transition: theme.transitions.create(['opacity', 'transform'], {
		        duration: theme.transitions.duration.shortest
		      })
		    }, theme.breakpoints.up('sm'), {
		      minHeight: 22,
		      lineHeight: '22px',
		      padding: '0 ' + theme.spacing.unit + 'px',
		      fontSize: theme.typography.pxToRem(10)
		    }),
		    tooltipLeft: (0, _defineProperty3.default)({
		      transformOrigin: 'right center',
		      margin: '0 ' + theme.spacing.unit * 3 + 'px'
		    }, theme.breakpoints.up('sm'), {
		      margin: '0 14px'
		    }),
		    tooltipRight: (0, _defineProperty3.default)({
		      transformOrigin: 'left center',
		      margin: '0 ' + theme.spacing.unit * 3 + 'px'
		    }, theme.breakpoints.up('sm'), {
		      margin: '0 14px'
		    }),
		    tooltipTop: (0, _defineProperty3.default)({
		      transformOrigin: 'center bottom',
		      margin: theme.spacing.unit * 3 + 'px 0'
		    }, theme.breakpoints.up('sm'), {
		      margin: '14px 0'
		    }),
		    tooltipBottom: (0, _defineProperty3.default)({
		      transformOrigin: 'center top',
		      margin: theme.spacing.unit * 3 + 'px 0'
		    }, theme.breakpoints.up('sm'), {
		      margin: '14px 0'
		    }),
		    tooltipOpen: {
		      opacity: 0.9,
		      transform: 'scale(1)'
		    }
		  };
		};

		function flipPlacement(placement) {
		  switch (placement) {
		    case 'bottom-end':
		      return 'bottom-start';
		    case 'bottom-start':
		      return 'bottom-end';
		    case 'top-end':
		      return 'top-start';
		    case 'top-start':
		      return 'top-end';
		    default:
		      return placement;
		  }
		}

		var Tooltip = function (_React$Component2) {
		  (0, _inherits3.default)(Tooltip, _React$Component2);

		  function Tooltip() {
		    var _ref;

		    var _temp, _this2, _ret;

		    (0, _classCallCheck3.default)(this, Tooltip);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this2 = (0, _possibleConstructorReturn3.default)(this, (_ref = Tooltip.__proto__ || (0, _getPrototypeOf2.default)(Tooltip)).call.apply(_ref, [this].concat(args))), _this2), _this2.state = {}, _this2.enterTimer = null, _this2.leaveTimer = null, _this2.touchTimer = null, _this2.isControlled = null, _this2.popper = null, _this2.children = null, _this2.ignoreNonTouchEvents = false, _this2.handleResize = (0, _debounce2.default)(function () {
		      if (_this2.popper) {
		        _this2.popper._popper.scheduleUpdate();
		      }
		    }, 166), _this2.handleRequestOpen = function (event) {
		      var children = _this2.props.children;

		      var childrenProps = children.props;

		      if (event.type === 'focus' && childrenProps.onFocus) {
		        childrenProps.onFocus(event);
		      }

		      if (event.type === 'mouseover' && childrenProps.onMouseOver) {
		        childrenProps.onMouseOver(event);
		      }

		      if (_this2.ignoreNonTouchEvents && event.type !== 'touchstart') {
		        return;
		      }

		      clearTimeout(_this2.leaveTimer);
		      if (_this2.props.enterDelay > 0) {
		        _this2.leaveTimer = setTimeout(function () {
		          _this2.requestOpen(event);
		        }, _this2.props.enterDelay);
		      } else {
		        _this2.requestOpen(event);
		      }
		    }, _this2.requestOpen = function (event) {
		      if (!_this2.isControlled) {
		        _this2.setState({ open: true });
		      }

		      if (_this2.props.onOpen) {
		        _this2.props.onOpen(event, true);
		      }
		    }, _this2.handleClose = function (event) {
		      var children = _this2.props.children;

		      var childrenProps = children.props;

		      if (event.type === 'blur' && childrenProps.onBlur) {
		        childrenProps.onBlur(event);
		      }

		      if (event.type === 'mouseleave' && childrenProps.onMouseLeave) {
		        childrenProps.onMouseLeave(event);
		      }

		      clearTimeout(_this2.leaveTimer);
		      if (_this2.props.leaveDelay) {
		        _this2.leaveTimer = setTimeout(function () {
		          _this2.requestClose(event);
		        }, _this2.props.leaveDelay);
		      } else {
		        _this2.requestClose(event);
		      }
		    }, _this2.requestClose = function (event) {
		      _this2.ignoreNonTouchEvents = false;

		      if (!_this2.isControlled) {
		        _this2.setState({ open: false });
		      }

		      if (_this2.props.onClose) {
		        _this2.props.onClose(event, false);
		      }
		    }, _this2.handleTouchStart = function (event) {
		      _this2.ignoreNonTouchEvents = true;
		      var children = _this2.props.children;

		      var childrenProps = children.props;

		      if (childrenProps.onTouchStart) {
		        childrenProps.onTouchStart(event);
		      }

		      clearTimeout(_this2.touchTimer);
		      event.persist();
		      _this2.touchTimer = setTimeout(function () {
		        _this2.handleRequestOpen(event);
		      }, 1e3);
		    }, _this2.handleTouchEnd = function (event) {
		      var children = _this2.props.children;

		      var childrenProps = children.props;

		      if (childrenProps.onTouchEnd) {
		        childrenProps.onTouchEnd(event);
		      }

		      clearTimeout(_this2.touchTimer);
		      clearTimeout(_this2.leaveTimer);
		      event.persist();
		      _this2.leaveTimer = setTimeout(function () {
		        _this2.requestClose(event);
		      }, 1500 + _this2.props.leaveDelay);
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this2, _ret);
		  }

		  (0, _createClass3.default)(Tooltip, [{
		    key: 'componentWillMount',
		    value: function componentWillMount() {
		      var props = this.props;


		      this.isControlled = props.open !== undefined;

		      if (!this.isControlled) {
		        // not controlled, use internal state
		        this.setState({
		          open: false
		        });
		      }
		    }
		  }, {
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(!this.children || !this.children.disabled || !this.children.tagName.toLowerCase() === 'button', ['Material-UI: you are providing a disabled button children to the Tooltip component.', 'A disabled element do not fire events.', 'But the Tooltip needs to listen to the children element events to display the title.', '', 'Place a `div` over top of the element.'].join('\n')) : void 0;
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      clearTimeout(this.enterTimer);
		      clearTimeout(this.leaveTimer);
		      this.handleResize.cancel();
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this3 = this;

		      var _props = this.props,
		          childrenProp = _props.children,
		          classes = _props.classes,
		          className = _props.className,
		          disableTriggerFocus = _props.disableTriggerFocus,
		          disableTriggerHover = _props.disableTriggerHover,
		          disableTriggerTouch = _props.disableTriggerTouch,
		          enterDelay = _props.enterDelay,
		          id = _props.id,
		          leaveDelay = _props.leaveDelay,
		          onClose = _props.onClose,
		          onOpen = _props.onOpen,
		          openProp = _props.open,
		          rawPlacement = _props.placement,
		          _props$PopperProps = _props.PopperProps;
		      _props$PopperProps = _props$PopperProps === undefined ? {} : _props$PopperProps;
		      var PopperClassName = _props$PopperProps.PopperClassName,
		          PopperOther = (0, _objectWithoutProperties3.default)(_props$PopperProps, ['PopperClassName']),
		          theme = _props.theme,
		          title = _props.title,
		          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'classes', 'className', 'disableTriggerFocus', 'disableTriggerHover', 'disableTriggerTouch', 'enterDelay', 'id', 'leaveDelay', 'onClose', 'onOpen', 'open', 'placement', 'PopperProps', 'theme', 'title']);


		      var themeDirection = theme && theme.direction;
		      var placement = themeDirection === 'rtl' ? flipPlacement(rawPlacement) : rawPlacement;
		      var open = this.isControlled ? openProp : this.state.open;
		      var childrenProps = {};

		      childrenProps['aria-describedby'] = id;

		      if (!disableTriggerTouch) {
		        childrenProps.onTouchStart = this.handleTouchStart;
		        childrenProps.onTouchEnd = this.handleTouchEnd;
		      }

		      if (!disableTriggerHover) {
		        childrenProps.onMouseOver = this.handleRequestOpen;
		        childrenProps.onMouseLeave = this.handleClose;
		      }

		      if (!disableTriggerFocus) {
		        childrenProps.onFocus = this.handleRequestOpen;
		        childrenProps.onBlur = this.handleClose;
		      }

		      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(!childrenProp.props.title, ['Material-UI: you have been providing a `title` property to the child of <Tooltip />.', 'Remove this title property `' + childrenProp.props.title + '` or the Tooltip component.'].join('\n')) : void 0;

		      return _react2.default.createElement(
		        _reactEventListener2.default,
		        { target: 'window', onResize: this.handleResize },
		        _react2.default.createElement(
		          _reactPopper.Manager,
		          (0, _extends3.default)({ className: (0, _classnames2.default)(classes.root, className) }, other),
		          _react2.default.createElement(
		            _reactPopper.Target,
		            null,
		            function (_ref2) {
		              var targetProps = _ref2.targetProps;
		              return _react2.default.createElement(
		                TargetChildren,
		                {
		                  ref: function ref(node) {
		                    _this3.children = (0, _reactDom.findDOMNode)(node);
		                    targetProps.ref(_this3.children);
		                  }
		                },
		                _react2.default.cloneElement(childrenProp, childrenProps)
		              );
		            }
		          ),
		          _react2.default.createElement(
		            _reactPopper.Popper,
		            (0, _extends3.default)({
		              placement: placement,
		              eventsEnabled: open,
		              className: (0, _classnames2.default)(classes.popper, (0, _defineProperty3.default)({}, classes.popperClose, !open), PopperClassName)
		            }, PopperOther, {
		              ref: function ref(node) {
		                _this3.popper = node;
		              }
		            }),
		            function (_ref3) {
		              var popperProps = _ref3.popperProps,
		                  restProps = _ref3.restProps;
		              return _react2.default.createElement(
		                'div',
		                (0, _extends3.default)({}, popperProps, restProps, {
		                  style: (0, _extends3.default)({}, popperProps.style, {
		                    left: popperProps.style.left || 0
		                  }, restProps.style)
		                }),
		                _react2.default.createElement(
		                  'div',
		                  {
		                    id: id,
		                    role: 'tooltip',
		                    'aria-hidden': !open,
		                    className: (0, _classnames2.default)(classes.tooltip, (0, _defineProperty3.default)({}, classes.tooltipOpen, open), classes['tooltip' + (0, _helpers.capitalizeFirstLetter)(placement.split('-')[0])])
		                  },
		                  title
		                )
		              );
		            }
		          )
		        )
		      );
		    }
		  }]);
		  return Tooltip;
		}(_react2.default.Component);

		Tooltip.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Tooltip reference element.
		   */
		  children: _propTypes2.default.element.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * Do not respond to focus events.
		   */
		  disableTriggerFocus: _propTypes2.default.bool,
		  /**
		   * Do not respond to hover events.
		   */
		  disableTriggerHover: _propTypes2.default.bool,
		  /**
		   * Do not respond to long press touch events.
		   */
		  disableTriggerTouch: _propTypes2.default.bool,
		  /**
		   * The number of milliseconds to wait before showing the tooltip.
		   */
		  enterDelay: _propTypes2.default.number,
		  /**
		   * The relationship between the tooltip and the wrapper component is not clear from the DOM.
		   * By providing this property, we can use aria-describedby to solve the accessibility issue.
		   */
		  id: _propTypes2.default.string,
		  /**
		   * The number of milliseconds to wait before hidding the tooltip.
		   */
		  leaveDelay: _propTypes2.default.number,
		  /**
		   * Callback fired when the tooltip requests to be closed.
		   *
		   * @param {object} event The event source of the callback
		   */
		  onClose: _propTypes2.default.func,
		  /**
		   * Callback fired when the tooltip requests to be open.
		   *
		   * @param {object} event The event source of the callback
		   */
		  onOpen: _propTypes2.default.func,
		  /**
		   * If `true`, the tooltip is shown.
		   */
		  open: _propTypes2.default.bool,
		  /**
		   * Tooltip placement
		   */
		  placement: _propTypes2.default.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),
		  /**
		   * Properties applied to the `Popper` element.
		   */
		  PopperProps: _propTypes2.default.object,
		  /**
		   * @ignore
		   */
		  theme: _propTypes2.default.object.isRequired,
		  /**
		   * Tooltip title.
		   */
		  title: _propTypes2.default.node.isRequired
		} : {};

		Tooltip.defaultProps = {
		  disableTriggerFocus: false,
		  disableTriggerHover: false,
		  disableTriggerTouch: false,
		  enterDelay: 0,
		  leaveDelay: 0,
		  placement: 'bottom'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTooltip', withTheme: true })(Tooltip);
		}).call(this,require('_process'))
		},{"../colors/common":889,"../colors/grey":894,"../styles/withStyles":934,"../utils/helpers":945,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"lodash/debounce":740,"prop-types":961,"react":1016,"react-dom":971,"react-event-listener":972,"react-popper":981,"warning":1054}],882:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Tooltip = require('./Tooltip');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Tooltip).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Tooltip":881}],883:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _helpers = require('../utils/helpers');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = function styles(theme) {
		  return {
		    root: {
		      display: 'block',
		      margin: 0
		    },
		    display4: theme.typography.display4,
		    display3: theme.typography.display3,
		    display2: theme.typography.display2,
		    display1: theme.typography.display1,
		    headline: theme.typography.headline,
		    title: theme.typography.title,
		    subheading: theme.typography.subheading,
		    body2: theme.typography.body2,
		    body1: theme.typography.body1,
		    caption: theme.typography.caption,
		    button: theme.typography.button,
		    alignLeft: {
		      textAlign: 'left'
		    },
		    alignCenter: {
		      textAlign: 'center'
		    },
		    alignRight: {
		      textAlign: 'right'
		    },
		    alignJustify: {
		      textAlign: 'justify'
		    },
		    noWrap: {
		      overflow: 'hidden',
		      textOverflow: 'ellipsis',
		      whiteSpace: 'nowrap'
		    },
		    gutterBottom: {
		      marginBottom: '0.35em'
		    },
		    paragraph: {
		      marginBottom: theme.spacing.unit * 2
		    },
		    colorInherit: {
		      color: 'inherit'
		    },
		    colorPrimary: {
		      color: theme.palette.primary[500]
		    },
		    colorSecondary: {
		      color: theme.palette.text.secondary
		    },
		    colorAccent: {
		      color: theme.palette.secondary.A400
		    },
		    colorError: {
		      color: theme.palette.error.A400
		    }
		  };
		};

		function Typography(props) {
		  var _classNames;

		  var align = props.align,
		      classes = props.classes,
		      classNameProp = props.className,
		      componentProp = props.component,
		      color = props.color,
		      gutterBottom = props.gutterBottom,
		      headlineMapping = props.headlineMapping,
		      noWrap = props.noWrap,
		      paragraph = props.paragraph,
		      type = props.type,
		      other = (0, _objectWithoutProperties3.default)(props, ['align', 'classes', 'className', 'component', 'color', 'gutterBottom', 'headlineMapping', 'noWrap', 'paragraph', 'type']);


		  var className = (0, _classnames2.default)(classes.root, classes[type], (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes['color' + (0, _helpers.capitalizeFirstLetter)(color)], color !== 'default'), (0, _defineProperty3.default)(_classNames, classes.noWrap, noWrap), (0, _defineProperty3.default)(_classNames, classes.gutterBottom, gutterBottom), (0, _defineProperty3.default)(_classNames, classes.paragraph, paragraph), (0, _defineProperty3.default)(_classNames, classes['align' + (0, _helpers.capitalizeFirstLetter)(align)], align !== 'inherit'), _classNames), classNameProp);

		  var Component = componentProp || (paragraph ? 'p' : headlineMapping[type]) || 'span';

		  return _react2.default.createElement(Component, (0, _extends3.default)({ className: className }, other));
		}

		Typography.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * Set the text-align on the component.
		   */
		  align: _propTypes2.default.oneOf(['inherit', 'left', 'center', 'right', 'justify']),
		  /**
		   * The content of the component.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The color of the component. It's using the theme palette when that makes sense.
		   */
		  color: _propTypes2.default.oneOf(['inherit', 'primary', 'secondary', 'accent', 'error', 'default']),
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   * By default we map the type to a good default headline component.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * If `true`, the text will have a bottom margin.
		   */
		  gutterBottom: _propTypes2.default.bool,
		  /**
		   * We are empirically mapping the type property to a range of different DOM element type.
		   * For instance, h1 to h6. If you wish to change that mapping, you can provide your own.
		   * Alternatively, you can use the `component` property.
		   */
		  headlineMapping: _propTypes2.default.object,
		  /**
		   * If `true`, the text will not wrap, but instead will truncate with an ellipsis.
		   */
		  noWrap: _propTypes2.default.bool,
		  /**
		   * If `true`, the text will have a bottom margin.
		   */
		  paragraph: _propTypes2.default.bool,
		  /**
		   * Applies the theme typography styles.
		   */
		  type: _propTypes2.default.oneOf(['display4', 'display3', 'display2', 'display1', 'headline', 'title', 'subheading', 'body2', 'body1', 'caption', 'button'])
		} : {};

		Typography.defaultProps = {
		  align: 'inherit',
		  color: 'default',
		  gutterBottom: false,
		  headlineMapping: {
		    display4: 'h1',
		    display3: 'h1',
		    display2: 'h1',
		    display1: 'h1',
		    headline: 'h1',
		    title: 'h2',
		    subheading: 'h3',
		    body2: 'aside',
		    body1: 'p'
		  },
		  noWrap: false,
		  paragraph: false,
		  type: 'body1'
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiTypography' })(Typography);
		}).call(this,require('_process'))
		},{"../styles/withStyles":934,"../utils/helpers":945,"_process":957,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"classnames":642,"prop-types":961,"react":1016}],884:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Typography = require('./Typography');

		Object.defineProperty(exports, 'default', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Typography).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Typography":883}],885:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var amber = {
		  50: '#fff8e1',
		  100: '#ffecb3',
		  200: '#ffe082',
		  300: '#ffd54f',
		  400: '#ffca28',
		  500: '#ffc107',
		  600: '#ffb300',
		  700: '#ffa000',
		  800: '#ff8f00',
		  900: '#ff6f00',
		  A100: '#ffe57f',
		  A200: '#ffd740',
		  A400: '#ffc400',
		  A700: '#ffab00',
		  contrastDefaultColor: 'dark'
		};

		exports.default = amber;
		},{}],886:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var blue = {
		  50: '#e3f2fd',
		  100: '#bbdefb',
		  200: '#90caf9',
		  300: '#64b5f6',
		  400: '#42a5f5',
		  500: '#2196f3',
		  600: '#1e88e5',
		  700: '#1976d2',
		  800: '#1565c0',
		  900: '#0d47a1',
		  A100: '#82b1ff',
		  A200: '#448aff',
		  A400: '#2979ff',
		  A700: '#2962ff',
		  contrastDefaultColor: 'light'
		};

		exports.default = blue;
		},{}],887:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var blueGrey = {
		  50: '#eceff1',
		  100: '#cfd8dc',
		  200: '#b0bec5',
		  300: '#90a4ae',
		  400: '#78909c',
		  500: '#607d8b',
		  600: '#546e7a',
		  700: '#455a64',
		  800: '#37474f',
		  900: '#263238',
		  A100: '#cfd8dc',
		  A200: '#b0bec5',
		  A400: '#78909c',
		  A700: '#455a64',
		  contrastDefaultColor: 'light'
		};

		exports.default = blueGrey;
		},{}],888:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var brown = {
		  50: '#efebe9',
		  100: '#d7ccc8',
		  200: '#bcaaa4',
		  300: '#a1887f',
		  400: '#8d6e63',
		  500: '#795548',
		  600: '#6d4c41',
		  700: '#5d4037',
		  800: '#4e342e',
		  900: '#3e2723',
		  A100: '#d7ccc8',
		  A200: '#bcaaa4',
		  A400: '#8d6e63',
		  A700: '#5d4037',
		  contrastDefaultColor: 'light'
		};

		exports.default = brown;
		},{}],889:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var common = {
		  black: '#000',
		  white: '#fff',
		  transparent: 'rgba(0, 0, 0, 0)',
		  fullBlack: 'rgba(0, 0, 0, 1)',
		  darkBlack: 'rgba(0, 0, 0, 0.87)',
		  lightBlack: 'rgba(0, 0, 0, 0.54)',
		  minBlack: 'rgba(0, 0, 0, 0.26)',
		  faintBlack: 'rgba(0, 0, 0, 0.12)',
		  fullWhite: 'rgba(255, 255, 255, 1)',
		  darkWhite: 'rgba(255, 255, 255, 0.87)',
		  lightWhite: 'rgba(255, 255, 255, 0.54)'
		};

		exports.default = common;
		},{}],890:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var cyan = {
		  50: '#e0f7fa',
		  100: '#b2ebf2',
		  200: '#80deea',
		  300: '#4dd0e1',
		  400: '#26c6da',
		  500: '#00bcd4',
		  600: '#00acc1',
		  700: '#0097a7',
		  800: '#00838f',
		  900: '#006064',
		  A100: '#84ffff',
		  A200: '#18ffff',
		  A400: '#00e5ff',
		  A700: '#00b8d4',
		  contrastDefaultColor: 'dark'
		};

		exports.default = cyan;
		},{}],891:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var deepOrange = {
		  50: '#fbe9e7',
		  100: '#ffccbc',
		  200: '#ffab91',
		  300: '#ff8a65',
		  400: '#ff7043',
		  500: '#ff5722',
		  600: '#f4511e',
		  700: '#e64a19',
		  800: '#d84315',
		  900: '#bf360c',
		  A100: '#ff9e80',
		  A200: '#ff6e40',
		  A400: '#ff3d00',
		  A700: '#dd2c00',
		  contrastDefaultColor: 'light'
		};

		exports.default = deepOrange;
		},{}],892:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var deepPurple = {
		  50: '#ede7f6',
		  100: '#d1c4e9',
		  200: '#b39ddb',
		  300: '#9575cd',
		  400: '#7e57c2',
		  500: '#673ab7',
		  600: '#5e35b1',
		  700: '#512da8',
		  800: '#4527a0',
		  900: '#311b92',
		  A100: '#b388ff',
		  A200: '#7c4dff',
		  A400: '#651fff',
		  A700: '#6200ea',
		  contrastDefaultColor: 'light'
		};

		exports.default = deepPurple;
		},{}],893:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var green = {
		  50: '#e8f5e9',
		  100: '#c8e6c9',
		  200: '#a5d6a7',
		  300: '#81c784',
		  400: '#66bb6a',
		  500: '#4caf50',
		  600: '#43a047',
		  700: '#388e3c',
		  800: '#2e7d32',
		  900: '#1b5e20',
		  A100: '#b9f6ca',
		  A200: '#69f0ae',
		  A400: '#00e676',
		  A700: '#00c853',
		  contrastDefaultColor: 'dark'
		};

		exports.default = green;
		},{}],894:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var grey = {
		  50: '#fafafa',
		  100: '#f5f5f5',
		  200: '#eeeeee',
		  300: '#e0e0e0',
		  400: '#bdbdbd',
		  500: '#9e9e9e',
		  600: '#757575',
		  700: '#616161',
		  800: '#424242',
		  900: '#212121',
		  A100: '#d5d5d5',
		  A200: '#aaaaaa',
		  A400: '#303030',
		  A700: '#616161',
		  contrastDefaultColor: 'dark'
		};

		exports.default = grey;
		},{}],895:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _common = require('./common');

		Object.defineProperty(exports, 'common', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_common).default;
		  }
		});

		var _red = require('./red');

		Object.defineProperty(exports, 'red', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_red).default;
		  }
		});

		var _pink = require('./pink');

		Object.defineProperty(exports, 'pink', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_pink).default;
		  }
		});

		var _purple = require('./purple');

		Object.defineProperty(exports, 'purple', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_purple).default;
		  }
		});

		var _deepPurple = require('./deepPurple');

		Object.defineProperty(exports, 'deepPurple', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_deepPurple).default;
		  }
		});

		var _indigo = require('./indigo');

		Object.defineProperty(exports, 'indigo', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_indigo).default;
		  }
		});

		var _blue = require('./blue');

		Object.defineProperty(exports, 'blue', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_blue).default;
		  }
		});

		var _lightBlue = require('./lightBlue');

		Object.defineProperty(exports, 'lightBlue', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_lightBlue).default;
		  }
		});

		var _cyan = require('./cyan');

		Object.defineProperty(exports, 'cyan', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_cyan).default;
		  }
		});

		var _teal = require('./teal');

		Object.defineProperty(exports, 'teal', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_teal).default;
		  }
		});

		var _green = require('./green');

		Object.defineProperty(exports, 'green', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_green).default;
		  }
		});

		var _lightGreen = require('./lightGreen');

		Object.defineProperty(exports, 'lightGreen', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_lightGreen).default;
		  }
		});

		var _lime = require('./lime');

		Object.defineProperty(exports, 'lime', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_lime).default;
		  }
		});

		var _yellow = require('./yellow');

		Object.defineProperty(exports, 'yellow', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_yellow).default;
		  }
		});

		var _amber = require('./amber');

		Object.defineProperty(exports, 'amber', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_amber).default;
		  }
		});

		var _orange = require('./orange');

		Object.defineProperty(exports, 'orange', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_orange).default;
		  }
		});

		var _deepOrange = require('./deepOrange');

		Object.defineProperty(exports, 'deepOrange', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_deepOrange).default;
		  }
		});

		var _brown = require('./brown');

		Object.defineProperty(exports, 'brown', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_brown).default;
		  }
		});

		var _grey = require('./grey');

		Object.defineProperty(exports, 'grey', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_grey).default;
		  }
		});

		var _blueGrey = require('./blueGrey');

		Object.defineProperty(exports, 'blueGrey', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_blueGrey).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./amber":885,"./blue":886,"./blueGrey":887,"./brown":888,"./common":889,"./cyan":890,"./deepOrange":891,"./deepPurple":892,"./green":893,"./grey":894,"./indigo":896,"./lightBlue":897,"./lightGreen":898,"./lime":899,"./orange":900,"./pink":901,"./purple":902,"./red":903,"./teal":904,"./yellow":905}],896:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var indigo = {
		  50: '#e8eaf6',
		  100: '#c5cae9',
		  200: '#9fa8da',
		  300: '#7986cb',
		  400: '#5c6bc0',
		  500: '#3f51b5',
		  600: '#3949ab',
		  700: '#303f9f',
		  800: '#283593',
		  900: '#1a237e',
		  A100: '#8c9eff',
		  A200: '#536dfe',
		  A400: '#3d5afe',
		  A700: '#304ffe',
		  contrastDefaultColor: 'light'
		};

		exports.default = indigo;
		},{}],897:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var lightBlue = {
		  50: '#e1f5fe',
		  100: '#b3e5fc',
		  200: '#81d4fa',
		  300: '#4fc3f7',
		  400: '#29b6f6',
		  500: '#03a9f4',
		  600: '#039be5',
		  700: '#0288d1',
		  800: '#0277bd',
		  900: '#01579b',
		  A100: '#80d8ff',
		  A200: '#40c4ff',
		  A400: '#00b0ff',
		  A700: '#0091ea',
		  contrastDefaultColor: 'dark'
		};

		exports.default = lightBlue;
		},{}],898:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var lightGreen = {
		  50: '#f1f8e9',
		  100: '#dcedc8',
		  200: '#c5e1a5',
		  300: '#aed581',
		  400: '#9ccc65',
		  500: '#8bc34a',
		  600: '#7cb342',
		  700: '#689f38',
		  800: '#558b2f',
		  900: '#33691e',
		  A100: '#ccff90',
		  A200: '#b2ff59',
		  A400: '#76ff03',
		  A700: '#64dd17',
		  contrastDefaultColor: 'dark'
		};

		exports.default = lightGreen;
		},{}],899:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var lime = {
		  50: '#f9fbe7',
		  100: '#f0f4c3',
		  200: '#e6ee9c',
		  300: '#dce775',
		  400: '#d4e157',
		  500: '#cddc39',
		  600: '#c0ca33',
		  700: '#afb42b',
		  800: '#9e9d24',
		  900: '#827717',
		  A100: '#f4ff81',
		  A200: '#eeff41',
		  A400: '#c6ff00',
		  A700: '#aeea00',
		  contrastDefaultColor: 'dark'
		};

		exports.default = lime;
		},{}],900:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var orange = {
		  50: '#fff3e0',
		  100: '#ffe0b2',
		  200: '#ffcc80',
		  300: '#ffb74d',
		  400: '#ffa726',
		  500: '#ff9800',
		  600: '#fb8c00',
		  700: '#f57c00',
		  800: '#ef6c00',
		  900: '#e65100',
		  A100: '#ffd180',
		  A200: '#ffab40',
		  A400: '#ff9100',
		  A700: '#ff6d00',
		  contrastDefaultColor: 'dark'
		};

		exports.default = orange;
		},{}],901:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var pink = {
		  50: '#fce4ec',
		  100: '#f8bbd0',
		  200: '#f48fb1',
		  300: '#f06292',
		  400: '#ec407a',
		  500: '#e91e63',
		  600: '#d81b60',
		  700: '#c2185b',
		  800: '#ad1457',
		  900: '#880e4f',
		  A100: '#ff80ab',
		  A200: '#ff4081',
		  A400: '#f50057',
		  A700: '#c51162',
		  contrastDefaultColor: 'light'
		};

		exports.default = pink;
		},{}],902:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var purple = {
		  50: '#f3e5f5',
		  100: '#e1bee7',
		  200: '#ce93d8',
		  300: '#ba68c8',
		  400: '#ab47bc',
		  500: '#9c27b0',
		  600: '#8e24aa',
		  700: '#7b1fa2',
		  800: '#6a1b9a',
		  900: '#4a148c',
		  A100: '#ea80fc',
		  A200: '#e040fb',
		  A400: '#d500f9',
		  A700: '#aa00ff',
		  contrastDefaultColor: 'light'
		};

		exports.default = purple;
		},{}],903:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var red = {
		  50: '#ffebee',
		  100: '#ffcdd2',
		  200: '#ef9a9a',
		  300: '#e57373',
		  400: '#ef5350',
		  500: '#f44336',
		  600: '#e53935',
		  700: '#d32f2f',
		  800: '#c62828',
		  900: '#b71c1c',
		  A100: '#ff8a80',
		  A200: '#ff5252',
		  A400: '#ff1744',
		  A700: '#d50000',
		  contrastDefaultColor: 'light'
		};

		exports.default = red;
		},{}],904:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var teal = {
		  50: '#e0f2f1',
		  100: '#b2dfdb',
		  200: '#80cbc4',
		  300: '#4db6ac',
		  400: '#26a69a',
		  500: '#009688',
		  600: '#00897b',
		  700: '#00796b',
		  800: '#00695c',
		  900: '#004d40',
		  A100: '#a7ffeb',
		  A200: '#64ffda',
		  A400: '#1de9b6',
		  A700: '#00bfa5',
		  contrastDefaultColor: 'dark'
		};

		exports.default = teal;
		},{}],905:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var yellow = {
		  50: '#fffde7',
		  100: '#fff9c4',
		  200: '#fff59d',
		  300: '#fff176',
		  400: '#ffee58',
		  500: '#ffeb3b',
		  600: '#fdd835',
		  700: '#fbc02d',
		  800: '#f9a825',
		  900: '#f57f17',
		  A100: '#ffff8d',
		  A200: '#ffff00',
		  A400: '#ffea00',
		  A700: '#ffd600',
		  contrastDefaultColor: 'dark'
		};

		exports.default = yellow;
		},{}],906:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.withWidth = exports.Collapse = exports.Fade = exports.Grow = exports.Slide = exports.Tooltip = exports.Toolbar = exports.TextField = exports.Typography = exports.Tab = exports.Tabs = exports.TableSortLabel = exports.TableRow = exports.TablePagination = exports.TableHead = exports.TableFooter = exports.TableCell = exports.TableBody = exports.Table = exports.Switch = exports.SvgIcon = exports.colors = exports.createMuiTheme = exports.withTheme = exports.withStyles = exports.MuiThemeProvider = exports.StepLabel = exports.StepContent = exports.StepButton = exports.Step = exports.Stepper = exports.SnackbarContent = exports.Snackbar = exports.Select = exports.RadioGroup = exports.Radio = exports.LinearProgress = exports.CircularProgress = exports.Popover = exports.Paper = exports.Modal = exports.MenuList = exports.MenuItem = exports.Menu = exports.ListSubheader = exports.ListItemText = exports.ListItemSecondaryAction = exports.ListItemIcon = exports.ListItemAvatar = exports.ListItem = exports.List = exports.Grid = exports.InputAdornment = exports.InputLabel = exports.Input = exports.IconButton = exports.Icon = exports.Hidden = exports.FormControlLabel = exports.FormHelperText = exports.FormLabel = exports.FormGroup = exports.FormControl = exports.ExpansionPanelSummary = exports.ExpansionPanelDetails = exports.ExpansionPanelActions = exports.ExpansionPanel = exports.Drawer = exports.Divider = exports.withMobileDialog = exports.DialogTitle = exports.DialogContentText = exports.DialogContent = exports.DialogActions = exports.Dialog = exports.ClickAwayListener = exports.Chip = exports.Checkbox = exports.CardMedia = exports.CardHeader = exports.CardContent = exports.CardActions = exports.Card = exports.ButtonBase = exports.Button = exports.BottomNavigationButton = exports.BottomNavigation = exports.Badge = exports.Avatar = exports.AppBar = undefined;

		var _AppBar = require('./AppBar');

		Object.defineProperty(exports, 'AppBar', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_AppBar).default;
		  }
		});

		var _Avatar = require('./Avatar');

		Object.defineProperty(exports, 'Avatar', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Avatar).default;
		  }
		});

		var _Badge = require('./Badge');

		Object.defineProperty(exports, 'Badge', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Badge).default;
		  }
		});

		var _BottomNavigation = require('./BottomNavigation');

		Object.defineProperty(exports, 'BottomNavigation', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_BottomNavigation).default;
		  }
		});
		Object.defineProperty(exports, 'BottomNavigationButton', {
		  enumerable: true,
		  get: function get() {
		    return _BottomNavigation.BottomNavigationButton;
		  }
		});

		var _Button = require('./Button');

		Object.defineProperty(exports, 'Button', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Button).default;
		  }
		});

		var _ButtonBase = require('./ButtonBase');

		Object.defineProperty(exports, 'ButtonBase', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ButtonBase).default;
		  }
		});

		var _Card = require('./Card');

		Object.defineProperty(exports, 'Card', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Card).default;
		  }
		});
		Object.defineProperty(exports, 'CardActions', {
		  enumerable: true,
		  get: function get() {
		    return _Card.CardActions;
		  }
		});
		Object.defineProperty(exports, 'CardContent', {
		  enumerable: true,
		  get: function get() {
		    return _Card.CardContent;
		  }
		});
		Object.defineProperty(exports, 'CardHeader', {
		  enumerable: true,
		  get: function get() {
		    return _Card.CardHeader;
		  }
		});
		Object.defineProperty(exports, 'CardMedia', {
		  enumerable: true,
		  get: function get() {
		    return _Card.CardMedia;
		  }
		});

		var _Checkbox = require('./Checkbox');

		Object.defineProperty(exports, 'Checkbox', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Checkbox).default;
		  }
		});

		var _Chip = require('./Chip');

		Object.defineProperty(exports, 'Chip', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Chip).default;
		  }
		});

		var _ClickAwayListener = require('./utils/ClickAwayListener');

		Object.defineProperty(exports, 'ClickAwayListener', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ClickAwayListener).default;
		  }
		});

		var _Dialog = require('./Dialog');

		Object.defineProperty(exports, 'Dialog', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Dialog).default;
		  }
		});
		Object.defineProperty(exports, 'DialogActions', {
		  enumerable: true,
		  get: function get() {
		    return _Dialog.DialogActions;
		  }
		});
		Object.defineProperty(exports, 'DialogContent', {
		  enumerable: true,
		  get: function get() {
		    return _Dialog.DialogContent;
		  }
		});
		Object.defineProperty(exports, 'DialogContentText', {
		  enumerable: true,
		  get: function get() {
		    return _Dialog.DialogContentText;
		  }
		});
		Object.defineProperty(exports, 'DialogTitle', {
		  enumerable: true,
		  get: function get() {
		    return _Dialog.DialogTitle;
		  }
		});
		Object.defineProperty(exports, 'withMobileDialog', {
		  enumerable: true,
		  get: function get() {
		    return _Dialog.withMobileDialog;
		  }
		});

		var _Divider = require('./Divider');

		Object.defineProperty(exports, 'Divider', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Divider).default;
		  }
		});

		var _Drawer = require('./Drawer');

		Object.defineProperty(exports, 'Drawer', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Drawer).default;
		  }
		});

		var _ExpansionPanel = require('./ExpansionPanel');

		Object.defineProperty(exports, 'ExpansionPanel', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_ExpansionPanel).default;
		  }
		});
		Object.defineProperty(exports, 'ExpansionPanelActions', {
		  enumerable: true,
		  get: function get() {
		    return _ExpansionPanel.ExpansionPanelActions;
		  }
		});
		Object.defineProperty(exports, 'ExpansionPanelDetails', {
		  enumerable: true,
		  get: function get() {
		    return _ExpansionPanel.ExpansionPanelDetails;
		  }
		});
		Object.defineProperty(exports, 'ExpansionPanelSummary', {
		  enumerable: true,
		  get: function get() {
		    return _ExpansionPanel.ExpansionPanelSummary;
		  }
		});

		var _Form = require('./Form');

		Object.defineProperty(exports, 'FormControl', {
		  enumerable: true,
		  get: function get() {
		    return _Form.FormControl;
		  }
		});
		Object.defineProperty(exports, 'FormGroup', {
		  enumerable: true,
		  get: function get() {
		    return _Form.FormGroup;
		  }
		});
		Object.defineProperty(exports, 'FormLabel', {
		  enumerable: true,
		  get: function get() {
		    return _Form.FormLabel;
		  }
		});
		Object.defineProperty(exports, 'FormHelperText', {
		  enumerable: true,
		  get: function get() {
		    return _Form.FormHelperText;
		  }
		});
		Object.defineProperty(exports, 'FormControlLabel', {
		  enumerable: true,
		  get: function get() {
		    return _Form.FormControlLabel;
		  }
		});

		var _Hidden = require('./Hidden');

		Object.defineProperty(exports, 'Hidden', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Hidden).default;
		  }
		});

		var _Icon = require('./Icon');

		Object.defineProperty(exports, 'Icon', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Icon).default;
		  }
		});

		var _IconButton = require('./IconButton');

		Object.defineProperty(exports, 'IconButton', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_IconButton).default;
		  }
		});

		var _Input = require('./Input');

		Object.defineProperty(exports, 'Input', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Input).default;
		  }
		});
		Object.defineProperty(exports, 'InputLabel', {
		  enumerable: true,
		  get: function get() {
		    return _Input.InputLabel;
		  }
		});
		Object.defineProperty(exports, 'InputAdornment', {
		  enumerable: true,
		  get: function get() {
		    return _Input.InputAdornment;
		  }
		});

		var _Grid = require('./Grid');

		Object.defineProperty(exports, 'Grid', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Grid).default;
		  }
		});

		var _List = require('./List');

		Object.defineProperty(exports, 'List', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_List).default;
		  }
		});
		Object.defineProperty(exports, 'ListItem', {
		  enumerable: true,
		  get: function get() {
		    return _List.ListItem;
		  }
		});
		Object.defineProperty(exports, 'ListItemAvatar', {
		  enumerable: true,
		  get: function get() {
		    return _List.ListItemAvatar;
		  }
		});
		Object.defineProperty(exports, 'ListItemIcon', {
		  enumerable: true,
		  get: function get() {
		    return _List.ListItemIcon;
		  }
		});
		Object.defineProperty(exports, 'ListItemSecondaryAction', {
		  enumerable: true,
		  get: function get() {
		    return _List.ListItemSecondaryAction;
		  }
		});
		Object.defineProperty(exports, 'ListItemText', {
		  enumerable: true,
		  get: function get() {
		    return _List.ListItemText;
		  }
		});
		Object.defineProperty(exports, 'ListSubheader', {
		  enumerable: true,
		  get: function get() {
		    return _List.ListSubheader;
		  }
		});

		var _Menu = require('./Menu');

		Object.defineProperty(exports, 'Menu', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Menu).default;
		  }
		});
		Object.defineProperty(exports, 'MenuItem', {
		  enumerable: true,
		  get: function get() {
		    return _Menu.MenuItem;
		  }
		});
		Object.defineProperty(exports, 'MenuList', {
		  enumerable: true,
		  get: function get() {
		    return _Menu.MenuList;
		  }
		});

		var _Modal = require('./Modal');

		Object.defineProperty(exports, 'Modal', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Modal).default;
		  }
		});

		var _Paper = require('./Paper');

		Object.defineProperty(exports, 'Paper', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Paper).default;
		  }
		});

		var _Popover = require('./Popover');

		Object.defineProperty(exports, 'Popover', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Popover).default;
		  }
		});

		var _Progress = require('./Progress');

		Object.defineProperty(exports, 'CircularProgress', {
		  enumerable: true,
		  get: function get() {
		    return _Progress.CircularProgress;
		  }
		});
		Object.defineProperty(exports, 'LinearProgress', {
		  enumerable: true,
		  get: function get() {
		    return _Progress.LinearProgress;
		  }
		});

		var _Radio = require('./Radio');

		Object.defineProperty(exports, 'Radio', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Radio).default;
		  }
		});
		Object.defineProperty(exports, 'RadioGroup', {
		  enumerable: true,
		  get: function get() {
		    return _Radio.RadioGroup;
		  }
		});

		var _Select = require('./Select');

		Object.defineProperty(exports, 'Select', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Select).default;
		  }
		});

		var _Snackbar = require('./Snackbar');

		Object.defineProperty(exports, 'Snackbar', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Snackbar).default;
		  }
		});
		Object.defineProperty(exports, 'SnackbarContent', {
		  enumerable: true,
		  get: function get() {
		    return _Snackbar.SnackbarContent;
		  }
		});

		var _Stepper = require('./Stepper');

		Object.defineProperty(exports, 'Stepper', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Stepper).default;
		  }
		});
		Object.defineProperty(exports, 'Step', {
		  enumerable: true,
		  get: function get() {
		    return _Stepper.Step;
		  }
		});
		Object.defineProperty(exports, 'StepButton', {
		  enumerable: true,
		  get: function get() {
		    return _Stepper.StepButton;
		  }
		});
		Object.defineProperty(exports, 'StepContent', {
		  enumerable: true,
		  get: function get() {
		    return _Stepper.StepContent;
		  }
		});
		Object.defineProperty(exports, 'StepLabel', {
		  enumerable: true,
		  get: function get() {
		    return _Stepper.StepLabel;
		  }
		});

		var _styles = require('./styles');

		Object.defineProperty(exports, 'MuiThemeProvider', {
		  enumerable: true,
		  get: function get() {
		    return _styles.MuiThemeProvider;
		  }
		});
		Object.defineProperty(exports, 'withStyles', {
		  enumerable: true,
		  get: function get() {
		    return _styles.withStyles;
		  }
		});
		Object.defineProperty(exports, 'withTheme', {
		  enumerable: true,
		  get: function get() {
		    return _styles.withTheme;
		  }
		});
		Object.defineProperty(exports, 'createMuiTheme', {
		  enumerable: true,
		  get: function get() {
		    return _styles.createMuiTheme;
		  }
		});

		var _SvgIcon = require('./SvgIcon');

		Object.defineProperty(exports, 'SvgIcon', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_SvgIcon).default;
		  }
		});

		var _Switch = require('./Switch');

		Object.defineProperty(exports, 'Switch', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Switch).default;
		  }
		});

		var _Table = require('./Table');

		Object.defineProperty(exports, 'Table', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Table).default;
		  }
		});
		Object.defineProperty(exports, 'TableBody', {
		  enumerable: true,
		  get: function get() {
		    return _Table.TableBody;
		  }
		});
		Object.defineProperty(exports, 'TableCell', {
		  enumerable: true,
		  get: function get() {
		    return _Table.TableCell;
		  }
		});
		Object.defineProperty(exports, 'TableFooter', {
		  enumerable: true,
		  get: function get() {
		    return _Table.TableFooter;
		  }
		});
		Object.defineProperty(exports, 'TableHead', {
		  enumerable: true,
		  get: function get() {
		    return _Table.TableHead;
		  }
		});
		Object.defineProperty(exports, 'TablePagination', {
		  enumerable: true,
		  get: function get() {
		    return _Table.TablePagination;
		  }
		});
		Object.defineProperty(exports, 'TableRow', {
		  enumerable: true,
		  get: function get() {
		    return _Table.TableRow;
		  }
		});
		Object.defineProperty(exports, 'TableSortLabel', {
		  enumerable: true,
		  get: function get() {
		    return _Table.TableSortLabel;
		  }
		});

		var _Tabs = require('./Tabs');

		Object.defineProperty(exports, 'Tabs', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Tabs).default;
		  }
		});
		Object.defineProperty(exports, 'Tab', {
		  enumerable: true,
		  get: function get() {
		    return _Tabs.Tab;
		  }
		});

		var _Typography = require('./Typography');

		Object.defineProperty(exports, 'Typography', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Typography).default;
		  }
		});

		var _TextField = require('./TextField');

		Object.defineProperty(exports, 'TextField', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_TextField).default;
		  }
		});

		var _Toolbar = require('./Toolbar');

		Object.defineProperty(exports, 'Toolbar', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Toolbar).default;
		  }
		});

		var _Tooltip = require('./Tooltip');

		Object.defineProperty(exports, 'Tooltip', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Tooltip).default;
		  }
		});

		var _transitions = require('./transitions');

		Object.defineProperty(exports, 'Slide', {
		  enumerable: true,
		  get: function get() {
		    return _transitions.Slide;
		  }
		});
		Object.defineProperty(exports, 'Grow', {
		  enumerable: true,
		  get: function get() {
		    return _transitions.Grow;
		  }
		});
		Object.defineProperty(exports, 'Fade', {
		  enumerable: true,
		  get: function get() {
		    return _transitions.Fade;
		  }
		});
		Object.defineProperty(exports, 'Collapse', {
		  enumerable: true,
		  get: function get() {
		    return _transitions.Collapse;
		  }
		});

		var _withWidth = require('./utils/withWidth');

		Object.defineProperty(exports, 'withWidth', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_withWidth).default;
		  }
		});

		var _colors = require('./colors');

		var colors = _interopRequireWildcard(_colors);

		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// eslint-disable-next-line import/first


		exports.colors = colors;
		},{"./AppBar":756,"./Avatar":758,"./Badge":760,"./BottomNavigation":763,"./Button":770,"./ButtonBase":768,"./Card":776,"./Checkbox":778,"./Chip":780,"./Dialog":786,"./Divider":789,"./Drawer":791,"./ExpansionPanel":796,"./Form":802,"./Grid":804,"./Hidden":808,"./Icon":812,"./IconButton":810,"./Input":817,"./List":825,"./Menu":829,"./Modal":832,"./Paper":835,"./Popover":837,"./Progress":840,"./Radio":843,"./Select":846,"./Snackbar":849,"./Stepper":858,"./SvgIcon":860,"./Switch":862,"./Table":871,"./Tabs":876,"./TextField":878,"./Toolbar":880,"./Tooltip":882,"./Typography":884,"./colors":895,"./styles":929,"./transitions":941,"./utils/ClickAwayListener":942,"./utils/withWidth":950}],907:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _reactDom = require('react-dom');

		var _reactDom2 = _interopRequireDefault(_reactDom);

		var _inDOM = require('dom-helpers/util/inDOM');

		var _inDOM2 = _interopRequireDefault(_inDOM);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var Portal = function (_React$Component) {
		  (0, _inherits3.default)(Portal, _React$Component);

		  function Portal() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Portal);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Portal.__proto__ || (0, _getPrototypeOf2.default)(Portal)).call.apply(_ref, [this].concat(args))), _this), _this.layer = null, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Portal, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      // Support react@15.x, will be removed at some point
		      if (!_reactDom2.default.createPortal) {
		        this.renderLayer();
		      }
		    }
		  }, {
		    key: 'componentDidUpdate',
		    value: function componentDidUpdate() {
		      // Support react@15.x, will be removed at some point
		      if (!_reactDom2.default.createPortal) {
		        this.renderLayer();
		      }
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      this.unrenderLayer();
		    }
		  }, {
		    key: 'getLayer',
		    value: function getLayer() {
		      if (!this.layer) {
		        this.layer = document.createElement('div');
		        this.layer.setAttribute('data-mui-portal', 'true');
		        if (document.body && this.layer) {
		          document.body.appendChild(this.layer);
		        }
		      }

		      return this.layer;
		    }
		  }, {
		    key: 'unrenderLayer',
		    value: function unrenderLayer() {
		      if (!this.layer) {
		        return;
		      }

		      // Support react@15.x, will be removed at some point
		      if (!_reactDom2.default.createPortal) {
		        _reactDom2.default.unmountComponentAtNode(this.layer);
		      }

		      if (document.body) {
		        document.body.removeChild(this.layer);
		      }
		      this.layer = null;
		    }
		  }, {
		    key: 'renderLayer',
		    value: function renderLayer() {
		      var _props = this.props,
		          children = _props.children,
		          open = _props.open;


		      if (open) {
		        // By calling this method in componentDidMount() and
		        // componentDidUpdate(), you're effectively creating a "wormhole" that
		        // funnels React's hierarchical updates through to a DOM node on an
		        // entirely different part of the page.
		        var layerElement = _react2.default.Children.only(children);
		        _reactDom2.default.unstable_renderSubtreeIntoContainer(this, layerElement, this.getLayer());
		      } else {
		        this.unrenderLayer();
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props2 = this.props,
		          children = _props2.children,
		          open = _props2.open;

		      // Support react@15.x, will be removed at some point

		      if (!_reactDom2.default.createPortal) {
		        return null;
		      }

		      // Can't be rendered server-side.
		      if (_inDOM2.default) {
		        if (open) {
		          var layer = this.getLayer();
		          return _reactDom2.default.createPortal(children, layer);
		        }

		        this.unrenderLayer();
		      }

		      return null;
		    }
		  }]);
		  return Portal;
		}(_react2.default.Component);

		Portal.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * The content to portal in order to escape the parent DOM node.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * If `true` the children will be mounted into the DOM.
		   */
		  open: _propTypes2.default.bool
		} : {};

		Portal.defaultProps = {
		  open: false
		};

		exports.default = Portal;
		}).call(this,require('_process'))
		},{"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/possibleConstructorReturn":524,"dom-helpers/util/inDOM":662,"prop-types":961,"react":1016,"react-dom":971}],908:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _CheckBoxOutlineBlank = require('../internal/svg-icons/CheckBoxOutlineBlank');

		var _CheckBoxOutlineBlank2 = _interopRequireDefault(_CheckBoxOutlineBlank);

		var _CheckBox = require('../internal/svg-icons/CheckBox');

		var _CheckBox2 = _interopRequireDefault(_CheckBox);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _IconButton = require('../IconButton');

		var _IconButton2 = _interopRequireDefault(_IconButton);

		var _Icon = require('../Icon');

		var _Icon2 = _interopRequireDefault(_Icon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = exports.styles = {
		  root: {
		    display: 'inline-flex',
		    alignItems: 'center',
		    transition: 'none'
		  },
		  input: {
		    cursor: 'inherit',
		    position: 'absolute',
		    opacity: 0,
		    width: '100%',
		    height: '100%',
		    top: 0,
		    left: 0,
		    margin: 0,
		    padding: 0
		  },
		  default: {},
		  checked: {},
		  disabled: {}
		};

		/**
		 * @ignore - internal component.
		 */

		var SwitchBase = function (_React$Component) {
		  (0, _inherits3.default)(SwitchBase, _React$Component);

		  function SwitchBase() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, SwitchBase);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = SwitchBase.__proto__ || (0, _getPrototypeOf2.default)(SwitchBase)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.input = null, _this.button = null, _this.isControlled = null, _this.handleInputChange = function (event) {
		      var checked = event.target.checked;

		      if (!_this.isControlled) {
		        _this.setState({ checked: checked });
		      }

		      if (_this.props.onChange) {
		        _this.props.onChange(event, checked);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(SwitchBase, [{
		    key: 'componentWillMount',
		    value: function componentWillMount() {
		      var props = this.props;


		      this.isControlled = props.checked !== undefined;

		      if (!this.isControlled) {
		        // not controlled, use internal state
		        this.setState({
		          checked: props.defaultChecked !== undefined ? props.defaultChecked : false
		        });
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _classNames,
		          _this2 = this;

		      var _props = this.props,
		          checkedProp = _props.checked,
		          classes = _props.classes,
		          classNameProp = _props.className,
		          checkedIcon = _props.checkedIcon,
		          disabledProp = _props.disabled,
		          iconProp = _props.icon,
		          inputProps = _props.inputProps,
		          inputRef = _props.inputRef,
		          inputType = _props.inputType,
		          name = _props.name,
		          onChange = _props.onChange,
		          tabIndex = _props.tabIndex,
		          value = _props.value,
		          other = (0, _objectWithoutProperties3.default)(_props, ['checked', 'classes', 'className', 'checkedIcon', 'disabled', 'icon', 'inputProps', 'inputRef', 'inputType', 'name', 'onChange', 'tabIndex', 'value']);
		      var muiFormControl = this.context.muiFormControl;

		      var disabled = disabledProp;

		      if (muiFormControl) {
		        if (typeof disabled === 'undefined') {
		          disabled = muiFormControl.disabled;
		        }
		      }

		      var checked = this.isControlled ? checkedProp : this.state.checked;
		      var className = (0, _classnames2.default)(classes.root, classes.default, classNameProp, (_classNames = {}, (0, _defineProperty3.default)(_classNames, classes.checked, checked), (0, _defineProperty3.default)(_classNames, classes.disabled, disabled), _classNames));

		      var icon = checked ? checkedIcon : iconProp;

		      if (typeof icon === 'string') {
		        icon = _react2.default.createElement(
		          _Icon2.default,
		          null,
		          icon
		        );
		      }

		      return _react2.default.createElement(
		        _IconButton2.default,
		        (0, _extends3.default)({
		          component: 'span',
		          className: className,
		          disabled: disabled,
		          tabIndex: null,
		          role: undefined,
		          rootRef: function rootRef(node) {
		            _this2.button = node;
		          }
		        }, other),
		        icon,
		        _react2.default.createElement('input', (0, _extends3.default)({
		          type: inputType,
		          name: name,
		          checked: this.isControlled ? checkedProp : undefined,
		          onChange: this.handleInputChange,
		          className: classes.input,
		          disabled: disabled,
		          tabIndex: tabIndex,
		          value: value
		        }, inputProps, {
		          ref: function ref(node) {
		            _this2.input = node;
		            if (inputRef) {
		              inputRef(node);
		            }
		          }
		        }))
		      );
		    }
		  }]);
		  return SwitchBase;
		}(_react2.default.Component);

		// NB: If changed, please update Checkbox, Switch and Radio
		// so that the API documentation is updated.


		SwitchBase.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * If `true`, the component is checked.
		   */
		  checked: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.string]),
		  /**
		   * The icon to display when the component is checked.
		   * If a string is provided, it will be used as a font ligature.
		   */
		  checkedIcon: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * @ignore
		   */
		  defaultChecked: _propTypes2.default.bool,
		  /**
		   * If `true`, the switch will be disabled.
		   */
		  disabled: _propTypes2.default.bool,
		  /**
		   * If `true`, the ripple effect will be disabled.
		   */
		  disableRipple: _propTypes2.default.bool,
		  /**
		   * The icon to display when the component is unchecked.
		   * If a string is provided, it will be used as a font ligature.
		   */
		  icon: _propTypes2.default.node,
		  /**
		   * If `true`, the component appears indeterminate.
		   */
		  indeterminate: _propTypes2.default.bool,
		  /**
		   * The icon to display when the component is indeterminate.
		   * If a string is provided, it will be used as a font ligature.
		   */
		  indeterminateIcon: _propTypes2.default.node,
		  /**
		   * Properties applied to the `input` element.
		   */
		  inputProps: _propTypes2.default.object,
		  /**
		   * Use that property to pass a ref callback to the native input component.
		   */
		  inputRef: _propTypes2.default.func,
		  /**
		   * The input component property `type`.
		   */
		  inputType: _propTypes2.default.string,
		  /*
		   * @ignore
		   */
		  name: _propTypes2.default.string,
		  /**
		   * Callback fired when the state is changed.
		   *
		   * @param {object} event The event source of the callback
		   * @param {boolean} checked The `checked` value of the switch
		   */
		  onChange: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
		  /**
		   * The value of the component.
		   */
		  value: _propTypes2.default.string
		} : {};

		SwitchBase.defaultProps = {
		  checkedIcon: _react2.default.createElement(_CheckBox2.default, null),
		  disableRipple: false,
		  icon: _react2.default.createElement(_CheckBoxOutlineBlank2.default, null),
		  inputType: 'checkbox'
		};

		SwitchBase.contextTypes = {
		  muiFormControl: _propTypes2.default.object
		};

		exports.default = (0, _withStyles2.default)(styles, { name: 'MuiSwitchBase' })(SwitchBase);
		}).call(this,require('_process'))
		},{"../Icon":812,"../IconButton":810,"../internal/svg-icons/CheckBox":912,"../internal/svg-icons/CheckBoxOutlineBlank":913,"../styles/withStyles":934,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016}],909:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('../../SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var _ref = _react2.default.createElement('path', { d: 'M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z' });

		var ArrowDownward = function ArrowDownward(props) {
		  return _react2.default.createElement(
		    _SvgIcon2.default,
		    props,
		    _ref
		  );
		};

		ArrowDownward = (0, _pure2.default)(ArrowDownward);
		ArrowDownward.muiName = 'SvgIcon';

		exports.default = ArrowDownward;
		},{"../../SvgIcon":860,"react":1016,"recompose/pure":1031}],910:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('../../SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var _ref = _react2.default.createElement('path', { d: 'M7 10l5 5 5-5z' });

		var ArrowDropDown = function ArrowDropDown(props) {
		  return _react2.default.createElement(
		    _SvgIcon2.default,
		    props,
		    _ref
		  );
		};

		ArrowDropDown = (0, _pure2.default)(ArrowDropDown);
		ArrowDropDown.muiName = 'SvgIcon';

		exports.default = ArrowDropDown;
		},{"../../SvgIcon":860,"react":1016,"recompose/pure":1031}],911:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('../../SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var _ref = _react2.default.createElement('path', { d: 'M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z' });

		var Cancel = function Cancel(props) {
		  return _react2.default.createElement(
		    _SvgIcon2.default,
		    props,
		    _ref
		  );
		};
		Cancel = (0, _pure2.default)(Cancel);
		Cancel.muiName = 'SvgIcon';

		exports.default = Cancel;
		},{"../../SvgIcon":860,"react":1016,"recompose/pure":1031}],912:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('../../SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var _ref = _react2.default.createElement('path', { d: 'M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z' });

		var CheckBox = function CheckBox(props) {
		  return _react2.default.createElement(
		    _SvgIcon2.default,
		    props,
		    _ref
		  );
		};
		CheckBox = (0, _pure2.default)(CheckBox);
		CheckBox.muiName = 'SvgIcon';

		exports.default = CheckBox;
		},{"../../SvgIcon":860,"react":1016,"recompose/pure":1031}],913:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('../../SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var _ref = _react2.default.createElement('path', { d: 'M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z' });

		var CheckBoxOutlineBlank = function CheckBoxOutlineBlank(props) {
		  return _react2.default.createElement(
		    _SvgIcon2.default,
		    props,
		    _ref
		  );
		};
		CheckBoxOutlineBlank = (0, _pure2.default)(CheckBoxOutlineBlank);
		CheckBoxOutlineBlank.muiName = 'SvgIcon';

		exports.default = CheckBoxOutlineBlank;
		},{"../../SvgIcon":860,"react":1016,"recompose/pure":1031}],914:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('../../SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var _ref = _react2.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z' });

		var CheckCircle = function CheckCircle(props) {
		  return _react2.default.createElement(
		    _SvgIcon2.default,
		    props,
		    _ref
		  );
		};
		CheckCircle = (0, _pure2.default)(CheckCircle);
		CheckCircle.muiName = 'SvgIcon';

		exports.default = CheckCircle;
		},{"../../SvgIcon":860,"react":1016,"recompose/pure":1031}],915:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('../../SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var _ref = _react2.default.createElement('path', { d: 'M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z' });

		var IndeterminateCheckBox = function IndeterminateCheckBox(props) {
		  return _react2.default.createElement(
		    _SvgIcon2.default,
		    props,
		    _ref
		  );
		};
		IndeterminateCheckBox = (0, _pure2.default)(IndeterminateCheckBox);
		IndeterminateCheckBox.muiName = 'SvgIcon';

		exports.default = IndeterminateCheckBox;
		},{"../../SvgIcon":860,"react":1016,"recompose/pure":1031}],916:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('../../SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var _ref = _react2.default.createElement('path', { d: 'M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z' });

		var KeyboardArrowLeft = function KeyboardArrowLeft(props) {
		  return _react2.default.createElement(
		    _SvgIcon2.default,
		    props,
		    _ref
		  );
		};
		KeyboardArrowLeft = (0, _pure2.default)(KeyboardArrowLeft);
		KeyboardArrowLeft.muiName = 'SvgIcon';

		exports.default = KeyboardArrowLeft;
		},{"../../SvgIcon":860,"react":1016,"recompose/pure":1031}],917:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('../../SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var _ref = _react2.default.createElement('path', { d: 'M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z' });

		var KeyboardArrowRight = function KeyboardArrowRight(props) {
		  return _react2.default.createElement(
		    _SvgIcon2.default,
		    props,
		    _ref
		  );
		};
		KeyboardArrowRight = (0, _pure2.default)(KeyboardArrowRight);
		KeyboardArrowRight.muiName = 'SvgIcon';

		exports.default = KeyboardArrowRight;
		},{"../../SvgIcon":860,"react":1016,"recompose/pure":1031}],918:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('../../SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var _ref = _react2.default.createElement('path', { d: 'M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z' });

		var RadioButtonChecked = function RadioButtonChecked(props) {
		  return _react2.default.createElement(
		    _SvgIcon2.default,
		    props,
		    _ref
		  );
		};
		RadioButtonChecked = (0, _pure2.default)(RadioButtonChecked);
		RadioButtonChecked.muiName = 'SvgIcon';

		exports.default = RadioButtonChecked;
		},{"../../SvgIcon":860,"react":1016,"recompose/pure":1031}],919:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _pure = require('recompose/pure');

		var _pure2 = _interopRequireDefault(_pure);

		var _SvgIcon = require('../../SvgIcon');

		var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * @ignore - internal component.
		 */
		var _ref = _react2.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z' });

		var RadioButtonUnchecked = function RadioButtonUnchecked(props) {
		  return _react2.default.createElement(
		    _SvgIcon2.default,
		    props,
		    _ref
		  );
		};
		RadioButtonUnchecked = (0, _pure2.default)(RadioButtonUnchecked);
		RadioButtonUnchecked.muiName = 'SvgIcon';

		exports.default = RadioButtonUnchecked;
		},{"../../SvgIcon":860,"react":1016,"recompose/pure":1031}],920:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _brcast = require('brcast');

		var _brcast2 = _interopRequireDefault(_brcast);

		var _themeListener = require('./themeListener');

		var _themeListener2 = _interopRequireDefault(_themeListener);

		var _exactProp = require('../utils/exactProp');

		var _exactProp2 = _interopRequireDefault(_exactProp);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		/**
		 * This component takes a `theme` property.
		 * It makes the `theme` available down the React tree thanks to React context.
		 * This component should preferably be used at **the root of your component tree**.
		 */
		var MuiThemeProvider = function (_React$Component) {
		  (0, _inherits3.default)(MuiThemeProvider, _React$Component);

		  function MuiThemeProvider(props, context) {
		    (0, _classCallCheck3.default)(this, MuiThemeProvider);

		    // Get the outer theme from the context, can be null
		    var _this = (0, _possibleConstructorReturn3.default)(this, (MuiThemeProvider.__proto__ || (0, _getPrototypeOf2.default)(MuiThemeProvider)).call(this, props, context));

		    _this.broadcast = (0, _brcast2.default)();
		    _this.unsubscribeId = null;
		    _this.outerTheme = null;
		    _this.outerTheme = _themeListener2.default.initial(context);
		    // Propagate the theme so it can be accessed by the children
		    _this.broadcast.setState(_this.mergeOuterLocalTheme(_this.props.theme));
		    return _this;
		  }

		  (0, _createClass3.default)(MuiThemeProvider, [{
		    key: 'getChildContext',
		    value: function getChildContext() {
		      var _ref;

		      return _ref = {}, (0, _defineProperty3.default)(_ref, _themeListener.CHANNEL, this.broadcast), (0, _defineProperty3.default)(_ref, 'muiThemeProviderOptions', {
		        sheetsManager: this.props.sheetsManager,
		        disableStylesGeneration: this.props.disableStylesGeneration
		      }), _ref;
		    }
		  }, {
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      var _this2 = this;

		      // Subscribe on the outer theme, if present
		      this.unsubscribeId = _themeListener2.default.subscribe(this.context, function (outerTheme) {
		        _this2.outerTheme = outerTheme;
		        // Forward the parent theme update to the children
		        _this2.broadcast.setState(_this2.mergeOuterLocalTheme(_this2.props.theme));
		      });
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      // Propagate a local theme update
		      if (this.props.theme !== nextProps.theme) {
		        this.broadcast.setState(this.mergeOuterLocalTheme(nextProps.theme));
		      }
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      if (this.unsubscribeId !== null) {
		        _themeListener2.default.unsubscribe(this.context, this.unsubscribeId);
		      }
		    }
		    // We are not using the React state in order to avoid unnecessary rerender.

		  }, {
		    key: 'mergeOuterLocalTheme',


		    // Simple merge between the outer theme and the local theme
		    value: function mergeOuterLocalTheme(localTheme) {
		      // To support composition of theme.
		      if (typeof localTheme === 'function') {
		        process.env.NODE_ENV !== "production" ? (0, _warning2.default)(this.outerTheme, ['Material-UI: you are providing a theme function property ' + 'to the MuiThemeProvider component:', '<MuiThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\n')) : void 0;
		        return localTheme(this.outerTheme);
		      }

		      if (!this.outerTheme) {
		        return localTheme;
		      }

		      return (0, _extends3.default)({}, this.outerTheme, localTheme);
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      return this.props.children;
		    }
		  }]);
		  return MuiThemeProvider;
		}(_react2.default.Component);

		MuiThemeProvider.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * You can only provide a single element with react@15, a node with react@16.
		   */
		  children: _propTypes2.default.node.isRequired,
		  /**
		   * You can disable the generation of the styles with this option.
		   * It can be useful when traversing the React tree outside of the HTML
		   * rendering step on the server.
		   * Let's say you are using react-apollo to extract all
		   * the queries made by the interface server side.
		   * You can significantly speed up the traversal with this property.
		   */
		  disableStylesGeneration: _propTypes2.default.bool,
		  /**
		   * The sheetsManager is used to deduplicate style sheet injection in the page.
		   * It's deduplicating using the (theme, styles) couple.
		   * On the server, you should provide a new instance for each request.
		   */
		  sheetsManager: _propTypes2.default.object,
		  /**
		   * A theme object.
		   */
		  theme: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]).isRequired
		} : {};

		MuiThemeProvider.defaultProps = {
		  disableStylesGeneration: false,
		  sheetsManager: null
		};

		MuiThemeProvider.childContextTypes = (0, _extends3.default)({}, _themeListener2.default.contextTypes, {
		  muiThemeProviderOptions: _propTypes2.default.object
		});

		MuiThemeProvider.contextTypes = _themeListener2.default.contextTypes;

		// Add a wrapper component to generate some helper messages in the development
		// environment.
		// eslint-disable-next-line import/no-mutable-exports
		var MuiThemeProviderWrapper = MuiThemeProvider;

		if (process.env.NODE_ENV !== 'production') {
		  MuiThemeProviderWrapper = function MuiThemeProviderWrapper(props) {
		    return _react2.default.createElement(MuiThemeProvider, props);
		  };
		  MuiThemeProviderWrapper.propTypes = (0, _exactProp2.default)(MuiThemeProvider.propTypes, 'MuiThemeProvider');
		}

		exports.default = MuiThemeProviderWrapper;
		}).call(this,require('_process'))
		},{"../utils/exactProp":944,"./themeListener":932,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/possibleConstructorReturn":524,"brcast":639,"prop-types":961,"react":1016,"warning":1054}],921:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.convertColorToString = convertColorToString;
		exports.convertHexToRGB = convertHexToRGB;
		exports.decomposeColor = decomposeColor;
		exports.getContrastRatio = getContrastRatio;
		exports.getLuminance = getLuminance;
		exports.emphasize = emphasize;
		exports.fade = fade;
		exports.darken = darken;
		exports.lighten = lighten;
		//  weak
		/* eslint-disable no-use-before-define */

		/**
		 * Returns a number whose value is limited to the given range.
		 *
		 * @param {number} value The value to be clamped
		 * @param {number} min The lower boundary of the output range
		 * @param {number} max The upper boundary of the output range
		 * @returns {number} A number in the range [min, max]
		 */
		function clamp(value, min, max) {
		  if (value < min) {
		    return min;
		  }
		  if (value > max) {
		    return max;
		  }
		  return value;
		}

		/**
		 * Converts a color object with type and values to a string.
		 *
		 * @param {object} color - Decomposed color
		 * @param {string} color.type - One of, 'rgb', 'rgba', 'hsl', 'hsla'
		 * @param {array} color.values - [n,n,n] or [n,n,n,n]
		 * @returns {string} A CSS color string
		 */
		function convertColorToString(color) {
		  var type = color.type,
		      values = color.values;


		  if (type.indexOf('rgb') > -1) {
		    // Only convert the first 3 values to int (i.e. not alpha)
		    for (var i = 0; i < 3; i += 1) {
		      values[i] = parseInt(values[i], 10);
		    }
		  }

		  var colorString = void 0;

		  if (type.indexOf('hsl') > -1) {
		    colorString = color.type + '(' + values[0] + ', ' + values[1] + '%, ' + values[2] + '%';
		  } else {
		    colorString = color.type + '(' + values[0] + ', ' + values[1] + ', ' + values[2];
		  }

		  if (values.length === 4) {
		    colorString += ', ' + color.values[3] + ')';
		  } else {
		    colorString += ')';
		  }

		  return colorString;
		}

		/**
		 * Converts a color from CSS hex format to CSS rgb format.
		 *
		 *  @param {string} color - Hex color, i.e. #nnn or #nnnnnn
		 *  @returns {string} A CSS rgb color string
		 */
		function convertHexToRGB(color) {
		  if (color.length === 4) {
		    var extendedColor = '#';
		    for (var i = 1; i < color.length; i += 1) {
		      extendedColor += color.charAt(i) + color.charAt(i);
		    }
		    color = extendedColor;
		  }

		  var values = {
		    r: parseInt(color.substr(1, 2), 16),
		    g: parseInt(color.substr(3, 2), 16),
		    b: parseInt(color.substr(5, 2), 16)
		  };

		  return 'rgb(' + values.r + ', ' + values.g + ', ' + values.b + ')';
		}

		/**
		 * Returns an object with the type and values of a color.
		 *
		 * Note: Does not support rgb % values.
		 *
		 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
		 * @returns {{type: string, values: number[]}} A MUI color object
		 */
		function decomposeColor(color) {
		  if (color.charAt(0) === '#') {
		    return decomposeColor(convertHexToRGB(color));
		  }

		  var marker = color.indexOf('(');
		  var type = color.substring(0, marker);
		  var values = color.substring(marker + 1, color.length - 1).split(',');
		  values = values.map(function (value) {
		    return parseFloat(value);
		  });

		  return { type: type, values: values };
		}

		/**
		 * Calculates the contrast ratio between two colors.
		 *
		 * Formula: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef
		 *
		 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
		 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
		 * @returns {number} A contrast ratio value in the range 0 - 21 with 2 digit precision.
		 */
		function getContrastRatio(foreground, background) {
		  var lumA = getLuminance(foreground);
		  var lumB = getLuminance(background);
		  var contrastRatio = (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);

		  return Number(contrastRatio.toFixed(2)); // Truncate at two digits
		}

		/**
		 * The relative brightness of any point in a color space,
		 * normalized to 0 for darkest black and 1 for lightest white.
		 *
		 * Formula: https://www.w3.org/WAI/GL/wiki/Relative_luminance
		 *
		 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
		 * @returns {number} The relative brightness of the color in the range 0 - 1
		 */
		function getLuminance(color) {
		  var decomposedColor = decomposeColor(color);

		  if (decomposedColor.type.indexOf('rgb') > -1) {
		    var rgb = decomposedColor.values.map(function (val) {
		      val /= 255; // normalized
		      return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
		    });
		    // Truncate at 3 digits
		    return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
		  } else if (decomposedColor.type.indexOf('hsl') > -1) {
		    return decomposedColor.values[2] / 100;
		  }

		  throw new Error('Material-UI: unsupported `' + color + '` color.');
		}

		/**
		 * Darken or lighten a colour, depending on its luminance.
		 * Light colors are darkened, dark colors are lightened.
		 *
		 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
		 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
		 * @returns {string} A CSS color string. Hex input values are returned as rgb
		 */
		function emphasize(color) {
		  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;

		  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
		}

		/**
		 * Set the absolute transparency of a color.
		 * Any existing alpha values are overwritten.
		 *
		 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
		 * @param {number} value - value to set the alpha channel to in the range 0 -1
		 * @returns {string} A CSS color string. Hex input values are returned as rgb
		 */
		function fade(color, value) {
		  color = decomposeColor(color);
		  value = clamp(value, 0, 1);

		  if (color.type === 'rgb' || color.type === 'hsl') {
		    color.type += 'a';
		  }
		  color.values[3] = value;

		  return convertColorToString(color);
		}

		/**
		 * Darkens a color.
		 *
		 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
		 * @param {number} coefficient - multiplier in the range 0 - 1
		 * @returns {string} A CSS color string. Hex input values are returned as rgb
		 */
		function darken(color, coefficient) {
		  color = decomposeColor(color);
		  coefficient = clamp(coefficient, 0, 1);

		  if (color.type.indexOf('hsl') > -1) {
		    color.values[2] *= 1 - coefficient;
		  } else if (color.type.indexOf('rgb') > -1) {
		    for (var i = 0; i < 3; i += 1) {
		      color.values[i] *= 1 - coefficient;
		    }
		  }
		  return convertColorToString(color);
		}

		/**
		 * Lightens a color.
		 *
		 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
		 * @param {number} coefficient - multiplier in the range 0 - 1
		 * @returns {string} A CSS color string. Hex input values are returned as rgb
		 */
		function lighten(color, coefficient) {
		  color = decomposeColor(color);
		  coefficient = clamp(coefficient, 0, 1);

		  if (color.type.indexOf('hsl') > -1) {
		    color.values[2] += (100 - color.values[2]) * coefficient;
		  } else if (color.type.indexOf('rgb') > -1) {
		    for (var i = 0; i < 3; i += 1) {
		      color.values[i] += (255 - color.values[i]) * coefficient;
		    }
		  }

		  return convertColorToString(color);
		}
		},{}],922:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.keys = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		exports.default = createBreakpoints;

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// Sorted ASC by size. That's important.
		// It can't be configured as it's used statically for propTypes.
		var keys = exports.keys = ['xs', 'sm', 'md', 'lg', 'xl'];

		// Keep in mind that @media is inclusive by the CSS specification.
		function createBreakpoints(breakpoints) {
		  var _breakpoints$values = breakpoints.values,
		      values = _breakpoints$values === undefined ? {
		    xs: 0,
		    sm: 600,
		    md: 960,
		    lg: 1280,
		    xl: 1920
		  } : _breakpoints$values,
		      _breakpoints$unit = breakpoints.unit,
		      unit = _breakpoints$unit === undefined ? 'px' : _breakpoints$unit,
		      _breakpoints$step = breakpoints.step,
		      step = _breakpoints$step === undefined ? 5 : _breakpoints$step,
		      other = (0, _objectWithoutProperties3.default)(breakpoints, ['values', 'unit', 'step']);


		  function up(key) {
		    var value = typeof values[key] === 'number' ? values[key] : key;
		    return '@media (min-width:' + value + unit + ')';
		  }

		  function down(key) {
		    var value = typeof values[key] === 'number' ? values[key] : key;
		    return '@media (max-width:' + (value - step / 100) + unit + ')';
		  }

		  function between(start, end) {
		    var endIndex = keys.indexOf(end) + 1;

		    if (endIndex === keys.length) {
		      return up(start);
		    }

		    return '@media (min-width:' + values[start] + unit + ') and ' + ('(max-width:' + (values[keys[endIndex]] - step / 100) + unit + ')');
		  }

		  function only(key) {
		    return between(key, key);
		  }

		  function width(key) {
		    return values[key];
		  }

		  return (0, _extends3.default)({
		    keys: keys,
		    values: values,
		    up: up,
		    down: down,
		    between: between,
		    only: only,
		    width: width
		  }, other);
		}
		},{"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523}],923:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.default = createGenerateClassName;

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var generatorCounter = 0;

		// Returns a function which generates unique class names based on counters.
		// When new generator function is created, rule counter is reset.
		// We need to reset the rule counter for SSR for each request.
		//
		// It's inspired by
		// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js
		function createGenerateClassName() {
		  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		  var _options$dangerouslyU = options.dangerouslyUseGlobalCSS,
		      dangerouslyUseGlobalCSS = _options$dangerouslyU === undefined ? false : _options$dangerouslyU;

		  var escapeRegex = /([[\].#*$><+~=|^:(),"'`])/g;
		  var ruleCounter = 0;

		  if (process.env.NODE_ENV === 'production' && typeof window !== 'undefined') {
		    generatorCounter += 1;

		    if (generatorCounter > 2) {
		      // eslint-disable-next-line no-console
		      console.error(['Material-UI: we have detected more than needed creation of the class name generator.', 'You should only use one class name generator on the client side.', 'If you do otherwise, you take the risk to have conflicting class names in production.'].join('\n'));
		    }
		  }

		  return function (rule, styleSheet) {
		    ruleCounter += 1;
		    process.env.NODE_ENV !== "production" ? (0, _warning2.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : void 0;

		    // Code branch the whole block at the expense of more code.
		    if (dangerouslyUseGlobalCSS) {
		      if (styleSheet && styleSheet.options.meta) {
		        var meta = styleSheet.options.meta;
		        // Sanitize the string as will be used to prefix the generated class name.
		        meta = meta.replace(escapeRegex, '-');

		        if (meta.match(/^Mui/)) {
		          return meta + '-' + rule.key;
		        }

		        if (process.env.NODE_ENV !== 'production') {
		          return meta + '-' + rule.key + '-' + ruleCounter;
		        }
		      }

		      if (process.env.NODE_ENV === 'production') {
		        return 'c' + ruleCounter;
		      }

		      return rule.key + '-' + ruleCounter;
		    }

		    if (process.env.NODE_ENV === 'production') {
		      return 'c' + ruleCounter;
		    }

		    if (styleSheet && styleSheet.options.meta) {
		      var _meta = styleSheet.options.meta;
		      // Sanitize the string as will be used to prefix the generated class name.
		      _meta = _meta.replace(escapeRegex, '-');

		      return _meta + '-' + rule.key + '-' + ruleCounter;
		    }

		    return rule.key + '-' + ruleCounter;
		  };
		}
		}).call(this,require('_process'))
		},{"_process":957,"warning":1054}],924:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _extends3 = require('babel-runtime/helpers/extends');

		var _extends4 = _interopRequireDefault(_extends3);

		exports.default = createMixins;

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function createMixins(breakpoints, spacing, mixins) {
		  var _toolbar;

		  return (0, _extends4.default)({
		    gutters: function gutters(styles) {
		      return (0, _extends4.default)({
		        paddingLeft: spacing.unit * 2,
		        paddingRight: spacing.unit * 2
		      }, styles, (0, _defineProperty3.default)({}, breakpoints.up('sm'), (0, _extends4.default)({
		        paddingLeft: spacing.unit * 3,
		        paddingRight: spacing.unit * 3
		      }, styles[breakpoints.up('sm')])));
		    },
		    toolbar: (_toolbar = {
		      minHeight: 56
		    }, (0, _defineProperty3.default)(_toolbar, breakpoints.up('xs') + ' and (orientation: landscape)', {
		      minHeight: 48
		    }), (0, _defineProperty3.default)(_toolbar, breakpoints.up('sm'), {
		      minHeight: 64
		    }), _toolbar)
		  }, mixins);
		}
		},{"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521}],925:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _deepmerge = require('deepmerge');

		var _deepmerge2 = _interopRequireDefault(_deepmerge);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _createTypography = require('./createTypography');

		var _createTypography2 = _interopRequireDefault(_createTypography);

		var _createBreakpoints = require('./createBreakpoints');

		var _createBreakpoints2 = _interopRequireDefault(_createBreakpoints);

		var _createPalette = require('./createPalette');

		var _createPalette2 = _interopRequireDefault(_createPalette);

		var _createMixins = require('./createMixins');

		var _createMixins2 = _interopRequireDefault(_createMixins);

		var _shadows = require('./shadows');

		var _shadows2 = _interopRequireDefault(_shadows);

		var _transitions = require('./transitions');

		var _transitions2 = _interopRequireDefault(_transitions);

		var _zIndex = require('./zIndex');

		var _zIndex2 = _interopRequireDefault(_zIndex);

		var _spacing = require('./spacing');

		var _spacing2 = _interopRequireDefault(_spacing);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function createMuiTheme() {
		  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		  var _options$palette = options.palette,
		      paletteInput = _options$palette === undefined ? {} : _options$palette,
		      _options$breakpoints = options.breakpoints,
		      breakpointsInput = _options$breakpoints === undefined ? {} : _options$breakpoints,
		      _options$mixins = options.mixins,
		      mixinsInput = _options$mixins === undefined ? {} : _options$mixins,
		      _options$typography = options.typography,
		      typographyInput = _options$typography === undefined ? {} : _options$typography,
		      shadowsInput = options.shadows,
		      other = (0, _objectWithoutProperties3.default)(options, ['palette', 'breakpoints', 'mixins', 'typography', 'shadows']);


		  var palette = (0, _createPalette2.default)(paletteInput);
		  var breakpoints = (0, _createBreakpoints2.default)(breakpointsInput);

		  var muiTheme = (0, _extends3.default)({
		    direction: 'ltr',
		    palette: palette,
		    typography: (0, _createTypography2.default)(palette, typographyInput),
		    mixins: (0, _createMixins2.default)(breakpoints, _spacing2.default, mixinsInput),
		    breakpoints: breakpoints,
		    shadows: shadowsInput || _shadows2.default
		  }, (0, _deepmerge2.default)({
		    transitions: _transitions2.default,
		    spacing: _spacing2.default,
		    zIndex: _zIndex2.default
		  }, other));

		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(muiTheme.shadows.length === 25, 'Material-UI: the shadows array provided to createMuiTheme should support 25 elevations.') : void 0;

		  return muiTheme;
		} // < 1kb payload overhead when lodash/merge is > 3kb.
		exports.default = createMuiTheme;
		}).call(this,require('_process'))
		},{"./createBreakpoints":922,"./createMixins":924,"./createPalette":926,"./createTypography":927,"./shadows":930,"./spacing":931,"./transitions":933,"./zIndex":936,"_process":957,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/objectWithoutProperties":523,"deepmerge":652,"warning":1054}],926:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.dark = exports.light = undefined;

		var _keys = require('babel-runtime/core-js/object/keys');

		var _keys2 = _interopRequireDefault(_keys);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		exports.default = createPalette;

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _deepmerge = require('deepmerge');

		var _deepmerge2 = _interopRequireDefault(_deepmerge);

		var _indigo = require('../colors/indigo');

		var _indigo2 = _interopRequireDefault(_indigo);

		var _pink = require('../colors/pink');

		var _pink2 = _interopRequireDefault(_pink);

		var _grey = require('../colors/grey');

		var _grey2 = _interopRequireDefault(_grey);

		var _red = require('../colors/red');

		var _red2 = _interopRequireDefault(_red);

		var _common = require('../colors/common');

		var _common2 = _interopRequireDefault(_common);

		var _colorManipulator = require('./colorManipulator');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// < 1kb payload overhead when lodash/merge is > 3kb.
		var light = exports.light = {
		  text: {
		    primary: 'rgba(0, 0, 0, 0.87)',
		    secondary: 'rgba(0, 0, 0, 0.54)',
		    disabled: 'rgba(0, 0, 0, 0.38)',
		    hint: 'rgba(0, 0, 0, 0.38)',
		    icon: 'rgba(0, 0, 0, 0.38)',
		    divider: 'rgba(0, 0, 0, 0.12)',
		    lightDivider: 'rgba(0, 0, 0, 0.075)'
		  },
		  input: {
		    bottomLine: 'rgba(0, 0, 0, 0.42)',
		    helperText: 'rgba(0, 0, 0, 0.54)',
		    labelText: 'rgba(0, 0, 0, 0.54)',
		    inputText: 'rgba(0, 0, 0, 0.87)',
		    disabled: 'rgba(0, 0, 0, 0.42)'
		  },
		  action: {
		    active: 'rgba(0, 0, 0, 0.54)',
		    disabled: 'rgba(0, 0, 0, 0.26)'
		  },
		  background: {
		    default: _grey2.default[50],
		    paper: _common2.default.white,
		    appBar: _grey2.default[100],
		    contentFrame: _grey2.default[200],
		    chip: _grey2.default[300]
		  },
		  line: {
		    stepper: _grey2.default[400]
		  }
		};

		var dark = exports.dark = {
		  text: {
		    primary: 'rgba(255, 255, 255, 1)',
		    secondary: 'rgba(255, 255, 255, 0.7)',
		    disabled: 'rgba(255, 255, 255, 0.5)',
		    hint: 'rgba(255, 255, 255, 0.5)',
		    icon: 'rgba(255, 255, 255, 0.5)',
		    divider: 'rgba(255, 255, 255, 0.12)',
		    lightDivider: 'rgba(255, 255, 255, 0.075)'
		  },
		  input: {
		    bottomLine: 'rgba(255, 255, 255, 0.7)',
		    helperText: 'rgba(255, 255, 255, 0.7)',
		    labelText: 'rgba(255, 255, 255, 0.7)',
		    inputText: 'rgba(255, 255, 255, 1)',
		    disabled: 'rgba(255, 255, 255, 0.5)'
		  },
		  action: {
		    active: 'rgba(255, 255, 255, 1)',
		    disabled: 'rgba(255, 255, 255, 0.3)'
		  },
		  background: {
		    default: '#303030',
		    paper: _grey2.default[800],
		    appBar: _grey2.default[900],
		    contentFrame: _grey2.default[900],
		    chip: _grey2.default[800]
		  },
		  line: {
		    // TODO: What should the dark theme have for stepper line? Not stated in style guide
		    stepper: _grey2.default[400]
		  }
		};

		function getContrastText(hue) {
		  if ((0, _colorManipulator.getContrastRatio)(hue, _common2.default.black) < 7) {
		    return dark.text.primary;
		  }
		  return light.text.primary;
		}

		function createPalette(palette) {
		  var _palette$primary = palette.primary,
		      primary = _palette$primary === undefined ? _indigo2.default : _palette$primary,
		      _palette$secondary = palette.secondary,
		      secondary = _palette$secondary === undefined ? _pink2.default : _palette$secondary,
		      _palette$error = palette.error,
		      error = _palette$error === undefined ? _red2.default : _palette$error,
		      _palette$type = palette.type,
		      type = _palette$type === undefined ? 'light' : _palette$type,
		      other = (0, _objectWithoutProperties3.default)(palette, ['primary', 'secondary', 'error', 'type']);

		  var shades = { dark: dark, light: light };

		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(Boolean(shades[type]), 'Material-UI: the palette type `' + type + '` is not supported.') : void 0;

		  var paletteOutput = (0, _deepmerge2.default)({
		    common: _common2.default,
		    type: type,
		    primary: primary,
		    secondary: secondary,
		    error: error,
		    grey: _grey2.default,
		    shades: shades,
		    text: shades[type].text,
		    input: shades[type].input,
		    action: shades[type].action,
		    background: shades[type].background,
		    line: shades[type].line,
		    getContrastText: getContrastText
		  }, other, {
		    clone: false // No need to clone deep
		  });

		  // Dev warnings
		  if (process.env.NODE_ENV !== 'production') {
		    var difference = function difference(base, compare) {
		      if (!compare) {
		        compare = {};
		      }

		      return (0, _keys2.default)(base).filter(function (hue) {
		        return !compare[hue];
		      });
		    };

		    var paletteColorError = function paletteColorError(name, base, compare) {
		      var missing = difference(base, compare);
		      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(missing.length === 0, ['Material-UI: ' + name + ' color is missing the following hues: ' + missing.join(','), 'See the default colors, indigo, or pink, as exported from material-ui/colors.'].join('\n')) : void 0;
		    };

		    paletteColorError('primary', _indigo2.default, paletteOutput.primary);
		    paletteColorError('secondary', _pink2.default, paletteOutput.secondary);
		    paletteColorError('error', _red2.default, paletteOutput.error);
		    paletteColorError('grey', _red2.default, paletteOutput.grey);
		  }

		  return paletteOutput;
		}
		}).call(this,require('_process'))
		},{"../colors/common":889,"../colors/grey":894,"../colors/indigo":896,"../colors/pink":901,"../colors/red":903,"./colorManipulator":921,"_process":957,"babel-runtime/core-js/object/keys":514,"babel-runtime/helpers/objectWithoutProperties":523,"deepmerge":652,"warning":1054}],927:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		exports.default = createTypography;

		var _deepmerge = require('deepmerge');

		var _deepmerge2 = _interopRequireDefault(_deepmerge);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// < 1kb payload overhead when lodash/merge is > 3kb.

		function round(value) {
		  return Math.round(value * 1e5) / 1e5;
		}

		function createTypography(palette, typography) {
		  var _ref = typeof typography === 'function' ? typography(palette) : typography,
		      _ref$fontFamily = _ref.fontFamily,
		      fontFamily = _ref$fontFamily === undefined ? '"Roboto", "Helvetica", "Arial", sans-serif' : _ref$fontFamily,
		      _ref$fontSize = _ref.fontSize,
		      fontSize = _ref$fontSize === undefined ? 14 : _ref$fontSize,
		      _ref$fontWeightLight = _ref.fontWeightLight,
		      fontWeightLight = _ref$fontWeightLight === undefined ? 300 : _ref$fontWeightLight,
		      _ref$fontWeightRegula = _ref.fontWeightRegular,
		      fontWeightRegular = _ref$fontWeightRegula === undefined ? 400 : _ref$fontWeightRegula,
		      _ref$fontWeightMedium = _ref.fontWeightMedium,
		      fontWeightMedium = _ref$fontWeightMedium === undefined ? 500 : _ref$fontWeightMedium,
		      _ref$htmlFontSize = _ref.htmlFontSize,
		      htmlFontSize = _ref$htmlFontSize === undefined ? 16 : _ref$htmlFontSize,
		      other = (0, _objectWithoutProperties3.default)(_ref, ['fontFamily', 'fontSize', 'fontWeightLight', 'fontWeightRegular', 'fontWeightMedium', 'htmlFontSize']);

		  function pxToRem(value) {
		    return value / htmlFontSize + 'rem';
		  }

		  return (0, _deepmerge2.default)({
		    pxToRem: pxToRem,
		    fontFamily: fontFamily,
		    fontSize: fontSize,
		    fontWeightLight: fontWeightLight,
		    fontWeightRegular: fontWeightRegular,
		    fontWeightMedium: fontWeightMedium,
		    display4: {
		      fontSize: pxToRem(112),
		      fontWeight: fontWeightLight,
		      fontFamily: fontFamily,
		      letterSpacing: '-.04em',
		      lineHeight: round(128 / 112) + 'em',
		      marginLeft: '-.06em',
		      color: palette.text.secondary
		    },
		    display3: {
		      fontSize: pxToRem(56),
		      fontWeight: fontWeightRegular,
		      fontFamily: fontFamily,
		      letterSpacing: '-.02em',
		      lineHeight: round(73 / 56) + 'em',
		      marginLeft: '-.04em',
		      color: palette.text.secondary
		    },
		    display2: {
		      fontSize: pxToRem(45),
		      fontWeight: fontWeightRegular,
		      fontFamily: fontFamily,
		      lineHeight: round(48 / 45) + 'em',
		      marginLeft: '-.04em',
		      color: palette.text.secondary
		    },
		    display1: {
		      fontSize: pxToRem(34),
		      fontWeight: fontWeightRegular,
		      fontFamily: fontFamily,
		      lineHeight: round(41 / 34) + 'em',
		      marginLeft: '-.04em',
		      color: palette.text.secondary
		    },
		    headline: {
		      fontSize: pxToRem(24),
		      fontWeight: fontWeightRegular,
		      fontFamily: fontFamily,
		      lineHeight: round(32.5 / 24) + 'em',
		      color: palette.text.primary
		    },
		    title: {
		      fontSize: pxToRem(21),
		      fontWeight: fontWeightMedium,
		      fontFamily: fontFamily,
		      lineHeight: round(24.5 / 21) + 'em',
		      color: palette.text.primary
		    },
		    subheading: {
		      fontSize: pxToRem(16),
		      fontWeight: fontWeightRegular,
		      fontFamily: fontFamily,
		      lineHeight: round(24 / 16) + 'em',
		      color: palette.text.primary
		    },
		    body2: {
		      fontSize: pxToRem(14),
		      fontWeight: fontWeightMedium,
		      fontFamily: fontFamily,
		      lineHeight: round(24 / 14) + 'em',
		      color: palette.text.primary
		    },
		    body1: {
		      fontSize: pxToRem(14),
		      fontWeight: fontWeightRegular,
		      fontFamily: fontFamily,
		      lineHeight: round(20.5 / 14) + 'em',
		      color: palette.text.primary
		    },
		    caption: {
		      fontSize: pxToRem(12),
		      fontWeight: fontWeightRegular,
		      fontFamily: fontFamily,
		      lineHeight: round(16.5 / 12) + 'em',
		      color: palette.text.secondary
		    },
		    button: {
		      fontSize: pxToRem(fontSize),
		      textTransform: 'uppercase',
		      fontWeight: fontWeightMedium,
		      fontFamily: fontFamily
		    }
		  }, other, {
		    clone: false // No need to clone deep
		  });
		}
		},{"babel-runtime/helpers/objectWithoutProperties":523,"deepmerge":652}],928:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _keys = require('babel-runtime/core-js/object/keys');

		var _keys2 = _interopRequireDefault(_keys);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _deepmerge = require('deepmerge');

		var _deepmerge2 = _interopRequireDefault(_deepmerge);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// < 1kb payload overhead when lodash/merge is > 3kb.

		function getStylesCreator(stylesOrCreator) {
		  function create(theme, name) {
		    var styles = typeof stylesOrCreator === 'function' ? stylesOrCreator(theme) : stylesOrCreator;

		    if (!theme.overrides || !name || !theme.overrides[name]) {
		      return styles;
		    }

		    var overrides = theme.overrides[name];
		    var stylesWithOverrides = (0, _extends3.default)({}, styles);

		    (0, _keys2.default)(overrides).forEach(function (key) {
		      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(stylesWithOverrides[key], ['Material-UI: you are trying to override a style that does not exist.', 'Fix the `' + key + '` key of `theme.overrides.' + name + '`.'].join('\n')) : void 0;
		      stylesWithOverrides[key] = (0, _deepmerge2.default)(stylesWithOverrides[key], overrides[key]);
		    });

		    return stylesWithOverrides;
		  }

		  return {
		    create: create,
		    options: {
		      index: undefined
		    },
		    themingEnabled: typeof stylesOrCreator === 'function'
		  };
		}

		exports.default = getStylesCreator;
		}).call(this,require('_process'))
		},{"_process":957,"babel-runtime/core-js/object/keys":514,"babel-runtime/helpers/extends":521,"deepmerge":652,"warning":1054}],929:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _MuiThemeProvider = require('./MuiThemeProvider');

		Object.defineProperty(exports, 'MuiThemeProvider', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_MuiThemeProvider).default;
		  }
		});

		var _withStyles = require('./withStyles');

		Object.defineProperty(exports, 'withStyles', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_withStyles).default;
		  }
		});

		var _withTheme = require('./withTheme');

		Object.defineProperty(exports, 'withTheme', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_withTheme).default;
		  }
		});

		var _createMuiTheme = require('./createMuiTheme');

		Object.defineProperty(exports, 'createMuiTheme', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_createMuiTheme).default;
		  }
		});

		var _createGenerateClassName = require('./createGenerateClassName');

		Object.defineProperty(exports, 'createGenerateClassName', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_createGenerateClassName).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./MuiThemeProvider":920,"./createGenerateClassName":923,"./createMuiTheme":925,"./withStyles":934,"./withTheme":935}],930:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var shadowKeyUmbraOpacity = 0.2;
		var shadowKeyPenumbraOpacity = 0.14;
		var shadowAmbientShadowOpacity = 0.12;

		function createShadow() {
		  return [(arguments.length <= 0 ? undefined : arguments[0]) + 'px ' + (arguments.length <= 1 ? undefined : arguments[1]) + 'px ' + (arguments.length <= 2 ? undefined : arguments[2]) + 'px ' + (arguments.length <= 3 ? undefined : arguments[3]) + 'px rgba(0, 0, 0, ' + shadowKeyUmbraOpacity + ')', (arguments.length <= 4 ? undefined : arguments[4]) + 'px ' + (arguments.length <= 5 ? undefined : arguments[5]) + 'px ' + (arguments.length <= 6 ? undefined : arguments[6]) + 'px ' + (arguments.length <= 7 ? undefined : arguments[7]) + 'px rgba(0, 0, 0, ' + shadowKeyPenumbraOpacity + ')', (arguments.length <= 8 ? undefined : arguments[8]) + 'px ' + (arguments.length <= 9 ? undefined : arguments[9]) + 'px ' + (arguments.length <= 10 ? undefined : arguments[10]) + 'px ' + (arguments.length <= 11 ? undefined : arguments[11]) + 'px rgba(0, 0, 0, ' + shadowAmbientShadowOpacity + ')'].join(',');
		}

		var shadows = ['none', createShadow(0, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, -1), createShadow(0, 1, 5, 0, 0, 2, 2, 0, 0, 3, 1, -2), createShadow(0, 1, 8, 0, 0, 3, 4, 0, 0, 3, 3, -2), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];

		exports.default = shadows;
		},{}],931:[function(require,module,exports){
		"use strict";

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.default = {
		  // All components align to an 8dp square baseline grid for mobile, tablet, and desktop.
		  // https://material.io/guidelines/layout/metrics-keylines.html#metrics-keylines-baseline-grids
		  unit: 8
		};
		},{}],932:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.CHANNEL = undefined;

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// Same value used by react-jss
		var CHANNEL = exports.CHANNEL = '__THEMING__';

		var themeListener = {
		  contextTypes: (0, _defineProperty3.default)({}, CHANNEL, _propTypes2.default.object),
		  initial: function initial(context) {
		    if (!context[CHANNEL]) {
		      return null;
		    }

		    return context[CHANNEL].getState();
		  },
		  subscribe: function subscribe(context, cb) {
		    if (!context[CHANNEL]) {
		      return null;
		    }

		    return context[CHANNEL].subscribe(cb);
		  },
		  unsubscribe: function unsubscribe(context, subscriptionId) {
		    if (context[CHANNEL]) {
		      context[CHANNEL].unsubscribe(subscriptionId);
		    }
		  }
		};

		exports.default = themeListener;
		},{"babel-runtime/helpers/defineProperty":520,"prop-types":961}],933:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.isNumber = exports.isString = exports.formatMs = exports.duration = exports.easing = undefined;

		var _keys = require('babel-runtime/core-js/object/keys');

		var _keys2 = _interopRequireDefault(_keys);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _isNan = require('babel-runtime/core-js/number/is-nan');

		var _isNan2 = _interopRequireDefault(_isNan);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
		// to learn the context in which each easing should be used.
		var easing = exports.easing = {
		  // This is the most common easing curve.
		  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
		  // Objects enter the screen at full velocity from off-screen and
		  // slowly decelerate to a resting point.
		  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
		  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
		  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
		  // The sharp curve is used by objects that may return to the screen at any time.
		  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
		};

		// Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
		// to learn when use what timing

		/* eslint-disable no-param-reassign */

		var duration = exports.duration = {
		  shortest: 150,
		  shorter: 200,
		  short: 250,
		  // most basic recommended timing
		  standard: 300,
		  // this is to be used in complex animations
		  complex: 375,
		  // recommended when something is entering screen
		  enteringScreen: 225,
		  // recommended when something is leaving screen
		  leavingScreen: 195
		};

		var formatMs = exports.formatMs = function formatMs(milliseconds) {
		  return Math.round(milliseconds) + 'ms';
		};
		var isString = exports.isString = function isString(value) {
		  return typeof value === 'string';
		};
		var isNumber = exports.isNumber = function isNumber(value) {
		  return !(0, _isNan2.default)(parseFloat(value));
		};

		/**
		 * @param {string|Array} props
		 * @param {object} param
		 * @param {string} param.prop
		 * @param {number} param.duration
		 * @param {string} param.easing
		 * @param {number} param.delay
		 */
		exports.default = {
		  easing: easing,
		  duration: duration,
		  create: function create() {
		    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];
		    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
		    var _options$duration = options.duration,
		        durationOption = _options$duration === undefined ? duration.standard : _options$duration,
		        _options$easing = options.easing,
		        easingOption = _options$easing === undefined ? easing.easeInOut : _options$easing,
		        _options$delay = options.delay,
		        delay = _options$delay === undefined ? 0 : _options$delay,
		        other = (0, _objectWithoutProperties3.default)(options, ['duration', 'easing', 'delay']);


		    process.env.NODE_ENV !== "production" ? (0, _warning2.default)(isString(props) || Array.isArray(props), 'Material-UI: argument "props" must be a string or Array') : void 0;
		    process.env.NODE_ENV !== "production" ? (0, _warning2.default)(isNumber(durationOption), 'Material-UI: argument "duration" must be a number but found ' + durationOption) : void 0;
		    process.env.NODE_ENV !== "production" ? (0, _warning2.default)(isString(easingOption), 'Material-UI: argument "easing" must be a string') : void 0;
		    process.env.NODE_ENV !== "production" ? (0, _warning2.default)(isNumber(delay), 'Material-UI: argument "delay" must be a string') : void 0;
		    process.env.NODE_ENV !== "production" ? (0, _warning2.default)((0, _keys2.default)(other).length === 0, 'Material-UI: unrecognized argument(s) [' + (0, _keys2.default)(other).join(',') + ']') : void 0;

		    return (Array.isArray(props) ? props : [props]).map(function (animatedProp) {
		      return animatedProp + ' ' + formatMs(durationOption) + ' ' + easingOption + ' ' + formatMs(delay);
		    }).join(',');
		  },
		  getAutoHeightDuration: function getAutoHeightDuration(height) {
		    if (!height) {
		      return 0;
		    }

		    var constant = height / 36;

		    // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10
		    return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);
		  }
		};
		}).call(this,require('_process'))
		},{"_process":957,"babel-runtime/core-js/number/is-nan":508,"babel-runtime/core-js/object/keys":514,"babel-runtime/helpers/objectWithoutProperties":523,"warning":1054}],934:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.sheetsManager = exports.preset = undefined;

		var _keys = require('babel-runtime/core-js/object/keys');

		var _keys2 = _interopRequireDefault(_keys);

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _map = require('babel-runtime/core-js/map');

		var _map2 = _interopRequireDefault(_map);

		var _minSafeInteger = require('babel-runtime/core-js/number/min-safe-integer');

		var _minSafeInteger2 = _interopRequireDefault(_minSafeInteger);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _hoistNonReactStatics = require('hoist-non-react-statics');

		var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

		var _wrapDisplayName = require('recompose/wrapDisplayName');

		var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

		var _getDisplayName = require('recompose/getDisplayName');

		var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

		var _contextTypes = require('react-jss/lib/contextTypes');

		var _contextTypes2 = _interopRequireDefault(_contextTypes);

		var _jss = require('jss');

		var _jssGlobal = require('jss-global');

		var _jssGlobal2 = _interopRequireDefault(_jssGlobal);

		var _jssNested = require('jss-nested');

		var _jssNested2 = _interopRequireDefault(_jssNested);

		var _jssCamelCase = require('jss-camel-case');

		var _jssCamelCase2 = _interopRequireDefault(_jssCamelCase);

		var _jssDefaultUnit = require('jss-default-unit');

		var _jssDefaultUnit2 = _interopRequireDefault(_jssDefaultUnit);

		var _jssVendorPrefixer = require('jss-vendor-prefixer');

		var _jssVendorPrefixer2 = _interopRequireDefault(_jssVendorPrefixer);

		var _jssPropsSort = require('jss-props-sort');

		var _jssPropsSort2 = _interopRequireDefault(_jssPropsSort);

		var _ns = require('react-jss/lib/ns');

		var ns = _interopRequireWildcard(_ns);

		var _createMuiTheme = require('./createMuiTheme');

		var _createMuiTheme2 = _interopRequireDefault(_createMuiTheme);

		var _themeListener = require('./themeListener');

		var _themeListener2 = _interopRequireDefault(_themeListener);

		var _createGenerateClassName = require('./createGenerateClassName');

		var _createGenerateClassName2 = _interopRequireDefault(_createGenerateClassName);

		var _getStylesCreator = require('./getStylesCreator');

		var _getStylesCreator2 = _interopRequireDefault(_getStylesCreator);

		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var preset = exports.preset = function preset() {
		  return {
		    plugins: [(0, _jssGlobal2.default)(), (0, _jssNested2.default)(), (0, _jssCamelCase2.default)(), (0, _jssDefaultUnit2.default)(), (0, _jssVendorPrefixer2.default)(), (0, _jssPropsSort2.default)()]
		  };
		};

		// New JSS instance.
		var jss = (0, _jss.create)(preset());

		// Use a singleton or the provided one by the context.
		var generateClassName = (0, _createGenerateClassName2.default)();

		// Global index counter to preserve source order.
		// As we create the style sheet during componentWillMount lifecycle,
		// children are handled after the parents, so the order of style elements would
		// be parent->child. It is a problem though when a parent passes a className
		// which needs to override any childs styles. StyleSheet of the child has a higher
		// specificity, because of the source order.
		// So our solution is to render sheets them in the reverse order child->sheet, so
		// that parent has a higher specificity.
		var indexCounter = _minSafeInteger2.default;

		var sheetsManager = exports.sheetsManager = new _map2.default();

		// We use the same empty object to ref count the styles that don't need a theme object.
		var noopTheme = {};

		// In order to have self-supporting components, we rely on default theme when not provided.
		var defaultTheme = void 0;

		function getDefaultTheme() {
		  if (defaultTheme) {
		    return defaultTheme;
		  }

		  defaultTheme = (0, _createMuiTheme2.default)();
		  return defaultTheme;
		}

		// Link a style sheet with a component.
		// It does not modify the component passed to it;
		// instead, it returns a new component, with a `classes` property.
		var withStyles = function withStyles(stylesOrCreator) {
		  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
		  return function (Component) {
		    var _options$withTheme = options.withTheme,
		        withTheme = _options$withTheme === undefined ? false : _options$withTheme,
		        _options$flip = options.flip,
		        flip = _options$flip === undefined ? null : _options$flip,
		        name = options.name,
		        styleSheetOptions = (0, _objectWithoutProperties3.default)(options, ['withTheme', 'flip', 'name']);

		    var stylesCreator = (0, _getStylesCreator2.default)(stylesOrCreator);
		    var listenToTheme = stylesCreator.themingEnabled || withTheme || typeof name === 'string';

		    if (stylesCreator.options.index === undefined) {
		      indexCounter += 1;
		      stylesCreator.options.index = indexCounter;
		    }

		    process.env.NODE_ENV !== "production" ? (0, _warning2.default)(indexCounter < 0, ['Material-UI: you might have a memory leak.', 'The indexCounter is not supposed to grow that much.'].join(' ')) : void 0;

		    var Style = function (_React$Component) {
		      (0, _inherits3.default)(Style, _React$Component);

		      function Style(props, context) {
		        (0, _classCallCheck3.default)(this, Style);

		        var _this = (0, _possibleConstructorReturn3.default)(this, (Style.__proto__ || (0, _getPrototypeOf2.default)(Style)).call(this, props, context));

		        _this.state = {};
		        _this.disableStylesGeneration = false;
		        _this.jss = null;
		        _this.sheetOptions = null;
		        _this.sheetsManager = sheetsManager;
		        _this.stylesCreatorSaved = null;
		        _this.theme = null;
		        _this.unsubscribeId = null;
		        var muiThemeProviderOptions = _this.context.muiThemeProviderOptions;


		        _this.jss = _this.context[ns.jss] || jss;

		        if (muiThemeProviderOptions) {
		          if (muiThemeProviderOptions.sheetsManager) {
		            _this.sheetsManager = muiThemeProviderOptions.sheetsManager;
		          }

		          _this.disableStylesGeneration = muiThemeProviderOptions.disableStylesGeneration;
		        }

		        // Attach the stylesCreator to the instance of the component as in the context
		        // of react-hot-loader the hooks can be executed in a different closure context:
		        // https://github.com/gaearon/react-hot-loader/blob/master/src/patch.dev.js#L107
		        _this.stylesCreatorSaved = stylesCreator;
		        _this.sheetOptions = (0, _extends3.default)({
		          generateClassName: generateClassName
		        }, _this.context[ns.sheetOptions]);
		        // We use || as the function call is lazy evaluated.
		        _this.theme = listenToTheme ? _themeListener2.default.initial(context) || getDefaultTheme() : noopTheme;
		        return _this;
		      }

		      (0, _createClass3.default)(Style, [{
		        key: 'componentWillMount',
		        value: function componentWillMount() {
		          this.attach(this.theme);
		        }
		      }, {
		        key: 'componentDidMount',
		        value: function componentDidMount() {
		          var _this2 = this;

		          if (!listenToTheme) {
		            return;
		          }

		          this.unsubscribeId = _themeListener2.default.subscribe(this.context, function (theme) {
		            var oldTheme = _this2.theme;
		            _this2.theme = theme;
		            _this2.attach(_this2.theme);

		            // Rerender the component so the underlying component gets the theme update.
		            // By theme update we mean receiving and applying the new class names.
		            _this2.setState({}, function () {
		              _this2.detach(oldTheme);
		            });
		          });
		        }
		      }, {
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps() {
		          // react-hot-loader specific logic
		          if (this.stylesCreatorSaved === stylesCreator || process.env.NODE_ENV === 'production') {
		            return;
		          }

		          this.detach(this.theme);
		          this.stylesCreatorSaved = stylesCreator;
		          this.attach(this.theme);
		        }
		      }, {
		        key: 'componentWillUnmount',
		        value: function componentWillUnmount() {
		          this.detach(this.theme);

		          if (this.unsubscribeId !== null) {
		            _themeListener2.default.unsubscribe(this.context, this.unsubscribeId);
		          }
		        }
		      }, {
		        key: 'attach',
		        value: function attach(theme) {
		          if (this.disableStylesGeneration) {
		            return;
		          }

		          var stylesCreatorSaved = this.stylesCreatorSaved;
		          var sheetManager = this.sheetsManager.get(stylesCreatorSaved);

		          if (!sheetManager) {
		            sheetManager = new _map2.default();
		            this.sheetsManager.set(stylesCreatorSaved, sheetManager);
		          }

		          var sheetManagerTheme = sheetManager.get(theme);

		          if (!sheetManagerTheme) {
		            sheetManagerTheme = {
		              refs: 0,
		              sheet: null
		            };
		            sheetManager.set(theme, sheetManagerTheme);
		          }

		          if (sheetManagerTheme.refs === 0) {
		            var styles = stylesCreatorSaved.create(theme, name);
		            var meta = name;

		            if (process.env.NODE_ENV !== 'production' && !meta) {
		              meta = (0, _getDisplayName2.default)(Component);
		            }

		            var sheet = this.jss.createStyleSheet(styles, (0, _extends3.default)({
		              meta: meta,
		              flip: typeof flip === 'boolean' ? flip : theme.direction === 'rtl',
		              link: false
		            }, this.sheetOptions, stylesCreatorSaved.options, {
		              name: name
		            }, styleSheetOptions));

		            sheetManagerTheme.sheet = sheet;
		            sheet.attach();

		            var sheetsRegistry = this.context[ns.sheetsRegistry];
		            if (sheetsRegistry) {
		              sheetsRegistry.add(sheet);
		            }
		          }

		          sheetManagerTheme.refs += 1;
		        }
		      }, {
		        key: 'detach',
		        value: function detach(theme) {
		          if (this.disableStylesGeneration) {
		            return;
		          }

		          var stylesCreatorSaved = this.stylesCreatorSaved;
		          var sheetManager = this.sheetsManager.get(stylesCreatorSaved);
		          var sheetManagerTheme = sheetManager.get(theme);

		          sheetManagerTheme.refs -= 1;

		          if (sheetManagerTheme.refs === 0) {
		            sheetManager.delete(theme);
		            this.jss.removeStyleSheet(sheetManagerTheme.sheet);
		            var sheetsRegistry = this.context[ns.sheetsRegistry];
		            if (sheetsRegistry) {
		              sheetsRegistry.remove(sheetManagerTheme.sheet);
		            }
		          }
		        }
		      }, {
		        key: 'render',
		        value: function render() {
		          var _this3 = this;

		          var _props = this.props,
		              classesProp = _props.classes,
		              innerRef = _props.innerRef,
		              other = (0, _objectWithoutProperties3.default)(_props, ['classes', 'innerRef']);


		          var classes = void 0;
		          var renderedClasses = {};

		          if (!this.disableStylesGeneration) {
		            var sheetManager = this.sheetsManager.get(this.stylesCreatorSaved);
		            var sheetsManagerTheme = sheetManager.get(this.theme);
		            renderedClasses = sheetsManagerTheme.sheet.classes;
		          }

		          if (classesProp) {
		            classes = (0, _extends3.default)({}, renderedClasses, (0, _keys2.default)(classesProp).reduce(function (accumulator, key) {
		              process.env.NODE_ENV !== "production" ? (0, _warning2.default)(renderedClasses[key] || _this3.disableStylesGeneration, ['Material-UI: the key `' + key + '` ' + ('provided to the classes property is not implemented in ' + (0, _getDisplayName2.default)(Component) + '.'), 'You can only override one of the following: ' + (0, _keys2.default)(renderedClasses).join(',')].join('\n')) : void 0;

		              process.env.NODE_ENV !== "production" ? (0, _warning2.default)(!classesProp[key] || typeof classesProp[key] === 'string', ['Material-UI: the key `' + key + '` ' + ('provided to the classes property is not valid for ' + (0, _getDisplayName2.default)(Component) + '.'), 'You need to provide a non empty string instead of: ' + classesProp[key] + '.'].join('\n')) : void 0;

		              if (classesProp[key]) {
		                accumulator[key] = renderedClasses[key] + ' ' + classesProp[key];
		              }

		              return accumulator;
		            }, {}));
		          } else {
		            classes = renderedClasses;
		          }

		          var more = {};

		          // Provide the theme to the wrapped component.
		          // So we don't have to use the `withTheme()` Higher-order Component.
		          if (withTheme) {
		            more.theme = this.theme;
		          }

		          return _react2.default.createElement(Component, (0, _extends3.default)({ classes: classes }, more, other, { ref: innerRef }));
		        }
		      }]);
		      return Style;
		    }(_react2.default.Component);

		    Style.propTypes = process.env.NODE_ENV !== "production" ? {
		      /**
		       * Useful to extend the style applied to components.
		       */
		      classes: _propTypes2.default.object,
		      /**
		       * Use that property to pass a ref callback to the decorated component.
		       */
		      innerRef: _propTypes2.default.func
		    } : {};

		    Style.contextTypes = (0, _extends3.default)({
		      muiThemeProviderOptions: _propTypes2.default.object
		    }, _contextTypes2.default, listenToTheme ? _themeListener2.default.contextTypes : {});

		    if (process.env.NODE_ENV !== 'production') {
		      Style.displayName = (0, _wrapDisplayName2.default)(Component, 'withStyles');
		    }

		    (0, _hoistNonReactStatics2.default)(Style, Component);

		    if (process.env.NODE_ENV !== 'production') {
		      // Exposed for test purposes.
		      Style.Naked = Component;
		      Style.options = options;
		    }

		    return Style;
		  };
		};

		exports.default = withStyles;
		}).call(this,require('_process'))
		},{"./createGenerateClassName":923,"./createMuiTheme":925,"./getStylesCreator":928,"./themeListener":932,"_process":957,"babel-runtime/core-js/map":507,"babel-runtime/core-js/number/min-safe-integer":509,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/core-js/object/keys":514,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"hoist-non-react-statics":683,"jss":708,"jss-camel-case":695,"jss-default-unit":697,"jss-global":698,"jss-nested":699,"jss-props-sort":700,"jss-vendor-prefixer":701,"prop-types":961,"react":1016,"react-jss/lib/contextTypes":974,"react-jss/lib/ns":975,"recompose/getDisplayName":1030,"recompose/wrapDisplayName":1036,"warning":1054}],935:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _wrapDisplayName = require('recompose/wrapDisplayName');

		var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

		var _hoistNonReactStatics = require('hoist-non-react-statics');

		var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

		var _createMuiTheme = require('./createMuiTheme');

		var _createMuiTheme2 = _interopRequireDefault(_createMuiTheme);

		var _themeListener = require('./themeListener');

		var _themeListener2 = _interopRequireDefault(_themeListener);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var defaultTheme = void 0;

		function getDefaultTheme() {
		  if (defaultTheme) {
		    return defaultTheme;
		  }

		  defaultTheme = (0, _createMuiTheme2.default)();
		  return defaultTheme;
		}

		// Provide the theme object as a property to the input component.
		var withTheme = function withTheme() {
		  return function (Component) {
		    var WithTheme = function (_React$Component) {
		      (0, _inherits3.default)(WithTheme, _React$Component);

		      function WithTheme(props, context) {
		        (0, _classCallCheck3.default)(this, WithTheme);

		        var _this = (0, _possibleConstructorReturn3.default)(this, (WithTheme.__proto__ || (0, _getPrototypeOf2.default)(WithTheme)).call(this, props, context));

		        _this.state = {};
		        _this.unsubscribeId = null;

		        _this.state = {
		          // We use || as the function call is lazy evaluated.
		          theme: _themeListener2.default.initial(context) || getDefaultTheme()
		        };
		        return _this;
		      }

		      (0, _createClass3.default)(WithTheme, [{
		        key: 'componentDidMount',
		        value: function componentDidMount() {
		          var _this2 = this;

		          this.unsubscribeId = _themeListener2.default.subscribe(this.context, function (theme) {
		            _this2.setState({ theme: theme });
		          });
		        }
		      }, {
		        key: 'componentWillUnmount',
		        value: function componentWillUnmount() {
		          if (this.unsubscribeId !== null) {
		            _themeListener2.default.unsubscribe(this.context, this.unsubscribeId);
		          }
		        }
		      }, {
		        key: 'render',
		        value: function render() {
		          return _react2.default.createElement(Component, (0, _extends3.default)({ theme: this.state.theme }, this.props));
		        }
		      }]);
		      return WithTheme;
		    }(_react2.default.Component);

		    WithTheme.contextTypes = _themeListener2.default.contextTypes;

		    if (process.env.NODE_ENV !== 'production') {
		      WithTheme.displayName = (0, _wrapDisplayName2.default)(Component, 'withTheme');
		    }

		    (0, _hoistNonReactStatics2.default)(WithTheme, Component);

		    if (process.env.NODE_ENV !== 'production') {
		      // Exposed for test purposes.
		      WithTheme.Naked = Component;
		    }

		    return WithTheme;
		  };
		};

		exports.default = withTheme;
		}).call(this,require('_process'))
		},{"./createMuiTheme":925,"./themeListener":932,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/possibleConstructorReturn":524,"hoist-non-react-statics":683,"react":1016,"recompose/wrapDisplayName":1036}],936:[function(require,module,exports){
		"use strict";

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});


		// We need to centralize the zIndex definitions as they work
		// like global values in the browser.
		var zIndex = {
		  mobileStepper: 900,
		  menu: 1000,
		  appBar: 1100,
		  drawerOverlay: 1200,
		  navDrawer: 1300,
		  dialogOverlay: 1400,
		  dialog: 1500,
		  layer: 2000,
		  popover: 2100,
		  snackbar: 2900,
		  tooltip: 3000
		};

		exports.default = zIndex;
		},{}],937:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.styles = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _classnames = require('classnames');

		var _classnames2 = _interopRequireDefault(_classnames);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _Transition = require('react-transition-group/Transition');

		var _Transition2 = _interopRequireDefault(_Transition);

		var _withStyles = require('../styles/withStyles');

		var _withStyles2 = _interopRequireDefault(_withStyles);

		var _transitions = require('../styles/transitions');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent Transition

		var styles = exports.styles = function styles(theme) {
		  return {
		    container: {
		      height: 0,
		      overflow: 'hidden',
		      transition: theme.transitions.create('height')
		    },
		    entered: {
		      height: 'auto'
		    },
		    wrapper: {
		      // Hack to get children with a negative margin to not falsify the height computation.
		      display: 'flex'
		    },
		    wrapperInner: {
		      width: '100%'
		    }
		  };
		};

		var Collapse = function (_React$Component) {
		  (0, _inherits3.default)(Collapse, _React$Component);

		  function Collapse() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Collapse);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Collapse.__proto__ || (0, _getPrototypeOf2.default)(Collapse)).call.apply(_ref, [this].concat(args))), _this), _this.wrapper = null, _this.autoTransitionDuration = undefined, _this.handleEnter = function (node) {
		      node.style.height = _this.props.collapsedHeight;

		      if (_this.props.onEnter) {
		        _this.props.onEnter(node);
		      }
		    }, _this.handleEntering = function (node) {
		      var _this$props = _this.props,
		          timeout = _this$props.timeout,
		          theme = _this$props.theme;

		      var wrapperHeight = _this.wrapper ? _this.wrapper.clientHeight : 0;

		      if (timeout === 'auto') {
		        var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);
		        node.style.transitionDuration = duration2 + 'ms';
		        _this.autoTransitionDuration = duration2;
		      } else if (typeof timeout === 'number') {
		        node.style.transitionDuration = timeout + 'ms';
		      } else if (timeout && typeof timeout.enter === 'number') {
		        node.style.transitionDuration = timeout.enter + 'ms';
		      } else {
		        // The propType will warn in this case.
		      }

		      node.style.height = wrapperHeight + 'px';

		      if (_this.props.onEntering) {
		        _this.props.onEntering(node);
		      }
		    }, _this.handleEntered = function (node) {
		      node.style.height = 'auto';

		      if (_this.props.onEntered) {
		        _this.props.onEntered(node);
		      }
		    }, _this.handleExit = function (node) {
		      var wrapperHeight = _this.wrapper ? _this.wrapper.clientHeight : 0;
		      node.style.height = wrapperHeight + 'px';

		      if (_this.props.onExit) {
		        _this.props.onExit(node);
		      }
		    }, _this.handleExiting = function (node) {
		      var _this$props2 = _this.props,
		          timeout = _this$props2.timeout,
		          theme = _this$props2.theme;

		      var wrapperHeight = _this.wrapper ? _this.wrapper.clientHeight : 0;

		      if (timeout === 'auto') {
		        var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);
		        node.style.transitionDuration = duration2 + 'ms';
		        _this.autoTransitionDuration = duration2;
		      } else if (typeof timeout === 'number') {
		        node.style.transitionDuration = timeout + 'ms';
		      } else if (timeout && typeof timeout.exit === 'number') {
		        node.style.transitionDuration = timeout.exit + 'ms';
		      } else {
		        // The propType will warn in this case.
		      }

		      node.style.height = _this.props.collapsedHeight;

		      if (_this.props.onExiting) {
		        _this.props.onExiting(node);
		      }
		    }, _this.addEndListener = function (node, next) {
		      if (_this.props.timeout === 'auto') {
		        setTimeout(next, _this.autoTransitionDuration || 0);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Collapse, [{
		    key: 'render',
		    value: function render() {
		      var _this2 = this;

		      var _props = this.props,
		          appear = _props.appear,
		          children = _props.children,
		          classes = _props.classes,
		          className = _props.className,
		          collapsedHeight = _props.collapsedHeight,
		          ComponentProp = _props.component,
		          containerProps = _props.containerProps,
		          onEnter = _props.onEnter,
		          onEntered = _props.onEntered,
		          onEntering = _props.onEntering,
		          onExit = _props.onExit,
		          onExiting = _props.onExiting,
		          style = _props.style,
		          theme = _props.theme,
		          timeout = _props.timeout,
		          other = (0, _objectWithoutProperties3.default)(_props, ['appear', 'children', 'classes', 'className', 'collapsedHeight', 'component', 'containerProps', 'onEnter', 'onEntered', 'onEntering', 'onExit', 'onExiting', 'style', 'theme', 'timeout']);


		      return _react2.default.createElement(
		        _Transition2.default,
		        (0, _extends3.default)({
		          appear: appear,
		          onEntering: this.handleEntering,
		          onEnter: this.handleEnter,
		          onEntered: this.handleEntered,
		          onExiting: this.handleExiting,
		          onExit: this.handleExit,
		          addEndListener: this.addEndListener,
		          timeout: timeout === 'auto' ? null : timeout
		        }, other),
		        function (state, otherInner) {
		          return _react2.default.createElement(
		            ComponentProp,
		            (0, _extends3.default)({
		              className: (0, _classnames2.default)(classes.container, (0, _defineProperty3.default)({}, classes.entered, state === 'entered'), className),
		              style: (0, _extends3.default)({}, style, {
		                minHeight: collapsedHeight
		              })
		            }, otherInner),
		            _react2.default.createElement(
		              'div',
		              {
		                className: classes.wrapper,
		                ref: function ref(node) {
		                  _this2.wrapper = node;
		                }
		              },
		              _react2.default.createElement(
		                'div',
		                { className: classes.wrapperInner },
		                children
		              )
		            )
		          );
		        }
		      );
		    }
		  }]);
		  return Collapse;
		}(_react2.default.Component);

		Collapse.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * @ignore
		   */
		  appear: _propTypes2.default.bool,
		  /**
		   * The content node to be collapsed.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * Useful to extend the style applied to components.
		   */
		  classes: _propTypes2.default.object.isRequired,
		  /**
		   * @ignore
		   */
		  className: _propTypes2.default.string,
		  /**
		   * The height of the container when collapsed.
		   */
		  collapsedHeight: _propTypes2.default.string,
		  /**
		   * The component used for the root node.
		   * Either a string to use a DOM element or a component.
		   * The default value is a `button`.
		   */
		  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
		  /**
		   * Properties applied to the `Collapse` container.
		   */
		  containerProps: _propTypes2.default.object,
		  /**
		   * If `true`, the component will transition in.
		   */
		  in: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  onEnter: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onEntered: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onEntering: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onExit: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onExiting: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  style: _propTypes2.default.object,
		  /**
		   * @ignore
		   */
		  theme: _propTypes2.default.object.isRequired,
		  /**
		   * The duration for the transition, in milliseconds.
		   * You may specify a single timeout for all transitions, or individually with an object.
		   *
		   * Set to 'auto' to automatically calculate transition time based on height.
		   */
		  timeout: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number }), _propTypes2.default.oneOf(['auto'])])
		} : {};

		Collapse.defaultProps = {
		  appear: false,
		  collapsedHeight: '0px',
		  component: 'div',
		  timeout: _transitions.duration.standard
		};

		exports.default = (0, _withStyles2.default)(styles, {
		  withTheme: true,
		  name: 'MuiCollapse'
		})(Collapse);
		}).call(this,require('_process'))
		},{"../styles/transitions":933,"../styles/withStyles":934,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"classnames":642,"prop-types":961,"react":1016,"react-transition-group/Transition":1010}],938:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _Transition = require('react-transition-group/Transition');

		var _Transition2 = _interopRequireDefault(_Transition);

		var _transitions = require('../styles/transitions');

		var _withTheme = require('../styles/withTheme');

		var _withTheme2 = _interopRequireDefault(_withTheme);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var reflow = function reflow(node) {
		  return node.scrollTop;
		};

		/**
		 * The Fade transition is used by the Modal component.
		 * It's using [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
		 */
		// @inheritedComponent Transition

		var Fade = function (_React$Component) {
		  (0, _inherits3.default)(Fade, _React$Component);

		  function Fade() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Fade);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Fade.__proto__ || (0, _getPrototypeOf2.default)(Fade)).call.apply(_ref, [this].concat(args))), _this), _this.handleEnter = function (node) {
		      node.style.opacity = '0';
		      reflow(node);

		      if (_this.props.onEnter) {
		        _this.props.onEnter(node);
		      }
		    }, _this.handleEntering = function (node) {
		      var _this$props = _this.props,
		          theme = _this$props.theme,
		          timeout = _this$props.timeout;

		      node.style.transition = theme.transitions.create('opacity', {
		        duration: typeof timeout === 'number' ? timeout : timeout.enter
		      });
		      node.style.webkitTransition = theme.transitions.create('opacity', {
		        duration: typeof timeout === 'number' ? timeout : timeout.enter
		      });
		      node.style.opacity = '1';

		      if (_this.props.onEntering) {
		        _this.props.onEntering(node);
		      }
		    }, _this.handleExit = function (node) {
		      var _this$props2 = _this.props,
		          theme = _this$props2.theme,
		          timeout = _this$props2.timeout;

		      node.style.transition = theme.transitions.create('opacity', {
		        duration: typeof timeout === 'number' ? timeout : timeout.exit
		      });
		      node.style.webkitTransition = theme.transitions.create('opacity', {
		        duration: typeof timeout === 'number' ? timeout : timeout.exit
		      });
		      node.style.opacity = '0';

		      if (_this.props.onExit) {
		        _this.props.onExit(node);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Fade, [{
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          appear = _props.appear,
		          children = _props.children,
		          onEnter = _props.onEnter,
		          onEntering = _props.onEntering,
		          onExit = _props.onExit,
		          styleProp = _props.style,
		          theme = _props.theme,
		          other = (0, _objectWithoutProperties3.default)(_props, ['appear', 'children', 'onEnter', 'onEntering', 'onExit', 'style', 'theme']);


		      var style = (0, _extends3.default)({}, styleProp);

		      // For server side rendering.
		      if (!this.props.in || appear) {
		        style.opacity = '0';
		      }

		      return _react2.default.createElement(
		        _Transition2.default,
		        (0, _extends3.default)({
		          appear: appear,
		          style: style,
		          onEnter: this.handleEnter,
		          onEntering: this.handleEntering,
		          onExit: this.handleExit
		        }, other),
		        children
		      );
		    }
		  }]);
		  return Fade;
		}(_react2.default.Component);

		Fade.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * @ignore
		   */
		  appear: _propTypes2.default.bool,
		  /**
		   * A single child content element.
		   */
		  children: _propTypes2.default.element,
		  /**
		   * If `true`, the component will transition in.
		   */
		  in: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  onEnter: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onEntering: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onExit: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  style: _propTypes2.default.object,
		  /**
		   * @ignore
		   */
		  theme: _propTypes2.default.object.isRequired,
		  /**
		   * The duration for the transition, in milliseconds.
		   * You may specify a single timeout for all transitions, or individually with an object.
		   */
		  timeout: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number })])
		} : {};

		Fade.defaultProps = {
		  appear: true,
		  timeout: {
		    enter: _transitions.duration.enteringScreen,
		    exit: _transitions.duration.leavingScreen
		  }
		};

		exports.default = (0, _withTheme2.default)()(Fade);
		}).call(this,require('_process'))
		},{"../styles/transitions":933,"../styles/withTheme":935,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"prop-types":961,"react":1016,"react-transition-group/Transition":1010}],939:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		exports.getScale = getScale;

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _CSSTransition = require('react-transition-group/CSSTransition');

		var _CSSTransition2 = _interopRequireDefault(_CSSTransition);

		var _withTheme = require('../styles/withTheme');

		var _withTheme2 = _interopRequireDefault(_withTheme);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// Only exported for tests.
		// @inheritedComponent CSSTransition

		function getScale(value) {
		  return 'scale(' + value + ', ' + Math.pow(value, 2) + ')';
		}

		/**
		 * The Grow transition is used by the Popover component.
		 * It's using [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
		 */

		var Grow = function (_React$Component) {
		  (0, _inherits3.default)(Grow, _React$Component);

		  function Grow() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Grow);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Grow.__proto__ || (0, _getPrototypeOf2.default)(Grow)).call.apply(_ref, [this].concat(args))), _this), _this.autoTimeout = undefined, _this.handleEnter = function (node) {
		      node.style.opacity = '0';
		      node.style.transform = getScale(0.75);

		      if (_this.props.onEnter) {
		        _this.props.onEnter(node);
		      }
		    }, _this.handleEntering = function (node) {
		      var _this$props = _this.props,
		          theme = _this$props.theme,
		          timeout = _this$props.timeout;

		      var duration = 0;

		      if (timeout === 'auto') {
		        duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
		        _this.autoTimeout = duration;
		      } else if (typeof timeout === 'number') {
		        duration = timeout;
		      } else if (timeout && typeof timeout.enter === 'number') {
		        duration = timeout.enter;
		      } else {
		        // The propType will warn in this case.
		      }

		      node.style.transition = [theme.transitions.create('opacity', {
		        duration: duration
		      }), theme.transitions.create('transform', {
		        duration: duration * 0.666
		      })].join(',');

		      node.style.opacity = '1';
		      node.style.transform = getScale(1);

		      if (_this.props.onEntering) {
		        _this.props.onEntering(node);
		      }
		    }, _this.handleExit = function (node) {
		      var _this$props2 = _this.props,
		          theme = _this$props2.theme,
		          timeout = _this$props2.timeout;

		      var duration = 0;

		      if (timeout === 'auto') {
		        duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
		        _this.autoTimeout = duration;
		      } else if (typeof timeout === 'number') {
		        duration = timeout;
		      } else if (timeout && typeof timeout.exit === 'number') {
		        duration = timeout.exit;
		      } else {
		        // The propType will warn in this case.
		      }

		      node.style.transition = [theme.transitions.create('opacity', {
		        duration: duration
		      }), theme.transitions.create('transform', {
		        duration: duration * 0.666,
		        delay: duration * 0.333
		      })].join(',');

		      node.style.opacity = '0';
		      node.style.transform = getScale(0.75);

		      if (_this.props.onExit) {
		        _this.props.onExit(node);
		      }
		    }, _this.addEndListener = function (node, next) {
		      if (_this.props.timeout === 'auto') {
		        setTimeout(next, _this.autoTimeout || 0);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Grow, [{
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          appear = _props.appear,
		          children = _props.children,
		          onEnter = _props.onEnter,
		          onEntering = _props.onEntering,
		          onExit = _props.onExit,
		          rootRef = _props.rootRef,
		          styleProp = _props.style,
		          theme = _props.theme,
		          timeout = _props.timeout,
		          _props$transitionClas = _props.transitionClasses,
		          transitionClasses = _props$transitionClas === undefined ? {} : _props$transitionClas,
		          other = (0, _objectWithoutProperties3.default)(_props, ['appear', 'children', 'onEnter', 'onEntering', 'onExit', 'rootRef', 'style', 'theme', 'timeout', 'transitionClasses']);


		      var style = (0, _extends3.default)({}, children.props.style, styleProp);

		      // For server side rendering.
		      if (!this.props.in || appear) {
		        style.opacity = '0';
		      }

		      return _react2.default.createElement(
		        _CSSTransition2.default,
		        (0, _extends3.default)({
		          classNames: transitionClasses,
		          onEnter: this.handleEnter,
		          onEntering: this.handleEntering,
		          onExit: this.handleExit,
		          addEndListener: this.addEndListener,
		          appear: appear,
		          style: style,
		          timeout: timeout === 'auto' ? null : timeout
		        }, other, {
		          ref: rootRef
		        }),
		        children
		      );
		    }
		  }]);
		  return Grow;
		}(_react2.default.Component);

		Grow.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * @ignore
		   */
		  appear: _propTypes2.default.bool,
		  /**
		   * A single child content element.
		   */
		  children: _propTypes2.default.element,
		  /**
		   * If `true`, show the component; triggers the enter or exit animation.
		   */
		  in: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  onEnter: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onEntered: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onEntering: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onExit: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onExited: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onExiting: _propTypes2.default.func,
		  /**
		   * Use that property to pass a ref callback to the root component.
		   */
		  rootRef: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  style: _propTypes2.default.object,
		  /**
		   * @ignore
		   */
		  theme: _propTypes2.default.object.isRequired,
		  /**
		   * The duration for the transition, in milliseconds.
		   * You may specify a single timeout for all transitions, or individually with an object.
		   *
		   * Set to 'auto' to automatically calculate transition time based on height.
		   */
		  timeout: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number }), _propTypes2.default.oneOf(['auto'])]),
		  /**
		   * The animation classNames applied to the component as it enters or exits.
		   * This property is a direct binding to [`CSSTransition.classNames`](https://reactcommunity.org/react-transition-group/#CSSTransition-prop-classNames).
		   */
		  transitionClasses: _propTypes2.default.shape({
		    appear: _propTypes2.default.string,
		    appearActive: _propTypes2.default.string,
		    enter: _propTypes2.default.string,
		    enterActive: _propTypes2.default.string,
		    exit: _propTypes2.default.string,
		    exitActive: _propTypes2.default.string
		  })
		} : {};

		Grow.defaultProps = {
		  appear: true,
		  timeout: 'auto'
		};

		exports.default = (0, _withTheme2.default)()(Grow);
		}).call(this,require('_process'))
		},{"../styles/withTheme":935,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"prop-types":961,"react":1016,"react-transition-group/CSSTransition":1009}],940:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		exports.setTranslateValue = setTranslateValue;

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _reactDom = require('react-dom');

		var _reactEventListener = require('react-event-listener');

		var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

		var _debounce = require('lodash/debounce');

		var _debounce2 = _interopRequireDefault(_debounce);

		var _Transition = require('react-transition-group/Transition');

		var _Transition2 = _interopRequireDefault(_Transition);

		var _withTheme = require('../styles/withTheme');

		var _withTheme2 = _interopRequireDefault(_withTheme);

		var _transitions = require('../styles/transitions');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// @inheritedComponent Transition

		var GUTTER = 24;

		// Translate the node so he can't be seen on the screen.
		// Later, we gonna translate back the node to his original location
		// with `translate3d(0, 0, 0)`.`
		function getTranslateValue(props, node) {
		  var direction = props.direction;

		  var rect = node.getBoundingClientRect();

		  var transform = void 0;

		  if (node.fakeTransform) {
		    transform = node.fakeTransform;
		  } else {
		    var computedStyle = window.getComputedStyle(node);
		    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');
		  }

		  var offsetX = 0;
		  var offsetY = 0;

		  if (transform && transform !== 'none' && typeof transform === 'string') {
		    var transformValues = transform.split('(')[1].split(')')[0].split(',');
		    offsetX = parseInt(transformValues[4], 10);
		    offsetY = parseInt(transformValues[5], 10);
		  }

		  if (direction === 'left') {
		    return 'translateX(100vw) translateX(-' + (rect.left - offsetX) + 'px)';
		  } else if (direction === 'right') {
		    return 'translateX(-' + (rect.left + rect.width + GUTTER - offsetX) + 'px)';
		  } else if (direction === 'up') {
		    return 'translateY(100vh) translateY(-' + (rect.top - offsetY) + 'px)';
		  }

		  // direction === 'down
		  return 'translate3d(0, ' + (0 - (rect.top + rect.height)) + 'px, 0)';
		}

		function setTranslateValue(props, node) {
		  var transform = getTranslateValue(props, node);

		  if (transform) {
		    node.style.transform = transform;
		    node.style.webkitTransform = transform;
		  }
		}

		var reflow = function reflow(node) {
		  return node.scrollTop;
		};

		var Slide = function (_React$Component) {
		  (0, _inherits3.default)(Slide, _React$Component);

		  function Slide() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, Slide);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Slide.__proto__ || (0, _getPrototypeOf2.default)(Slide)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		      // We use this state to handle the server-side rendering.
		      firstMount: true
		    }, _this.transition = null, _this.handleResize = (0, _debounce2.default)(function () {
		      // Skip configuration where the position is screen size invariant.
		      if (_this.props.in || _this.props.direction === 'down' || _this.props.direction === 'right') {
		        return;
		      }

		      var node = (0, _reactDom.findDOMNode)(_this.transition);
		      if (node instanceof HTMLElement) {
		        setTranslateValue(_this.props, node);
		      }
		    }, 166), _this.handleEnter = function (node) {
		      setTranslateValue(_this.props, node);
		      reflow(node);

		      if (_this.props.onEnter) {
		        _this.props.onEnter(node);
		      }
		    }, _this.handleEntering = function (node) {
		      var _this$props = _this.props,
		          theme = _this$props.theme,
		          timeout = _this$props.timeout;

		      node.style.transition = theme.transitions.create('transform', {
		        duration: typeof timeout === 'number' ? timeout : timeout.enter,
		        easing: theme.transitions.easing.easeOut
		      });
		      node.style.webkitTransition = theme.transitions.create('-webkit-transform', {
		        duration: typeof timeout === 'number' ? timeout : timeout.enter,
		        easing: theme.transitions.easing.easeOut
		      });
		      node.style.transform = 'translate3d(0, 0, 0)';
		      node.style.webkitTransform = 'translate3d(0, 0, 0)';
		      if (_this.props.onEntering) {
		        _this.props.onEntering(node);
		      }
		    }, _this.handleExit = function (node) {
		      var _this$props2 = _this.props,
		          theme = _this$props2.theme,
		          timeout = _this$props2.timeout;

		      node.style.transition = theme.transitions.create('transform', {
		        duration: typeof timeout === 'number' ? timeout : timeout.exit,
		        easing: theme.transitions.easing.sharp
		      });
		      node.style.webkitTransition = theme.transitions.create('-webkit-transform', {
		        duration: typeof timeout === 'number' ? timeout : timeout.exit,
		        easing: theme.transitions.easing.sharp
		      });
		      setTranslateValue(_this.props, node);

		      if (_this.props.onExit) {
		        _this.props.onExit(node);
		      }
		    }, _this.handleExited = function (node) {
		      // No need for transitions when the component is hidden
		      node.style.transition = '';
		      node.style.webkitTransition = '';

		      if (_this.props.onExited) {
		        _this.props.onExited(node);
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(Slide, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      // state.firstMount handle SSR, once the component is mounted, we need
		      // to properly hide it.
		      if (!this.props.in) {
		        // We need to set initial translate values of transition element
		        // otherwise component will be shown when in=false.
		        this.updatePosition();
		      }
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps() {
		      this.setState({
		        firstMount: false
		      });
		    }
		  }, {
		    key: 'componentDidUpdate',
		    value: function componentDidUpdate(prevProps) {
		      if (prevProps.direction !== this.props.direction && !this.props.in) {
		        // We need to update the position of the drawer when the direction change and
		        // when it's hidden.
		        this.updatePosition();
		      }
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      this.handleResize.cancel();
		    }
		  }, {
		    key: 'updatePosition',
		    value: function updatePosition() {
		      var element = (0, _reactDom.findDOMNode)(this.transition);
		      if (element instanceof HTMLElement) {
		        element.style.visibility = 'inherit';
		        setTranslateValue(this.props, element);
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this2 = this;

		      var _props = this.props,
		          children = _props.children,
		          onEnter = _props.onEnter,
		          onEntering = _props.onEntering,
		          onExit = _props.onExit,
		          onExited = _props.onExited,
		          styleProp = _props.style,
		          theme = _props.theme,
		          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'onEnter', 'onEntering', 'onExit', 'onExited', 'style', 'theme']);


		      var style = (0, _extends3.default)({}, styleProp);

		      if (!this.props.in && this.state.firstMount) {
		        style.visibility = 'hidden';
		      }

		      return _react2.default.createElement(
		        _reactEventListener2.default,
		        { target: 'window', onResize: this.handleResize },
		        _react2.default.createElement(
		          _Transition2.default,
		          (0, _extends3.default)({
		            onEnter: this.handleEnter,
		            onEntering: this.handleEntering,
		            onExit: this.handleExit,
		            onExited: this.handleExited,
		            appear: true,
		            style: style
		          }, other, {
		            ref: function ref(node) {
		              _this2.transition = node;
		            }
		          }),
		          children
		        )
		      );
		    }
		  }]);
		  return Slide;
		}(_react2.default.Component);

		Slide.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * A single child content element.
		   */
		  children: _propTypes2.default.element,
		  /**
		   * Direction the child node will enter from.
		   */
		  direction: _propTypes2.default.oneOf(['left', 'right', 'up', 'down']),
		  /**
		   * If `true`, show the component; triggers the enter or exit animation.
		   */
		  in: _propTypes2.default.bool,
		  /**
		   * @ignore
		   */
		  onEnter: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onEntered: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onEntering: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onExit: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onExited: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  onExiting: _propTypes2.default.func,
		  /**
		   * @ignore
		   */
		  style: _propTypes2.default.object,
		  /**
		   * @ignore
		   */
		  theme: _propTypes2.default.object.isRequired,
		  /**
		   * The duration for the transition, in milliseconds.
		   * You may specify a single timeout for all transitions, or individually with an object.
		   */
		  timeout: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({ enter: _propTypes2.default.number, exit: _propTypes2.default.number })])
		} : {};

		Slide.defaultProps = {
		  timeout: {
		    enter: _transitions.duration.enteringScreen,
		    exit: _transitions.duration.leavingScreen
		  }
		};

		exports.default = (0, _withTheme2.default)()(Slide);
		}).call(this,require('_process'))
		},{"../styles/transitions":933,"../styles/withTheme":935,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"lodash/debounce":740,"prop-types":961,"react":1016,"react-dom":971,"react-event-listener":972,"react-transition-group/Transition":1010}],941:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _Slide = require('./Slide');

		Object.defineProperty(exports, 'Slide', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Slide).default;
		  }
		});

		var _Grow = require('./Grow');

		Object.defineProperty(exports, 'Grow', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Grow).default;
		  }
		});

		var _Fade = require('./Fade');

		Object.defineProperty(exports, 'Fade', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Fade).default;
		  }
		});

		var _Collapse = require('./Collapse');

		Object.defineProperty(exports, 'Collapse', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_Collapse).default;
		  }
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"./Collapse":937,"./Fade":938,"./Grow":939,"./Slide":940}],942:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _reactDom = require('react-dom');

		var _reactEventListener = require('react-event-listener');

		var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var isDescendant = function isDescendant(el, target) {
		  if (target !== null && target.parentNode) {
		    return el === target || isDescendant(el, target.parentNode);
		  }
		  return false;
		};

		/**
		 * Listen for click events that are triggered outside of the component children.
		 */

		var ClickAwayListener = function (_React$Component) {
		  (0, _inherits3.default)(ClickAwayListener, _React$Component);

		  function ClickAwayListener() {
		    var _ref;

		    var _temp, _this, _ret;

		    (0, _classCallCheck3.default)(this, ClickAwayListener);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ClickAwayListener.__proto__ || (0, _getPrototypeOf2.default)(ClickAwayListener)).call.apply(_ref, [this].concat(args))), _this), _this.mounted = false, _this.handleClickAway = function (event) {
		      // Ignore events that have been `event.preventDefault()` marked.
		      if (event.defaultPrevented) {
		        return;
		      }

		      // IE11 support, which trigger the handleClickAway even after the unbind
		      if (_this.mounted) {
		        var el = (0, _reactDom.findDOMNode)(_this);

		        if (event.target instanceof HTMLElement && document.documentElement && document.documentElement.contains(event.target) && !isDescendant(el, event.target)) {
		          _this.props.onClickAway(event);
		        }
		      }
		    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		  }

		  (0, _createClass3.default)(ClickAwayListener, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      this.mounted = true;
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      this.mounted = false;
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      return _react2.default.createElement(
		        _reactEventListener2.default,
		        {
		          target: 'document',
		          onMouseup: this.handleClickAway,
		          onTouchend: this.handleClickAway
		        },
		        this.props.children
		      );
		    }
		  }]);
		  return ClickAwayListener;
		}(_react2.default.Component);

		ClickAwayListener.propTypes = process.env.NODE_ENV !== "production" ? {
		  children: _propTypes2.default.node.isRequired,
		  onClickAway: _propTypes2.default.func.isRequired
		} : {};

		exports.default = ClickAwayListener;
		}).call(this,require('_process'))
		},{"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/possibleConstructorReturn":524,"prop-types":961,"react":1016,"react-dom":971,"react-event-listener":972}],943:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		exports.default = function (node, event, handler, capture) {
		  (0, _on2.default)(node, event, handler, capture);
		  return {
		    remove: function remove() {
		      (0, _off2.default)(node, event, handler, capture);
		    }
		  };
		};

		var _on = require('dom-helpers/events/on');

		var _on2 = _interopRequireDefault(_on);

		var _off = require('dom-helpers/events/off');

		var _off2 = _interopRequireDefault(_off);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		},{"dom-helpers/events/off":657,"dom-helpers/events/on":658}],944:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.specialProperty = undefined;

		var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

		var _defineProperty3 = _interopRequireDefault(_defineProperty2);

		var _keys = require('babel-runtime/core-js/object/keys');

		var _keys2 = _interopRequireDefault(_keys);

		var _extends3 = require('babel-runtime/helpers/extends');

		var _extends4 = _interopRequireDefault(_extends3);

		exports.default = exactProp;

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// This module is based on https://github.com/airbnb/prop-types-exact repository.
		// However, in order to reduce the number of dependencies and to remove some extra safe checks
		// the module was forked.

		var specialProperty = exports.specialProperty = 'exact-prop: \u200B';

		function exactProp(propTypes, componentNameInError) {
		  return (0, _extends4.default)({}, propTypes, (0, _defineProperty3.default)({}, specialProperty, function (props) {
		    var unknownProps = (0, _keys2.default)(props).filter(function (prop) {
		      return !propTypes.hasOwnProperty(prop);
		    });
		    if (unknownProps.length > 0) {
		      return new TypeError(componentNameInError + ': unknown props found: ' + unknownProps.join(', ') + '. Please remove the unknown properties.');
		    }
		    return null;
		  }));
		}
		},{"babel-runtime/core-js/object/keys":514,"babel-runtime/helpers/defineProperty":520,"babel-runtime/helpers/extends":521}],945:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _typeof2 = require('babel-runtime/helpers/typeof');

		var _typeof3 = _interopRequireDefault(_typeof2);

		var _keys = require('babel-runtime/core-js/object/keys');

		var _keys2 = _interopRequireDefault(_keys);

		exports.capitalizeFirstLetter = capitalizeFirstLetter;
		exports.contains = contains;
		exports.findIndex = findIndex;
		exports.find = find;
		exports.createChainedFunction = createChainedFunction;

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function capitalizeFirstLetter(string) {
		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(typeof string === 'string', 'Material-UI: capitalizeFirstLetter(string) expects a string argument.') : void 0;

		  return string.charAt(0).toUpperCase() + string.slice(1);
		} //  weak

		function contains(obj, pred) {
		  return (0, _keys2.default)(pred).every(function (key) {
		    return obj.hasOwnProperty(key) && obj[key] === pred[key];
		  });
		}

		function findIndex(arr, pred) {
		  var predType = typeof pred === 'undefined' ? 'undefined' : (0, _typeof3.default)(pred);
		  for (var i = 0; i < arr.length; i += 1) {
		    if (predType === 'function' && !!pred(arr[i], i, arr) === true) {
		      return i;
		    }
		    if (predType === 'object' && contains(arr[i], pred)) {
		      return i;
		    }
		    if (['string', 'number', 'boolean'].indexOf(predType) !== -1) {
		      return arr.indexOf(pred);
		    }
		  }
		  return -1;
		}

		function find(arr, pred) {
		  var index = findIndex(arr, pred);
		  return index > -1 ? arr[index] : undefined;
		}

		/**
		 * Safe chained function
		 *
		 * Will only create a new function if needed,
		 * otherwise will pass back existing functions or null.
		 *
		 * @param {function} functions to chain
		 * @returns {function|null}
		 */
		function createChainedFunction() {
		  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
		    funcs[_key] = arguments[_key];
		  }

		  return funcs.filter(function (func) {
		    return func != null;
		  }).reduce(function (acc, func) {
		    process.env.NODE_ENV !== "production" ? (0, _warning2.default)(typeof func === 'function', 'Material-UI: invalid Argument Type, must only provide functions, undefined, or null.') : void 0;

		    return function chainedFunction() {
		      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
		        args[_key2] = arguments[_key2];
		      }

		      acc.apply(this, args);
		      func.apply(this, args);
		    };
		  }, function () {});
		}
		}).call(this,require('_process'))
		},{"_process":957,"babel-runtime/core-js/object/keys":514,"babel-runtime/helpers/typeof":526,"warning":1054}],946:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.focusKeyPressed = focusKeyPressed;
		exports.detectKeyboardFocus = detectKeyboardFocus;
		exports.listenForFocusKeys = listenForFocusKeys;

		var _keycode = require('keycode');

		var _keycode2 = _interopRequireDefault(_keycode);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _contains = require('dom-helpers/query/contains');

		var _contains2 = _interopRequireDefault(_contains);

		var _addEventListener = require('../utils/addEventListener');

		var _addEventListener2 = _interopRequireDefault(_addEventListener);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		//  weak

		var internal = {
		  listening: false,
		  focusKeyPressed: false
		};

		function focusKeyPressed(pressed) {
		  if (typeof pressed !== 'undefined') {
		    internal.focusKeyPressed = Boolean(pressed);
		  }

		  return internal.focusKeyPressed;
		}

		function detectKeyboardFocus(instance, element, callback) {
		  var attempt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;

		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(instance.keyboardFocusCheckTime, 'Material-UI: missing instance.keyboardFocusCheckTime') : void 0;
		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(instance.keyboardFocusMaxCheckTimes, 'Material-UI: missing instance.keyboardFocusMaxCheckTimes') : void 0;

		  instance.keyboardFocusTimeout = setTimeout(function () {
		    if (focusKeyPressed() && (document.activeElement === element || (0, _contains2.default)(element, document.activeElement))) {
		      callback();
		    } else if (attempt < instance.keyboardFocusMaxCheckTimes) {
		      detectKeyboardFocus(instance, element, callback, attempt + 1);
		    }
		  }, instance.keyboardFocusCheckTime);
		}

		var FOCUS_KEYS = ['tab', 'enter', 'space', 'esc', 'up', 'down', 'left', 'right'];

		function isFocusKey(event) {
		  return FOCUS_KEYS.indexOf((0, _keycode2.default)(event)) !== -1;
		}

		function listenForFocusKeys() {
		  // It's a singleton, we only need to listen once.
		  // Also, this logic is client side only, we don't need a teardown.
		  if (!internal.listening) {
		    (0, _addEventListener2.default)(window, 'keyup', function (event) {
		      if (isFocusKey(event)) {
		        internal.focusKeyPressed = true;
		      }
		    });
		    internal.listening = true;
		  }
		}
		}).call(this,require('_process'))
		},{"../utils/addEventListener":943,"_process":957,"dom-helpers/query/contains":660,"keycode":731,"warning":1054}],947:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.ariaHidden = ariaHidden;
		exports.hideSiblings = hideSiblings;
		exports.showSiblings = showSiblings;
		//  weak

		var BLACKLIST = ['template', 'script', 'style'];

		var isHidable = function isHidable(_ref) {
		  var nodeType = _ref.nodeType,
		      tagName = _ref.tagName;
		  return nodeType === 1 && BLACKLIST.indexOf(tagName.toLowerCase()) === -1;
		};

		var siblings = function siblings(container, mount, cb) {
		  mount = [].concat(mount); // eslint-disable-line no-param-reassign
		  [].forEach.call(container.children, function (node) {
		    if (mount.indexOf(node) === -1 && isHidable(node)) {
		      cb(node);
		    }
		  });
		};

		function ariaHidden(show, node) {
		  if (!node) {
		    return;
		  }
		  if (show) {
		    node.setAttribute('aria-hidden', 'true');
		  } else {
		    node.removeAttribute('aria-hidden');
		  }
		}

		function hideSiblings(container, mountNode) {
		  siblings(container, mountNode, function (node) {
		    return ariaHidden(true, node);
		  });
		}

		function showSiblings(container, mountNode) {
		  siblings(container, mountNode, function (node) {
		    return ariaHidden(false, node);
		  });
		}
		},{}],948:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.cloneChildrenWithClassName = cloneChildrenWithClassName;
		exports.isMuiElement = isMuiElement;
		exports.isMuiComponent = isMuiComponent;

		var _react = require('react');

		function cloneChildrenWithClassName(children, className) {
		  return _react.Children.map(children, function (child) {
		    return (0, _react.isValidElement)(child) && (0, _react.cloneElement)(child, {
		      className: child.props.hasOwnProperty('className') ? child.props.className + ' ' + className : className
		    });
		  });
		}
		/* eslint-disable import/prefer-default-export */

		function isMuiElement(element, muiNames) {
		  return (0, _react.isValidElement)(element) && muiNames.indexOf(element.type.muiName) !== -1;
		}

		function isMuiComponent(element, muiNames) {
		  return muiNames.indexOf(element.muiName) !== -1;
		}
		},{"react":1016}],949:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		//  weak

		var requirePropFactory = function requirePropFactory(componentNameInError) {
		  var requireProp = function requireProp(requiredProp) {
		    return function (props, propName, componentName, location, propFullName) {
		      var propFullNameSafe = propFullName || propName;

		      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {
		        return new Error('The property `' + propFullNameSafe + '` of ' + ('`' + componentNameInError + '` must be used on `' + requiredProp + '`.'));
		      }

		      return null;
		    };
		  };
		  return requireProp;
		};

		exports.default = requirePropFactory;
		},{}],950:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.isWidthDown = exports.isWidthUp = undefined;

		var _extends2 = require('babel-runtime/helpers/extends');

		var _extends3 = _interopRequireDefault(_extends2);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _reactEventListener = require('react-event-listener');

		var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

		var _debounce = require('lodash/debounce');

		var _debounce2 = _interopRequireDefault(_debounce);

		var _hoistNonReactStatics = require('hoist-non-react-statics');

		var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

		var _wrapDisplayName = require('recompose/wrapDisplayName');

		var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

		var _withTheme = require('../styles/withTheme');

		var _withTheme2 = _interopRequireDefault(_withTheme);

		var _createBreakpoints = require('../styles/createBreakpoints');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		// By default, returns true if screen width is the same or greater than the given breakpoint.
		var isWidthUp = exports.isWidthUp = function isWidthUp(breakpoint, width) {
		  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

		  if (inclusive) {
		    return _createBreakpoints.keys.indexOf(breakpoint) <= _createBreakpoints.keys.indexOf(width);
		  }
		  return _createBreakpoints.keys.indexOf(breakpoint) < _createBreakpoints.keys.indexOf(width);
		};

		// By default, returns true if screen width is the same or less than the given breakpoint.
		var isWidthDown = exports.isWidthDown = function isWidthDown(breakpoint, width) {
		  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

		  if (inclusive) {
		    return _createBreakpoints.keys.indexOf(width) <= _createBreakpoints.keys.indexOf(breakpoint);
		  }
		  return _createBreakpoints.keys.indexOf(width) < _createBreakpoints.keys.indexOf(breakpoint);
		};

		var withWidth = function withWidth() {
		  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		  return function (Component) {
		    var _options$resizeInterv = options.resizeInterval,
		        resizeInterval = _options$resizeInterv === undefined ? 166 : _options$resizeInterv,
		        _options$withTheme = options.withTheme,
		        withThemeOption = _options$withTheme === undefined ? false : _options$withTheme;

		    var Width = function (_React$Component) {
		      (0, _inherits3.default)(Width, _React$Component);

		      function Width() {
		        var _ref;

		        var _temp, _this, _ret;

		        (0, _classCallCheck3.default)(this, Width);

		        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		          args[_key] = arguments[_key];
		        }

		        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Width.__proto__ || (0, _getPrototypeOf2.default)(Width)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
		          width: undefined
		        }, _this.handleResize = (0, _debounce2.default)(function () {
		          _this.updateWidth(window.innerWidth);
		        }, resizeInterval), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
		      }

		      (0, _createClass3.default)(Width, [{
		        key: 'componentDidMount',
		        value: function componentDidMount() {
		          this.updateWidth(window.innerWidth);
		        }
		      }, {
		        key: 'componentWillUnmount',
		        value: function componentWillUnmount() {
		          this.handleResize.cancel();
		        }
		      }, {
		        key: 'updateWidth',
		        value: function updateWidth(innerWidth) {
		          var breakpoints = this.props.theme.breakpoints;
		          var width = null;

		          /**
		           * Start with the slowest value as low end devices often have a small screen.
		           *
		           * innerWidth |xs      sm      md      lg      xl
		           *            |-------|-------|-------|-------|------>
		           * width      |  xs   |  sm   |  md   |  lg   |  xl
		           */
		          var index = 1;
		          while (width === null && index < _createBreakpoints.keys.length) {
		            var currentWidth = _createBreakpoints.keys[index];

		            // @media are inclusive, so reproduce the behavior here.
		            if (innerWidth < breakpoints.values[currentWidth]) {
		              width = _createBreakpoints.keys[index - 1];
		              break;
		            }

		            index += 1;
		          }

		          width = width || 'xl';

		          if (width !== this.state.width) {
		            this.setState({
		              width: width
		            });
		          }
		        }
		      }, {
		        key: 'render',
		        value: function render() {
		          var _props = this.props,
		              initialWidth = _props.initialWidth,
		              theme = _props.theme,
		              width = _props.width,
		              other = (0, _objectWithoutProperties3.default)(_props, ['initialWidth', 'theme', 'width']);

		          var props = (0, _extends3.default)({
		            width: width || this.state.width || initialWidth
		          }, other);
		          var more = {};

		          if (withThemeOption) {
		            more.theme = theme;
		          }

		          // When rendering the component on the server,
		          // we have no idea about the client browser screen width.
		          // In order to prevent blinks and help the reconciliation of the React tree
		          // we are not rendering the child component.
		          //
		          // An alternative is to use the `initialWidth` property.
		          if (props.width === undefined) {
		            return null;
		          }

		          return _react2.default.createElement(
		            _reactEventListener2.default,
		            { target: 'window', onResize: this.handleResize },
		            _react2.default.createElement(Component, (0, _extends3.default)({}, more, props))
		          );
		        }
		      }]);
		      return Width;
		    }(_react2.default.Component);

		    Width.propTypes = process.env.NODE_ENV !== "production" ? {
		      /**
		       * As `window.innerWidth` is unavailable on the server,
		       * we default to rendering an empty componenent during the first mount.
		       * In some situation you might want to use an heristic to approximate
		       * the screen width of the client browser screen width.
		       *
		       * For instance, you could be using the user-agent or the client-hints.
		       * http://caniuse.com/#search=client%20hint
		       */
		      initialWidth: _propTypes2.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),
		      /**
		       * @ignore
		       */
		      theme: _propTypes2.default.object.isRequired,
		      /**
		       * Bypass the width calculation logic.
		       */
		      width: _propTypes2.default.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])
		    } : {};

		    if (process.env.NODE_ENV !== 'production') {
		      Width.displayName = (0, _wrapDisplayName2.default)(Component, 'withWidth');
		    }

		    (0, _hoistNonReactStatics2.default)(Width, Component);

		    return (0, _withTheme2.default)()(Width);
		  };
		};

		exports.default = withWidth;
		}).call(this,require('_process'))
		},{"../styles/createBreakpoints":922,"../styles/withTheme":935,"_process":957,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/extends":521,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"hoist-non-react-statics":683,"lodash/debounce":740,"prop-types":961,"react":1016,"react-event-listener":972,"recompose/wrapDisplayName":1036}],951:[function(require,module,exports){
		//! moment.js locale configuration

		;(function (global, factory) {
		   typeof exports === 'object' && typeof module !== 'undefined'
		       && typeof require === 'function' ? factory(require('../moment')) :
		   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
		   factory(global.moment)
		}(this, (function (moment) { 'use strict';


		function processRelativeTime(number, withoutSuffix, key, isFuture) {
		    var format = {
		        'm': ['eine Minute', 'einer Minute'],
		        'h': ['eine Stunde', 'einer Stunde'],
		        'd': ['ein Tag', 'einem Tag'],
		        'dd': [number + ' Tage', number + ' Tagen'],
		        'M': ['ein Monat', 'einem Monat'],
		        'MM': [number + ' Monate', number + ' Monaten'],
		        'y': ['ein Jahr', 'einem Jahr'],
		        'yy': [number + ' Jahre', number + ' Jahren']
		    };
		    return withoutSuffix ? format[key][0] : format[key][1];
		}

		var de = moment.defineLocale('de', {
		    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
		    monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
		    monthsParseExact : true,
		    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
		    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
		    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
		    weekdaysParseExact : true,
		    longDateFormat : {
		        LT: 'HH:mm',
		        LTS: 'HH:mm:ss',
		        L : 'DD.MM.YYYY',
		        LL : 'D. MMMM YYYY',
		        LLL : 'D. MMMM YYYY HH:mm',
		        LLLL : 'dddd, D. MMMM YYYY HH:mm'
		    },
		    calendar : {
		        sameDay: '[heute um] LT [Uhr]',
		        sameElse: 'L',
		        nextDay: '[morgen um] LT [Uhr]',
		        nextWeek: 'dddd [um] LT [Uhr]',
		        lastDay: '[gestern um] LT [Uhr]',
		        lastWeek: '[letzten] dddd [um] LT [Uhr]'
		    },
		    relativeTime : {
		        future : 'in %s',
		        past : 'vor %s',
		        s : 'ein paar Sekunden',
		        ss : '%d Sekunden',
		        m : processRelativeTime,
		        mm : '%d Minuten',
		        h : processRelativeTime,
		        hh : '%d Stunden',
		        d : processRelativeTime,
		        dd : processRelativeTime,
		        M : processRelativeTime,
		        MM : processRelativeTime,
		        y : processRelativeTime,
		        yy : processRelativeTime
		    },
		    dayOfMonthOrdinalParse: /\d{1,2}\./,
		    ordinal : '%d.',
		    week : {
		        dow : 1, // Monday is the first day of the week.
		        doy : 4  // The week that contains Jan 4th is the first week of the year.
		    }
		});

		return de;

		})));

		},{"../moment":952}],952:[function(require,module,exports){
		//! moment.js

		;(function (global, factory) {
		    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
		    typeof define === 'function' && define.amd ? define(factory) :
		    global.moment = factory()
		}(this, (function () { 'use strict';

		var hookCallback;

		function hooks () {
		    return hookCallback.apply(null, arguments);
		}

		// This is done to register the method called with moment()
		// without creating circular dependencies.
		function setHookCallback (callback) {
		    hookCallback = callback;
		}

		function isArray(input) {
		    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
		}

		function isObject(input) {
		    // IE8 will treat undefined and null as object if it wasn't for
		    // input != null
		    return input != null && Object.prototype.toString.call(input) === '[object Object]';
		}

		function isObjectEmpty(obj) {
		    if (Object.getOwnPropertyNames) {
		        return (Object.getOwnPropertyNames(obj).length === 0);
		    } else {
		        var k;
		        for (k in obj) {
		            if (obj.hasOwnProperty(k)) {
		                return false;
		            }
		        }
		        return true;
		    }
		}

		function isUndefined(input) {
		    return input === void 0;
		}

		function isNumber(input) {
		    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
		}

		function isDate(input) {
		    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
		}

		function map(arr, fn) {
		    var res = [], i;
		    for (i = 0; i < arr.length; ++i) {
		        res.push(fn(arr[i], i));
		    }
		    return res;
		}

		function hasOwnProp(a, b) {
		    return Object.prototype.hasOwnProperty.call(a, b);
		}

		function extend(a, b) {
		    for (var i in b) {
		        if (hasOwnProp(b, i)) {
		            a[i] = b[i];
		        }
		    }

		    if (hasOwnProp(b, 'toString')) {
		        a.toString = b.toString;
		    }

		    if (hasOwnProp(b, 'valueOf')) {
		        a.valueOf = b.valueOf;
		    }

		    return a;
		}

		function createUTC (input, format, locale, strict) {
		    return createLocalOrUTC(input, format, locale, strict, true).utc();
		}

		function defaultParsingFlags() {
		    // We need to deep clone this object.
		    return {
		        empty           : false,
		        unusedTokens    : [],
		        unusedInput     : [],
		        overflow        : -2,
		        charsLeftOver   : 0,
		        nullInput       : false,
		        invalidMonth    : null,
		        invalidFormat   : false,
		        userInvalidated : false,
		        iso             : false,
		        parsedDateParts : [],
		        meridiem        : null,
		        rfc2822         : false,
		        weekdayMismatch : false
		    };
		}

		function getParsingFlags(m) {
		    if (m._pf == null) {
		        m._pf = defaultParsingFlags();
		    }
		    return m._pf;
		}

		var some;
		if (Array.prototype.some) {
		    some = Array.prototype.some;
		} else {
		    some = function (fun) {
		        var t = Object(this);
		        var len = t.length >>> 0;

		        for (var i = 0; i < len; i++) {
		            if (i in t && fun.call(this, t[i], i, t)) {
		                return true;
		            }
		        }

		        return false;
		    };
		}

		function isValid(m) {
		    if (m._isValid == null) {
		        var flags = getParsingFlags(m);
		        var parsedParts = some.call(flags.parsedDateParts, function (i) {
		            return i != null;
		        });
		        var isNowValid = !isNaN(m._d.getTime()) &&
		            flags.overflow < 0 &&
		            !flags.empty &&
		            !flags.invalidMonth &&
		            !flags.invalidWeekday &&
		            !flags.weekdayMismatch &&
		            !flags.nullInput &&
		            !flags.invalidFormat &&
		            !flags.userInvalidated &&
		            (!flags.meridiem || (flags.meridiem && parsedParts));

		        if (m._strict) {
		            isNowValid = isNowValid &&
		                flags.charsLeftOver === 0 &&
		                flags.unusedTokens.length === 0 &&
		                flags.bigHour === undefined;
		        }

		        if (Object.isFrozen == null || !Object.isFrozen(m)) {
		            m._isValid = isNowValid;
		        }
		        else {
		            return isNowValid;
		        }
		    }
		    return m._isValid;
		}

		function createInvalid (flags) {
		    var m = createUTC(NaN);
		    if (flags != null) {
		        extend(getParsingFlags(m), flags);
		    }
		    else {
		        getParsingFlags(m).userInvalidated = true;
		    }

		    return m;
		}

		// Plugins that add properties should also add the key here (null value),
		// so we can properly clone ourselves.
		var momentProperties = hooks.momentProperties = [];

		function copyConfig(to, from) {
		    var i, prop, val;

		    if (!isUndefined(from._isAMomentObject)) {
		        to._isAMomentObject = from._isAMomentObject;
		    }
		    if (!isUndefined(from._i)) {
		        to._i = from._i;
		    }
		    if (!isUndefined(from._f)) {
		        to._f = from._f;
		    }
		    if (!isUndefined(from._l)) {
		        to._l = from._l;
		    }
		    if (!isUndefined(from._strict)) {
		        to._strict = from._strict;
		    }
		    if (!isUndefined(from._tzm)) {
		        to._tzm = from._tzm;
		    }
		    if (!isUndefined(from._isUTC)) {
		        to._isUTC = from._isUTC;
		    }
		    if (!isUndefined(from._offset)) {
		        to._offset = from._offset;
		    }
		    if (!isUndefined(from._pf)) {
		        to._pf = getParsingFlags(from);
		    }
		    if (!isUndefined(from._locale)) {
		        to._locale = from._locale;
		    }

		    if (momentProperties.length > 0) {
		        for (i = 0; i < momentProperties.length; i++) {
		            prop = momentProperties[i];
		            val = from[prop];
		            if (!isUndefined(val)) {
		                to[prop] = val;
		            }
		        }
		    }

		    return to;
		}

		var updateInProgress = false;

		// Moment prototype object
		function Moment(config) {
		    copyConfig(this, config);
		    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
		    if (!this.isValid()) {
		        this._d = new Date(NaN);
		    }
		    // Prevent infinite loop in case updateOffset creates new moment
		    // objects.
		    if (updateInProgress === false) {
		        updateInProgress = true;
		        hooks.updateOffset(this);
		        updateInProgress = false;
		    }
		}

		function isMoment (obj) {
		    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
		}

		function absFloor (number) {
		    if (number < 0) {
		        // -0 -> 0
		        return Math.ceil(number) || 0;
		    } else {
		        return Math.floor(number);
		    }
		}

		function toInt(argumentForCoercion) {
		    var coercedNumber = +argumentForCoercion,
		        value = 0;

		    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
		        value = absFloor(coercedNumber);
		    }

		    return value;
		}

		// compare two arrays, return the number of differences
		function compareArrays(array1, array2, dontConvert) {
		    var len = Math.min(array1.length, array2.length),
		        lengthDiff = Math.abs(array1.length - array2.length),
		        diffs = 0,
		        i;
		    for (i = 0; i < len; i++) {
		        if ((dontConvert && array1[i] !== array2[i]) ||
		            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
		            diffs++;
		        }
		    }
		    return diffs + lengthDiff;
		}

		function warn(msg) {
		    if (hooks.suppressDeprecationWarnings === false &&
		            (typeof console !==  'undefined') && console.warn) {
		        console.warn('Deprecation warning: ' + msg);
		    }
		}

		function deprecate(msg, fn) {
		    var firstTime = true;

		    return extend(function () {
		        if (hooks.deprecationHandler != null) {
		            hooks.deprecationHandler(null, msg);
		        }
		        if (firstTime) {
		            var args = [];
		            var arg;
		            for (var i = 0; i < arguments.length; i++) {
		                arg = '';
		                if (typeof arguments[i] === 'object') {
		                    arg += '\n[' + i + '] ';
		                    for (var key in arguments[0]) {
		                        arg += key + ': ' + arguments[0][key] + ', ';
		                    }
		                    arg = arg.slice(0, -2); // Remove trailing comma and space
		                } else {
		                    arg = arguments[i];
		                }
		                args.push(arg);
		            }
		            warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
		            firstTime = false;
		        }
		        return fn.apply(this, arguments);
		    }, fn);
		}

		var deprecations = {};

		function deprecateSimple(name, msg) {
		    if (hooks.deprecationHandler != null) {
		        hooks.deprecationHandler(name, msg);
		    }
		    if (!deprecations[name]) {
		        warn(msg);
		        deprecations[name] = true;
		    }
		}

		hooks.suppressDeprecationWarnings = false;
		hooks.deprecationHandler = null;

		function isFunction(input) {
		    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
		}

		function set (config) {
		    var prop, i;
		    for (i in config) {
		        prop = config[i];
		        if (isFunction(prop)) {
		            this[i] = prop;
		        } else {
		            this['_' + i] = prop;
		        }
		    }
		    this._config = config;
		    // Lenient ordinal parsing accepts just a number in addition to
		    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
		    // TODO: Remove "ordinalParse" fallback in next major release.
		    this._dayOfMonthOrdinalParseLenient = new RegExp(
		        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
		            '|' + (/\d{1,2}/).source);
		}

		function mergeConfigs(parentConfig, childConfig) {
		    var res = extend({}, parentConfig), prop;
		    for (prop in childConfig) {
		        if (hasOwnProp(childConfig, prop)) {
		            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
		                res[prop] = {};
		                extend(res[prop], parentConfig[prop]);
		                extend(res[prop], childConfig[prop]);
		            } else if (childConfig[prop] != null) {
		                res[prop] = childConfig[prop];
		            } else {
		                delete res[prop];
		            }
		        }
		    }
		    for (prop in parentConfig) {
		        if (hasOwnProp(parentConfig, prop) &&
		                !hasOwnProp(childConfig, prop) &&
		                isObject(parentConfig[prop])) {
		            // make sure changes to properties don't modify parent config
		            res[prop] = extend({}, res[prop]);
		        }
		    }
		    return res;
		}

		function Locale(config) {
		    if (config != null) {
		        this.set(config);
		    }
		}

		var keys;

		if (Object.keys) {
		    keys = Object.keys;
		} else {
		    keys = function (obj) {
		        var i, res = [];
		        for (i in obj) {
		            if (hasOwnProp(obj, i)) {
		                res.push(i);
		            }
		        }
		        return res;
		    };
		}

		var defaultCalendar = {
		    sameDay : '[Today at] LT',
		    nextDay : '[Tomorrow at] LT',
		    nextWeek : 'dddd [at] LT',
		    lastDay : '[Yesterday at] LT',
		    lastWeek : '[Last] dddd [at] LT',
		    sameElse : 'L'
		};

		function calendar (key, mom, now) {
		    var output = this._calendar[key] || this._calendar['sameElse'];
		    return isFunction(output) ? output.call(mom, now) : output;
		}

		var defaultLongDateFormat = {
		    LTS  : 'h:mm:ss A',
		    LT   : 'h:mm A',
		    L    : 'MM/DD/YYYY',
		    LL   : 'MMMM D, YYYY',
		    LLL  : 'MMMM D, YYYY h:mm A',
		    LLLL : 'dddd, MMMM D, YYYY h:mm A'
		};

		function longDateFormat (key) {
		    var format = this._longDateFormat[key],
		        formatUpper = this._longDateFormat[key.toUpperCase()];

		    if (format || !formatUpper) {
		        return format;
		    }

		    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
		        return val.slice(1);
		    });

		    return this._longDateFormat[key];
		}

		var defaultInvalidDate = 'Invalid date';

		function invalidDate () {
		    return this._invalidDate;
		}

		var defaultOrdinal = '%d';
		var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

		function ordinal (number) {
		    return this._ordinal.replace('%d', number);
		}

		var defaultRelativeTime = {
		    future : 'in %s',
		    past   : '%s ago',
		    s  : 'a few seconds',
		    ss : '%d seconds',
		    m  : 'a minute',
		    mm : '%d minutes',
		    h  : 'an hour',
		    hh : '%d hours',
		    d  : 'a day',
		    dd : '%d days',
		    M  : 'a month',
		    MM : '%d months',
		    y  : 'a year',
		    yy : '%d years'
		};

		function relativeTime (number, withoutSuffix, string, isFuture) {
		    var output = this._relativeTime[string];
		    return (isFunction(output)) ?
		        output(number, withoutSuffix, string, isFuture) :
		        output.replace(/%d/i, number);
		}

		function pastFuture (diff, output) {
		    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
		    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
		}

		var aliases = {};

		function addUnitAlias (unit, shorthand) {
		    var lowerCase = unit.toLowerCase();
		    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
		}

		function normalizeUnits(units) {
		    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
		}

		function normalizeObjectUnits(inputObject) {
		    var normalizedInput = {},
		        normalizedProp,
		        prop;

		    for (prop in inputObject) {
		        if (hasOwnProp(inputObject, prop)) {
		            normalizedProp = normalizeUnits(prop);
		            if (normalizedProp) {
		                normalizedInput[normalizedProp] = inputObject[prop];
		            }
		        }
		    }

		    return normalizedInput;
		}

		var priorities = {};

		function addUnitPriority(unit, priority) {
		    priorities[unit] = priority;
		}

		function getPrioritizedUnits(unitsObj) {
		    var units = [];
		    for (var u in unitsObj) {
		        units.push({unit: u, priority: priorities[u]});
		    }
		    units.sort(function (a, b) {
		        return a.priority - b.priority;
		    });
		    return units;
		}

		function zeroFill(number, targetLength, forceSign) {
		    var absNumber = '' + Math.abs(number),
		        zerosToFill = targetLength - absNumber.length,
		        sign = number >= 0;
		    return (sign ? (forceSign ? '+' : '') : '-') +
		        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
		}

		var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

		var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

		var formatFunctions = {};

		var formatTokenFunctions = {};

		// token:    'M'
		// padded:   ['MM', 2]
		// ordinal:  'Mo'
		// callback: function () { this.month() + 1 }
		function addFormatToken (token, padded, ordinal, callback) {
		    var func = callback;
		    if (typeof callback === 'string') {
		        func = function () {
		            return this[callback]();
		        };
		    }
		    if (token) {
		        formatTokenFunctions[token] = func;
		    }
		    if (padded) {
		        formatTokenFunctions[padded[0]] = function () {
		            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
		        };
		    }
		    if (ordinal) {
		        formatTokenFunctions[ordinal] = function () {
		            return this.localeData().ordinal(func.apply(this, arguments), token);
		        };
		    }
		}

		function removeFormattingTokens(input) {
		    if (input.match(/\[[\s\S]/)) {
		        return input.replace(/^\[|\]$/g, '');
		    }
		    return input.replace(/\\/g, '');
		}

		function makeFormatFunction(format) {
		    var array = format.match(formattingTokens), i, length;

		    for (i = 0, length = array.length; i < length; i++) {
		        if (formatTokenFunctions[array[i]]) {
		            array[i] = formatTokenFunctions[array[i]];
		        } else {
		            array[i] = removeFormattingTokens(array[i]);
		        }
		    }

		    return function (mom) {
		        var output = '', i;
		        for (i = 0; i < length; i++) {
		            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
		        }
		        return output;
		    };
		}

		// format date using native date object
		function formatMoment(m, format) {
		    if (!m.isValid()) {
		        return m.localeData().invalidDate();
		    }

		    format = expandFormat(format, m.localeData());
		    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

		    return formatFunctions[format](m);
		}

		function expandFormat(format, locale) {
		    var i = 5;

		    function replaceLongDateFormatTokens(input) {
		        return locale.longDateFormat(input) || input;
		    }

		    localFormattingTokens.lastIndex = 0;
		    while (i >= 0 && localFormattingTokens.test(format)) {
		        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
		        localFormattingTokens.lastIndex = 0;
		        i -= 1;
		    }

		    return format;
		}

		var match1         = /\d/;            //       0 - 9
		var match2         = /\d\d/;          //      00 - 99
		var match3         = /\d{3}/;         //     000 - 999
		var match4         = /\d{4}/;         //    0000 - 9999
		var match6         = /[+-]?\d{6}/;    // -999999 - 999999
		var match1to2      = /\d\d?/;         //       0 - 99
		var match3to4      = /\d\d\d\d?/;     //     999 - 9999
		var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
		var match1to3      = /\d{1,3}/;       //       0 - 999
		var match1to4      = /\d{1,4}/;       //       0 - 9999
		var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

		var matchUnsigned  = /\d+/;           //       0 - inf
		var matchSigned    = /[+-]?\d+/;      //    -inf - inf

		var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
		var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

		var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

		// any word (or two) characters or numbers including two/three word month in arabic.
		// includes scottish gaelic two word and hyphenated months
		var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

		var regexes = {};

		function addRegexToken (token, regex, strictRegex) {
		    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
		        return (isStrict && strictRegex) ? strictRegex : regex;
		    };
		}

		function getParseRegexForToken (token, config) {
		    if (!hasOwnProp(regexes, token)) {
		        return new RegExp(unescapeFormat(token));
		    }

		    return regexes[token](config._strict, config._locale);
		}

		// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
		function unescapeFormat(s) {
		    return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
		        return p1 || p2 || p3 || p4;
		    }));
		}

		function regexEscape(s) {
		    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
		}

		var tokens = {};

		function addParseToken (token, callback) {
		    var i, func = callback;
		    if (typeof token === 'string') {
		        token = [token];
		    }
		    if (isNumber(callback)) {
		        func = function (input, array) {
		            array[callback] = toInt(input);
		        };
		    }
		    for (i = 0; i < token.length; i++) {
		        tokens[token[i]] = func;
		    }
		}

		function addWeekParseToken (token, callback) {
		    addParseToken(token, function (input, array, config, token) {
		        config._w = config._w || {};
		        callback(input, config._w, config, token);
		    });
		}

		function addTimeToArrayFromToken(token, input, config) {
		    if (input != null && hasOwnProp(tokens, token)) {
		        tokens[token](input, config._a, config, token);
		    }
		}

		var YEAR = 0;
		var MONTH = 1;
		var DATE = 2;
		var HOUR = 3;
		var MINUTE = 4;
		var SECOND = 5;
		var MILLISECOND = 6;
		var WEEK = 7;
		var WEEKDAY = 8;

		// FORMATTING

		addFormatToken('Y', 0, 0, function () {
		    var y = this.year();
		    return y <= 9999 ? '' + y : '+' + y;
		});

		addFormatToken(0, ['YY', 2], 0, function () {
		    return this.year() % 100;
		});

		addFormatToken(0, ['YYYY',   4],       0, 'year');
		addFormatToken(0, ['YYYYY',  5],       0, 'year');
		addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

		// ALIASES

		addUnitAlias('year', 'y');

		// PRIORITIES

		addUnitPriority('year', 1);

		// PARSING

		addRegexToken('Y',      matchSigned);
		addRegexToken('YY',     match1to2, match2);
		addRegexToken('YYYY',   match1to4, match4);
		addRegexToken('YYYYY',  match1to6, match6);
		addRegexToken('YYYYYY', match1to6, match6);

		addParseToken(['YYYYY', 'YYYYYY'], YEAR);
		addParseToken('YYYY', function (input, array) {
		    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
		});
		addParseToken('YY', function (input, array) {
		    array[YEAR] = hooks.parseTwoDigitYear(input);
		});
		addParseToken('Y', function (input, array) {
		    array[YEAR] = parseInt(input, 10);
		});

		// HELPERS

		function daysInYear(year) {
		    return isLeapYear(year) ? 366 : 365;
		}

		function isLeapYear(year) {
		    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
		}

		// HOOKS

		hooks.parseTwoDigitYear = function (input) {
		    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
		};

		// MOMENTS

		var getSetYear = makeGetSet('FullYear', true);

		function getIsLeapYear () {
		    return isLeapYear(this.year());
		}

		function makeGetSet (unit, keepTime) {
		    return function (value) {
		        if (value != null) {
		            set$1(this, unit, value);
		            hooks.updateOffset(this, keepTime);
		            return this;
		        } else {
		            return get(this, unit);
		        }
		    };
		}

		function get (mom, unit) {
		    return mom.isValid() ?
		        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
		}

		function set$1 (mom, unit, value) {
		    if (mom.isValid() && !isNaN(value)) {
		        if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
		            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
		        }
		        else {
		            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
		        }
		    }
		}

		// MOMENTS

		function stringGet (units) {
		    units = normalizeUnits(units);
		    if (isFunction(this[units])) {
		        return this[units]();
		    }
		    return this;
		}


		function stringSet (units, value) {
		    if (typeof units === 'object') {
		        units = normalizeObjectUnits(units);
		        var prioritized = getPrioritizedUnits(units);
		        for (var i = 0; i < prioritized.length; i++) {
		            this[prioritized[i].unit](units[prioritized[i].unit]);
		        }
		    } else {
		        units = normalizeUnits(units);
		        if (isFunction(this[units])) {
		            return this[units](value);
		        }
		    }
		    return this;
		}

		function mod(n, x) {
		    return ((n % x) + x) % x;
		}

		var indexOf;

		if (Array.prototype.indexOf) {
		    indexOf = Array.prototype.indexOf;
		} else {
		    indexOf = function (o) {
		        // I know
		        var i;
		        for (i = 0; i < this.length; ++i) {
		            if (this[i] === o) {
		                return i;
		            }
		        }
		        return -1;
		    };
		}

		function daysInMonth(year, month) {
		    if (isNaN(year) || isNaN(month)) {
		        return NaN;
		    }
		    var modMonth = mod(month, 12);
		    year += (month - modMonth) / 12;
		    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
		}

		// FORMATTING

		addFormatToken('M', ['MM', 2], 'Mo', function () {
		    return this.month() + 1;
		});

		addFormatToken('MMM', 0, 0, function (format) {
		    return this.localeData().monthsShort(this, format);
		});

		addFormatToken('MMMM', 0, 0, function (format) {
		    return this.localeData().months(this, format);
		});

		// ALIASES

		addUnitAlias('month', 'M');

		// PRIORITY

		addUnitPriority('month', 8);

		// PARSING

		addRegexToken('M',    match1to2);
		addRegexToken('MM',   match1to2, match2);
		addRegexToken('MMM',  function (isStrict, locale) {
		    return locale.monthsShortRegex(isStrict);
		});
		addRegexToken('MMMM', function (isStrict, locale) {
		    return locale.monthsRegex(isStrict);
		});

		addParseToken(['M', 'MM'], function (input, array) {
		    array[MONTH] = toInt(input) - 1;
		});

		addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
		    var month = config._locale.monthsParse(input, token, config._strict);
		    // if we didn't find a month name, mark the date as invalid.
		    if (month != null) {
		        array[MONTH] = month;
		    } else {
		        getParsingFlags(config).invalidMonth = input;
		    }
		});

		// LOCALES

		var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
		var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
		function localeMonths (m, format) {
		    if (!m) {
		        return isArray(this._months) ? this._months :
		            this._months['standalone'];
		    }
		    return isArray(this._months) ? this._months[m.month()] :
		        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
		}

		var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
		function localeMonthsShort (m, format) {
		    if (!m) {
		        return isArray(this._monthsShort) ? this._monthsShort :
		            this._monthsShort['standalone'];
		    }
		    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
		        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
		}

		function handleStrictParse(monthName, format, strict) {
		    var i, ii, mom, llc = monthName.toLocaleLowerCase();
		    if (!this._monthsParse) {
		        // this is not used
		        this._monthsParse = [];
		        this._longMonthsParse = [];
		        this._shortMonthsParse = [];
		        for (i = 0; i < 12; ++i) {
		            mom = createUTC([2000, i]);
		            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
		            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
		        }
		    }

		    if (strict) {
		        if (format === 'MMM') {
		            ii = indexOf.call(this._shortMonthsParse, llc);
		            return ii !== -1 ? ii : null;
		        } else {
		            ii = indexOf.call(this._longMonthsParse, llc);
		            return ii !== -1 ? ii : null;
		        }
		    } else {
		        if (format === 'MMM') {
		            ii = indexOf.call(this._shortMonthsParse, llc);
		            if (ii !== -1) {
		                return ii;
		            }
		            ii = indexOf.call(this._longMonthsParse, llc);
		            return ii !== -1 ? ii : null;
		        } else {
		            ii = indexOf.call(this._longMonthsParse, llc);
		            if (ii !== -1) {
		                return ii;
		            }
		            ii = indexOf.call(this._shortMonthsParse, llc);
		            return ii !== -1 ? ii : null;
		        }
		    }
		}

		function localeMonthsParse (monthName, format, strict) {
		    var i, mom, regex;

		    if (this._monthsParseExact) {
		        return handleStrictParse.call(this, monthName, format, strict);
		    }

		    if (!this._monthsParse) {
		        this._monthsParse = [];
		        this._longMonthsParse = [];
		        this._shortMonthsParse = [];
		    }

		    // TODO: add sorting
		    // Sorting makes sure if one month (or abbr) is a prefix of another
		    // see sorting in computeMonthsParse
		    for (i = 0; i < 12; i++) {
		        // make the regex if we don't have it already
		        mom = createUTC([2000, i]);
		        if (strict && !this._longMonthsParse[i]) {
		            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
		            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
		        }
		        if (!strict && !this._monthsParse[i]) {
		            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
		            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
		        }
		        // test the regex
		        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
		            return i;
		        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
		            return i;
		        } else if (!strict && this._monthsParse[i].test(monthName)) {
		            return i;
		        }
		    }
		}

		// MOMENTS

		function setMonth (mom, value) {
		    var dayOfMonth;

		    if (!mom.isValid()) {
		        // No op
		        return mom;
		    }

		    if (typeof value === 'string') {
		        if (/^\d+$/.test(value)) {
		            value = toInt(value);
		        } else {
		            value = mom.localeData().monthsParse(value);
		            // TODO: Another silent failure?
		            if (!isNumber(value)) {
		                return mom;
		            }
		        }
		    }

		    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
		    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
		    return mom;
		}

		function getSetMonth (value) {
		    if (value != null) {
		        setMonth(this, value);
		        hooks.updateOffset(this, true);
		        return this;
		    } else {
		        return get(this, 'Month');
		    }
		}

		function getDaysInMonth () {
		    return daysInMonth(this.year(), this.month());
		}

		var defaultMonthsShortRegex = matchWord;
		function monthsShortRegex (isStrict) {
		    if (this._monthsParseExact) {
		        if (!hasOwnProp(this, '_monthsRegex')) {
		            computeMonthsParse.call(this);
		        }
		        if (isStrict) {
		            return this._monthsShortStrictRegex;
		        } else {
		            return this._monthsShortRegex;
		        }
		    } else {
		        if (!hasOwnProp(this, '_monthsShortRegex')) {
		            this._monthsShortRegex = defaultMonthsShortRegex;
		        }
		        return this._monthsShortStrictRegex && isStrict ?
		            this._monthsShortStrictRegex : this._monthsShortRegex;
		    }
		}

		var defaultMonthsRegex = matchWord;
		function monthsRegex (isStrict) {
		    if (this._monthsParseExact) {
		        if (!hasOwnProp(this, '_monthsRegex')) {
		            computeMonthsParse.call(this);
		        }
		        if (isStrict) {
		            return this._monthsStrictRegex;
		        } else {
		            return this._monthsRegex;
		        }
		    } else {
		        if (!hasOwnProp(this, '_monthsRegex')) {
		            this._monthsRegex = defaultMonthsRegex;
		        }
		        return this._monthsStrictRegex && isStrict ?
		            this._monthsStrictRegex : this._monthsRegex;
		    }
		}

		function computeMonthsParse () {
		    function cmpLenRev(a, b) {
		        return b.length - a.length;
		    }

		    var shortPieces = [], longPieces = [], mixedPieces = [],
		        i, mom;
		    for (i = 0; i < 12; i++) {
		        // make the regex if we don't have it already
		        mom = createUTC([2000, i]);
		        shortPieces.push(this.monthsShort(mom, ''));
		        longPieces.push(this.months(mom, ''));
		        mixedPieces.push(this.months(mom, ''));
		        mixedPieces.push(this.monthsShort(mom, ''));
		    }
		    // Sorting makes sure if one month (or abbr) is a prefix of another it
		    // will match the longer piece.
		    shortPieces.sort(cmpLenRev);
		    longPieces.sort(cmpLenRev);
		    mixedPieces.sort(cmpLenRev);
		    for (i = 0; i < 12; i++) {
		        shortPieces[i] = regexEscape(shortPieces[i]);
		        longPieces[i] = regexEscape(longPieces[i]);
		    }
		    for (i = 0; i < 24; i++) {
		        mixedPieces[i] = regexEscape(mixedPieces[i]);
		    }

		    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
		    this._monthsShortRegex = this._monthsRegex;
		    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
		    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
		}

		function createDate (y, m, d, h, M, s, ms) {
		    // can't just apply() to create a date:
		    // https://stackoverflow.com/q/181348
		    var date = new Date(y, m, d, h, M, s, ms);

		    // the date constructor remaps years 0-99 to 1900-1999
		    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
		        date.setFullYear(y);
		    }
		    return date;
		}

		function createUTCDate (y) {
		    var date = new Date(Date.UTC.apply(null, arguments));

		    // the Date.UTC function remaps years 0-99 to 1900-1999
		    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
		        date.setUTCFullYear(y);
		    }
		    return date;
		}

		// start-of-first-week - start-of-year
		function firstWeekOffset(year, dow, doy) {
		    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
		        fwd = 7 + dow - doy,
		        // first-week day local weekday -- which local weekday is fwd
		        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

		    return -fwdlw + fwd - 1;
		}

		// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
		function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
		    var localWeekday = (7 + weekday - dow) % 7,
		        weekOffset = firstWeekOffset(year, dow, doy),
		        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
		        resYear, resDayOfYear;

		    if (dayOfYear <= 0) {
		        resYear = year - 1;
		        resDayOfYear = daysInYear(resYear) + dayOfYear;
		    } else if (dayOfYear > daysInYear(year)) {
		        resYear = year + 1;
		        resDayOfYear = dayOfYear - daysInYear(year);
		    } else {
		        resYear = year;
		        resDayOfYear = dayOfYear;
		    }

		    return {
		        year: resYear,
		        dayOfYear: resDayOfYear
		    };
		}

		function weekOfYear(mom, dow, doy) {
		    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
		        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
		        resWeek, resYear;

		    if (week < 1) {
		        resYear = mom.year() - 1;
		        resWeek = week + weeksInYear(resYear, dow, doy);
		    } else if (week > weeksInYear(mom.year(), dow, doy)) {
		        resWeek = week - weeksInYear(mom.year(), dow, doy);
		        resYear = mom.year() + 1;
		    } else {
		        resYear = mom.year();
		        resWeek = week;
		    }

		    return {
		        week: resWeek,
		        year: resYear
		    };
		}

		function weeksInYear(year, dow, doy) {
		    var weekOffset = firstWeekOffset(year, dow, doy),
		        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
		    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
		}

		// FORMATTING

		addFormatToken('w', ['ww', 2], 'wo', 'week');
		addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

		// ALIASES

		addUnitAlias('week', 'w');
		addUnitAlias('isoWeek', 'W');

		// PRIORITIES

		addUnitPriority('week', 5);
		addUnitPriority('isoWeek', 5);

		// PARSING

		addRegexToken('w',  match1to2);
		addRegexToken('ww', match1to2, match2);
		addRegexToken('W',  match1to2);
		addRegexToken('WW', match1to2, match2);

		addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
		    week[token.substr(0, 1)] = toInt(input);
		});

		// HELPERS

		// LOCALES

		function localeWeek (mom) {
		    return weekOfYear(mom, this._week.dow, this._week.doy).week;
		}

		var defaultLocaleWeek = {
		    dow : 0, // Sunday is the first day of the week.
		    doy : 6  // The week that contains Jan 1st is the first week of the year.
		};

		function localeFirstDayOfWeek () {
		    return this._week.dow;
		}

		function localeFirstDayOfYear () {
		    return this._week.doy;
		}

		// MOMENTS

		function getSetWeek (input) {
		    var week = this.localeData().week(this);
		    return input == null ? week : this.add((input - week) * 7, 'd');
		}

		function getSetISOWeek (input) {
		    var week = weekOfYear(this, 1, 4).week;
		    return input == null ? week : this.add((input - week) * 7, 'd');
		}

		// FORMATTING

		addFormatToken('d', 0, 'do', 'day');

		addFormatToken('dd', 0, 0, function (format) {
		    return this.localeData().weekdaysMin(this, format);
		});

		addFormatToken('ddd', 0, 0, function (format) {
		    return this.localeData().weekdaysShort(this, format);
		});

		addFormatToken('dddd', 0, 0, function (format) {
		    return this.localeData().weekdays(this, format);
		});

		addFormatToken('e', 0, 0, 'weekday');
		addFormatToken('E', 0, 0, 'isoWeekday');

		// ALIASES

		addUnitAlias('day', 'd');
		addUnitAlias('weekday', 'e');
		addUnitAlias('isoWeekday', 'E');

		// PRIORITY
		addUnitPriority('day', 11);
		addUnitPriority('weekday', 11);
		addUnitPriority('isoWeekday', 11);

		// PARSING

		addRegexToken('d',    match1to2);
		addRegexToken('e',    match1to2);
		addRegexToken('E',    match1to2);
		addRegexToken('dd',   function (isStrict, locale) {
		    return locale.weekdaysMinRegex(isStrict);
		});
		addRegexToken('ddd',   function (isStrict, locale) {
		    return locale.weekdaysShortRegex(isStrict);
		});
		addRegexToken('dddd',   function (isStrict, locale) {
		    return locale.weekdaysRegex(isStrict);
		});

		addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
		    var weekday = config._locale.weekdaysParse(input, token, config._strict);
		    // if we didn't get a weekday name, mark the date as invalid
		    if (weekday != null) {
		        week.d = weekday;
		    } else {
		        getParsingFlags(config).invalidWeekday = input;
		    }
		});

		addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
		    week[token] = toInt(input);
		});

		// HELPERS

		function parseWeekday(input, locale) {
		    if (typeof input !== 'string') {
		        return input;
		    }

		    if (!isNaN(input)) {
		        return parseInt(input, 10);
		    }

		    input = locale.weekdaysParse(input);
		    if (typeof input === 'number') {
		        return input;
		    }

		    return null;
		}

		function parseIsoWeekday(input, locale) {
		    if (typeof input === 'string') {
		        return locale.weekdaysParse(input) % 7 || 7;
		    }
		    return isNaN(input) ? null : input;
		}

		// LOCALES

		var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
		function localeWeekdays (m, format) {
		    if (!m) {
		        return isArray(this._weekdays) ? this._weekdays :
		            this._weekdays['standalone'];
		    }
		    return isArray(this._weekdays) ? this._weekdays[m.day()] :
		        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
		}

		var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
		function localeWeekdaysShort (m) {
		    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
		}

		var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
		function localeWeekdaysMin (m) {
		    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
		}

		function handleStrictParse$1(weekdayName, format, strict) {
		    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
		    if (!this._weekdaysParse) {
		        this._weekdaysParse = [];
		        this._shortWeekdaysParse = [];
		        this._minWeekdaysParse = [];

		        for (i = 0; i < 7; ++i) {
		            mom = createUTC([2000, 1]).day(i);
		            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
		            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
		            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
		        }
		    }

		    if (strict) {
		        if (format === 'dddd') {
		            ii = indexOf.call(this._weekdaysParse, llc);
		            return ii !== -1 ? ii : null;
		        } else if (format === 'ddd') {
		            ii = indexOf.call(this._shortWeekdaysParse, llc);
		            return ii !== -1 ? ii : null;
		        } else {
		            ii = indexOf.call(this._minWeekdaysParse, llc);
		            return ii !== -1 ? ii : null;
		        }
		    } else {
		        if (format === 'dddd') {
		            ii = indexOf.call(this._weekdaysParse, llc);
		            if (ii !== -1) {
		                return ii;
		            }
		            ii = indexOf.call(this._shortWeekdaysParse, llc);
		            if (ii !== -1) {
		                return ii;
		            }
		            ii = indexOf.call(this._minWeekdaysParse, llc);
		            return ii !== -1 ? ii : null;
		        } else if (format === 'ddd') {
		            ii = indexOf.call(this._shortWeekdaysParse, llc);
		            if (ii !== -1) {
		                return ii;
		            }
		            ii = indexOf.call(this._weekdaysParse, llc);
		            if (ii !== -1) {
		                return ii;
		            }
		            ii = indexOf.call(this._minWeekdaysParse, llc);
		            return ii !== -1 ? ii : null;
		        } else {
		            ii = indexOf.call(this._minWeekdaysParse, llc);
		            if (ii !== -1) {
		                return ii;
		            }
		            ii = indexOf.call(this._weekdaysParse, llc);
		            if (ii !== -1) {
		                return ii;
		            }
		            ii = indexOf.call(this._shortWeekdaysParse, llc);
		            return ii !== -1 ? ii : null;
		        }
		    }
		}

		function localeWeekdaysParse (weekdayName, format, strict) {
		    var i, mom, regex;

		    if (this._weekdaysParseExact) {
		        return handleStrictParse$1.call(this, weekdayName, format, strict);
		    }

		    if (!this._weekdaysParse) {
		        this._weekdaysParse = [];
		        this._minWeekdaysParse = [];
		        this._shortWeekdaysParse = [];
		        this._fullWeekdaysParse = [];
		    }

		    for (i = 0; i < 7; i++) {
		        // make the regex if we don't have it already

		        mom = createUTC([2000, 1]).day(i);
		        if (strict && !this._fullWeekdaysParse[i]) {
		            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
		            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
		            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
		        }
		        if (!this._weekdaysParse[i]) {
		            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
		            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
		        }
		        // test the regex
		        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
		            return i;
		        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
		            return i;
		        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
		            return i;
		        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
		            return i;
		        }
		    }
		}

		// MOMENTS

		function getSetDayOfWeek (input) {
		    if (!this.isValid()) {
		        return input != null ? this : NaN;
		    }
		    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
		    if (input != null) {
		        input = parseWeekday(input, this.localeData());
		        return this.add(input - day, 'd');
		    } else {
		        return day;
		    }
		}

		function getSetLocaleDayOfWeek (input) {
		    if (!this.isValid()) {
		        return input != null ? this : NaN;
		    }
		    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
		    return input == null ? weekday : this.add(input - weekday, 'd');
		}

		function getSetISODayOfWeek (input) {
		    if (!this.isValid()) {
		        return input != null ? this : NaN;
		    }

		    // behaves the same as moment#day except
		    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
		    // as a setter, sunday should belong to the previous week.

		    if (input != null) {
		        var weekday = parseIsoWeekday(input, this.localeData());
		        return this.day(this.day() % 7 ? weekday : weekday - 7);
		    } else {
		        return this.day() || 7;
		    }
		}

		var defaultWeekdaysRegex = matchWord;
		function weekdaysRegex (isStrict) {
		    if (this._weekdaysParseExact) {
		        if (!hasOwnProp(this, '_weekdaysRegex')) {
		            computeWeekdaysParse.call(this);
		        }
		        if (isStrict) {
		            return this._weekdaysStrictRegex;
		        } else {
		            return this._weekdaysRegex;
		        }
		    } else {
		        if (!hasOwnProp(this, '_weekdaysRegex')) {
		            this._weekdaysRegex = defaultWeekdaysRegex;
		        }
		        return this._weekdaysStrictRegex && isStrict ?
		            this._weekdaysStrictRegex : this._weekdaysRegex;
		    }
		}

		var defaultWeekdaysShortRegex = matchWord;
		function weekdaysShortRegex (isStrict) {
		    if (this._weekdaysParseExact) {
		        if (!hasOwnProp(this, '_weekdaysRegex')) {
		            computeWeekdaysParse.call(this);
		        }
		        if (isStrict) {
		            return this._weekdaysShortStrictRegex;
		        } else {
		            return this._weekdaysShortRegex;
		        }
		    } else {
		        if (!hasOwnProp(this, '_weekdaysShortRegex')) {
		            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
		        }
		        return this._weekdaysShortStrictRegex && isStrict ?
		            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
		    }
		}

		var defaultWeekdaysMinRegex = matchWord;
		function weekdaysMinRegex (isStrict) {
		    if (this._weekdaysParseExact) {
		        if (!hasOwnProp(this, '_weekdaysRegex')) {
		            computeWeekdaysParse.call(this);
		        }
		        if (isStrict) {
		            return this._weekdaysMinStrictRegex;
		        } else {
		            return this._weekdaysMinRegex;
		        }
		    } else {
		        if (!hasOwnProp(this, '_weekdaysMinRegex')) {
		            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
		        }
		        return this._weekdaysMinStrictRegex && isStrict ?
		            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
		    }
		}


		function computeWeekdaysParse () {
		    function cmpLenRev(a, b) {
		        return b.length - a.length;
		    }

		    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
		        i, mom, minp, shortp, longp;
		    for (i = 0; i < 7; i++) {
		        // make the regex if we don't have it already
		        mom = createUTC([2000, 1]).day(i);
		        minp = this.weekdaysMin(mom, '');
		        shortp = this.weekdaysShort(mom, '');
		        longp = this.weekdays(mom, '');
		        minPieces.push(minp);
		        shortPieces.push(shortp);
		        longPieces.push(longp);
		        mixedPieces.push(minp);
		        mixedPieces.push(shortp);
		        mixedPieces.push(longp);
		    }
		    // Sorting makes sure if one weekday (or abbr) is a prefix of another it
		    // will match the longer piece.
		    minPieces.sort(cmpLenRev);
		    shortPieces.sort(cmpLenRev);
		    longPieces.sort(cmpLenRev);
		    mixedPieces.sort(cmpLenRev);
		    for (i = 0; i < 7; i++) {
		        shortPieces[i] = regexEscape(shortPieces[i]);
		        longPieces[i] = regexEscape(longPieces[i]);
		        mixedPieces[i] = regexEscape(mixedPieces[i]);
		    }

		    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
		    this._weekdaysShortRegex = this._weekdaysRegex;
		    this._weekdaysMinRegex = this._weekdaysRegex;

		    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
		    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
		    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
		}

		// FORMATTING

		function hFormat() {
		    return this.hours() % 12 || 12;
		}

		function kFormat() {
		    return this.hours() || 24;
		}

		addFormatToken('H', ['HH', 2], 0, 'hour');
		addFormatToken('h', ['hh', 2], 0, hFormat);
		addFormatToken('k', ['kk', 2], 0, kFormat);

		addFormatToken('hmm', 0, 0, function () {
		    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
		});

		addFormatToken('hmmss', 0, 0, function () {
		    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
		        zeroFill(this.seconds(), 2);
		});

		addFormatToken('Hmm', 0, 0, function () {
		    return '' + this.hours() + zeroFill(this.minutes(), 2);
		});

		addFormatToken('Hmmss', 0, 0, function () {
		    return '' + this.hours() + zeroFill(this.minutes(), 2) +
		        zeroFill(this.seconds(), 2);
		});

		function meridiem (token, lowercase) {
		    addFormatToken(token, 0, 0, function () {
		        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
		    });
		}

		meridiem('a', true);
		meridiem('A', false);

		// ALIASES

		addUnitAlias('hour', 'h');

		// PRIORITY
		addUnitPriority('hour', 13);

		// PARSING

		function matchMeridiem (isStrict, locale) {
		    return locale._meridiemParse;
		}

		addRegexToken('a',  matchMeridiem);
		addRegexToken('A',  matchMeridiem);
		addRegexToken('H',  match1to2);
		addRegexToken('h',  match1to2);
		addRegexToken('k',  match1to2);
		addRegexToken('HH', match1to2, match2);
		addRegexToken('hh', match1to2, match2);
		addRegexToken('kk', match1to2, match2);

		addRegexToken('hmm', match3to4);
		addRegexToken('hmmss', match5to6);
		addRegexToken('Hmm', match3to4);
		addRegexToken('Hmmss', match5to6);

		addParseToken(['H', 'HH'], HOUR);
		addParseToken(['k', 'kk'], function (input, array, config) {
		    var kInput = toInt(input);
		    array[HOUR] = kInput === 24 ? 0 : kInput;
		});
		addParseToken(['a', 'A'], function (input, array, config) {
		    config._isPm = config._locale.isPM(input);
		    config._meridiem = input;
		});
		addParseToken(['h', 'hh'], function (input, array, config) {
		    array[HOUR] = toInt(input);
		    getParsingFlags(config).bigHour = true;
		});
		addParseToken('hmm', function (input, array, config) {
		    var pos = input.length - 2;
		    array[HOUR] = toInt(input.substr(0, pos));
		    array[MINUTE] = toInt(input.substr(pos));
		    getParsingFlags(config).bigHour = true;
		});
		addParseToken('hmmss', function (input, array, config) {
		    var pos1 = input.length - 4;
		    var pos2 = input.length - 2;
		    array[HOUR] = toInt(input.substr(0, pos1));
		    array[MINUTE] = toInt(input.substr(pos1, 2));
		    array[SECOND] = toInt(input.substr(pos2));
		    getParsingFlags(config).bigHour = true;
		});
		addParseToken('Hmm', function (input, array, config) {
		    var pos = input.length - 2;
		    array[HOUR] = toInt(input.substr(0, pos));
		    array[MINUTE] = toInt(input.substr(pos));
		});
		addParseToken('Hmmss', function (input, array, config) {
		    var pos1 = input.length - 4;
		    var pos2 = input.length - 2;
		    array[HOUR] = toInt(input.substr(0, pos1));
		    array[MINUTE] = toInt(input.substr(pos1, 2));
		    array[SECOND] = toInt(input.substr(pos2));
		});

		// LOCALES

		function localeIsPM (input) {
		    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
		    // Using charAt should be more compatible.
		    return ((input + '').toLowerCase().charAt(0) === 'p');
		}

		var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
		function localeMeridiem (hours, minutes, isLower) {
		    if (hours > 11) {
		        return isLower ? 'pm' : 'PM';
		    } else {
		        return isLower ? 'am' : 'AM';
		    }
		}


		// MOMENTS

		// Setting the hour should keep the time, because the user explicitly
		// specified which hour he wants. So trying to maintain the same hour (in
		// a new timezone) makes sense. Adding/subtracting hours does not follow
		// this rule.
		var getSetHour = makeGetSet('Hours', true);

		var baseConfig = {
		    calendar: defaultCalendar,
		    longDateFormat: defaultLongDateFormat,
		    invalidDate: defaultInvalidDate,
		    ordinal: defaultOrdinal,
		    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
		    relativeTime: defaultRelativeTime,

		    months: defaultLocaleMonths,
		    monthsShort: defaultLocaleMonthsShort,

		    week: defaultLocaleWeek,

		    weekdays: defaultLocaleWeekdays,
		    weekdaysMin: defaultLocaleWeekdaysMin,
		    weekdaysShort: defaultLocaleWeekdaysShort,

		    meridiemParse: defaultLocaleMeridiemParse
		};

		// internal storage for locale config files
		var locales = {};
		var localeFamilies = {};
		var globalLocale;

		function normalizeLocale(key) {
		    return key ? key.toLowerCase().replace('_', '-') : key;
		}

		// pick the locale from the array
		// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
		// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
		function chooseLocale(names) {
		    var i = 0, j, next, locale, split;

		    while (i < names.length) {
		        split = normalizeLocale(names[i]).split('-');
		        j = split.length;
		        next = normalizeLocale(names[i + 1]);
		        next = next ? next.split('-') : null;
		        while (j > 0) {
		            locale = loadLocale(split.slice(0, j).join('-'));
		            if (locale) {
		                return locale;
		            }
		            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
		                //the next array item is better than a shallower substring of this one
		                break;
		            }
		            j--;
		        }
		        i++;
		    }
		    return globalLocale;
		}

		function loadLocale(name) {
		    var oldLocale = null;
		    // TODO: Find a better way to register and load all the locales in Node
		    if (!locales[name] && (typeof module !== 'undefined') &&
		            module && module.exports) {
		        try {
		            oldLocale = globalLocale._abbr;
		            var aliasedRequire = require;
		            aliasedRequire('./locale/' + name);
		            getSetGlobalLocale(oldLocale);
		        } catch (e) {}
		    }
		    return locales[name];
		}

		// This function will load locale and then set the global locale.  If
		// no arguments are passed in, it will simply return the current global
		// locale key.
		function getSetGlobalLocale (key, values) {
		    var data;
		    if (key) {
		        if (isUndefined(values)) {
		            data = getLocale(key);
		        }
		        else {
		            data = defineLocale(key, values);
		        }

		        if (data) {
		            // moment.duration._locale = moment._locale = data;
		            globalLocale = data;
		        }
		        else {
		            if ((typeof console !==  'undefined') && console.warn) {
		                //warn user if arguments are passed but the locale could not be set
		                console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
		            }
		        }
		    }

		    return globalLocale._abbr;
		}

		function defineLocale (name, config) {
		    if (config !== null) {
		        var locale, parentConfig = baseConfig;
		        config.abbr = name;
		        if (locales[name] != null) {
		            deprecateSimple('defineLocaleOverride',
		                    'use moment.updateLocale(localeName, config) to change ' +
		                    'an existing locale. moment.defineLocale(localeName, ' +
		                    'config) should only be used for creating a new locale ' +
		                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
		            parentConfig = locales[name]._config;
		        } else if (config.parentLocale != null) {
		            if (locales[config.parentLocale] != null) {
		                parentConfig = locales[config.parentLocale]._config;
		            } else {
		                locale = loadLocale(config.parentLocale);
		                if (locale != null) {
		                    parentConfig = locale._config;
		                } else {
		                    if (!localeFamilies[config.parentLocale]) {
		                        localeFamilies[config.parentLocale] = [];
		                    }
		                    localeFamilies[config.parentLocale].push({
		                        name: name,
		                        config: config
		                    });
		                    return null;
		                }
		            }
		        }
		        locales[name] = new Locale(mergeConfigs(parentConfig, config));

		        if (localeFamilies[name]) {
		            localeFamilies[name].forEach(function (x) {
		                defineLocale(x.name, x.config);
		            });
		        }

		        // backwards compat for now: also set the locale
		        // make sure we set the locale AFTER all child locales have been
		        // created, so we won't end up with the child locale set.
		        getSetGlobalLocale(name);


		        return locales[name];
		    } else {
		        // useful for testing
		        delete locales[name];
		        return null;
		    }
		}

		function updateLocale(name, config) {
		    if (config != null) {
		        var locale, tmpLocale, parentConfig = baseConfig;
		        // MERGE
		        tmpLocale = loadLocale(name);
		        if (tmpLocale != null) {
		            parentConfig = tmpLocale._config;
		        }
		        config = mergeConfigs(parentConfig, config);
		        locale = new Locale(config);
		        locale.parentLocale = locales[name];
		        locales[name] = locale;

		        // backwards compat for now: also set the locale
		        getSetGlobalLocale(name);
		    } else {
		        // pass null for config to unupdate, useful for tests
		        if (locales[name] != null) {
		            if (locales[name].parentLocale != null) {
		                locales[name] = locales[name].parentLocale;
		            } else if (locales[name] != null) {
		                delete locales[name];
		            }
		        }
		    }
		    return locales[name];
		}

		// returns locale data
		function getLocale (key) {
		    var locale;

		    if (key && key._locale && key._locale._abbr) {
		        key = key._locale._abbr;
		    }

		    if (!key) {
		        return globalLocale;
		    }

		    if (!isArray(key)) {
		        //short-circuit everything else
		        locale = loadLocale(key);
		        if (locale) {
		            return locale;
		        }
		        key = [key];
		    }

		    return chooseLocale(key);
		}

		function listLocales() {
		    return keys(locales);
		}

		function checkOverflow (m) {
		    var overflow;
		    var a = m._a;

		    if (a && getParsingFlags(m).overflow === -2) {
		        overflow =
		            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
		            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
		            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
		            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
		            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
		            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
		            -1;

		        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
		            overflow = DATE;
		        }
		        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
		            overflow = WEEK;
		        }
		        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
		            overflow = WEEKDAY;
		        }

		        getParsingFlags(m).overflow = overflow;
		    }

		    return m;
		}

		// Pick the first defined of two or three arguments.
		function defaults(a, b, c) {
		    if (a != null) {
		        return a;
		    }
		    if (b != null) {
		        return b;
		    }
		    return c;
		}

		function currentDateArray(config) {
		    // hooks is actually the exported moment object
		    var nowValue = new Date(hooks.now());
		    if (config._useUTC) {
		        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
		    }
		    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
		}

		// convert an array to a date.
		// the array should mirror the parameters below
		// note: all values past the year are optional and will default to the lowest possible value.
		// [year, month, day , hour, minute, second, millisecond]
		function configFromArray (config) {
		    var i, date, input = [], currentDate, expectedWeekday, yearToUse;

		    if (config._d) {
		        return;
		    }

		    currentDate = currentDateArray(config);

		    //compute day of the year from weeks and weekdays
		    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
		        dayOfYearFromWeekInfo(config);
		    }

		    //if the day of the year is set, figure out what it is
		    if (config._dayOfYear != null) {
		        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

		        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
		            getParsingFlags(config)._overflowDayOfYear = true;
		        }

		        date = createUTCDate(yearToUse, 0, config._dayOfYear);
		        config._a[MONTH] = date.getUTCMonth();
		        config._a[DATE] = date.getUTCDate();
		    }

		    // Default to current date.
		    // * if no year, month, day of month are given, default to today
		    // * if day of month is given, default month and year
		    // * if month is given, default only year
		    // * if year is given, don't default anything
		    for (i = 0; i < 3 && config._a[i] == null; ++i) {
		        config._a[i] = input[i] = currentDate[i];
		    }

		    // Zero out whatever was not defaulted, including time
		    for (; i < 7; i++) {
		        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
		    }

		    // Check for 24:00:00.000
		    if (config._a[HOUR] === 24 &&
		            config._a[MINUTE] === 0 &&
		            config._a[SECOND] === 0 &&
		            config._a[MILLISECOND] === 0) {
		        config._nextDay = true;
		        config._a[HOUR] = 0;
		    }

		    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
		    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

		    // Apply timezone offset from input. The actual utcOffset can be changed
		    // with parseZone.
		    if (config._tzm != null) {
		        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
		    }

		    if (config._nextDay) {
		        config._a[HOUR] = 24;
		    }

		    // check for mismatching day of week
		    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
		        getParsingFlags(config).weekdayMismatch = true;
		    }
		}

		function dayOfYearFromWeekInfo(config) {
		    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

		    w = config._w;
		    if (w.GG != null || w.W != null || w.E != null) {
		        dow = 1;
		        doy = 4;

		        // TODO: We need to take the current isoWeekYear, but that depends on
		        // how we interpret now (local, utc, fixed offset). So create
		        // a now version of current config (take local/utc/offset flags, and
		        // create now).
		        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
		        week = defaults(w.W, 1);
		        weekday = defaults(w.E, 1);
		        if (weekday < 1 || weekday > 7) {
		            weekdayOverflow = true;
		        }
		    } else {
		        dow = config._locale._week.dow;
		        doy = config._locale._week.doy;

		        var curWeek = weekOfYear(createLocal(), dow, doy);

		        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

		        // Default to current week.
		        week = defaults(w.w, curWeek.week);

		        if (w.d != null) {
		            // weekday -- low day numbers are considered next week
		            weekday = w.d;
		            if (weekday < 0 || weekday > 6) {
		                weekdayOverflow = true;
		            }
		        } else if (w.e != null) {
		            // local weekday -- counting starts from begining of week
		            weekday = w.e + dow;
		            if (w.e < 0 || w.e > 6) {
		                weekdayOverflow = true;
		            }
		        } else {
		            // default to begining of week
		            weekday = dow;
		        }
		    }
		    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
		        getParsingFlags(config)._overflowWeeks = true;
		    } else if (weekdayOverflow != null) {
		        getParsingFlags(config)._overflowWeekday = true;
		    } else {
		        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
		        config._a[YEAR] = temp.year;
		        config._dayOfYear = temp.dayOfYear;
		    }
		}

		// iso 8601 regex
		// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
		var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
		var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

		var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

		var isoDates = [
		    ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
		    ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
		    ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
		    ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
		    ['YYYY-DDD', /\d{4}-\d{3}/],
		    ['YYYY-MM', /\d{4}-\d\d/, false],
		    ['YYYYYYMMDD', /[+-]\d{10}/],
		    ['YYYYMMDD', /\d{8}/],
		    // YYYYMM is NOT allowed by the standard
		    ['GGGG[W]WWE', /\d{4}W\d{3}/],
		    ['GGGG[W]WW', /\d{4}W\d{2}/, false],
		    ['YYYYDDD', /\d{7}/]
		];

		// iso time formats and regexes
		var isoTimes = [
		    ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
		    ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
		    ['HH:mm:ss', /\d\d:\d\d:\d\d/],
		    ['HH:mm', /\d\d:\d\d/],
		    ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
		    ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
		    ['HHmmss', /\d\d\d\d\d\d/],
		    ['HHmm', /\d\d\d\d/],
		    ['HH', /\d\d/]
		];

		var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

		// date from iso format
		function configFromISO(config) {
		    var i, l,
		        string = config._i,
		        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
		        allowTime, dateFormat, timeFormat, tzFormat;

		    if (match) {
		        getParsingFlags(config).iso = true;

		        for (i = 0, l = isoDates.length; i < l; i++) {
		            if (isoDates[i][1].exec(match[1])) {
		                dateFormat = isoDates[i][0];
		                allowTime = isoDates[i][2] !== false;
		                break;
		            }
		        }
		        if (dateFormat == null) {
		            config._isValid = false;
		            return;
		        }
		        if (match[3]) {
		            for (i = 0, l = isoTimes.length; i < l; i++) {
		                if (isoTimes[i][1].exec(match[3])) {
		                    // match[2] should be 'T' or space
		                    timeFormat = (match[2] || ' ') + isoTimes[i][0];
		                    break;
		                }
		            }
		            if (timeFormat == null) {
		                config._isValid = false;
		                return;
		            }
		        }
		        if (!allowTime && timeFormat != null) {
		            config._isValid = false;
		            return;
		        }
		        if (match[4]) {
		            if (tzRegex.exec(match[4])) {
		                tzFormat = 'Z';
		            } else {
		                config._isValid = false;
		                return;
		            }
		        }
		        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
		        configFromStringAndFormat(config);
		    } else {
		        config._isValid = false;
		    }
		}

		// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
		var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

		function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
		    var result = [
		        untruncateYear(yearStr),
		        defaultLocaleMonthsShort.indexOf(monthStr),
		        parseInt(dayStr, 10),
		        parseInt(hourStr, 10),
		        parseInt(minuteStr, 10)
		    ];

		    if (secondStr) {
		        result.push(parseInt(secondStr, 10));
		    }

		    return result;
		}

		function untruncateYear(yearStr) {
		    var year = parseInt(yearStr, 10);
		    if (year <= 49) {
		        return 2000 + year;
		    } else if (year <= 999) {
		        return 1900 + year;
		    }
		    return year;
		}

		function preprocessRFC2822(s) {
		    // Remove comments and folding whitespace and replace multiple-spaces with a single space
		    return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').trim();
		}

		function checkWeekday(weekdayStr, parsedInput, config) {
		    if (weekdayStr) {
		        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
		        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
		            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
		        if (weekdayProvided !== weekdayActual) {
		            getParsingFlags(config).weekdayMismatch = true;
		            config._isValid = false;
		            return false;
		        }
		    }
		    return true;
		}

		var obsOffsets = {
		    UT: 0,
		    GMT: 0,
		    EDT: -4 * 60,
		    EST: -5 * 60,
		    CDT: -5 * 60,
		    CST: -6 * 60,
		    MDT: -6 * 60,
		    MST: -7 * 60,
		    PDT: -7 * 60,
		    PST: -8 * 60
		};

		function calculateOffset(obsOffset, militaryOffset, numOffset) {
		    if (obsOffset) {
		        return obsOffsets[obsOffset];
		    } else if (militaryOffset) {
		        // the only allowed military tz is Z
		        return 0;
		    } else {
		        var hm = parseInt(numOffset, 10);
		        var m = hm % 100, h = (hm - m) / 100;
		        return h * 60 + m;
		    }
		}

		// date and time from ref 2822 format
		function configFromRFC2822(config) {
		    var match = rfc2822.exec(preprocessRFC2822(config._i));
		    if (match) {
		        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
		        if (!checkWeekday(match[1], parsedArray, config)) {
		            return;
		        }

		        config._a = parsedArray;
		        config._tzm = calculateOffset(match[8], match[9], match[10]);

		        config._d = createUTCDate.apply(null, config._a);
		        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

		        getParsingFlags(config).rfc2822 = true;
		    } else {
		        config._isValid = false;
		    }
		}

		// date from iso format or fallback
		function configFromString(config) {
		    var matched = aspNetJsonRegex.exec(config._i);

		    if (matched !== null) {
		        config._d = new Date(+matched[1]);
		        return;
		    }

		    configFromISO(config);
		    if (config._isValid === false) {
		        delete config._isValid;
		    } else {
		        return;
		    }

		    configFromRFC2822(config);
		    if (config._isValid === false) {
		        delete config._isValid;
		    } else {
		        return;
		    }

		    // Final attempt, use Input Fallback
		    hooks.createFromInputFallback(config);
		}

		hooks.createFromInputFallback = deprecate(
		    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
		    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
		    'discouraged and will be removed in an upcoming major release. Please refer to ' +
		    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
		    function (config) {
		        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
		    }
		);

		// constant that refers to the ISO standard
		hooks.ISO_8601 = function () {};

		// constant that refers to the RFC 2822 form
		hooks.RFC_2822 = function () {};

		// date from string and format string
		function configFromStringAndFormat(config) {
		    // TODO: Move this to another part of the creation flow to prevent circular deps
		    if (config._f === hooks.ISO_8601) {
		        configFromISO(config);
		        return;
		    }
		    if (config._f === hooks.RFC_2822) {
		        configFromRFC2822(config);
		        return;
		    }
		    config._a = [];
		    getParsingFlags(config).empty = true;

		    // This array is used to make a Date, either with `new Date` or `Date.UTC`
		    var string = '' + config._i,
		        i, parsedInput, tokens, token, skipped,
		        stringLength = string.length,
		        totalParsedInputLength = 0;

		    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

		    for (i = 0; i < tokens.length; i++) {
		        token = tokens[i];
		        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
		        // console.log('token', token, 'parsedInput', parsedInput,
		        //         'regex', getParseRegexForToken(token, config));
		        if (parsedInput) {
		            skipped = string.substr(0, string.indexOf(parsedInput));
		            if (skipped.length > 0) {
		                getParsingFlags(config).unusedInput.push(skipped);
		            }
		            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
		            totalParsedInputLength += parsedInput.length;
		        }
		        // don't parse if it's not a known token
		        if (formatTokenFunctions[token]) {
		            if (parsedInput) {
		                getParsingFlags(config).empty = false;
		            }
		            else {
		                getParsingFlags(config).unusedTokens.push(token);
		            }
		            addTimeToArrayFromToken(token, parsedInput, config);
		        }
		        else if (config._strict && !parsedInput) {
		            getParsingFlags(config).unusedTokens.push(token);
		        }
		    }

		    // add remaining unparsed input length to the string
		    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
		    if (string.length > 0) {
		        getParsingFlags(config).unusedInput.push(string);
		    }

		    // clear _12h flag if hour is <= 12
		    if (config._a[HOUR] <= 12 &&
		        getParsingFlags(config).bigHour === true &&
		        config._a[HOUR] > 0) {
		        getParsingFlags(config).bigHour = undefined;
		    }

		    getParsingFlags(config).parsedDateParts = config._a.slice(0);
		    getParsingFlags(config).meridiem = config._meridiem;
		    // handle meridiem
		    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

		    configFromArray(config);
		    checkOverflow(config);
		}


		function meridiemFixWrap (locale, hour, meridiem) {
		    var isPm;

		    if (meridiem == null) {
		        // nothing to do
		        return hour;
		    }
		    if (locale.meridiemHour != null) {
		        return locale.meridiemHour(hour, meridiem);
		    } else if (locale.isPM != null) {
		        // Fallback
		        isPm = locale.isPM(meridiem);
		        if (isPm && hour < 12) {
		            hour += 12;
		        }
		        if (!isPm && hour === 12) {
		            hour = 0;
		        }
		        return hour;
		    } else {
		        // this is not supposed to happen
		        return hour;
		    }
		}

		// date from string and array of format strings
		function configFromStringAndArray(config) {
		    var tempConfig,
		        bestMoment,

		        scoreToBeat,
		        i,
		        currentScore;

		    if (config._f.length === 0) {
		        getParsingFlags(config).invalidFormat = true;
		        config._d = new Date(NaN);
		        return;
		    }

		    for (i = 0; i < config._f.length; i++) {
		        currentScore = 0;
		        tempConfig = copyConfig({}, config);
		        if (config._useUTC != null) {
		            tempConfig._useUTC = config._useUTC;
		        }
		        tempConfig._f = config._f[i];
		        configFromStringAndFormat(tempConfig);

		        if (!isValid(tempConfig)) {
		            continue;
		        }

		        // if there is any input that was not parsed add a penalty for that format
		        currentScore += getParsingFlags(tempConfig).charsLeftOver;

		        //or tokens
		        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

		        getParsingFlags(tempConfig).score = currentScore;

		        if (scoreToBeat == null || currentScore < scoreToBeat) {
		            scoreToBeat = currentScore;
		            bestMoment = tempConfig;
		        }
		    }

		    extend(config, bestMoment || tempConfig);
		}

		function configFromObject(config) {
		    if (config._d) {
		        return;
		    }

		    var i = normalizeObjectUnits(config._i);
		    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
		        return obj && parseInt(obj, 10);
		    });

		    configFromArray(config);
		}

		function createFromConfig (config) {
		    var res = new Moment(checkOverflow(prepareConfig(config)));
		    if (res._nextDay) {
		        // Adding is smart enough around DST
		        res.add(1, 'd');
		        res._nextDay = undefined;
		    }

		    return res;
		}

		function prepareConfig (config) {
		    var input = config._i,
		        format = config._f;

		    config._locale = config._locale || getLocale(config._l);

		    if (input === null || (format === undefined && input === '')) {
		        return createInvalid({nullInput: true});
		    }

		    if (typeof input === 'string') {
		        config._i = input = config._locale.preparse(input);
		    }

		    if (isMoment(input)) {
		        return new Moment(checkOverflow(input));
		    } else if (isDate(input)) {
		        config._d = input;
		    } else if (isArray(format)) {
		        configFromStringAndArray(config);
		    } else if (format) {
		        configFromStringAndFormat(config);
		    }  else {
		        configFromInput(config);
		    }

		    if (!isValid(config)) {
		        config._d = null;
		    }

		    return config;
		}

		function configFromInput(config) {
		    var input = config._i;
		    if (isUndefined(input)) {
		        config._d = new Date(hooks.now());
		    } else if (isDate(input)) {
		        config._d = new Date(input.valueOf());
		    } else if (typeof input === 'string') {
		        configFromString(config);
		    } else if (isArray(input)) {
		        config._a = map(input.slice(0), function (obj) {
		            return parseInt(obj, 10);
		        });
		        configFromArray(config);
		    } else if (isObject(input)) {
		        configFromObject(config);
		    } else if (isNumber(input)) {
		        // from milliseconds
		        config._d = new Date(input);
		    } else {
		        hooks.createFromInputFallback(config);
		    }
		}

		function createLocalOrUTC (input, format, locale, strict, isUTC) {
		    var c = {};

		    if (locale === true || locale === false) {
		        strict = locale;
		        locale = undefined;
		    }

		    if ((isObject(input) && isObjectEmpty(input)) ||
		            (isArray(input) && input.length === 0)) {
		        input = undefined;
		    }
		    // object construction must be done this way.
		    // https://github.com/moment/moment/issues/1423
		    c._isAMomentObject = true;
		    c._useUTC = c._isUTC = isUTC;
		    c._l = locale;
		    c._i = input;
		    c._f = format;
		    c._strict = strict;

		    return createFromConfig(c);
		}

		function createLocal (input, format, locale, strict) {
		    return createLocalOrUTC(input, format, locale, strict, false);
		}

		var prototypeMin = deprecate(
		    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
		    function () {
		        var other = createLocal.apply(null, arguments);
		        if (this.isValid() && other.isValid()) {
		            return other < this ? this : other;
		        } else {
		            return createInvalid();
		        }
		    }
		);

		var prototypeMax = deprecate(
		    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
		    function () {
		        var other = createLocal.apply(null, arguments);
		        if (this.isValid() && other.isValid()) {
		            return other > this ? this : other;
		        } else {
		            return createInvalid();
		        }
		    }
		);

		// Pick a moment m from moments so that m[fn](other) is true for all
		// other. This relies on the function fn to be transitive.
		//
		// moments should either be an array of moment objects or an array, whose
		// first element is an array of moment objects.
		function pickBy(fn, moments) {
		    var res, i;
		    if (moments.length === 1 && isArray(moments[0])) {
		        moments = moments[0];
		    }
		    if (!moments.length) {
		        return createLocal();
		    }
		    res = moments[0];
		    for (i = 1; i < moments.length; ++i) {
		        if (!moments[i].isValid() || moments[i][fn](res)) {
		            res = moments[i];
		        }
		    }
		    return res;
		}

		// TODO: Use [].sort instead?
		function min () {
		    var args = [].slice.call(arguments, 0);

		    return pickBy('isBefore', args);
		}

		function max () {
		    var args = [].slice.call(arguments, 0);

		    return pickBy('isAfter', args);
		}

		var now = function () {
		    return Date.now ? Date.now() : +(new Date());
		};

		var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

		function isDurationValid(m) {
		    for (var key in m) {
		        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
		            return false;
		        }
		    }

		    var unitHasDecimal = false;
		    for (var i = 0; i < ordering.length; ++i) {
		        if (m[ordering[i]]) {
		            if (unitHasDecimal) {
		                return false; // only allow non-integers for smallest unit
		            }
		            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
		                unitHasDecimal = true;
		            }
		        }
		    }

		    return true;
		}

		function isValid$1() {
		    return this._isValid;
		}

		function createInvalid$1() {
		    return createDuration(NaN);
		}

		function Duration (duration) {
		    var normalizedInput = normalizeObjectUnits(duration),
		        years = normalizedInput.year || 0,
		        quarters = normalizedInput.quarter || 0,
		        months = normalizedInput.month || 0,
		        weeks = normalizedInput.week || 0,
		        days = normalizedInput.day || 0,
		        hours = normalizedInput.hour || 0,
		        minutes = normalizedInput.minute || 0,
		        seconds = normalizedInput.second || 0,
		        milliseconds = normalizedInput.millisecond || 0;

		    this._isValid = isDurationValid(normalizedInput);

		    // representation for dateAddRemove
		    this._milliseconds = +milliseconds +
		        seconds * 1e3 + // 1000
		        minutes * 6e4 + // 1000 * 60
		        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
		    // Because of dateAddRemove treats 24 hours as different from a
		    // day when working around DST, we need to store them separately
		    this._days = +days +
		        weeks * 7;
		    // It is impossible to translate months into days without knowing
		    // which months you are are talking about, so we have to store
		    // it separately.
		    this._months = +months +
		        quarters * 3 +
		        years * 12;

		    this._data = {};

		    this._locale = getLocale();

		    this._bubble();
		}

		function isDuration (obj) {
		    return obj instanceof Duration;
		}

		function absRound (number) {
		    if (number < 0) {
		        return Math.round(-1 * number) * -1;
		    } else {
		        return Math.round(number);
		    }
		}

		// FORMATTING

		function offset (token, separator) {
		    addFormatToken(token, 0, 0, function () {
		        var offset = this.utcOffset();
		        var sign = '+';
		        if (offset < 0) {
		            offset = -offset;
		            sign = '-';
		        }
		        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
		    });
		}

		offset('Z', ':');
		offset('ZZ', '');

		// PARSING

		addRegexToken('Z',  matchShortOffset);
		addRegexToken('ZZ', matchShortOffset);
		addParseToken(['Z', 'ZZ'], function (input, array, config) {
		    config._useUTC = true;
		    config._tzm = offsetFromString(matchShortOffset, input);
		});

		// HELPERS

		// timezone chunker
		// '+10:00' > ['10',  '00']
		// '-1530'  > ['-15', '30']
		var chunkOffset = /([\+\-]|\d\d)/gi;

		function offsetFromString(matcher, string) {
		    var matches = (string || '').match(matcher);

		    if (matches === null) {
		        return null;
		    }

		    var chunk   = matches[matches.length - 1] || [];
		    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
		    var minutes = +(parts[1] * 60) + toInt(parts[2]);

		    return minutes === 0 ?
		      0 :
		      parts[0] === '+' ? minutes : -minutes;
		}

		// Return a moment from input, that is local/utc/zone equivalent to model.
		function cloneWithOffset(input, model) {
		    var res, diff;
		    if (model._isUTC) {
		        res = model.clone();
		        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
		        // Use low-level api, because this fn is low-level api.
		        res._d.setTime(res._d.valueOf() + diff);
		        hooks.updateOffset(res, false);
		        return res;
		    } else {
		        return createLocal(input).local();
		    }
		}

		function getDateOffset (m) {
		    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
		    // https://github.com/moment/moment/pull/1871
		    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
		}

		// HOOKS

		// This function will be called whenever a moment is mutated.
		// It is intended to keep the offset in sync with the timezone.
		hooks.updateOffset = function () {};

		// MOMENTS

		// keepLocalTime = true means only change the timezone, without
		// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
		// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
		// +0200, so we adjust the time as needed, to be valid.
		//
		// Keeping the time actually adds/subtracts (one hour)
		// from the actual represented time. That is why we call updateOffset
		// a second time. In case it wants us to change the offset again
		// _changeInProgress == true case, then we have to adjust, because
		// there is no such time in the given timezone.
		function getSetOffset (input, keepLocalTime, keepMinutes) {
		    var offset = this._offset || 0,
		        localAdjust;
		    if (!this.isValid()) {
		        return input != null ? this : NaN;
		    }
		    if (input != null) {
		        if (typeof input === 'string') {
		            input = offsetFromString(matchShortOffset, input);
		            if (input === null) {
		                return this;
		            }
		        } else if (Math.abs(input) < 16 && !keepMinutes) {
		            input = input * 60;
		        }
		        if (!this._isUTC && keepLocalTime) {
		            localAdjust = getDateOffset(this);
		        }
		        this._offset = input;
		        this._isUTC = true;
		        if (localAdjust != null) {
		            this.add(localAdjust, 'm');
		        }
		        if (offset !== input) {
		            if (!keepLocalTime || this._changeInProgress) {
		                addSubtract(this, createDuration(input - offset, 'm'), 1, false);
		            } else if (!this._changeInProgress) {
		                this._changeInProgress = true;
		                hooks.updateOffset(this, true);
		                this._changeInProgress = null;
		            }
		        }
		        return this;
		    } else {
		        return this._isUTC ? offset : getDateOffset(this);
		    }
		}

		function getSetZone (input, keepLocalTime) {
		    if (input != null) {
		        if (typeof input !== 'string') {
		            input = -input;
		        }

		        this.utcOffset(input, keepLocalTime);

		        return this;
		    } else {
		        return -this.utcOffset();
		    }
		}

		function setOffsetToUTC (keepLocalTime) {
		    return this.utcOffset(0, keepLocalTime);
		}

		function setOffsetToLocal (keepLocalTime) {
		    if (this._isUTC) {
		        this.utcOffset(0, keepLocalTime);
		        this._isUTC = false;

		        if (keepLocalTime) {
		            this.subtract(getDateOffset(this), 'm');
		        }
		    }
		    return this;
		}

		function setOffsetToParsedOffset () {
		    if (this._tzm != null) {
		        this.utcOffset(this._tzm, false, true);
		    } else if (typeof this._i === 'string') {
		        var tZone = offsetFromString(matchOffset, this._i);
		        if (tZone != null) {
		            this.utcOffset(tZone);
		        }
		        else {
		            this.utcOffset(0, true);
		        }
		    }
		    return this;
		}

		function hasAlignedHourOffset (input) {
		    if (!this.isValid()) {
		        return false;
		    }
		    input = input ? createLocal(input).utcOffset() : 0;

		    return (this.utcOffset() - input) % 60 === 0;
		}

		function isDaylightSavingTime () {
		    return (
		        this.utcOffset() > this.clone().month(0).utcOffset() ||
		        this.utcOffset() > this.clone().month(5).utcOffset()
		    );
		}

		function isDaylightSavingTimeShifted () {
		    if (!isUndefined(this._isDSTShifted)) {
		        return this._isDSTShifted;
		    }

		    var c = {};

		    copyConfig(c, this);
		    c = prepareConfig(c);

		    if (c._a) {
		        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
		        this._isDSTShifted = this.isValid() &&
		            compareArrays(c._a, other.toArray()) > 0;
		    } else {
		        this._isDSTShifted = false;
		    }

		    return this._isDSTShifted;
		}

		function isLocal () {
		    return this.isValid() ? !this._isUTC : false;
		}

		function isUtcOffset () {
		    return this.isValid() ? this._isUTC : false;
		}

		function isUtc () {
		    return this.isValid() ? this._isUTC && this._offset === 0 : false;
		}

		// ASP.NET json date format regex
		var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

		// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
		// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
		// and further modified to allow for strings containing both week and day
		var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

		function createDuration (input, key) {
		    var duration = input,
		        // matching against regexp is expensive, do it on demand
		        match = null,
		        sign,
		        ret,
		        diffRes;

		    if (isDuration(input)) {
		        duration = {
		            ms : input._milliseconds,
		            d  : input._days,
		            M  : input._months
		        };
		    } else if (isNumber(input)) {
		        duration = {};
		        if (key) {
		            duration[key] = input;
		        } else {
		            duration.milliseconds = input;
		        }
		    } else if (!!(match = aspNetRegex.exec(input))) {
		        sign = (match[1] === '-') ? -1 : 1;
		        duration = {
		            y  : 0,
		            d  : toInt(match[DATE])                         * sign,
		            h  : toInt(match[HOUR])                         * sign,
		            m  : toInt(match[MINUTE])                       * sign,
		            s  : toInt(match[SECOND])                       * sign,
		            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
		        };
		    } else if (!!(match = isoRegex.exec(input))) {
		        sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;
		        duration = {
		            y : parseIso(match[2], sign),
		            M : parseIso(match[3], sign),
		            w : parseIso(match[4], sign),
		            d : parseIso(match[5], sign),
		            h : parseIso(match[6], sign),
		            m : parseIso(match[7], sign),
		            s : parseIso(match[8], sign)
		        };
		    } else if (duration == null) {// checks for null or undefined
		        duration = {};
		    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
		        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

		        duration = {};
		        duration.ms = diffRes.milliseconds;
		        duration.M = diffRes.months;
		    }

		    ret = new Duration(duration);

		    if (isDuration(input) && hasOwnProp(input, '_locale')) {
		        ret._locale = input._locale;
		    }

		    return ret;
		}

		createDuration.fn = Duration.prototype;
		createDuration.invalid = createInvalid$1;

		function parseIso (inp, sign) {
		    // We'd normally use ~~inp for this, but unfortunately it also
		    // converts floats to ints.
		    // inp may be undefined, so careful calling replace on it.
		    var res = inp && parseFloat(inp.replace(',', '.'));
		    // apply sign while we're at it
		    return (isNaN(res) ? 0 : res) * sign;
		}

		function positiveMomentsDifference(base, other) {
		    var res = {milliseconds: 0, months: 0};

		    res.months = other.month() - base.month() +
		        (other.year() - base.year()) * 12;
		    if (base.clone().add(res.months, 'M').isAfter(other)) {
		        --res.months;
		    }

		    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

		    return res;
		}

		function momentsDifference(base, other) {
		    var res;
		    if (!(base.isValid() && other.isValid())) {
		        return {milliseconds: 0, months: 0};
		    }

		    other = cloneWithOffset(other, base);
		    if (base.isBefore(other)) {
		        res = positiveMomentsDifference(base, other);
		    } else {
		        res = positiveMomentsDifference(other, base);
		        res.milliseconds = -res.milliseconds;
		        res.months = -res.months;
		    }

		    return res;
		}

		// TODO: remove 'name' arg after deprecation is removed
		function createAdder(direction, name) {
		    return function (val, period) {
		        var dur, tmp;
		        //invert the arguments, but complain about it
		        if (period !== null && !isNaN(+period)) {
		            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
		            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
		            tmp = val; val = period; period = tmp;
		        }

		        val = typeof val === 'string' ? +val : val;
		        dur = createDuration(val, period);
		        addSubtract(this, dur, direction);
		        return this;
		    };
		}

		function addSubtract (mom, duration, isAdding, updateOffset) {
		    var milliseconds = duration._milliseconds,
		        days = absRound(duration._days),
		        months = absRound(duration._months);

		    if (!mom.isValid()) {
		        // No op
		        return;
		    }

		    updateOffset = updateOffset == null ? true : updateOffset;

		    if (months) {
		        setMonth(mom, get(mom, 'Month') + months * isAdding);
		    }
		    if (days) {
		        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
		    }
		    if (milliseconds) {
		        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
		    }
		    if (updateOffset) {
		        hooks.updateOffset(mom, days || months);
		    }
		}

		var add      = createAdder(1, 'add');
		var subtract = createAdder(-1, 'subtract');

		function getCalendarFormat(myMoment, now) {
		    var diff = myMoment.diff(now, 'days', true);
		    return diff < -6 ? 'sameElse' :
		            diff < -1 ? 'lastWeek' :
		            diff < 0 ? 'lastDay' :
		            diff < 1 ? 'sameDay' :
		            diff < 2 ? 'nextDay' :
		            diff < 7 ? 'nextWeek' : 'sameElse';
		}

		function calendar$1 (time, formats) {
		    // We want to compare the start of today, vs this.
		    // Getting start-of-today depends on whether we're local/utc/offset or not.
		    var now = time || createLocal(),
		        sod = cloneWithOffset(now, this).startOf('day'),
		        format = hooks.calendarFormat(this, sod) || 'sameElse';

		    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

		    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
		}

		function clone () {
		    return new Moment(this);
		}

		function isAfter (input, units) {
		    var localInput = isMoment(input) ? input : createLocal(input);
		    if (!(this.isValid() && localInput.isValid())) {
		        return false;
		    }
		    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
		    if (units === 'millisecond') {
		        return this.valueOf() > localInput.valueOf();
		    } else {
		        return localInput.valueOf() < this.clone().startOf(units).valueOf();
		    }
		}

		function isBefore (input, units) {
		    var localInput = isMoment(input) ? input : createLocal(input);
		    if (!(this.isValid() && localInput.isValid())) {
		        return false;
		    }
		    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
		    if (units === 'millisecond') {
		        return this.valueOf() < localInput.valueOf();
		    } else {
		        return this.clone().endOf(units).valueOf() < localInput.valueOf();
		    }
		}

		function isBetween (from, to, units, inclusivity) {
		    inclusivity = inclusivity || '()';
		    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
		        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
		}

		function isSame (input, units) {
		    var localInput = isMoment(input) ? input : createLocal(input),
		        inputMs;
		    if (!(this.isValid() && localInput.isValid())) {
		        return false;
		    }
		    units = normalizeUnits(units || 'millisecond');
		    if (units === 'millisecond') {
		        return this.valueOf() === localInput.valueOf();
		    } else {
		        inputMs = localInput.valueOf();
		        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
		    }
		}

		function isSameOrAfter (input, units) {
		    return this.isSame(input, units) || this.isAfter(input,units);
		}

		function isSameOrBefore (input, units) {
		    return this.isSame(input, units) || this.isBefore(input,units);
		}

		function diff (input, units, asFloat) {
		    var that,
		        zoneDelta,
		        output;

		    if (!this.isValid()) {
		        return NaN;
		    }

		    that = cloneWithOffset(input, this);

		    if (!that.isValid()) {
		        return NaN;
		    }

		    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

		    units = normalizeUnits(units);

		    switch (units) {
		        case 'year': output = monthDiff(this, that) / 12; break;
		        case 'month': output = monthDiff(this, that); break;
		        case 'quarter': output = monthDiff(this, that) / 3; break;
		        case 'second': output = (this - that) / 1e3; break; // 1000
		        case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
		        case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
		        case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
		        case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
		        default: output = this - that;
		    }

		    return asFloat ? output : absFloor(output);
		}

		function monthDiff (a, b) {
		    // difference in months
		    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
		        // b is in (anchor - 1 month, anchor + 1 month)
		        anchor = a.clone().add(wholeMonthDiff, 'months'),
		        anchor2, adjust;

		    if (b - anchor < 0) {
		        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
		        // linear across the month
		        adjust = (b - anchor) / (anchor - anchor2);
		    } else {
		        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
		        // linear across the month
		        adjust = (b - anchor) / (anchor2 - anchor);
		    }

		    //check for negative zero, return zero if negative zero
		    return -(wholeMonthDiff + adjust) || 0;
		}

		hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
		hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

		function toString () {
		    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
		}

		function toISOString(keepOffset) {
		    if (!this.isValid()) {
		        return null;
		    }
		    var utc = keepOffset !== true;
		    var m = utc ? this.clone().utc() : this;
		    if (m.year() < 0 || m.year() > 9999) {
		        return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
		    }
		    if (isFunction(Date.prototype.toISOString)) {
		        // native implementation is ~50x faster, use it when we can
		        if (utc) {
		            return this.toDate().toISOString();
		        } else {
		            return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
		        }
		    }
		    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
		}

		/**
		 * Return a human readable representation of a moment that can
		 * also be evaluated to get a new moment which is the same
		 *
		 * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
		 */
		function inspect () {
		    if (!this.isValid()) {
		        return 'moment.invalid(/* ' + this._i + ' */)';
		    }
		    var func = 'moment';
		    var zone = '';
		    if (!this.isLocal()) {
		        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
		        zone = 'Z';
		    }
		    var prefix = '[' + func + '("]';
		    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
		    var datetime = '-MM-DD[T]HH:mm:ss.SSS';
		    var suffix = zone + '[")]';

		    return this.format(prefix + year + datetime + suffix);
		}

		function format (inputString) {
		    if (!inputString) {
		        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
		    }
		    var output = formatMoment(this, inputString);
		    return this.localeData().postformat(output);
		}

		function from (time, withoutSuffix) {
		    if (this.isValid() &&
		            ((isMoment(time) && time.isValid()) ||
		             createLocal(time).isValid())) {
		        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
		    } else {
		        return this.localeData().invalidDate();
		    }
		}

		function fromNow (withoutSuffix) {
		    return this.from(createLocal(), withoutSuffix);
		}

		function to (time, withoutSuffix) {
		    if (this.isValid() &&
		            ((isMoment(time) && time.isValid()) ||
		             createLocal(time).isValid())) {
		        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
		    } else {
		        return this.localeData().invalidDate();
		    }
		}

		function toNow (withoutSuffix) {
		    return this.to(createLocal(), withoutSuffix);
		}

		// If passed a locale key, it will set the locale for this
		// instance.  Otherwise, it will return the locale configuration
		// variables for this instance.
		function locale (key) {
		    var newLocaleData;

		    if (key === undefined) {
		        return this._locale._abbr;
		    } else {
		        newLocaleData = getLocale(key);
		        if (newLocaleData != null) {
		            this._locale = newLocaleData;
		        }
		        return this;
		    }
		}

		var lang = deprecate(
		    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
		    function (key) {
		        if (key === undefined) {
		            return this.localeData();
		        } else {
		            return this.locale(key);
		        }
		    }
		);

		function localeData () {
		    return this._locale;
		}

		function startOf (units) {
		    units = normalizeUnits(units);
		    // the following switch intentionally omits break keywords
		    // to utilize falling through the cases.
		    switch (units) {
		        case 'year':
		            this.month(0);
		            /* falls through */
		        case 'quarter':
		        case 'month':
		            this.date(1);
		            /* falls through */
		        case 'week':
		        case 'isoWeek':
		        case 'day':
		        case 'date':
		            this.hours(0);
		            /* falls through */
		        case 'hour':
		            this.minutes(0);
		            /* falls through */
		        case 'minute':
		            this.seconds(0);
		            /* falls through */
		        case 'second':
		            this.milliseconds(0);
		    }

		    // weeks are a special case
		    if (units === 'week') {
		        this.weekday(0);
		    }
		    if (units === 'isoWeek') {
		        this.isoWeekday(1);
		    }

		    // quarters are also special
		    if (units === 'quarter') {
		        this.month(Math.floor(this.month() / 3) * 3);
		    }

		    return this;
		}

		function endOf (units) {
		    units = normalizeUnits(units);
		    if (units === undefined || units === 'millisecond') {
		        return this;
		    }

		    // 'date' is an alias for 'day', so it should be considered as such.
		    if (units === 'date') {
		        units = 'day';
		    }

		    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
		}

		function valueOf () {
		    return this._d.valueOf() - ((this._offset || 0) * 60000);
		}

		function unix () {
		    return Math.floor(this.valueOf() / 1000);
		}

		function toDate () {
		    return new Date(this.valueOf());
		}

		function toArray () {
		    var m = this;
		    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
		}

		function toObject () {
		    var m = this;
		    return {
		        years: m.year(),
		        months: m.month(),
		        date: m.date(),
		        hours: m.hours(),
		        minutes: m.minutes(),
		        seconds: m.seconds(),
		        milliseconds: m.milliseconds()
		    };
		}

		function toJSON () {
		    // new Date(NaN).toJSON() === null
		    return this.isValid() ? this.toISOString() : null;
		}

		function isValid$2 () {
		    return isValid(this);
		}

		function parsingFlags () {
		    return extend({}, getParsingFlags(this));
		}

		function invalidAt () {
		    return getParsingFlags(this).overflow;
		}

		function creationData() {
		    return {
		        input: this._i,
		        format: this._f,
		        locale: this._locale,
		        isUTC: this._isUTC,
		        strict: this._strict
		    };
		}

		// FORMATTING

		addFormatToken(0, ['gg', 2], 0, function () {
		    return this.weekYear() % 100;
		});

		addFormatToken(0, ['GG', 2], 0, function () {
		    return this.isoWeekYear() % 100;
		});

		function addWeekYearFormatToken (token, getter) {
		    addFormatToken(0, [token, token.length], 0, getter);
		}

		addWeekYearFormatToken('gggg',     'weekYear');
		addWeekYearFormatToken('ggggg',    'weekYear');
		addWeekYearFormatToken('GGGG',  'isoWeekYear');
		addWeekYearFormatToken('GGGGG', 'isoWeekYear');

		// ALIASES

		addUnitAlias('weekYear', 'gg');
		addUnitAlias('isoWeekYear', 'GG');

		// PRIORITY

		addUnitPriority('weekYear', 1);
		addUnitPriority('isoWeekYear', 1);


		// PARSING

		addRegexToken('G',      matchSigned);
		addRegexToken('g',      matchSigned);
		addRegexToken('GG',     match1to2, match2);
		addRegexToken('gg',     match1to2, match2);
		addRegexToken('GGGG',   match1to4, match4);
		addRegexToken('gggg',   match1to4, match4);
		addRegexToken('GGGGG',  match1to6, match6);
		addRegexToken('ggggg',  match1to6, match6);

		addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
		    week[token.substr(0, 2)] = toInt(input);
		});

		addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
		    week[token] = hooks.parseTwoDigitYear(input);
		});

		// MOMENTS

		function getSetWeekYear (input) {
		    return getSetWeekYearHelper.call(this,
		            input,
		            this.week(),
		            this.weekday(),
		            this.localeData()._week.dow,
		            this.localeData()._week.doy);
		}

		function getSetISOWeekYear (input) {
		    return getSetWeekYearHelper.call(this,
		            input, this.isoWeek(), this.isoWeekday(), 1, 4);
		}

		function getISOWeeksInYear () {
		    return weeksInYear(this.year(), 1, 4);
		}

		function getWeeksInYear () {
		    var weekInfo = this.localeData()._week;
		    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
		}

		function getSetWeekYearHelper(input, week, weekday, dow, doy) {
		    var weeksTarget;
		    if (input == null) {
		        return weekOfYear(this, dow, doy).year;
		    } else {
		        weeksTarget = weeksInYear(input, dow, doy);
		        if (week > weeksTarget) {
		            week = weeksTarget;
		        }
		        return setWeekAll.call(this, input, week, weekday, dow, doy);
		    }
		}

		function setWeekAll(weekYear, week, weekday, dow, doy) {
		    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
		        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

		    this.year(date.getUTCFullYear());
		    this.month(date.getUTCMonth());
		    this.date(date.getUTCDate());
		    return this;
		}

		// FORMATTING

		addFormatToken('Q', 0, 'Qo', 'quarter');

		// ALIASES

		addUnitAlias('quarter', 'Q');

		// PRIORITY

		addUnitPriority('quarter', 7);

		// PARSING

		addRegexToken('Q', match1);
		addParseToken('Q', function (input, array) {
		    array[MONTH] = (toInt(input) - 1) * 3;
		});

		// MOMENTS

		function getSetQuarter (input) {
		    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
		}

		// FORMATTING

		addFormatToken('D', ['DD', 2], 'Do', 'date');

		// ALIASES

		addUnitAlias('date', 'D');

		// PRIOROITY
		addUnitPriority('date', 9);

		// PARSING

		addRegexToken('D',  match1to2);
		addRegexToken('DD', match1to2, match2);
		addRegexToken('Do', function (isStrict, locale) {
		    // TODO: Remove "ordinalParse" fallback in next major release.
		    return isStrict ?
		      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
		      locale._dayOfMonthOrdinalParseLenient;
		});

		addParseToken(['D', 'DD'], DATE);
		addParseToken('Do', function (input, array) {
		    array[DATE] = toInt(input.match(match1to2)[0]);
		});

		// MOMENTS

		var getSetDayOfMonth = makeGetSet('Date', true);

		// FORMATTING

		addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

		// ALIASES

		addUnitAlias('dayOfYear', 'DDD');

		// PRIORITY
		addUnitPriority('dayOfYear', 4);

		// PARSING

		addRegexToken('DDD',  match1to3);
		addRegexToken('DDDD', match3);
		addParseToken(['DDD', 'DDDD'], function (input, array, config) {
		    config._dayOfYear = toInt(input);
		});

		// HELPERS

		// MOMENTS

		function getSetDayOfYear (input) {
		    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
		    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
		}

		// FORMATTING

		addFormatToken('m', ['mm', 2], 0, 'minute');

		// ALIASES

		addUnitAlias('minute', 'm');

		// PRIORITY

		addUnitPriority('minute', 14);

		// PARSING

		addRegexToken('m',  match1to2);
		addRegexToken('mm', match1to2, match2);
		addParseToken(['m', 'mm'], MINUTE);

		// MOMENTS

		var getSetMinute = makeGetSet('Minutes', false);

		// FORMATTING

		addFormatToken('s', ['ss', 2], 0, 'second');

		// ALIASES

		addUnitAlias('second', 's');

		// PRIORITY

		addUnitPriority('second', 15);

		// PARSING

		addRegexToken('s',  match1to2);
		addRegexToken('ss', match1to2, match2);
		addParseToken(['s', 'ss'], SECOND);

		// MOMENTS

		var getSetSecond = makeGetSet('Seconds', false);

		// FORMATTING

		addFormatToken('S', 0, 0, function () {
		    return ~~(this.millisecond() / 100);
		});

		addFormatToken(0, ['SS', 2], 0, function () {
		    return ~~(this.millisecond() / 10);
		});

		addFormatToken(0, ['SSS', 3], 0, 'millisecond');
		addFormatToken(0, ['SSSS', 4], 0, function () {
		    return this.millisecond() * 10;
		});
		addFormatToken(0, ['SSSSS', 5], 0, function () {
		    return this.millisecond() * 100;
		});
		addFormatToken(0, ['SSSSSS', 6], 0, function () {
		    return this.millisecond() * 1000;
		});
		addFormatToken(0, ['SSSSSSS', 7], 0, function () {
		    return this.millisecond() * 10000;
		});
		addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
		    return this.millisecond() * 100000;
		});
		addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
		    return this.millisecond() * 1000000;
		});


		// ALIASES

		addUnitAlias('millisecond', 'ms');

		// PRIORITY

		addUnitPriority('millisecond', 16);

		// PARSING

		addRegexToken('S',    match1to3, match1);
		addRegexToken('SS',   match1to3, match2);
		addRegexToken('SSS',  match1to3, match3);

		var token;
		for (token = 'SSSS'; token.length <= 9; token += 'S') {
		    addRegexToken(token, matchUnsigned);
		}

		function parseMs(input, array) {
		    array[MILLISECOND] = toInt(('0.' + input) * 1000);
		}

		for (token = 'S'; token.length <= 9; token += 'S') {
		    addParseToken(token, parseMs);
		}
		// MOMENTS

		var getSetMillisecond = makeGetSet('Milliseconds', false);

		// FORMATTING

		addFormatToken('z',  0, 0, 'zoneAbbr');
		addFormatToken('zz', 0, 0, 'zoneName');

		// MOMENTS

		function getZoneAbbr () {
		    return this._isUTC ? 'UTC' : '';
		}

		function getZoneName () {
		    return this._isUTC ? 'Coordinated Universal Time' : '';
		}

		var proto = Moment.prototype;

		proto.add               = add;
		proto.calendar          = calendar$1;
		proto.clone             = clone;
		proto.diff              = diff;
		proto.endOf             = endOf;
		proto.format            = format;
		proto.from              = from;
		proto.fromNow           = fromNow;
		proto.to                = to;
		proto.toNow             = toNow;
		proto.get               = stringGet;
		proto.invalidAt         = invalidAt;
		proto.isAfter           = isAfter;
		proto.isBefore          = isBefore;
		proto.isBetween         = isBetween;
		proto.isSame            = isSame;
		proto.isSameOrAfter     = isSameOrAfter;
		proto.isSameOrBefore    = isSameOrBefore;
		proto.isValid           = isValid$2;
		proto.lang              = lang;
		proto.locale            = locale;
		proto.localeData        = localeData;
		proto.max               = prototypeMax;
		proto.min               = prototypeMin;
		proto.parsingFlags      = parsingFlags;
		proto.set               = stringSet;
		proto.startOf           = startOf;
		proto.subtract          = subtract;
		proto.toArray           = toArray;
		proto.toObject          = toObject;
		proto.toDate            = toDate;
		proto.toISOString       = toISOString;
		proto.inspect           = inspect;
		proto.toJSON            = toJSON;
		proto.toString          = toString;
		proto.unix              = unix;
		proto.valueOf           = valueOf;
		proto.creationData      = creationData;
		proto.year       = getSetYear;
		proto.isLeapYear = getIsLeapYear;
		proto.weekYear    = getSetWeekYear;
		proto.isoWeekYear = getSetISOWeekYear;
		proto.quarter = proto.quarters = getSetQuarter;
		proto.month       = getSetMonth;
		proto.daysInMonth = getDaysInMonth;
		proto.week           = proto.weeks        = getSetWeek;
		proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
		proto.weeksInYear    = getWeeksInYear;
		proto.isoWeeksInYear = getISOWeeksInYear;
		proto.date       = getSetDayOfMonth;
		proto.day        = proto.days             = getSetDayOfWeek;
		proto.weekday    = getSetLocaleDayOfWeek;
		proto.isoWeekday = getSetISODayOfWeek;
		proto.dayOfYear  = getSetDayOfYear;
		proto.hour = proto.hours = getSetHour;
		proto.minute = proto.minutes = getSetMinute;
		proto.second = proto.seconds = getSetSecond;
		proto.millisecond = proto.milliseconds = getSetMillisecond;
		proto.utcOffset            = getSetOffset;
		proto.utc                  = setOffsetToUTC;
		proto.local                = setOffsetToLocal;
		proto.parseZone            = setOffsetToParsedOffset;
		proto.hasAlignedHourOffset = hasAlignedHourOffset;
		proto.isDST                = isDaylightSavingTime;
		proto.isLocal              = isLocal;
		proto.isUtcOffset          = isUtcOffset;
		proto.isUtc                = isUtc;
		proto.isUTC                = isUtc;
		proto.zoneAbbr = getZoneAbbr;
		proto.zoneName = getZoneName;
		proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
		proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
		proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
		proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
		proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

		function createUnix (input) {
		    return createLocal(input * 1000);
		}

		function createInZone () {
		    return createLocal.apply(null, arguments).parseZone();
		}

		function preParsePostFormat (string) {
		    return string;
		}

		var proto$1 = Locale.prototype;

		proto$1.calendar        = calendar;
		proto$1.longDateFormat  = longDateFormat;
		proto$1.invalidDate     = invalidDate;
		proto$1.ordinal         = ordinal;
		proto$1.preparse        = preParsePostFormat;
		proto$1.postformat      = preParsePostFormat;
		proto$1.relativeTime    = relativeTime;
		proto$1.pastFuture      = pastFuture;
		proto$1.set             = set;

		proto$1.months            =        localeMonths;
		proto$1.monthsShort       =        localeMonthsShort;
		proto$1.monthsParse       =        localeMonthsParse;
		proto$1.monthsRegex       = monthsRegex;
		proto$1.monthsShortRegex  = monthsShortRegex;
		proto$1.week = localeWeek;
		proto$1.firstDayOfYear = localeFirstDayOfYear;
		proto$1.firstDayOfWeek = localeFirstDayOfWeek;

		proto$1.weekdays       =        localeWeekdays;
		proto$1.weekdaysMin    =        localeWeekdaysMin;
		proto$1.weekdaysShort  =        localeWeekdaysShort;
		proto$1.weekdaysParse  =        localeWeekdaysParse;

		proto$1.weekdaysRegex       =        weekdaysRegex;
		proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
		proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

		proto$1.isPM = localeIsPM;
		proto$1.meridiem = localeMeridiem;

		function get$1 (format, index, field, setter) {
		    var locale = getLocale();
		    var utc = createUTC().set(setter, index);
		    return locale[field](utc, format);
		}

		function listMonthsImpl (format, index, field) {
		    if (isNumber(format)) {
		        index = format;
		        format = undefined;
		    }

		    format = format || '';

		    if (index != null) {
		        return get$1(format, index, field, 'month');
		    }

		    var i;
		    var out = [];
		    for (i = 0; i < 12; i++) {
		        out[i] = get$1(format, i, field, 'month');
		    }
		    return out;
		}

		// ()
		// (5)
		// (fmt, 5)
		// (fmt)
		// (true)
		// (true, 5)
		// (true, fmt, 5)
		// (true, fmt)
		function listWeekdaysImpl (localeSorted, format, index, field) {
		    if (typeof localeSorted === 'boolean') {
		        if (isNumber(format)) {
		            index = format;
		            format = undefined;
		        }

		        format = format || '';
		    } else {
		        format = localeSorted;
		        index = format;
		        localeSorted = false;

		        if (isNumber(format)) {
		            index = format;
		            format = undefined;
		        }

		        format = format || '';
		    }

		    var locale = getLocale(),
		        shift = localeSorted ? locale._week.dow : 0;

		    if (index != null) {
		        return get$1(format, (index + shift) % 7, field, 'day');
		    }

		    var i;
		    var out = [];
		    for (i = 0; i < 7; i++) {
		        out[i] = get$1(format, (i + shift) % 7, field, 'day');
		    }
		    return out;
		}

		function listMonths (format, index) {
		    return listMonthsImpl(format, index, 'months');
		}

		function listMonthsShort (format, index) {
		    return listMonthsImpl(format, index, 'monthsShort');
		}

		function listWeekdays (localeSorted, format, index) {
		    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
		}

		function listWeekdaysShort (localeSorted, format, index) {
		    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
		}

		function listWeekdaysMin (localeSorted, format, index) {
		    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
		}

		getSetGlobalLocale('en', {
		    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
		    ordinal : function (number) {
		        var b = number % 10,
		            output = (toInt(number % 100 / 10) === 1) ? 'th' :
		            (b === 1) ? 'st' :
		            (b === 2) ? 'nd' :
		            (b === 3) ? 'rd' : 'th';
		        return number + output;
		    }
		});

		// Side effect imports

		hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
		hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

		var mathAbs = Math.abs;

		function abs () {
		    var data           = this._data;

		    this._milliseconds = mathAbs(this._milliseconds);
		    this._days         = mathAbs(this._days);
		    this._months       = mathAbs(this._months);

		    data.milliseconds  = mathAbs(data.milliseconds);
		    data.seconds       = mathAbs(data.seconds);
		    data.minutes       = mathAbs(data.minutes);
		    data.hours         = mathAbs(data.hours);
		    data.months        = mathAbs(data.months);
		    data.years         = mathAbs(data.years);

		    return this;
		}

		function addSubtract$1 (duration, input, value, direction) {
		    var other = createDuration(input, value);

		    duration._milliseconds += direction * other._milliseconds;
		    duration._days         += direction * other._days;
		    duration._months       += direction * other._months;

		    return duration._bubble();
		}

		// supports only 2.0-style add(1, 's') or add(duration)
		function add$1 (input, value) {
		    return addSubtract$1(this, input, value, 1);
		}

		// supports only 2.0-style subtract(1, 's') or subtract(duration)
		function subtract$1 (input, value) {
		    return addSubtract$1(this, input, value, -1);
		}

		function absCeil (number) {
		    if (number < 0) {
		        return Math.floor(number);
		    } else {
		        return Math.ceil(number);
		    }
		}

		function bubble () {
		    var milliseconds = this._milliseconds;
		    var days         = this._days;
		    var months       = this._months;
		    var data         = this._data;
		    var seconds, minutes, hours, years, monthsFromDays;

		    // if we have a mix of positive and negative values, bubble down first
		    // check: https://github.com/moment/moment/issues/2166
		    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
		            (milliseconds <= 0 && days <= 0 && months <= 0))) {
		        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
		        days = 0;
		        months = 0;
		    }

		    // The following code bubbles up values, see the tests for
		    // examples of what that means.
		    data.milliseconds = milliseconds % 1000;

		    seconds           = absFloor(milliseconds / 1000);
		    data.seconds      = seconds % 60;

		    minutes           = absFloor(seconds / 60);
		    data.minutes      = minutes % 60;

		    hours             = absFloor(minutes / 60);
		    data.hours        = hours % 24;

		    days += absFloor(hours / 24);

		    // convert days to months
		    monthsFromDays = absFloor(daysToMonths(days));
		    months += monthsFromDays;
		    days -= absCeil(monthsToDays(monthsFromDays));

		    // 12 months -> 1 year
		    years = absFloor(months / 12);
		    months %= 12;

		    data.days   = days;
		    data.months = months;
		    data.years  = years;

		    return this;
		}

		function daysToMonths (days) {
		    // 400 years have 146097 days (taking into account leap year rules)
		    // 400 years have 12 months === 4800
		    return days * 4800 / 146097;
		}

		function monthsToDays (months) {
		    // the reverse of daysToMonths
		    return months * 146097 / 4800;
		}

		function as (units) {
		    if (!this.isValid()) {
		        return NaN;
		    }
		    var days;
		    var months;
		    var milliseconds = this._milliseconds;

		    units = normalizeUnits(units);

		    if (units === 'month' || units === 'year') {
		        days   = this._days   + milliseconds / 864e5;
		        months = this._months + daysToMonths(days);
		        return units === 'month' ? months : months / 12;
		    } else {
		        // handle milliseconds separately because of floating point math errors (issue #1867)
		        days = this._days + Math.round(monthsToDays(this._months));
		        switch (units) {
		            case 'week'   : return days / 7     + milliseconds / 6048e5;
		            case 'day'    : return days         + milliseconds / 864e5;
		            case 'hour'   : return days * 24    + milliseconds / 36e5;
		            case 'minute' : return days * 1440  + milliseconds / 6e4;
		            case 'second' : return days * 86400 + milliseconds / 1000;
		            // Math.floor prevents floating point math errors here
		            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
		            default: throw new Error('Unknown unit ' + units);
		        }
		    }
		}

		// TODO: Use this.as('ms')?
		function valueOf$1 () {
		    if (!this.isValid()) {
		        return NaN;
		    }
		    return (
		        this._milliseconds +
		        this._days * 864e5 +
		        (this._months % 12) * 2592e6 +
		        toInt(this._months / 12) * 31536e6
		    );
		}

		function makeAs (alias) {
		    return function () {
		        return this.as(alias);
		    };
		}

		var asMilliseconds = makeAs('ms');
		var asSeconds      = makeAs('s');
		var asMinutes      = makeAs('m');
		var asHours        = makeAs('h');
		var asDays         = makeAs('d');
		var asWeeks        = makeAs('w');
		var asMonths       = makeAs('M');
		var asYears        = makeAs('y');

		function clone$1 () {
		    return createDuration(this);
		}

		function get$2 (units) {
		    units = normalizeUnits(units);
		    return this.isValid() ? this[units + 's']() : NaN;
		}

		function makeGetter(name) {
		    return function () {
		        return this.isValid() ? this._data[name] : NaN;
		    };
		}

		var milliseconds = makeGetter('milliseconds');
		var seconds      = makeGetter('seconds');
		var minutes      = makeGetter('minutes');
		var hours        = makeGetter('hours');
		var days         = makeGetter('days');
		var months       = makeGetter('months');
		var years        = makeGetter('years');

		function weeks () {
		    return absFloor(this.days() / 7);
		}

		var round = Math.round;
		var thresholds = {
		    ss: 44,         // a few seconds to seconds
		    s : 45,         // seconds to minute
		    m : 45,         // minutes to hour
		    h : 22,         // hours to day
		    d : 26,         // days to month
		    M : 11          // months to year
		};

		// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
		function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
		    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
		}

		function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
		    var duration = createDuration(posNegDuration).abs();
		    var seconds  = round(duration.as('s'));
		    var minutes  = round(duration.as('m'));
		    var hours    = round(duration.as('h'));
		    var days     = round(duration.as('d'));
		    var months   = round(duration.as('M'));
		    var years    = round(duration.as('y'));

		    var a = seconds <= thresholds.ss && ['s', seconds]  ||
		            seconds < thresholds.s   && ['ss', seconds] ||
		            minutes <= 1             && ['m']           ||
		            minutes < thresholds.m   && ['mm', minutes] ||
		            hours   <= 1             && ['h']           ||
		            hours   < thresholds.h   && ['hh', hours]   ||
		            days    <= 1             && ['d']           ||
		            days    < thresholds.d   && ['dd', days]    ||
		            months  <= 1             && ['M']           ||
		            months  < thresholds.M   && ['MM', months]  ||
		            years   <= 1             && ['y']           || ['yy', years];

		    a[2] = withoutSuffix;
		    a[3] = +posNegDuration > 0;
		    a[4] = locale;
		    return substituteTimeAgo.apply(null, a);
		}

		// This function allows you to set the rounding function for relative time strings
		function getSetRelativeTimeRounding (roundingFunction) {
		    if (roundingFunction === undefined) {
		        return round;
		    }
		    if (typeof(roundingFunction) === 'function') {
		        round = roundingFunction;
		        return true;
		    }
		    return false;
		}

		// This function allows you to set a threshold for relative time strings
		function getSetRelativeTimeThreshold (threshold, limit) {
		    if (thresholds[threshold] === undefined) {
		        return false;
		    }
		    if (limit === undefined) {
		        return thresholds[threshold];
		    }
		    thresholds[threshold] = limit;
		    if (threshold === 's') {
		        thresholds.ss = limit - 1;
		    }
		    return true;
		}

		function humanize (withSuffix) {
		    if (!this.isValid()) {
		        return this.localeData().invalidDate();
		    }

		    var locale = this.localeData();
		    var output = relativeTime$1(this, !withSuffix, locale);

		    if (withSuffix) {
		        output = locale.pastFuture(+this, output);
		    }

		    return locale.postformat(output);
		}

		var abs$1 = Math.abs;

		function sign(x) {
		    return ((x > 0) - (x < 0)) || +x;
		}

		function toISOString$1() {
		    // for ISO strings we do not use the normal bubbling rules:
		    //  * milliseconds bubble up until they become hours
		    //  * days do not bubble at all
		    //  * months bubble up until they become years
		    // This is because there is no context-free conversion between hours and days
		    // (think of clock changes)
		    // and also not between days and months (28-31 days per month)
		    if (!this.isValid()) {
		        return this.localeData().invalidDate();
		    }

		    var seconds = abs$1(this._milliseconds) / 1000;
		    var days         = abs$1(this._days);
		    var months       = abs$1(this._months);
		    var minutes, hours, years;

		    // 3600 seconds -> 60 minutes -> 1 hour
		    minutes           = absFloor(seconds / 60);
		    hours             = absFloor(minutes / 60);
		    seconds %= 60;
		    minutes %= 60;

		    // 12 months -> 1 year
		    years  = absFloor(months / 12);
		    months %= 12;


		    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
		    var Y = years;
		    var M = months;
		    var D = days;
		    var h = hours;
		    var m = minutes;
		    var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
		    var total = this.asSeconds();

		    if (!total) {
		        // this is the same as C#'s (Noda) and python (isodate)...
		        // but not other JS (goog.date)
		        return 'P0D';
		    }

		    var totalSign = total < 0 ? '-' : '';
		    var ymSign = sign(this._months) !== sign(total) ? '-' : '';
		    var daysSign = sign(this._days) !== sign(total) ? '-' : '';
		    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

		    return totalSign + 'P' +
		        (Y ? ymSign + Y + 'Y' : '') +
		        (M ? ymSign + M + 'M' : '') +
		        (D ? daysSign + D + 'D' : '') +
		        ((h || m || s) ? 'T' : '') +
		        (h ? hmsSign + h + 'H' : '') +
		        (m ? hmsSign + m + 'M' : '') +
		        (s ? hmsSign + s + 'S' : '');
		}

		var proto$2 = Duration.prototype;

		proto$2.isValid        = isValid$1;
		proto$2.abs            = abs;
		proto$2.add            = add$1;
		proto$2.subtract       = subtract$1;
		proto$2.as             = as;
		proto$2.asMilliseconds = asMilliseconds;
		proto$2.asSeconds      = asSeconds;
		proto$2.asMinutes      = asMinutes;
		proto$2.asHours        = asHours;
		proto$2.asDays         = asDays;
		proto$2.asWeeks        = asWeeks;
		proto$2.asMonths       = asMonths;
		proto$2.asYears        = asYears;
		proto$2.valueOf        = valueOf$1;
		proto$2._bubble        = bubble;
		proto$2.clone          = clone$1;
		proto$2.get            = get$2;
		proto$2.milliseconds   = milliseconds;
		proto$2.seconds        = seconds;
		proto$2.minutes        = minutes;
		proto$2.hours          = hours;
		proto$2.days           = days;
		proto$2.weeks          = weeks;
		proto$2.months         = months;
		proto$2.years          = years;
		proto$2.humanize       = humanize;
		proto$2.toISOString    = toISOString$1;
		proto$2.toString       = toISOString$1;
		proto$2.toJSON         = toISOString$1;
		proto$2.locale         = locale;
		proto$2.localeData     = localeData;

		proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
		proto$2.lang = lang;

		// Side effect imports

		// FORMATTING

		addFormatToken('X', 0, 0, 'unix');
		addFormatToken('x', 0, 0, 'valueOf');

		// PARSING

		addRegexToken('x', matchSigned);
		addRegexToken('X', matchTimestamp);
		addParseToken('X', function (input, array, config) {
		    config._d = new Date(parseFloat(input, 10) * 1000);
		});
		addParseToken('x', function (input, array, config) {
		    config._d = new Date(toInt(input));
		});

		// Side effect imports


		hooks.version = '2.21.0';

		setHookCallback(createLocal);

		hooks.fn                    = proto;
		hooks.min                   = min;
		hooks.max                   = max;
		hooks.now                   = now;
		hooks.utc                   = createUTC;
		hooks.unix                  = createUnix;
		hooks.months                = listMonths;
		hooks.isDate                = isDate;
		hooks.locale                = getSetGlobalLocale;
		hooks.invalid               = createInvalid;
		hooks.duration              = createDuration;
		hooks.isMoment              = isMoment;
		hooks.weekdays              = listWeekdays;
		hooks.parseZone             = createInZone;
		hooks.localeData            = getLocale;
		hooks.isDuration            = isDuration;
		hooks.monthsShort           = listMonthsShort;
		hooks.weekdaysMin           = listWeekdaysMin;
		hooks.defineLocale          = defineLocale;
		hooks.updateLocale          = updateLocale;
		hooks.locales               = listLocales;
		hooks.weekdaysShort         = listWeekdaysShort;
		hooks.normalizeUnits        = normalizeUnits;
		hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
		hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
		hooks.calendarFormat        = getCalendarFormat;
		hooks.prototype             = proto;

		// currently HTML5 input type only supports 24-hour formats
		hooks.HTML5_FMT = {
		    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
		    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
		    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
		    DATE: 'YYYY-MM-DD',                             // <input type="date" />
		    TIME: 'HH:mm',                                  // <input type="time" />
		    TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
		    TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
		    WEEK: 'YYYY-[W]WW',                             // <input type="week" />
		    MONTH: 'YYYY-MM'                                // <input type="month" />
		};

		return hooks;

		})));

		},{}],953:[function(require,module,exports){
		"use strict";
		Object.defineProperty(exports, "__esModule", { value: true });
		// Based on https://github.com/react-bootstrap/dom-helpers/blob/master/src/util/inDOM.js
		var inDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
		var cachedType;
		function _setScrollType(type) {
		    cachedType = type;
		}
		exports._setScrollType = _setScrollType;
		// Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type
		function detectScrollType() {
		    if (cachedType) {
		        return cachedType;
		    }
		    if (!inDOM || !window.document.body) {
		        return 'indeterminate';
		    }
		    var dummy = window.document.createElement('div');
		    dummy.appendChild(document.createTextNode('ABCD'));
		    dummy.dir = 'rtl';
		    dummy.style.fontSize = '14px';
		    dummy.style.width = '4px';
		    dummy.style.height = '1px';
		    dummy.style.position = 'absolute';
		    dummy.style.top = '-1000px';
		    dummy.style.overflow = 'scroll';
		    document.body.appendChild(dummy);
		    cachedType = 'reverse';
		    if (dummy.scrollLeft > 0) {
		        cachedType = 'default';
		    }
		    else {
		        dummy.scrollLeft = 1;
		        if (dummy.scrollLeft === 0) {
		            cachedType = 'negative';
		        }
		    }
		    document.body.removeChild(dummy);
		    return cachedType;
		}
		exports.detectScrollType = detectScrollType;
		// Based on https://stackoverflow.com/a/24394376
		function getNormalizedScrollLeft(element, direction) {
		    var scrollLeft = element.scrollLeft;
		    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior
		    if (direction !== 'rtl') {
		        return scrollLeft;
		    }
		    var type = detectScrollType();
		    if (type === 'indeterminate') {
		        return Number.NaN;
		    }
		    switch (type) {
		        case 'negative':
		            return element.scrollWidth - element.clientWidth + scrollLeft;
		        case 'reverse':
		            return element.scrollWidth - element.clientWidth - scrollLeft;
		    }
		    return scrollLeft;
		}
		exports.getNormalizedScrollLeft = getNormalizedScrollLeft;
		function setNormalizedScrollLeft(element, scrollLeft, direction) {
		    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior
		    if (direction !== 'rtl') {
		        element.scrollLeft = scrollLeft;
		        return;
		    }
		    var type = detectScrollType();
		    if (type === 'indeterminate') {
		        return;
		    }
		    switch (type) {
		        case 'negative':
		            element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;
		            break;
		        case 'reverse':
		            element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;
		            break;
		        default:
		            element.scrollLeft = scrollLeft;
		            break;
		    }
		}
		exports.setNormalizedScrollLeft = setNormalizedScrollLeft;

		},{}],954:[function(require,module,exports){
		/*
		object-assign
		(c) Sindre Sorhus
		@license MIT
		*/

		'use strict';
		/* eslint-disable no-unused-vars */
		var getOwnPropertySymbols = Object.getOwnPropertySymbols;
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		var propIsEnumerable = Object.prototype.propertyIsEnumerable;

		function toObject(val) {
			if (val === null || val === undefined) {
				throw new TypeError('Object.assign cannot be called with null or undefined');
			}

			return Object(val);
		}

		function shouldUseNative() {
			try {
				if (!Object.assign) {
					return false;
				}

				// Detect buggy property enumeration order in older V8 versions.

				// https://bugs.chromium.org/p/v8/issues/detail?id=4118
				var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
				test1[5] = 'de';
				if (Object.getOwnPropertyNames(test1)[0] === '5') {
					return false;
				}

				// https://bugs.chromium.org/p/v8/issues/detail?id=3056
				var test2 = {};
				for (var i = 0; i < 10; i++) {
					test2['_' + String.fromCharCode(i)] = i;
				}
				var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
					return test2[n];
				});
				if (order2.join('') !== '0123456789') {
					return false;
				}

				// https://bugs.chromium.org/p/v8/issues/detail?id=3056
				var test3 = {};
				'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
					test3[letter] = letter;
				});
				if (Object.keys(Object.assign({}, test3)).join('') !==
						'abcdefghijklmnopqrst') {
					return false;
				}

				return true;
			} catch (err) {
				// We don't expect any of the above to throw, but better to be safe.
				return false;
			}
		}

		module.exports = shouldUseNative() ? Object.assign : function (target, source) {
			var from;
			var to = toObject(target);
			var symbols;

			for (var s = 1; s < arguments.length; s++) {
				from = Object(arguments[s]);

				for (var key in from) {
					if (hasOwnProperty.call(from, key)) {
						to[key] = from[key];
					}
				}

				if (getOwnPropertySymbols) {
					symbols = getOwnPropertySymbols(from);
					for (var i = 0; i < symbols.length; i++) {
						if (propIsEnumerable.call(from, symbols[i])) {
							to[symbols[i]] = from[symbols[i]];
						}
					}
				}
			}

			return to;
		};

		},{}],955:[function(require,module,exports){
		(function (global){
		/**!
		 * @fileOverview Kickass library to create and place poppers near their reference elements.
		 * @version 1.14.1
		 * @license
		 * Copyright (c) 2016 Federico Zivolo and contributors
		 *
		 * Permission is hereby granted, free of charge, to any person obtaining a copy
		 * of this software and associated documentation files (the "Software"), to deal
		 * in the Software without restriction, including without limitation the rights
		 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		 * copies of the Software, and to permit persons to whom the Software is
		 * furnished to do so, subject to the following conditions:
		 *
		 * The above copyright notice and this permission notice shall be included in all
		 * copies or substantial portions of the Software.
		 *
		 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
		 * SOFTWARE.
		 */
		(function (global, factory) {
			typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
			typeof define === 'function' && define.amd ? define(factory) :
			(global.Popper = factory());
		}(this, (function () { 'use strict';

		var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';
		var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
		var timeoutDuration = 0;
		for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
		  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
		    timeoutDuration = 1;
		    break;
		  }
		}

		function microtaskDebounce(fn) {
		  var called = false;
		  return function () {
		    if (called) {
		      return;
		    }
		    called = true;
		    window.Promise.resolve().then(function () {
		      called = false;
		      fn();
		    });
		  };
		}

		function taskDebounce(fn) {
		  var scheduled = false;
		  return function () {
		    if (!scheduled) {
		      scheduled = true;
		      setTimeout(function () {
		        scheduled = false;
		        fn();
		      }, timeoutDuration);
		    }
		  };
		}

		var supportsMicroTasks = isBrowser && window.Promise;

		/**
		* Create a debounced version of a method, that's asynchronously deferred
		* but called in the minimum time possible.
		*
		* @method
		* @memberof Popper.Utils
		* @argument {Function} fn
		* @returns {Function}
		*/
		var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

		/**
		 * Check if the given variable is a function
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Any} functionToCheck - variable to check
		 * @returns {Boolean} answer to: is a function?
		 */
		function isFunction(functionToCheck) {
		  var getType = {};
		  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
		}

		/**
		 * Get CSS computed property of the given element
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Eement} element
		 * @argument {String} property
		 */
		function getStyleComputedProperty(element, property) {
		  if (element.nodeType !== 1) {
		    return [];
		  }
		  // NOTE: 1 DOM access here
		  var css = getComputedStyle(element, null);
		  return property ? css[property] : css;
		}

		/**
		 * Returns the parentNode or the host of the element
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Element} element
		 * @returns {Element} parent
		 */
		function getParentNode(element) {
		  if (element.nodeName === 'HTML') {
		    return element;
		  }
		  return element.parentNode || element.host;
		}

		/**
		 * Returns the scrolling parent of the given element
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Element} element
		 * @returns {Element} scroll parent
		 */
		function getScrollParent(element) {
		  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
		  if (!element) {
		    return document.body;
		  }

		  switch (element.nodeName) {
		    case 'HTML':
		    case 'BODY':
		      return element.ownerDocument.body;
		    case '#document':
		      return element.body;
		  }

		  // Firefox want us to check `-x` and `-y` variations as well

		  var _getStyleComputedProp = getStyleComputedProperty(element),
		      overflow = _getStyleComputedProp.overflow,
		      overflowX = _getStyleComputedProp.overflowX,
		      overflowY = _getStyleComputedProp.overflowY;

		  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
		    return element;
		  }

		  return getScrollParent(getParentNode(element));
		}

		/**
		 * Tells if you are running Internet Explorer
		 * @method
		 * @memberof Popper.Utils
		 * @argument {number} version to check
		 * @returns {Boolean} isIE
		 */
		var cache = {};

		var isIE = function () {
		  var version = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'all';

		  version = version.toString();
		  if (cache.hasOwnProperty(version)) {
		    return cache[version];
		  }
		  switch (version) {
		    case '11':
		      cache[version] = navigator.userAgent.indexOf('Trident') !== -1;
		      break;
		    case '10':
		      cache[version] = navigator.appVersion.indexOf('MSIE 10') !== -1;
		      break;
		    case 'all':
		      cache[version] = navigator.userAgent.indexOf('Trident') !== -1 || navigator.userAgent.indexOf('MSIE') !== -1;
		      break;
		  }

		  //Set IE
		  cache.all = cache.all || Object.keys(cache).some(function (key) {
		    return cache[key];
		  });
		  return cache[version];
		};

		/**
		 * Returns the offset parent of the given element
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Element} element
		 * @returns {Element} offset parent
		 */
		function getOffsetParent(element) {
		  if (!element) {
		    return document.documentElement;
		  }

		  var noOffsetParent = isIE(10) ? document.body : null;

		  // NOTE: 1 DOM access here
		  var offsetParent = element.offsetParent;
		  // Skip hidden elements which don't have an offsetParent
		  while (offsetParent === noOffsetParent && element.nextElementSibling) {
		    offsetParent = (element = element.nextElementSibling).offsetParent;
		  }

		  var nodeName = offsetParent && offsetParent.nodeName;

		  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
		    return element ? element.ownerDocument.documentElement : document.documentElement;
		  }

		  // .offsetParent will return the closest TD or TABLE in case
		  // no offsetParent is present, I hate this job...
		  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
		    return getOffsetParent(offsetParent);
		  }

		  return offsetParent;
		}

		function isOffsetContainer(element) {
		  var nodeName = element.nodeName;

		  if (nodeName === 'BODY') {
		    return false;
		  }
		  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
		}

		/**
		 * Finds the root node (document, shadowDOM root) of the given element
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Element} node
		 * @returns {Element} root node
		 */
		function getRoot(node) {
		  if (node.parentNode !== null) {
		    return getRoot(node.parentNode);
		  }

		  return node;
		}

		/**
		 * Finds the offset parent common to the two provided nodes
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Element} element1
		 * @argument {Element} element2
		 * @returns {Element} common offset parent
		 */
		function findCommonOffsetParent(element1, element2) {
		  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
		  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
		    return document.documentElement;
		  }

		  // Here we make sure to give as "start" the element that comes first in the DOM
		  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
		  var start = order ? element1 : element2;
		  var end = order ? element2 : element1;

		  // Get common ancestor container
		  var range = document.createRange();
		  range.setStart(start, 0);
		  range.setEnd(end, 0);
		  var commonAncestorContainer = range.commonAncestorContainer;

		  // Both nodes are inside #document

		  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
		    if (isOffsetContainer(commonAncestorContainer)) {
		      return commonAncestorContainer;
		    }

		    return getOffsetParent(commonAncestorContainer);
		  }

		  // one of the nodes is inside shadowDOM, find which one
		  var element1root = getRoot(element1);
		  if (element1root.host) {
		    return findCommonOffsetParent(element1root.host, element2);
		  } else {
		    return findCommonOffsetParent(element1, getRoot(element2).host);
		  }
		}

		/**
		 * Gets the scroll value of the given element in the given side (top and left)
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Element} element
		 * @argument {String} side `top` or `left`
		 * @returns {number} amount of scrolled pixels
		 */
		function getScroll(element) {
		  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

		  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
		  var nodeName = element.nodeName;

		  if (nodeName === 'BODY' || nodeName === 'HTML') {
		    var html = element.ownerDocument.documentElement;
		    var scrollingElement = element.ownerDocument.scrollingElement || html;
		    return scrollingElement[upperSide];
		  }

		  return element[upperSide];
		}

		/*
		 * Sum or subtract the element scroll values (left and top) from a given rect object
		 * @method
		 * @memberof Popper.Utils
		 * @param {Object} rect - Rect object you want to change
		 * @param {HTMLElement} element - The element from the function reads the scroll values
		 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
		 * @return {Object} rect - The modifier rect object
		 */
		function includeScroll(rect, element) {
		  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

		  var scrollTop = getScroll(element, 'top');
		  var scrollLeft = getScroll(element, 'left');
		  var modifier = subtract ? -1 : 1;
		  rect.top += scrollTop * modifier;
		  rect.bottom += scrollTop * modifier;
		  rect.left += scrollLeft * modifier;
		  rect.right += scrollLeft * modifier;
		  return rect;
		}

		/*
		 * Helper to detect borders of a given element
		 * @method
		 * @memberof Popper.Utils
		 * @param {CSSStyleDeclaration} styles
		 * Result of `getStyleComputedProperty` on the given element
		 * @param {String} axis - `x` or `y`
		 * @return {number} borders - The borders size of the given axis
		 */

		function getBordersSize(styles, axis) {
		  var sideA = axis === 'x' ? 'Left' : 'Top';
		  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

		  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);
		}

		function getSize(axis, body, html, computedStyle) {
		  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);
		}

		function getWindowSizes() {
		  var body = document.body;
		  var html = document.documentElement;
		  var computedStyle = isIE(10) && getComputedStyle(html);

		  return {
		    height: getSize('Height', body, html, computedStyle),
		    width: getSize('Width', body, html, computedStyle)
		  };
		}

		var classCallCheck = function (instance, Constructor) {
		  if (!(instance instanceof Constructor)) {
		    throw new TypeError("Cannot call a class as a function");
		  }
		};

		var createClass = function () {
		  function defineProperties(target, props) {
		    for (var i = 0; i < props.length; i++) {
		      var descriptor = props[i];
		      descriptor.enumerable = descriptor.enumerable || false;
		      descriptor.configurable = true;
		      if ("value" in descriptor) descriptor.writable = true;
		      Object.defineProperty(target, descriptor.key, descriptor);
		    }
		  }

		  return function (Constructor, protoProps, staticProps) {
		    if (protoProps) defineProperties(Constructor.prototype, protoProps);
		    if (staticProps) defineProperties(Constructor, staticProps);
		    return Constructor;
		  };
		}();





		var defineProperty = function (obj, key, value) {
		  if (key in obj) {
		    Object.defineProperty(obj, key, {
		      value: value,
		      enumerable: true,
		      configurable: true,
		      writable: true
		    });
		  } else {
		    obj[key] = value;
		  }

		  return obj;
		};

		var _extends = Object.assign || function (target) {
		  for (var i = 1; i < arguments.length; i++) {
		    var source = arguments[i];

		    for (var key in source) {
		      if (Object.prototype.hasOwnProperty.call(source, key)) {
		        target[key] = source[key];
		      }
		    }
		  }

		  return target;
		};

		/**
		 * Given element offsets, generate an output similar to getBoundingClientRect
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Object} offsets
		 * @returns {Object} ClientRect like output
		 */
		function getClientRect(offsets) {
		  return _extends({}, offsets, {
		    right: offsets.left + offsets.width,
		    bottom: offsets.top + offsets.height
		  });
		}

		/**
		 * Get bounding client rect of given element
		 * @method
		 * @memberof Popper.Utils
		 * @param {HTMLElement} element
		 * @return {Object} client rect
		 */
		function getBoundingClientRect(element) {
		  var rect = {};

		  // IE10 10 FIX: Please, don't ask, the element isn't
		  // considered in DOM in some circumstances...
		  // This isn't reproducible in IE10 compatibility mode of IE11
		  try {
		    if (isIE(10)) {
		      rect = element.getBoundingClientRect();
		      var scrollTop = getScroll(element, 'top');
		      var scrollLeft = getScroll(element, 'left');
		      rect.top += scrollTop;
		      rect.left += scrollLeft;
		      rect.bottom += scrollTop;
		      rect.right += scrollLeft;
		    } else {
		      rect = element.getBoundingClientRect();
		    }
		  } catch (e) {}

		  var result = {
		    left: rect.left,
		    top: rect.top,
		    width: rect.right - rect.left,
		    height: rect.bottom - rect.top
		  };

		  // subtract scrollbar size from sizes
		  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};
		  var width = sizes.width || element.clientWidth || result.right - result.left;
		  var height = sizes.height || element.clientHeight || result.bottom - result.top;

		  var horizScrollbar = element.offsetWidth - width;
		  var vertScrollbar = element.offsetHeight - height;

		  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
		  // we make this check conditional for performance reasons
		  if (horizScrollbar || vertScrollbar) {
		    var styles = getStyleComputedProperty(element);
		    horizScrollbar -= getBordersSize(styles, 'x');
		    vertScrollbar -= getBordersSize(styles, 'y');

		    result.width -= horizScrollbar;
		    result.height -= vertScrollbar;
		  }

		  return getClientRect(result);
		}

		function getOffsetRectRelativeToArbitraryNode(children, parent) {
		  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

		  var isIE10 = isIE(10);
		  var isHTML = parent.nodeName === 'HTML';
		  var childrenRect = getBoundingClientRect(children);
		  var parentRect = getBoundingClientRect(parent);
		  var scrollParent = getScrollParent(children);

		  var styles = getStyleComputedProperty(parent);
		  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);
		  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);

		  // In cases where the parent is fixed, we must ignore negative scroll in offset calc
		  if (fixedPosition && parent.nodeName === 'HTML') {
		    parentRect.top = Math.max(parentRect.top, 0);
		    parentRect.left = Math.max(parentRect.left, 0);
		  }
		  var offsets = getClientRect({
		    top: childrenRect.top - parentRect.top - borderTopWidth,
		    left: childrenRect.left - parentRect.left - borderLeftWidth,
		    width: childrenRect.width,
		    height: childrenRect.height
		  });
		  offsets.marginTop = 0;
		  offsets.marginLeft = 0;

		  // Subtract margins of documentElement in case it's being used as parent
		  // we do this only on HTML because it's the only element that behaves
		  // differently when margins are applied to it. The margins are included in
		  // the box of the documentElement, in the other cases not.
		  if (!isIE10 && isHTML) {
		    var marginTop = parseFloat(styles.marginTop, 10);
		    var marginLeft = parseFloat(styles.marginLeft, 10);

		    offsets.top -= borderTopWidth - marginTop;
		    offsets.bottom -= borderTopWidth - marginTop;
		    offsets.left -= borderLeftWidth - marginLeft;
		    offsets.right -= borderLeftWidth - marginLeft;

		    // Attach marginTop and marginLeft because in some circumstances we may need them
		    offsets.marginTop = marginTop;
		    offsets.marginLeft = marginLeft;
		  }

		  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
		    offsets = includeScroll(offsets, parent);
		  }

		  return offsets;
		}

		function getViewportOffsetRectRelativeToArtbitraryNode(element) {
		  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

		  var html = element.ownerDocument.documentElement;
		  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
		  var width = Math.max(html.clientWidth, window.innerWidth || 0);
		  var height = Math.max(html.clientHeight, window.innerHeight || 0);

		  var scrollTop = !excludeScroll ? getScroll(html) : 0;
		  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

		  var offset = {
		    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
		    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
		    width: width,
		    height: height
		  };

		  return getClientRect(offset);
		}

		/**
		 * Check if the given element is fixed or is inside a fixed parent
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Element} element
		 * @argument {Element} customContainer
		 * @returns {Boolean} answer to "isFixed?"
		 */
		function isFixed(element) {
		  var nodeName = element.nodeName;
		  if (nodeName === 'BODY' || nodeName === 'HTML') {
		    return false;
		  }
		  if (getStyleComputedProperty(element, 'position') === 'fixed') {
		    return true;
		  }
		  return isFixed(getParentNode(element));
		}

		/**
		 * Finds the first parent of an element that has a transformed property defined
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Element} element
		 * @returns {Element} first transformed parent or documentElement
		 */

		function getFixedPositionOffsetParent(element) {
		  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
		  if (!element || !element.parentElement || isIE()) {
		    return document.documentElement;
		  }
		  var el = element.parentElement;
		  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
		    el = el.parentElement;
		  }
		  return el || document.documentElement;
		}

		/**
		 * Computed the boundaries limits and return them
		 * @method
		 * @memberof Popper.Utils
		 * @param {HTMLElement} popper
		 * @param {HTMLElement} reference
		 * @param {number} padding
		 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
		 * @param {Boolean} fixedPosition - Is in fixed position mode
		 * @returns {Object} Coordinates of the boundaries
		 */
		function getBoundaries(popper, reference, padding, boundariesElement) {
		  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

		  // NOTE: 1 DOM access here

		  var boundaries = { top: 0, left: 0 };
		  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);

		  // Handle viewport case
		  if (boundariesElement === 'viewport') {
		    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
		  } else {
		    // Handle other cases based on DOM element used as boundaries
		    var boundariesNode = void 0;
		    if (boundariesElement === 'scrollParent') {
		      boundariesNode = getScrollParent(getParentNode(reference));
		      if (boundariesNode.nodeName === 'BODY') {
		        boundariesNode = popper.ownerDocument.documentElement;
		      }
		    } else if (boundariesElement === 'window') {
		      boundariesNode = popper.ownerDocument.documentElement;
		    } else {
		      boundariesNode = boundariesElement;
		    }

		    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

		    // In case of HTML, we need a different computation
		    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
		      var _getWindowSizes = getWindowSizes(),
		          height = _getWindowSizes.height,
		          width = _getWindowSizes.width;

		      boundaries.top += offsets.top - offsets.marginTop;
		      boundaries.bottom = height + offsets.top;
		      boundaries.left += offsets.left - offsets.marginLeft;
		      boundaries.right = width + offsets.left;
		    } else {
		      // for all the other DOM elements, this one is good
		      boundaries = offsets;
		    }
		  }

		  // Add paddings
		  boundaries.left += padding;
		  boundaries.top += padding;
		  boundaries.right -= padding;
		  boundaries.bottom -= padding;

		  return boundaries;
		}

		function getArea(_ref) {
		  var width = _ref.width,
		      height = _ref.height;

		  return width * height;
		}

		/**
		 * Utility used to transform the `auto` placement to the placement with more
		 * available space.
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Object} data - The data object generated by update method
		 * @argument {Object} options - Modifiers configuration and options
		 * @returns {Object} The data object, properly modified
		 */
		function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
		  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

		  if (placement.indexOf('auto') === -1) {
		    return placement;
		  }

		  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

		  var rects = {
		    top: {
		      width: boundaries.width,
		      height: refRect.top - boundaries.top
		    },
		    right: {
		      width: boundaries.right - refRect.right,
		      height: boundaries.height
		    },
		    bottom: {
		      width: boundaries.width,
		      height: boundaries.bottom - refRect.bottom
		    },
		    left: {
		      width: refRect.left - boundaries.left,
		      height: boundaries.height
		    }
		  };

		  var sortedAreas = Object.keys(rects).map(function (key) {
		    return _extends({
		      key: key
		    }, rects[key], {
		      area: getArea(rects[key])
		    });
		  }).sort(function (a, b) {
		    return b.area - a.area;
		  });

		  var filteredAreas = sortedAreas.filter(function (_ref2) {
		    var width = _ref2.width,
		        height = _ref2.height;
		    return width >= popper.clientWidth && height >= popper.clientHeight;
		  });

		  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

		  var variation = placement.split('-')[1];

		  return computedPlacement + (variation ? '-' + variation : '');
		}

		/**
		 * Get offsets to the reference element
		 * @method
		 * @memberof Popper.Utils
		 * @param {Object} state
		 * @param {Element} popper - the popper element
		 * @param {Element} reference - the reference element (the popper will be relative to this)
		 * @param {Element} fixedPosition - is in fixed position mode
		 * @returns {Object} An object containing the offsets which will be applied to the popper
		 */
		function getReferenceOffsets(state, popper, reference) {
		  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

		  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);
		  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
		}

		/**
		 * Get the outer sizes of the given element (offset size + margins)
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Element} element
		 * @returns {Object} object containing width and height properties
		 */
		function getOuterSizes(element) {
		  var styles = getComputedStyle(element);
		  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);
		  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);
		  var result = {
		    width: element.offsetWidth + y,
		    height: element.offsetHeight + x
		  };
		  return result;
		}

		/**
		 * Get the opposite placement of the given one
		 * @method
		 * @memberof Popper.Utils
		 * @argument {String} placement
		 * @returns {String} flipped placement
		 */
		function getOppositePlacement(placement) {
		  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
		  return placement.replace(/left|right|bottom|top/g, function (matched) {
		    return hash[matched];
		  });
		}

		/**
		 * Get offsets to the popper
		 * @method
		 * @memberof Popper.Utils
		 * @param {Object} position - CSS position the Popper will get applied
		 * @param {HTMLElement} popper - the popper element
		 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
		 * @param {String} placement - one of the valid placement options
		 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
		 */
		function getPopperOffsets(popper, referenceOffsets, placement) {
		  placement = placement.split('-')[0];

		  // Get popper node sizes
		  var popperRect = getOuterSizes(popper);

		  // Add position, width and height to our offsets object
		  var popperOffsets = {
		    width: popperRect.width,
		    height: popperRect.height
		  };

		  // depending by the popper placement we have to compute its offsets slightly differently
		  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
		  var mainSide = isHoriz ? 'top' : 'left';
		  var secondarySide = isHoriz ? 'left' : 'top';
		  var measurement = isHoriz ? 'height' : 'width';
		  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

		  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
		  if (placement === secondarySide) {
		    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
		  } else {
		    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
		  }

		  return popperOffsets;
		}

		/**
		 * Mimics the `find` method of Array
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Array} arr
		 * @argument prop
		 * @argument value
		 * @returns index or -1
		 */
		function find(arr, check) {
		  // use native find if supported
		  if (Array.prototype.find) {
		    return arr.find(check);
		  }

		  // use `filter` to obtain the same behavior of `find`
		  return arr.filter(check)[0];
		}

		/**
		 * Return the index of the matching object
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Array} arr
		 * @argument prop
		 * @argument value
		 * @returns index or -1
		 */
		function findIndex(arr, prop, value) {
		  // use native findIndex if supported
		  if (Array.prototype.findIndex) {
		    return arr.findIndex(function (cur) {
		      return cur[prop] === value;
		    });
		  }

		  // use `find` + `indexOf` if `findIndex` isn't supported
		  var match = find(arr, function (obj) {
		    return obj[prop] === value;
		  });
		  return arr.indexOf(match);
		}

		/**
		 * Loop trough the list of modifiers and run them in order,
		 * each of them will then edit the data object.
		 * @method
		 * @memberof Popper.Utils
		 * @param {dataObject} data
		 * @param {Array} modifiers
		 * @param {String} ends - Optional modifier name used as stopper
		 * @returns {dataObject}
		 */
		function runModifiers(modifiers, data, ends) {
		  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

		  modifiersToRun.forEach(function (modifier) {
		    if (modifier['function']) {
		      // eslint-disable-line dot-notation
		      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
		    }
		    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
		    if (modifier.enabled && isFunction(fn)) {
		      // Add properties to offsets to make them a complete clientRect object
		      // we do this before each modifier to make sure the previous one doesn't
		      // mess with these values
		      data.offsets.popper = getClientRect(data.offsets.popper);
		      data.offsets.reference = getClientRect(data.offsets.reference);

		      data = fn(data, modifier);
		    }
		  });

		  return data;
		}

		/**
		 * Updates the position of the popper, computing the new offsets and applying
		 * the new style.<br />
		 * Prefer `scheduleUpdate` over `update` because of performance reasons.
		 * @method
		 * @memberof Popper
		 */
		function update() {
		  // if popper is destroyed, don't perform any further update
		  if (this.state.isDestroyed) {
		    return;
		  }

		  var data = {
		    instance: this,
		    styles: {},
		    arrowStyles: {},
		    attributes: {},
		    flipped: false,
		    offsets: {}
		  };

		  // compute reference element offsets
		  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

		  // compute auto placement, store placement inside the data object,
		  // modifiers will be able to edit `placement` if needed
		  // and refer to originalPlacement to know the original value
		  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

		  // store the computed placement inside `originalPlacement`
		  data.originalPlacement = data.placement;

		  data.positionFixed = this.options.positionFixed;

		  // compute the popper offsets
		  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
		  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

		  // run the modifiers
		  data = runModifiers(this.modifiers, data);

		  // the first `update` will call `onCreate` callback
		  // the other ones will call `onUpdate` callback
		  if (!this.state.isCreated) {
		    this.state.isCreated = true;
		    this.options.onCreate(data);
		  } else {
		    this.options.onUpdate(data);
		  }
		}

		/**
		 * Helper used to know if the given modifier is enabled.
		 * @method
		 * @memberof Popper.Utils
		 * @returns {Boolean}
		 */
		function isModifierEnabled(modifiers, modifierName) {
		  return modifiers.some(function (_ref) {
		    var name = _ref.name,
		        enabled = _ref.enabled;
		    return enabled && name === modifierName;
		  });
		}

		/**
		 * Get the prefixed supported property name
		 * @method
		 * @memberof Popper.Utils
		 * @argument {String} property (camelCase)
		 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
		 */
		function getSupportedPropertyName(property) {
		  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
		  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

		  for (var i = 0; i < prefixes.length; i++) {
		    var prefix = prefixes[i];
		    var toCheck = prefix ? '' + prefix + upperProp : property;
		    if (typeof document.body.style[toCheck] !== 'undefined') {
		      return toCheck;
		    }
		  }
		  return null;
		}

		/**
		 * Destroy the popper
		 * @method
		 * @memberof Popper
		 */
		function destroy() {
		  this.state.isDestroyed = true;

		  // touch DOM only if `applyStyle` modifier is enabled
		  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
		    this.popper.removeAttribute('x-placement');
		    this.popper.style.position = '';
		    this.popper.style.top = '';
		    this.popper.style.left = '';
		    this.popper.style.right = '';
		    this.popper.style.bottom = '';
		    this.popper.style.willChange = '';
		    this.popper.style[getSupportedPropertyName('transform')] = '';
		  }

		  this.disableEventListeners();

		  // remove the popper if user explicity asked for the deletion on destroy
		  // do not use `remove` because IE11 doesn't support it
		  if (this.options.removeOnDestroy) {
		    this.popper.parentNode.removeChild(this.popper);
		  }
		  return this;
		}

		/**
		 * Get the window associated with the element
		 * @argument {Element} element
		 * @returns {Window}
		 */
		function getWindow(element) {
		  var ownerDocument = element.ownerDocument;
		  return ownerDocument ? ownerDocument.defaultView : window;
		}

		function attachToScrollParents(scrollParent, event, callback, scrollParents) {
		  var isBody = scrollParent.nodeName === 'BODY';
		  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
		  target.addEventListener(event, callback, { passive: true });

		  if (!isBody) {
		    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
		  }
		  scrollParents.push(target);
		}

		/**
		 * Setup needed event listeners used to update the popper position
		 * @method
		 * @memberof Popper.Utils
		 * @private
		 */
		function setupEventListeners(reference, options, state, updateBound) {
		  // Resize event listener on window
		  state.updateBound = updateBound;
		  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

		  // Scroll event listener on scroll parents
		  var scrollElement = getScrollParent(reference);
		  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
		  state.scrollElement = scrollElement;
		  state.eventsEnabled = true;

		  return state;
		}

		/**
		 * It will add resize/scroll events and start recalculating
		 * position of the popper element when they are triggered.
		 * @method
		 * @memberof Popper
		 */
		function enableEventListeners() {
		  if (!this.state.eventsEnabled) {
		    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
		  }
		}

		/**
		 * Remove event listeners used to update the popper position
		 * @method
		 * @memberof Popper.Utils
		 * @private
		 */
		function removeEventListeners(reference, state) {
		  // Remove resize event listener on window
		  getWindow(reference).removeEventListener('resize', state.updateBound);

		  // Remove scroll event listener on scroll parents
		  state.scrollParents.forEach(function (target) {
		    target.removeEventListener('scroll', state.updateBound);
		  });

		  // Reset state
		  state.updateBound = null;
		  state.scrollParents = [];
		  state.scrollElement = null;
		  state.eventsEnabled = false;
		  return state;
		}

		/**
		 * It will remove resize/scroll events and won't recalculate popper position
		 * when they are triggered. It also won't trigger onUpdate callback anymore,
		 * unless you call `update` method manually.
		 * @method
		 * @memberof Popper
		 */
		function disableEventListeners() {
		  if (this.state.eventsEnabled) {
		    cancelAnimationFrame(this.scheduleUpdate);
		    this.state = removeEventListeners(this.reference, this.state);
		  }
		}

		/**
		 * Tells if a given input is a number
		 * @method
		 * @memberof Popper.Utils
		 * @param {*} input to check
		 * @return {Boolean}
		 */
		function isNumeric(n) {
		  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
		}

		/**
		 * Set the style to the given popper
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Element} element - Element to apply the style to
		 * @argument {Object} styles
		 * Object with a list of properties and values which will be applied to the element
		 */
		function setStyles(element, styles) {
		  Object.keys(styles).forEach(function (prop) {
		    var unit = '';
		    // add unit if the value is numeric and is one of the following
		    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
		      unit = 'px';
		    }
		    element.style[prop] = styles[prop] + unit;
		  });
		}

		/**
		 * Set the attributes to the given popper
		 * @method
		 * @memberof Popper.Utils
		 * @argument {Element} element - Element to apply the attributes to
		 * @argument {Object} styles
		 * Object with a list of properties and values which will be applied to the element
		 */
		function setAttributes(element, attributes) {
		  Object.keys(attributes).forEach(function (prop) {
		    var value = attributes[prop];
		    if (value !== false) {
		      element.setAttribute(prop, attributes[prop]);
		    } else {
		      element.removeAttribute(prop);
		    }
		  });
		}

		/**
		 * @function
		 * @memberof Modifiers
		 * @argument {Object} data - The data object generated by `update` method
		 * @argument {Object} data.styles - List of style properties - values to apply to popper element
		 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
		 * @argument {Object} options - Modifiers configuration and options
		 * @returns {Object} The same data object
		 */
		function applyStyle(data) {
		  // any property present in `data.styles` will be applied to the popper,
		  // in this way we can make the 3rd party modifiers add custom styles to it
		  // Be aware, modifiers could override the properties defined in the previous
		  // lines of this modifier!
		  setStyles(data.instance.popper, data.styles);

		  // any property present in `data.attributes` will be applied to the popper,
		  // they will be set as HTML attributes of the element
		  setAttributes(data.instance.popper, data.attributes);

		  // if arrowElement is defined and arrowStyles has some properties
		  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
		    setStyles(data.arrowElement, data.arrowStyles);
		  }

		  return data;
		}

		/**
		 * Set the x-placement attribute before everything else because it could be used
		 * to add margins to the popper margins needs to be calculated to get the
		 * correct popper offsets.
		 * @method
		 * @memberof Popper.modifiers
		 * @param {HTMLElement} reference - The reference element used to position the popper
		 * @param {HTMLElement} popper - The HTML element used as popper
		 * @param {Object} options - Popper.js options
		 */
		function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
		  // compute reference element offsets
		  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

		  // compute auto placement, store placement inside the data object,
		  // modifiers will be able to edit `placement` if needed
		  // and refer to originalPlacement to know the original value
		  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

		  popper.setAttribute('x-placement', placement);

		  // Apply `position` to popper before anything else because
		  // without the position applied we can't guarantee correct computations
		  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

		  return options;
		}

		/**
		 * @function
		 * @memberof Modifiers
		 * @argument {Object} data - The data object generated by `update` method
		 * @argument {Object} options - Modifiers configuration and options
		 * @returns {Object} The data object, properly modified
		 */
		function computeStyle(data, options) {
		  var x = options.x,
		      y = options.y;
		  var popper = data.offsets.popper;

		  // Remove this legacy support in Popper.js v2

		  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
		    return modifier.name === 'applyStyle';
		  }).gpuAcceleration;
		  if (legacyGpuAccelerationOption !== undefined) {
		    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
		  }
		  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

		  var offsetParent = getOffsetParent(data.instance.popper);
		  var offsetParentRect = getBoundingClientRect(offsetParent);

		  // Styles
		  var styles = {
		    position: popper.position
		  };

		  // floor sides to avoid blurry text
		  var offsets = {
		    left: Math.floor(popper.left),
		    top: Math.floor(popper.top),
		    bottom: Math.floor(popper.bottom),
		    right: Math.floor(popper.right)
		  };

		  var sideA = x === 'bottom' ? 'top' : 'bottom';
		  var sideB = y === 'right' ? 'left' : 'right';

		  // if gpuAcceleration is set to `true` and transform is supported,
		  //  we use `translate3d` to apply the position to the popper we
		  // automatically use the supported prefixed version if needed
		  var prefixedProperty = getSupportedPropertyName('transform');

		  // now, let's make a step back and look at this code closely (wtf?)
		  // If the content of the popper grows once it's been positioned, it
		  // may happen that the popper gets misplaced because of the new content
		  // overflowing its reference element
		  // To avoid this problem, we provide two options (x and y), which allow
		  // the consumer to define the offset origin.
		  // If we position a popper on top of a reference element, we can set
		  // `x` to `top` to make the popper grow towards its top instead of
		  // its bottom.
		  var left = void 0,
		      top = void 0;
		  if (sideA === 'bottom') {
		    top = -offsetParentRect.height + offsets.bottom;
		  } else {
		    top = offsets.top;
		  }
		  if (sideB === 'right') {
		    left = -offsetParentRect.width + offsets.right;
		  } else {
		    left = offsets.left;
		  }
		  if (gpuAcceleration && prefixedProperty) {
		    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
		    styles[sideA] = 0;
		    styles[sideB] = 0;
		    styles.willChange = 'transform';
		  } else {
		    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
		    var invertTop = sideA === 'bottom' ? -1 : 1;
		    var invertLeft = sideB === 'right' ? -1 : 1;
		    styles[sideA] = top * invertTop;
		    styles[sideB] = left * invertLeft;
		    styles.willChange = sideA + ', ' + sideB;
		  }

		  // Attributes
		  var attributes = {
		    'x-placement': data.placement
		  };

		  // Update `data` attributes, styles and arrowStyles
		  data.attributes = _extends({}, attributes, data.attributes);
		  data.styles = _extends({}, styles, data.styles);
		  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);

		  return data;
		}

		/**
		 * Helper used to know if the given modifier depends from another one.<br />
		 * It checks if the needed modifier is listed and enabled.
		 * @method
		 * @memberof Popper.Utils
		 * @param {Array} modifiers - list of modifiers
		 * @param {String} requestingName - name of requesting modifier
		 * @param {String} requestedName - name of requested modifier
		 * @returns {Boolean}
		 */
		function isModifierRequired(modifiers, requestingName, requestedName) {
		  var requesting = find(modifiers, function (_ref) {
		    var name = _ref.name;
		    return name === requestingName;
		  });

		  var isRequired = !!requesting && modifiers.some(function (modifier) {
		    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
		  });

		  if (!isRequired) {
		    var _requesting = '`' + requestingName + '`';
		    var requested = '`' + requestedName + '`';
		    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
		  }
		  return isRequired;
		}

		/**
		 * @function
		 * @memberof Modifiers
		 * @argument {Object} data - The data object generated by update method
		 * @argument {Object} options - Modifiers configuration and options
		 * @returns {Object} The data object, properly modified
		 */
		function arrow(data, options) {
		  var _data$offsets$arrow;

		  // arrow depends on keepTogether in order to work
		  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
		    return data;
		  }

		  var arrowElement = options.element;

		  // if arrowElement is a string, suppose it's a CSS selector
		  if (typeof arrowElement === 'string') {
		    arrowElement = data.instance.popper.querySelector(arrowElement);

		    // if arrowElement is not found, don't run the modifier
		    if (!arrowElement) {
		      return data;
		    }
		  } else {
		    // if the arrowElement isn't a query selector we must check that the
		    // provided DOM node is child of its popper node
		    if (!data.instance.popper.contains(arrowElement)) {
		      console.warn('WARNING: `arrow.element` must be child of its popper element!');
		      return data;
		    }
		  }

		  var placement = data.placement.split('-')[0];
		  var _data$offsets = data.offsets,
		      popper = _data$offsets.popper,
		      reference = _data$offsets.reference;

		  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

		  var len = isVertical ? 'height' : 'width';
		  var sideCapitalized = isVertical ? 'Top' : 'Left';
		  var side = sideCapitalized.toLowerCase();
		  var altSide = isVertical ? 'left' : 'top';
		  var opSide = isVertical ? 'bottom' : 'right';
		  var arrowElementSize = getOuterSizes(arrowElement)[len];

		  //
		  // extends keepTogether behavior making sure the popper and its
		  // reference have enough pixels in conjuction
		  //

		  // top/left side
		  if (reference[opSide] - arrowElementSize < popper[side]) {
		    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
		  }
		  // bottom/right side
		  if (reference[side] + arrowElementSize > popper[opSide]) {
		    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
		  }
		  data.offsets.popper = getClientRect(data.offsets.popper);

		  // compute center of the popper
		  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

		  // Compute the sideValue using the updated popper offsets
		  // take popper margin in account because we don't have this info available
		  var css = getStyleComputedProperty(data.instance.popper);
		  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);
		  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);
		  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

		  // prevent arrowElement from being placed not contiguously to its popper
		  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

		  data.arrowElement = arrowElement;
		  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);

		  return data;
		}

		/**
		 * Get the opposite placement variation of the given one
		 * @method
		 * @memberof Popper.Utils
		 * @argument {String} placement variation
		 * @returns {String} flipped placement variation
		 */
		function getOppositeVariation(variation) {
		  if (variation === 'end') {
		    return 'start';
		  } else if (variation === 'start') {
		    return 'end';
		  }
		  return variation;
		}

		/**
		 * List of accepted placements to use as values of the `placement` option.<br />
		 * Valid placements are:
		 * - `auto`
		 * - `top`
		 * - `right`
		 * - `bottom`
		 * - `left`
		 *
		 * Each placement can have a variation from this list:
		 * - `-start`
		 * - `-end`
		 *
		 * Variations are interpreted easily if you think of them as the left to right
		 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
		 * is right.<br />
		 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
		 *
		 * Some valid examples are:
		 * - `top-end` (on top of reference, right aligned)
		 * - `right-start` (on right of reference, top aligned)
		 * - `bottom` (on bottom, centered)
		 * - `auto-right` (on the side with more space available, alignment depends by placement)
		 *
		 * @static
		 * @type {Array}
		 * @enum {String}
		 * @readonly
		 * @method placements
		 * @memberof Popper
		 */
		var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

		// Get rid of `auto` `auto-start` and `auto-end`
		var validPlacements = placements.slice(3);

		/**
		 * Given an initial placement, returns all the subsequent placements
		 * clockwise (or counter-clockwise).
		 *
		 * @method
		 * @memberof Popper.Utils
		 * @argument {String} placement - A valid placement (it accepts variations)
		 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
		 * @returns {Array} placements including their variations
		 */
		function clockwise(placement) {
		  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

		  var index = validPlacements.indexOf(placement);
		  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
		  return counter ? arr.reverse() : arr;
		}

		var BEHAVIORS = {
		  FLIP: 'flip',
		  CLOCKWISE: 'clockwise',
		  COUNTERCLOCKWISE: 'counterclockwise'
		};

		/**
		 * @function
		 * @memberof Modifiers
		 * @argument {Object} data - The data object generated by update method
		 * @argument {Object} options - Modifiers configuration and options
		 * @returns {Object} The data object, properly modified
		 */
		function flip(data, options) {
		  // if `inner` modifier is enabled, we can't use the `flip` modifier
		  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
		    return data;
		  }

		  if (data.flipped && data.placement === data.originalPlacement) {
		    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
		    return data;
		  }

		  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

		  var placement = data.placement.split('-')[0];
		  var placementOpposite = getOppositePlacement(placement);
		  var variation = data.placement.split('-')[1] || '';

		  var flipOrder = [];

		  switch (options.behavior) {
		    case BEHAVIORS.FLIP:
		      flipOrder = [placement, placementOpposite];
		      break;
		    case BEHAVIORS.CLOCKWISE:
		      flipOrder = clockwise(placement);
		      break;
		    case BEHAVIORS.COUNTERCLOCKWISE:
		      flipOrder = clockwise(placement, true);
		      break;
		    default:
		      flipOrder = options.behavior;
		  }

		  flipOrder.forEach(function (step, index) {
		    if (placement !== step || flipOrder.length === index + 1) {
		      return data;
		    }

		    placement = data.placement.split('-')[0];
		    placementOpposite = getOppositePlacement(placement);

		    var popperOffsets = data.offsets.popper;
		    var refOffsets = data.offsets.reference;

		    // using floor because the reference offsets may contain decimals we are not going to consider here
		    var floor = Math.floor;
		    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

		    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
		    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
		    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
		    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

		    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

		    // flip the variation if required
		    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
		    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

		    if (overlapsRef || overflowsBoundaries || flippedVariation) {
		      // this boolean to detect any flip loop
		      data.flipped = true;

		      if (overlapsRef || overflowsBoundaries) {
		        placement = flipOrder[index + 1];
		      }

		      if (flippedVariation) {
		        variation = getOppositeVariation(variation);
		      }

		      data.placement = placement + (variation ? '-' + variation : '');

		      // this object contains `position`, we want to preserve it along with
		      // any additional property we may add in the future
		      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

		      data = runModifiers(data.instance.modifiers, data, 'flip');
		    }
		  });
		  return data;
		}

		/**
		 * @function
		 * @memberof Modifiers
		 * @argument {Object} data - The data object generated by update method
		 * @argument {Object} options - Modifiers configuration and options
		 * @returns {Object} The data object, properly modified
		 */
		function keepTogether(data) {
		  var _data$offsets = data.offsets,
		      popper = _data$offsets.popper,
		      reference = _data$offsets.reference;

		  var placement = data.placement.split('-')[0];
		  var floor = Math.floor;
		  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
		  var side = isVertical ? 'right' : 'bottom';
		  var opSide = isVertical ? 'left' : 'top';
		  var measurement = isVertical ? 'width' : 'height';

		  if (popper[side] < floor(reference[opSide])) {
		    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
		  }
		  if (popper[opSide] > floor(reference[side])) {
		    data.offsets.popper[opSide] = floor(reference[side]);
		  }

		  return data;
		}

		/**
		 * Converts a string containing value + unit into a px value number
		 * @function
		 * @memberof {modifiers~offset}
		 * @private
		 * @argument {String} str - Value + unit string
		 * @argument {String} measurement - `height` or `width`
		 * @argument {Object} popperOffsets
		 * @argument {Object} referenceOffsets
		 * @returns {Number|String}
		 * Value in pixels, or original string if no values were extracted
		 */
		function toValue(str, measurement, popperOffsets, referenceOffsets) {
		  // separate value from unit
		  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
		  var value = +split[1];
		  var unit = split[2];

		  // If it's not a number it's an operator, I guess
		  if (!value) {
		    return str;
		  }

		  if (unit.indexOf('%') === 0) {
		    var element = void 0;
		    switch (unit) {
		      case '%p':
		        element = popperOffsets;
		        break;
		      case '%':
		      case '%r':
		      default:
		        element = referenceOffsets;
		    }

		    var rect = getClientRect(element);
		    return rect[measurement] / 100 * value;
		  } else if (unit === 'vh' || unit === 'vw') {
		    // if is a vh or vw, we calculate the size based on the viewport
		    var size = void 0;
		    if (unit === 'vh') {
		      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
		    } else {
		      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
		    }
		    return size / 100 * value;
		  } else {
		    // if is an explicit pixel unit, we get rid of the unit and keep the value
		    // if is an implicit unit, it's px, and we return just the value
		    return value;
		  }
		}

		/**
		 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
		 * @function
		 * @memberof {modifiers~offset}
		 * @private
		 * @argument {String} offset
		 * @argument {Object} popperOffsets
		 * @argument {Object} referenceOffsets
		 * @argument {String} basePlacement
		 * @returns {Array} a two cells array with x and y offsets in numbers
		 */
		function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
		  var offsets = [0, 0];

		  // Use height if placement is left or right and index is 0 otherwise use width
		  // in this way the first offset will use an axis and the second one
		  // will use the other one
		  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

		  // Split the offset string to obtain a list of values and operands
		  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
		  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
		    return frag.trim();
		  });

		  // Detect if the offset string contains a pair of values or a single one
		  // they could be separated by comma or space
		  var divider = fragments.indexOf(find(fragments, function (frag) {
		    return frag.search(/,|\s/) !== -1;
		  }));

		  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
		    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
		  }

		  // If divider is found, we divide the list of values and operands to divide
		  // them by ofset X and Y.
		  var splitRegex = /\s*,\s*|\s+/;
		  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

		  // Convert the values with units to absolute pixels to allow our computations
		  ops = ops.map(function (op, index) {
		    // Most of the units rely on the orientation of the popper
		    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
		    var mergeWithPrevious = false;
		    return op
		    // This aggregates any `+` or `-` sign that aren't considered operators
		    // e.g.: 10 + +5 => [10, +, +5]
		    .reduce(function (a, b) {
		      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
		        a[a.length - 1] = b;
		        mergeWithPrevious = true;
		        return a;
		      } else if (mergeWithPrevious) {
		        a[a.length - 1] += b;
		        mergeWithPrevious = false;
		        return a;
		      } else {
		        return a.concat(b);
		      }
		    }, [])
		    // Here we convert the string values into number values (in px)
		    .map(function (str) {
		      return toValue(str, measurement, popperOffsets, referenceOffsets);
		    });
		  });

		  // Loop trough the offsets arrays and execute the operations
		  ops.forEach(function (op, index) {
		    op.forEach(function (frag, index2) {
		      if (isNumeric(frag)) {
		        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
		      }
		    });
		  });
		  return offsets;
		}

		/**
		 * @function
		 * @memberof Modifiers
		 * @argument {Object} data - The data object generated by update method
		 * @argument {Object} options - Modifiers configuration and options
		 * @argument {Number|String} options.offset=0
		 * The offset value as described in the modifier description
		 * @returns {Object} The data object, properly modified
		 */
		function offset(data, _ref) {
		  var offset = _ref.offset;
		  var placement = data.placement,
		      _data$offsets = data.offsets,
		      popper = _data$offsets.popper,
		      reference = _data$offsets.reference;

		  var basePlacement = placement.split('-')[0];

		  var offsets = void 0;
		  if (isNumeric(+offset)) {
		    offsets = [+offset, 0];
		  } else {
		    offsets = parseOffset(offset, popper, reference, basePlacement);
		  }

		  if (basePlacement === 'left') {
		    popper.top += offsets[0];
		    popper.left -= offsets[1];
		  } else if (basePlacement === 'right') {
		    popper.top += offsets[0];
		    popper.left += offsets[1];
		  } else if (basePlacement === 'top') {
		    popper.left += offsets[0];
		    popper.top -= offsets[1];
		  } else if (basePlacement === 'bottom') {
		    popper.left += offsets[0];
		    popper.top += offsets[1];
		  }

		  data.popper = popper;
		  return data;
		}

		/**
		 * @function
		 * @memberof Modifiers
		 * @argument {Object} data - The data object generated by `update` method
		 * @argument {Object} options - Modifiers configuration and options
		 * @returns {Object} The data object, properly modified
		 */
		function preventOverflow(data, options) {
		  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

		  // If offsetParent is the reference element, we really want to
		  // go one step up and use the next offsetParent as reference to
		  // avoid to make this modifier completely useless and look like broken
		  if (data.instance.reference === boundariesElement) {
		    boundariesElement = getOffsetParent(boundariesElement);
		  }

		  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);
		  options.boundaries = boundaries;

		  var order = options.priority;
		  var popper = data.offsets.popper;

		  var check = {
		    primary: function primary(placement) {
		      var value = popper[placement];
		      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
		        value = Math.max(popper[placement], boundaries[placement]);
		      }
		      return defineProperty({}, placement, value);
		    },
		    secondary: function secondary(placement) {
		      var mainSide = placement === 'right' ? 'left' : 'top';
		      var value = popper[mainSide];
		      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
		        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
		      }
		      return defineProperty({}, mainSide, value);
		    }
		  };

		  order.forEach(function (placement) {
		    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
		    popper = _extends({}, popper, check[side](placement));
		  });

		  data.offsets.popper = popper;

		  return data;
		}

		/**
		 * @function
		 * @memberof Modifiers
		 * @argument {Object} data - The data object generated by `update` method
		 * @argument {Object} options - Modifiers configuration and options
		 * @returns {Object} The data object, properly modified
		 */
		function shift(data) {
		  var placement = data.placement;
		  var basePlacement = placement.split('-')[0];
		  var shiftvariation = placement.split('-')[1];

		  // if shift shiftvariation is specified, run the modifier
		  if (shiftvariation) {
		    var _data$offsets = data.offsets,
		        reference = _data$offsets.reference,
		        popper = _data$offsets.popper;

		    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
		    var side = isVertical ? 'left' : 'top';
		    var measurement = isVertical ? 'width' : 'height';

		    var shiftOffsets = {
		      start: defineProperty({}, side, reference[side]),
		      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
		    };

		    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
		  }

		  return data;
		}

		/**
		 * @function
		 * @memberof Modifiers
		 * @argument {Object} data - The data object generated by update method
		 * @argument {Object} options - Modifiers configuration and options
		 * @returns {Object} The data object, properly modified
		 */
		function hide(data) {
		  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
		    return data;
		  }

		  var refRect = data.offsets.reference;
		  var bound = find(data.instance.modifiers, function (modifier) {
		    return modifier.name === 'preventOverflow';
		  }).boundaries;

		  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
		    // Avoid unnecessary DOM access if visibility hasn't changed
		    if (data.hide === true) {
		      return data;
		    }

		    data.hide = true;
		    data.attributes['x-out-of-boundaries'] = '';
		  } else {
		    // Avoid unnecessary DOM access if visibility hasn't changed
		    if (data.hide === false) {
		      return data;
		    }

		    data.hide = false;
		    data.attributes['x-out-of-boundaries'] = false;
		  }

		  return data;
		}

		/**
		 * @function
		 * @memberof Modifiers
		 * @argument {Object} data - The data object generated by `update` method
		 * @argument {Object} options - Modifiers configuration and options
		 * @returns {Object} The data object, properly modified
		 */
		function inner(data) {
		  var placement = data.placement;
		  var basePlacement = placement.split('-')[0];
		  var _data$offsets = data.offsets,
		      popper = _data$offsets.popper,
		      reference = _data$offsets.reference;

		  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

		  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

		  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

		  data.placement = getOppositePlacement(placement);
		  data.offsets.popper = getClientRect(popper);

		  return data;
		}

		/**
		 * Modifier function, each modifier can have a function of this type assigned
		 * to its `fn` property.<br />
		 * These functions will be called on each update, this means that you must
		 * make sure they are performant enough to avoid performance bottlenecks.
		 *
		 * @function ModifierFn
		 * @argument {dataObject} data - The data object generated by `update` method
		 * @argument {Object} options - Modifiers configuration and options
		 * @returns {dataObject} The data object, properly modified
		 */

		/**
		 * Modifiers are plugins used to alter the behavior of your poppers.<br />
		 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
		 * needed by the library.
		 *
		 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
		 * All the other properties are configurations that could be tweaked.
		 * @namespace modifiers
		 */
		var modifiers = {
		  /**
		   * Modifier used to shift the popper on the start or end of its reference
		   * element.<br />
		   * It will read the variation of the `placement` property.<br />
		   * It can be one either `-end` or `-start`.
		   * @memberof modifiers
		   * @inner
		   */
		  shift: {
		    /** @prop {number} order=100 - Index used to define the order of execution */
		    order: 100,
		    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
		    enabled: true,
		    /** @prop {ModifierFn} */
		    fn: shift
		  },

		  /**
		   * The `offset` modifier can shift your popper on both its axis.
		   *
		   * It accepts the following units:
		   * - `px` or unitless, interpreted as pixels
		   * - `%` or `%r`, percentage relative to the length of the reference element
		   * - `%p`, percentage relative to the length of the popper element
		   * - `vw`, CSS viewport width unit
		   * - `vh`, CSS viewport height unit
		   *
		   * For length is intended the main axis relative to the placement of the popper.<br />
		   * This means that if the placement is `top` or `bottom`, the length will be the
		   * `width`. In case of `left` or `right`, it will be the height.
		   *
		   * You can provide a single value (as `Number` or `String`), or a pair of values
		   * as `String` divided by a comma or one (or more) white spaces.<br />
		   * The latter is a deprecated method because it leads to confusion and will be
		   * removed in v2.<br />
		   * Additionally, it accepts additions and subtractions between different units.
		   * Note that multiplications and divisions aren't supported.
		   *
		   * Valid examples are:
		   * ```
		   * 10
		   * '10%'
		   * '10, 10'
		   * '10%, 10'
		   * '10 + 10%'
		   * '10 - 5vh + 3%'
		   * '-10px + 5vh, 5px - 6%'
		   * ```
		   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
		   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
		   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)
		   *
		   * @memberof modifiers
		   * @inner
		   */
		  offset: {
		    /** @prop {number} order=200 - Index used to define the order of execution */
		    order: 200,
		    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
		    enabled: true,
		    /** @prop {ModifierFn} */
		    fn: offset,
		    /** @prop {Number|String} offset=0
		     * The offset value as described in the modifier description
		     */
		    offset: 0
		  },

		  /**
		   * Modifier used to prevent the popper from being positioned outside the boundary.
		   *
		   * An scenario exists where the reference itself is not within the boundaries.<br />
		   * We can say it has "escaped the boundaries" — or just "escaped".<br />
		   * In this case we need to decide whether the popper should either:
		   *
		   * - detach from the reference and remain "trapped" in the boundaries, or
		   * - if it should ignore the boundary and "escape with its reference"
		   *
		   * When `escapeWithReference` is set to`true` and reference is completely
		   * outside its boundaries, the popper will overflow (or completely leave)
		   * the boundaries in order to remain attached to the edge of the reference.
		   *
		   * @memberof modifiers
		   * @inner
		   */
		  preventOverflow: {
		    /** @prop {number} order=300 - Index used to define the order of execution */
		    order: 300,
		    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
		    enabled: true,
		    /** @prop {ModifierFn} */
		    fn: preventOverflow,
		    /**
		     * @prop {Array} [priority=['left','right','top','bottom']]
		     * Popper will try to prevent overflow following these priorities by default,
		     * then, it could overflow on the left and on top of the `boundariesElement`
		     */
		    priority: ['left', 'right', 'top', 'bottom'],
		    /**
		     * @prop {number} padding=5
		     * Amount of pixel used to define a minimum distance between the boundaries
		     * and the popper this makes sure the popper has always a little padding
		     * between the edges of its container
		     */
		    padding: 5,
		    /**
		     * @prop {String|HTMLElement} boundariesElement='scrollParent'
		     * Boundaries used by the modifier, can be `scrollParent`, `window`,
		     * `viewport` or any DOM element.
		     */
		    boundariesElement: 'scrollParent'
		  },

		  /**
		   * Modifier used to make sure the reference and its popper stay near eachothers
		   * without leaving any gap between the two. Expecially useful when the arrow is
		   * enabled and you want to assure it to point to its reference element.
		   * It cares only about the first axis, you can still have poppers with margin
		   * between the popper and its reference element.
		   * @memberof modifiers
		   * @inner
		   */
		  keepTogether: {
		    /** @prop {number} order=400 - Index used to define the order of execution */
		    order: 400,
		    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
		    enabled: true,
		    /** @prop {ModifierFn} */
		    fn: keepTogether
		  },

		  /**
		   * This modifier is used to move the `arrowElement` of the popper to make
		   * sure it is positioned between the reference element and its popper element.
		   * It will read the outer size of the `arrowElement` node to detect how many
		   * pixels of conjuction are needed.
		   *
		   * It has no effect if no `arrowElement` is provided.
		   * @memberof modifiers
		   * @inner
		   */
		  arrow: {
		    /** @prop {number} order=500 - Index used to define the order of execution */
		    order: 500,
		    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
		    enabled: true,
		    /** @prop {ModifierFn} */
		    fn: arrow,
		    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
		    element: '[x-arrow]'
		  },

		  /**
		   * Modifier used to flip the popper's placement when it starts to overlap its
		   * reference element.
		   *
		   * Requires the `preventOverflow` modifier before it in order to work.
		   *
		   * **NOTE:** this modifier will interrupt the current update cycle and will
		   * restart it if it detects the need to flip the placement.
		   * @memberof modifiers
		   * @inner
		   */
		  flip: {
		    /** @prop {number} order=600 - Index used to define the order of execution */
		    order: 600,
		    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
		    enabled: true,
		    /** @prop {ModifierFn} */
		    fn: flip,
		    /**
		     * @prop {String|Array} behavior='flip'
		     * The behavior used to change the popper's placement. It can be one of
		     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
		     * placements (with optional variations).
		     */
		    behavior: 'flip',
		    /**
		     * @prop {number} padding=5
		     * The popper will flip if it hits the edges of the `boundariesElement`
		     */
		    padding: 5,
		    /**
		     * @prop {String|HTMLElement} boundariesElement='viewport'
		     * The element which will define the boundaries of the popper position,
		     * the popper will never be placed outside of the defined boundaries
		     * (except if keepTogether is enabled)
		     */
		    boundariesElement: 'viewport'
		  },

		  /**
		   * Modifier used to make the popper flow toward the inner of the reference element.
		   * By default, when this modifier is disabled, the popper will be placed outside
		   * the reference element.
		   * @memberof modifiers
		   * @inner
		   */
		  inner: {
		    /** @prop {number} order=700 - Index used to define the order of execution */
		    order: 700,
		    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
		    enabled: false,
		    /** @prop {ModifierFn} */
		    fn: inner
		  },

		  /**
		   * Modifier used to hide the popper when its reference element is outside of the
		   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
		   * be used to hide with a CSS selector the popper when its reference is
		   * out of boundaries.
		   *
		   * Requires the `preventOverflow` modifier before it in order to work.
		   * @memberof modifiers
		   * @inner
		   */
		  hide: {
		    /** @prop {number} order=800 - Index used to define the order of execution */
		    order: 800,
		    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
		    enabled: true,
		    /** @prop {ModifierFn} */
		    fn: hide
		  },

		  /**
		   * Computes the style that will be applied to the popper element to gets
		   * properly positioned.
		   *
		   * Note that this modifier will not touch the DOM, it just prepares the styles
		   * so that `applyStyle` modifier can apply it. This separation is useful
		   * in case you need to replace `applyStyle` with a custom implementation.
		   *
		   * This modifier has `850` as `order` value to maintain backward compatibility
		   * with previous versions of Popper.js. Expect the modifiers ordering method
		   * to change in future major versions of the library.
		   *
		   * @memberof modifiers
		   * @inner
		   */
		  computeStyle: {
		    /** @prop {number} order=850 - Index used to define the order of execution */
		    order: 850,
		    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
		    enabled: true,
		    /** @prop {ModifierFn} */
		    fn: computeStyle,
		    /**
		     * @prop {Boolean} gpuAcceleration=true
		     * If true, it uses the CSS 3d transformation to position the popper.
		     * Otherwise, it will use the `top` and `left` properties.
		     */
		    gpuAcceleration: true,
		    /**
		     * @prop {string} [x='bottom']
		     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
		     * Change this if your popper should grow in a direction different from `bottom`
		     */
		    x: 'bottom',
		    /**
		     * @prop {string} [x='left']
		     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
		     * Change this if your popper should grow in a direction different from `right`
		     */
		    y: 'right'
		  },

		  /**
		   * Applies the computed styles to the popper element.
		   *
		   * All the DOM manipulations are limited to this modifier. This is useful in case
		   * you want to integrate Popper.js inside a framework or view library and you
		   * want to delegate all the DOM manipulations to it.
		   *
		   * Note that if you disable this modifier, you must make sure the popper element
		   * has its position set to `absolute` before Popper.js can do its work!
		   *
		   * Just disable this modifier and define you own to achieve the desired effect.
		   *
		   * @memberof modifiers
		   * @inner
		   */
		  applyStyle: {
		    /** @prop {number} order=900 - Index used to define the order of execution */
		    order: 900,
		    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
		    enabled: true,
		    /** @prop {ModifierFn} */
		    fn: applyStyle,
		    /** @prop {Function} */
		    onLoad: applyStyleOnLoad,
		    /**
		     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
		     * @prop {Boolean} gpuAcceleration=true
		     * If true, it uses the CSS 3d transformation to position the popper.
		     * Otherwise, it will use the `top` and `left` properties.
		     */
		    gpuAcceleration: undefined
		  }
		};

		/**
		 * The `dataObject` is an object containing all the informations used by Popper.js
		 * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
		 * @name dataObject
		 * @property {Object} data.instance The Popper.js instance
		 * @property {String} data.placement Placement applied to popper
		 * @property {String} data.originalPlacement Placement originally defined on init
		 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
		 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.
		 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
		 * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)
		 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)
		 * @property {Object} data.boundaries Offsets of the popper boundaries
		 * @property {Object} data.offsets The measurements of popper, reference and arrow elements.
		 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
		 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
		 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
		 */

		/**
		 * Default options provided to Popper.js constructor.<br />
		 * These can be overriden using the `options` argument of Popper.js.<br />
		 * To override an option, simply pass as 3rd argument an object with the same
		 * structure of this object, example:
		 * ```
		 * new Popper(ref, pop, {
		 *   modifiers: {
		 *     preventOverflow: { enabled: false }
		 *   }
		 * })
		 * ```
		 * @type {Object}
		 * @static
		 * @memberof Popper
		 */
		var Defaults = {
		  /**
		   * Popper's placement
		   * @prop {Popper.placements} placement='bottom'
		   */
		  placement: 'bottom',

		  /**
		   * Set this to true if you want popper to position it self in 'fixed' mode
		   * @prop {Boolean} positionFixed=false
		   */
		  positionFixed: false,

		  /**
		   * Whether events (resize, scroll) are initially enabled
		   * @prop {Boolean} eventsEnabled=true
		   */
		  eventsEnabled: true,

		  /**
		   * Set to true if you want to automatically remove the popper when
		   * you call the `destroy` method.
		   * @prop {Boolean} removeOnDestroy=false
		   */
		  removeOnDestroy: false,

		  /**
		   * Callback called when the popper is created.<br />
		   * By default, is set to no-op.<br />
		   * Access Popper.js instance with `data.instance`.
		   * @prop {onCreate}
		   */
		  onCreate: function onCreate() {},

		  /**
		   * Callback called when the popper is updated, this callback is not called
		   * on the initialization/creation of the popper, but only on subsequent
		   * updates.<br />
		   * By default, is set to no-op.<br />
		   * Access Popper.js instance with `data.instance`.
		   * @prop {onUpdate}
		   */
		  onUpdate: function onUpdate() {},

		  /**
		   * List of modifiers used to modify the offsets before they are applied to the popper.
		   * They provide most of the functionalities of Popper.js
		   * @prop {modifiers}
		   */
		  modifiers: modifiers
		};

		/**
		 * @callback onCreate
		 * @param {dataObject} data
		 */

		/**
		 * @callback onUpdate
		 * @param {dataObject} data
		 */

		// Utils
		// Methods
		var Popper = function () {
		  /**
		   * Create a new Popper.js instance
		   * @class Popper
		   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper
		   * @param {HTMLElement} popper - The HTML element used as popper.
		   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
		   * @return {Object} instance - The generated Popper.js instance
		   */
		  function Popper(reference, popper) {
		    var _this = this;

		    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
		    classCallCheck(this, Popper);

		    this.scheduleUpdate = function () {
		      return requestAnimationFrame(_this.update);
		    };

		    // make update() debounced, so that it only runs at most once-per-tick
		    this.update = debounce(this.update.bind(this));

		    // with {} we create a new object with the options inside it
		    this.options = _extends({}, Popper.Defaults, options);

		    // init state
		    this.state = {
		      isDestroyed: false,
		      isCreated: false,
		      scrollParents: []
		    };

		    // get reference and popper elements (allow jQuery wrappers)
		    this.reference = reference && reference.jquery ? reference[0] : reference;
		    this.popper = popper && popper.jquery ? popper[0] : popper;

		    // Deep merge modifiers options
		    this.options.modifiers = {};
		    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
		      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
		    });

		    // Refactoring modifiers' list (Object => Array)
		    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
		      return _extends({
		        name: name
		      }, _this.options.modifiers[name]);
		    })
		    // sort the modifiers by order
		    .sort(function (a, b) {
		      return a.order - b.order;
		    });

		    // modifiers have the ability to execute arbitrary code when Popper.js get inited
		    // such code is executed in the same order of its modifier
		    // they could add new properties to their options configuration
		    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
		    this.modifiers.forEach(function (modifierOptions) {
		      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
		        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
		      }
		    });

		    // fire the first update to position the popper in the right place
		    this.update();

		    var eventsEnabled = this.options.eventsEnabled;
		    if (eventsEnabled) {
		      // setup event listeners, they will take care of update the position in specific situations
		      this.enableEventListeners();
		    }

		    this.state.eventsEnabled = eventsEnabled;
		  }

		  // We can't use class properties because they don't get listed in the
		  // class prototype and break stuff like Sinon stubs


		  createClass(Popper, [{
		    key: 'update',
		    value: function update$$1() {
		      return update.call(this);
		    }
		  }, {
		    key: 'destroy',
		    value: function destroy$$1() {
		      return destroy.call(this);
		    }
		  }, {
		    key: 'enableEventListeners',
		    value: function enableEventListeners$$1() {
		      return enableEventListeners.call(this);
		    }
		  }, {
		    key: 'disableEventListeners',
		    value: function disableEventListeners$$1() {
		      return disableEventListeners.call(this);
		    }

		    /**
		     * Schedule an update, it will run on the next UI update available
		     * @method scheduleUpdate
		     * @memberof Popper
		     */


		    /**
		     * Collection of utilities useful when writing custom modifiers.
		     * Starting from version 1.7, this method is available only if you
		     * include `popper-utils.js` before `popper.js`.
		     *
		     * **DEPRECATION**: This way to access PopperUtils is deprecated
		     * and will be removed in v2! Use the PopperUtils module directly instead.
		     * Due to the high instability of the methods contained in Utils, we can't
		     * guarantee them to follow semver. Use them at your own risk!
		     * @static
		     * @private
		     * @type {Object}
		     * @deprecated since version 1.8
		     * @member Utils
		     * @memberof Popper
		     */

		  }]);
		  return Popper;
		}();

		/**
		 * The `referenceObject` is an object that provides an interface compatible with Popper.js
		 * and lets you use it as replacement of a real DOM node.<br />
		 * You can use this method to position a popper relatively to a set of coordinates
		 * in case you don't have a DOM node to use as reference.
		 *
		 * ```
		 * new Popper(referenceObject, popperNode);
		 * ```
		 *
		 * NB: This feature isn't supported in Internet Explorer 10
		 * @name referenceObject
		 * @property {Function} data.getBoundingClientRect
		 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
		 * @property {number} data.clientWidth
		 * An ES6 getter that will return the width of the virtual reference element.
		 * @property {number} data.clientHeight
		 * An ES6 getter that will return the height of the virtual reference element.
		 */


		Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
		Popper.placements = placements;
		Popper.Defaults = Defaults;

		return Popper;

		})));


		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{}],956:[function(require,module,exports){
		(function (process){
		'use strict';

		if (!process.version ||
		    process.version.indexOf('v0.') === 0 ||
		    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
		  module.exports = { nextTick: nextTick };
		} else {
		  module.exports = process
		}

		function nextTick(fn, arg1, arg2, arg3) {
		  if (typeof fn !== 'function') {
		    throw new TypeError('"callback" argument must be a function');
		  }
		  var len = arguments.length;
		  var args, i;
		  switch (len) {
		  case 0:
		  case 1:
		    return process.nextTick(fn);
		  case 2:
		    return process.nextTick(function afterTickOne() {
		      fn.call(null, arg1);
		    });
		  case 3:
		    return process.nextTick(function afterTickTwo() {
		      fn.call(null, arg1, arg2);
		    });
		  case 4:
		    return process.nextTick(function afterTickThree() {
		      fn.call(null, arg1, arg2, arg3);
		    });
		  default:
		    args = new Array(len - 1);
		    i = 0;
		    while (i < args.length) {
		      args[i++] = arguments[i];
		    }
		    return process.nextTick(function afterTick() {
		      fn.apply(null, args);
		    });
		  }
		}


		}).call(this,require('_process'))
		},{"_process":957}],957:[function(require,module,exports){
		// shim for using process in browser
		var process = module.exports = {};

		// cached from whatever global is present so that test runners that stub it
		// don't break things.  But we need to wrap it in a try catch in case it is
		// wrapped in strict mode code which doesn't define any globals.  It's inside a
		// function because try/catches deoptimize in certain engines.

		var cachedSetTimeout;
		var cachedClearTimeout;

		function defaultSetTimout() {
		    throw new Error('setTimeout has not been defined');
		}
		function defaultClearTimeout () {
		    throw new Error('clearTimeout has not been defined');
		}
		(function () {
		    try {
		        if (typeof setTimeout === 'function') {
		            cachedSetTimeout = setTimeout;
		        } else {
		            cachedSetTimeout = defaultSetTimout;
		        }
		    } catch (e) {
		        cachedSetTimeout = defaultSetTimout;
		    }
		    try {
		        if (typeof clearTimeout === 'function') {
		            cachedClearTimeout = clearTimeout;
		        } else {
		            cachedClearTimeout = defaultClearTimeout;
		        }
		    } catch (e) {
		        cachedClearTimeout = defaultClearTimeout;
		    }
		} ())
		function runTimeout(fun) {
		    if (cachedSetTimeout === setTimeout) {
		        //normal enviroments in sane situations
		        return setTimeout(fun, 0);
		    }
		    // if setTimeout wasn't available but was latter defined
		    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
		        cachedSetTimeout = setTimeout;
		        return setTimeout(fun, 0);
		    }
		    try {
		        // when when somebody has screwed with setTimeout but no I.E. maddness
		        return cachedSetTimeout(fun, 0);
		    } catch(e){
		        try {
		            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
		            return cachedSetTimeout.call(null, fun, 0);
		        } catch(e){
		            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
		            return cachedSetTimeout.call(this, fun, 0);
		        }
		    }


		}
		function runClearTimeout(marker) {
		    if (cachedClearTimeout === clearTimeout) {
		        //normal enviroments in sane situations
		        return clearTimeout(marker);
		    }
		    // if clearTimeout wasn't available but was latter defined
		    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
		        cachedClearTimeout = clearTimeout;
		        return clearTimeout(marker);
		    }
		    try {
		        // when when somebody has screwed with setTimeout but no I.E. maddness
		        return cachedClearTimeout(marker);
		    } catch (e){
		        try {
		            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
		            return cachedClearTimeout.call(null, marker);
		        } catch (e){
		            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
		            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
		            return cachedClearTimeout.call(this, marker);
		        }
		    }



		}
		var queue = [];
		var draining = false;
		var currentQueue;
		var queueIndex = -1;

		function cleanUpNextTick() {
		    if (!draining || !currentQueue) {
		        return;
		    }
		    draining = false;
		    if (currentQueue.length) {
		        queue = currentQueue.concat(queue);
		    } else {
		        queueIndex = -1;
		    }
		    if (queue.length) {
		        drainQueue();
		    }
		}

		function drainQueue() {
		    if (draining) {
		        return;
		    }
		    var timeout = runTimeout(cleanUpNextTick);
		    draining = true;

		    var len = queue.length;
		    while(len) {
		        currentQueue = queue;
		        queue = [];
		        while (++queueIndex < len) {
		            if (currentQueue) {
		                currentQueue[queueIndex].run();
		            }
		        }
		        queueIndex = -1;
		        len = queue.length;
		    }
		    currentQueue = null;
		    draining = false;
		    runClearTimeout(timeout);
		}

		process.nextTick = function (fun) {
		    var args = new Array(arguments.length - 1);
		    if (arguments.length > 1) {
		        for (var i = 1; i < arguments.length; i++) {
		            args[i - 1] = arguments[i];
		        }
		    }
		    queue.push(new Item(fun, args));
		    if (queue.length === 1 && !draining) {
		        runTimeout(drainQueue);
		    }
		};

		// v8 likes predictible objects
		function Item(fun, array) {
		    this.fun = fun;
		    this.array = array;
		}
		Item.prototype.run = function () {
		    this.fun.apply(null, this.array);
		};
		process.title = 'browser';
		process.browser = true;
		process.env = {};
		process.argv = [];
		process.version = ''; // empty string to avoid regexp issues
		process.versions = {};

		function noop() {}

		process.on = noop;
		process.addListener = noop;
		process.once = noop;
		process.off = noop;
		process.removeListener = noop;
		process.removeAllListeners = noop;
		process.emit = noop;
		process.prependListener = noop;
		process.prependOnceListener = noop;

		process.listeners = function (name) { return [] }

		process.binding = function (name) {
		    throw new Error('process.binding is not supported');
		};

		process.cwd = function () { return '/' };
		process.chdir = function (dir) {
		    throw new Error('process.chdir is not supported');
		};
		process.umask = function() { return 0; };

		},{}],958:[function(require,module,exports){
		(function (process){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 */

		'use strict';

		if (process.env.NODE_ENV !== 'production') {
		  var invariant = require('fbjs/lib/invariant');
		  var warning = require('fbjs/lib/warning');
		  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
		  var loggedTypeFailures = {};
		}

		/**
		 * Assert that the values match with the type specs.
		 * Error messages are memorized and will only be shown once.
		 *
		 * @param {object} typeSpecs Map of name to a ReactPropType
		 * @param {object} values Runtime values that need to be type-checked
		 * @param {string} location e.g. "prop", "context", "child context"
		 * @param {string} componentName Name of the component for error messages.
		 * @param {?Function} getStack Returns the component stack.
		 * @private
		 */
		function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
		  if (process.env.NODE_ENV !== 'production') {
		    for (var typeSpecName in typeSpecs) {
		      if (typeSpecs.hasOwnProperty(typeSpecName)) {
		        var error;
		        // Prop type validation may throw. In case they do, we don't want to
		        // fail the render phase where it didn't fail before. So we log it.
		        // After these have been cleaned up, we'll let them throw.
		        try {
		          // This is intentionally an invariant that gets caught. It's the same
		          // behavior as without this statement except with a better message.
		          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
		          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
		        } catch (ex) {
		          error = ex;
		        }
		        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
		        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
		          // Only monitor this failure once because there tends to be a lot of the
		          // same error.
		          loggedTypeFailures[error.message] = true;

		          var stack = getStack ? getStack() : '';

		          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
		        }
		      }
		    }
		  }
		}

		module.exports = checkPropTypes;

		}).call(this,require('_process'))
		},{"./lib/ReactPropTypesSecret":962,"_process":957,"fbjs/lib/invariant":676,"fbjs/lib/warning":681}],959:[function(require,module,exports){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 */

		'use strict';

		var emptyFunction = require('fbjs/lib/emptyFunction');
		var invariant = require('fbjs/lib/invariant');
		var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');

		module.exports = function() {
		  function shim(props, propName, componentName, location, propFullName, secret) {
		    if (secret === ReactPropTypesSecret) {
		      // It is still safe when called from React.
		      return;
		    }
		    invariant(
		      false,
		      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
		      'Use PropTypes.checkPropTypes() to call them. ' +
		      'Read more at http://fb.me/use-check-prop-types'
		    );
		  };
		  shim.isRequired = shim;
		  function getShim() {
		    return shim;
		  };
		  // Important!
		  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
		  var ReactPropTypes = {
		    array: shim,
		    bool: shim,
		    func: shim,
		    number: shim,
		    object: shim,
		    string: shim,
		    symbol: shim,

		    any: shim,
		    arrayOf: getShim,
		    element: shim,
		    instanceOf: getShim,
		    node: shim,
		    objectOf: getShim,
		    oneOf: getShim,
		    oneOfType: getShim,
		    shape: getShim,
		    exact: getShim
		  };

		  ReactPropTypes.checkPropTypes = emptyFunction;
		  ReactPropTypes.PropTypes = ReactPropTypes;

		  return ReactPropTypes;
		};

		},{"./lib/ReactPropTypesSecret":962,"fbjs/lib/emptyFunction":670,"fbjs/lib/invariant":676}],960:[function(require,module,exports){
		(function (process){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 */

		'use strict';

		var emptyFunction = require('fbjs/lib/emptyFunction');
		var invariant = require('fbjs/lib/invariant');
		var warning = require('fbjs/lib/warning');
		var assign = require('object-assign');

		var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
		var checkPropTypes = require('./checkPropTypes');

		module.exports = function(isValidElement, throwOnDirectAccess) {
		  /* global Symbol */
		  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
		  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

		  /**
		   * Returns the iterator method function contained on the iterable object.
		   *
		   * Be sure to invoke the function with the iterable as context:
		   *
		   *     var iteratorFn = getIteratorFn(myIterable);
		   *     if (iteratorFn) {
		   *       var iterator = iteratorFn.call(myIterable);
		   *       ...
		   *     }
		   *
		   * @param {?object} maybeIterable
		   * @return {?function}
		   */
		  function getIteratorFn(maybeIterable) {
		    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
		    if (typeof iteratorFn === 'function') {
		      return iteratorFn;
		    }
		  }

		  /**
		   * Collection of methods that allow declaration and validation of props that are
		   * supplied to React components. Example usage:
		   *
		   *   var Props = require('ReactPropTypes');
		   *   var MyArticle = React.createClass({
		   *     propTypes: {
		   *       // An optional string prop named "description".
		   *       description: Props.string,
		   *
		   *       // A required enum prop named "category".
		   *       category: Props.oneOf(['News','Photos']).isRequired,
		   *
		   *       // A prop named "dialog" that requires an instance of Dialog.
		   *       dialog: Props.instanceOf(Dialog).isRequired
		   *     },
		   *     render: function() { ... }
		   *   });
		   *
		   * A more formal specification of how these methods are used:
		   *
		   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
		   *   decl := ReactPropTypes.{type}(.isRequired)?
		   *
		   * Each and every declaration produces a function with the same signature. This
		   * allows the creation of custom validation functions. For example:
		   *
		   *  var MyLink = React.createClass({
		   *    propTypes: {
		   *      // An optional string or URI prop named "href".
		   *      href: function(props, propName, componentName) {
		   *        var propValue = props[propName];
		   *        if (propValue != null && typeof propValue !== 'string' &&
		   *            !(propValue instanceof URI)) {
		   *          return new Error(
		   *            'Expected a string or an URI for ' + propName + ' in ' +
		   *            componentName
		   *          );
		   *        }
		   *      }
		   *    },
		   *    render: function() {...}
		   *  });
		   *
		   * @internal
		   */

		  var ANONYMOUS = '<<anonymous>>';

		  // Important!
		  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
		  var ReactPropTypes = {
		    array: createPrimitiveTypeChecker('array'),
		    bool: createPrimitiveTypeChecker('boolean'),
		    func: createPrimitiveTypeChecker('function'),
		    number: createPrimitiveTypeChecker('number'),
		    object: createPrimitiveTypeChecker('object'),
		    string: createPrimitiveTypeChecker('string'),
		    symbol: createPrimitiveTypeChecker('symbol'),

		    any: createAnyTypeChecker(),
		    arrayOf: createArrayOfTypeChecker,
		    element: createElementTypeChecker(),
		    instanceOf: createInstanceTypeChecker,
		    node: createNodeChecker(),
		    objectOf: createObjectOfTypeChecker,
		    oneOf: createEnumTypeChecker,
		    oneOfType: createUnionTypeChecker,
		    shape: createShapeTypeChecker,
		    exact: createStrictShapeTypeChecker,
		  };

		  /**
		   * inlined Object.is polyfill to avoid requiring consumers ship their own
		   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		   */
		  /*eslint-disable no-self-compare*/
		  function is(x, y) {
		    // SameValue algorithm
		    if (x === y) {
		      // Steps 1-5, 7-10
		      // Steps 6.b-6.e: +0 != -0
		      return x !== 0 || 1 / x === 1 / y;
		    } else {
		      // Step 6.a: NaN == NaN
		      return x !== x && y !== y;
		    }
		  }
		  /*eslint-enable no-self-compare*/

		  /**
		   * We use an Error-like object for backward compatibility as people may call
		   * PropTypes directly and inspect their output. However, we don't use real
		   * Errors anymore. We don't inspect their stack anyway, and creating them
		   * is prohibitively expensive if they are created too often, such as what
		   * happens in oneOfType() for any type before the one that matched.
		   */
		  function PropTypeError(message) {
		    this.message = message;
		    this.stack = '';
		  }
		  // Make `instanceof Error` still work for returned errors.
		  PropTypeError.prototype = Error.prototype;

		  function createChainableTypeChecker(validate) {
		    if (process.env.NODE_ENV !== 'production') {
		      var manualPropTypeCallCache = {};
		      var manualPropTypeWarningCount = 0;
		    }
		    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
		      componentName = componentName || ANONYMOUS;
		      propFullName = propFullName || propName;

		      if (secret !== ReactPropTypesSecret) {
		        if (throwOnDirectAccess) {
		          // New behavior only for users of `prop-types` package
		          invariant(
		            false,
		            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
		            'Use `PropTypes.checkPropTypes()` to call them. ' +
		            'Read more at http://fb.me/use-check-prop-types'
		          );
		        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
		          // Old behavior for people using React.PropTypes
		          var cacheKey = componentName + ':' + propName;
		          if (
		            !manualPropTypeCallCache[cacheKey] &&
		            // Avoid spamming the console because they are often not actionable except for lib authors
		            manualPropTypeWarningCount < 3
		          ) {
		            warning(
		              false,
		              'You are manually calling a React.PropTypes validation ' +
		              'function for the `%s` prop on `%s`. This is deprecated ' +
		              'and will throw in the standalone `prop-types` package. ' +
		              'You may be seeing this warning due to a third-party PropTypes ' +
		              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
		              propFullName,
		              componentName
		            );
		            manualPropTypeCallCache[cacheKey] = true;
		            manualPropTypeWarningCount++;
		          }
		        }
		      }
		      if (props[propName] == null) {
		        if (isRequired) {
		          if (props[propName] === null) {
		            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
		          }
		          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
		        }
		        return null;
		      } else {
		        return validate(props, propName, componentName, location, propFullName);
		      }
		    }

		    var chainedCheckType = checkType.bind(null, false);
		    chainedCheckType.isRequired = checkType.bind(null, true);

		    return chainedCheckType;
		  }

		  function createPrimitiveTypeChecker(expectedType) {
		    function validate(props, propName, componentName, location, propFullName, secret) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== expectedType) {
		        // `propValue` being instance of, say, date/regexp, pass the 'object'
		        // check, but we can offer a more precise error message here rather than
		        // 'of type `object`'.
		        var preciseType = getPreciseType(propValue);

		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }

		  function createAnyTypeChecker() {
		    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
		  }

		  function createArrayOfTypeChecker(typeChecker) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (typeof typeChecker !== 'function') {
		        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
		      }
		      var propValue = props[propName];
		      if (!Array.isArray(propValue)) {
		        var propType = getPropType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
		      }
		      for (var i = 0; i < propValue.length; i++) {
		        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
		        if (error instanceof Error) {
		          return error;
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }

		  function createElementTypeChecker() {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      if (!isValidElement(propValue)) {
		        var propType = getPropType(propValue);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }

		  function createInstanceTypeChecker(expectedClass) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (!(props[propName] instanceof expectedClass)) {
		        var expectedClassName = expectedClass.name || ANONYMOUS;
		        var actualClassName = getClassName(props[propName]);
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }

		  function createEnumTypeChecker(expectedValues) {
		    if (!Array.isArray(expectedValues)) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
		      return emptyFunction.thatReturnsNull;
		    }

		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      for (var i = 0; i < expectedValues.length; i++) {
		        if (is(propValue, expectedValues[i])) {
		          return null;
		        }
		      }

		      var valuesString = JSON.stringify(expectedValues);
		      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
		    }
		    return createChainableTypeChecker(validate);
		  }

		  function createObjectOfTypeChecker(typeChecker) {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (typeof typeChecker !== 'function') {
		        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
		      }
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
		      }
		      for (var key in propValue) {
		        if (propValue.hasOwnProperty(key)) {
		          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		          if (error instanceof Error) {
		            return error;
		          }
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }

		  function createUnionTypeChecker(arrayOfTypeCheckers) {
		    if (!Array.isArray(arrayOfTypeCheckers)) {
		      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
		      return emptyFunction.thatReturnsNull;
		    }

		    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
		      var checker = arrayOfTypeCheckers[i];
		      if (typeof checker !== 'function') {
		        warning(
		          false,
		          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
		          'received %s at index %s.',
		          getPostfixForTypeWarning(checker),
		          i
		        );
		        return emptyFunction.thatReturnsNull;
		      }
		    }

		    function validate(props, propName, componentName, location, propFullName) {
		      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
		        var checker = arrayOfTypeCheckers[i];
		        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
		          return null;
		        }
		      }

		      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
		    }
		    return createChainableTypeChecker(validate);
		  }

		  function createNodeChecker() {
		    function validate(props, propName, componentName, location, propFullName) {
		      if (!isNode(props[propName])) {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }

		  function createShapeTypeChecker(shapeTypes) {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
		      }
		      for (var key in shapeTypes) {
		        var checker = shapeTypes[key];
		        if (!checker) {
		          continue;
		        }
		        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		        if (error) {
		          return error;
		        }
		      }
		      return null;
		    }
		    return createChainableTypeChecker(validate);
		  }

		  function createStrictShapeTypeChecker(shapeTypes) {
		    function validate(props, propName, componentName, location, propFullName) {
		      var propValue = props[propName];
		      var propType = getPropType(propValue);
		      if (propType !== 'object') {
		        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
		      }
		      // We need to check all keys in case some are required but missing from
		      // props.
		      var allKeys = assign({}, props[propName], shapeTypes);
		      for (var key in allKeys) {
		        var checker = shapeTypes[key];
		        if (!checker) {
		          return new PropTypeError(
		            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
		            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
		            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
		          );
		        }
		        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
		        if (error) {
		          return error;
		        }
		      }
		      return null;
		    }

		    return createChainableTypeChecker(validate);
		  }

		  function isNode(propValue) {
		    switch (typeof propValue) {
		      case 'number':
		      case 'string':
		      case 'undefined':
		        return true;
		      case 'boolean':
		        return !propValue;
		      case 'object':
		        if (Array.isArray(propValue)) {
		          return propValue.every(isNode);
		        }
		        if (propValue === null || isValidElement(propValue)) {
		          return true;
		        }

		        var iteratorFn = getIteratorFn(propValue);
		        if (iteratorFn) {
		          var iterator = iteratorFn.call(propValue);
		          var step;
		          if (iteratorFn !== propValue.entries) {
		            while (!(step = iterator.next()).done) {
		              if (!isNode(step.value)) {
		                return false;
		              }
		            }
		          } else {
		            // Iterator will provide entry [k,v] tuples rather than values.
		            while (!(step = iterator.next()).done) {
		              var entry = step.value;
		              if (entry) {
		                if (!isNode(entry[1])) {
		                  return false;
		                }
		              }
		            }
		          }
		        } else {
		          return false;
		        }

		        return true;
		      default:
		        return false;
		    }
		  }

		  function isSymbol(propType, propValue) {
		    // Native Symbol.
		    if (propType === 'symbol') {
		      return true;
		    }

		    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
		    if (propValue['@@toStringTag'] === 'Symbol') {
		      return true;
		    }

		    // Fallback for non-spec compliant Symbols which are polyfilled.
		    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
		      return true;
		    }

		    return false;
		  }

		  // Equivalent of `typeof` but with special handling for array and regexp.
		  function getPropType(propValue) {
		    var propType = typeof propValue;
		    if (Array.isArray(propValue)) {
		      return 'array';
		    }
		    if (propValue instanceof RegExp) {
		      // Old webkits (at least until Android 4.0) return 'function' rather than
		      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
		      // passes PropTypes.object.
		      return 'object';
		    }
		    if (isSymbol(propType, propValue)) {
		      return 'symbol';
		    }
		    return propType;
		  }

		  // This handles more types than `getPropType`. Only used for error messages.
		  // See `createPrimitiveTypeChecker`.
		  function getPreciseType(propValue) {
		    if (typeof propValue === 'undefined' || propValue === null) {
		      return '' + propValue;
		    }
		    var propType = getPropType(propValue);
		    if (propType === 'object') {
		      if (propValue instanceof Date) {
		        return 'date';
		      } else if (propValue instanceof RegExp) {
		        return 'regexp';
		      }
		    }
		    return propType;
		  }

		  // Returns a string that is postfixed to a warning about an invalid type.
		  // For example, "undefined" or "of type array"
		  function getPostfixForTypeWarning(value) {
		    var type = getPreciseType(value);
		    switch (type) {
		      case 'array':
		      case 'object':
		        return 'an ' + type;
		      case 'boolean':
		      case 'date':
		      case 'regexp':
		        return 'a ' + type;
		      default:
		        return type;
		    }
		  }

		  // Returns class name of the object, if any.
		  function getClassName(propValue) {
		    if (!propValue.constructor || !propValue.constructor.name) {
		      return ANONYMOUS;
		    }
		    return propValue.constructor.name;
		  }

		  ReactPropTypes.checkPropTypes = checkPropTypes;
		  ReactPropTypes.PropTypes = ReactPropTypes;

		  return ReactPropTypes;
		};

		}).call(this,require('_process'))
		},{"./checkPropTypes":958,"./lib/ReactPropTypesSecret":962,"_process":957,"fbjs/lib/emptyFunction":670,"fbjs/lib/invariant":676,"fbjs/lib/warning":681,"object-assign":954}],961:[function(require,module,exports){
		(function (process){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 */

		if (process.env.NODE_ENV !== 'production') {
		  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
		    Symbol.for &&
		    Symbol.for('react.element')) ||
		    0xeac7;

		  var isValidElement = function(object) {
		    return typeof object === 'object' &&
		      object !== null &&
		      object.$$typeof === REACT_ELEMENT_TYPE;
		  };

		  // By explicitly using `prop-types` you are opting into new development behavior.
		  // http://fb.me/prop-types-in-prod
		  var throwOnDirectAccess = true;
		  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);
		} else {
		  // By explicitly using `prop-types` you are opting into new production behavior.
		  // http://fb.me/prop-types-in-prod
		  module.exports = require('./factoryWithThrowingShims')();
		}

		}).call(this,require('_process'))
		},{"./factoryWithThrowingShims":959,"./factoryWithTypeCheckers":960,"_process":957}],962:[function(require,module,exports){
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 */

		'use strict';

		var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

		module.exports = ReactPropTypesSecret;

		},{}],963:[function(require,module,exports){
		// Copyright Joyent, Inc. and other Node contributors.
		//
		// Permission is hereby granted, free of charge, to any person obtaining a
		// copy of this software and associated documentation files (the
		// "Software"), to deal in the Software without restriction, including
		// without limitation the rights to use, copy, modify, merge, publish,
		// distribute, sublicense, and/or sell copies of the Software, and to permit
		// persons to whom the Software is furnished to do so, subject to the
		// following conditions:
		//
		// The above copyright notice and this permission notice shall be included
		// in all copies or substantial portions of the Software.
		//
		// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
		// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
		// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
		// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
		// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
		// USE OR OTHER DEALINGS IN THE SOFTWARE.

		'use strict';

		// If obj.hasOwnProperty has been overridden, then calling
		// obj.hasOwnProperty(prop) will break.
		// See: https://github.com/joyent/node/issues/1707
		function hasOwnProperty(obj, prop) {
		  return Object.prototype.hasOwnProperty.call(obj, prop);
		}

		module.exports = function(qs, sep, eq, options) {
		  sep = sep || '&';
		  eq = eq || '=';
		  var obj = {};

		  if (typeof qs !== 'string' || qs.length === 0) {
		    return obj;
		  }

		  var regexp = /\+/g;
		  qs = qs.split(sep);

		  var maxKeys = 1000;
		  if (options && typeof options.maxKeys === 'number') {
		    maxKeys = options.maxKeys;
		  }

		  var len = qs.length;
		  // maxKeys <= 0 means that we should not limit keys count
		  if (maxKeys > 0 && len > maxKeys) {
		    len = maxKeys;
		  }

		  for (var i = 0; i < len; ++i) {
		    var x = qs[i].replace(regexp, '%20'),
		        idx = x.indexOf(eq),
		        kstr, vstr, k, v;

		    if (idx >= 0) {
		      kstr = x.substr(0, idx);
		      vstr = x.substr(idx + 1);
		    } else {
		      kstr = x;
		      vstr = '';
		    }

		    k = decodeURIComponent(kstr);
		    v = decodeURIComponent(vstr);

		    if (!hasOwnProperty(obj, k)) {
		      obj[k] = v;
		    } else if (isArray(obj[k])) {
		      obj[k].push(v);
		    } else {
		      obj[k] = [obj[k], v];
		    }
		  }

		  return obj;
		};

		var isArray = Array.isArray || function (xs) {
		  return Object.prototype.toString.call(xs) === '[object Array]';
		};

		},{}],964:[function(require,module,exports){
		// Copyright Joyent, Inc. and other Node contributors.
		//
		// Permission is hereby granted, free of charge, to any person obtaining a
		// copy of this software and associated documentation files (the
		// "Software"), to deal in the Software without restriction, including
		// without limitation the rights to use, copy, modify, merge, publish,
		// distribute, sublicense, and/or sell copies of the Software, and to permit
		// persons to whom the Software is furnished to do so, subject to the
		// following conditions:
		//
		// The above copyright notice and this permission notice shall be included
		// in all copies or substantial portions of the Software.
		//
		// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
		// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
		// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
		// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
		// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
		// USE OR OTHER DEALINGS IN THE SOFTWARE.

		'use strict';

		var stringifyPrimitive = function(v) {
		  switch (typeof v) {
		    case 'string':
		      return v;

		    case 'boolean':
		      return v ? 'true' : 'false';

		    case 'number':
		      return isFinite(v) ? v : '';

		    default:
		      return '';
		  }
		};

		module.exports = function(obj, sep, eq, name) {
		  sep = sep || '&';
		  eq = eq || '=';
		  if (obj === null) {
		    obj = undefined;
		  }

		  if (typeof obj === 'object') {
		    return map(objectKeys(obj), function(k) {
		      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
		      if (isArray(obj[k])) {
		        return map(obj[k], function(v) {
		          return ks + encodeURIComponent(stringifyPrimitive(v));
		        }).join(sep);
		      } else {
		        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
		      }
		    }).join(sep);

		  }

		  if (!name) return '';
		  return encodeURIComponent(stringifyPrimitive(name)) + eq +
		         encodeURIComponent(stringifyPrimitive(obj));
		};

		var isArray = Array.isArray || function (xs) {
		  return Object.prototype.toString.call(xs) === '[object Array]';
		};

		function map (xs, f) {
		  if (xs.map) return xs.map(f);
		  var res = [];
		  for (var i = 0; i < xs.length; i++) {
		    res.push(f(xs[i], i));
		  }
		  return res;
		}

		var objectKeys = Object.keys || function (obj) {
		  var res = [];
		  for (var key in obj) {
		    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
		  }
		  return res;
		};

		},{}],965:[function(require,module,exports){
		'use strict';

		exports.decode = exports.parse = require('./decode');
		exports.encode = exports.stringify = require('./encode');

		},{"./decode":963,"./encode":964}],966:[function(require,module,exports){
		var global = require('global')

		/**
		 * `requestAnimationFrame()`
		 */

		var request = global.requestAnimationFrame
		  || global.webkitRequestAnimationFrame
		  || global.mozRequestAnimationFrame
		  || fallback

		var prev = +new Date
		function fallback (fn) {
		  var curr = +new Date
		  var ms = Math.max(0, 16 - (curr - prev))
		  var req = setTimeout(fn, ms)
		  return prev = curr, req
		}

		/**
		 * `cancelAnimationFrame()`
		 */

		var cancel = global.cancelAnimationFrame
		  || global.webkitCancelAnimationFrame
		  || global.mozCancelAnimationFrame
		  || clearTimeout

		if (Function.prototype.bind) {
		  request = request.bind(global)
		  cancel = cancel.bind(global)
		}

		exports = module.exports = request
		exports.cancel = cancel

		},{"global":682}],967:[function(require,module,exports){
		(function (global){
		'use strict';

		/**
		 * Copyright (c) 2015-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 */

		(function(f) {
		  if (typeof exports === 'object' && typeof module !== 'undefined') {
		    module.exports = f(require('react'));
		    /* global define */
		  } else if (typeof define === 'function' && define.amd) {
		    define(['react'], f);
		  } else {
		    var g;
		    if (typeof window !== 'undefined') {
		      g = window;
		    } else if (typeof global !== 'undefined') {
		      g = global;
		    } else if (typeof self !== 'undefined') {
		      g = self;
		    } else {
		      g = this;
		    }

		    if (typeof g.React === 'undefined') {
		      throw Error('React module should be required before ReactDOMFactories');
		    }

		    g.ReactDOMFactories = f(g.React);
		  }
		})(function(React) {
		  /**
		   * Create a factory that creates HTML tag elements.
		   */
		  function createDOMFactory(type) {
		    var factory = React.createElement.bind(null, type);
		    // Expose the type on the factory and the prototype so that it can be
		    // easily accessed on elements. E.g. `<Foo />.type === Foo`.
		    // This should not be named `constructor` since this may not be the function
		    // that created the element, and it may not even be a constructor.
		    factory.type = type;
		    return factory;
		  };

		  /**
		   * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
		   */
		  var ReactDOMFactories = {
		    a: createDOMFactory('a'),
		    abbr: createDOMFactory('abbr'),
		    address: createDOMFactory('address'),
		    area: createDOMFactory('area'),
		    article: createDOMFactory('article'),
		    aside: createDOMFactory('aside'),
		    audio: createDOMFactory('audio'),
		    b: createDOMFactory('b'),
		    base: createDOMFactory('base'),
		    bdi: createDOMFactory('bdi'),
		    bdo: createDOMFactory('bdo'),
		    big: createDOMFactory('big'),
		    blockquote: createDOMFactory('blockquote'),
		    body: createDOMFactory('body'),
		    br: createDOMFactory('br'),
		    button: createDOMFactory('button'),
		    canvas: createDOMFactory('canvas'),
		    caption: createDOMFactory('caption'),
		    cite: createDOMFactory('cite'),
		    code: createDOMFactory('code'),
		    col: createDOMFactory('col'),
		    colgroup: createDOMFactory('colgroup'),
		    data: createDOMFactory('data'),
		    datalist: createDOMFactory('datalist'),
		    dd: createDOMFactory('dd'),
		    del: createDOMFactory('del'),
		    details: createDOMFactory('details'),
		    dfn: createDOMFactory('dfn'),
		    dialog: createDOMFactory('dialog'),
		    div: createDOMFactory('div'),
		    dl: createDOMFactory('dl'),
		    dt: createDOMFactory('dt'),
		    em: createDOMFactory('em'),
		    embed: createDOMFactory('embed'),
		    fieldset: createDOMFactory('fieldset'),
		    figcaption: createDOMFactory('figcaption'),
		    figure: createDOMFactory('figure'),
		    footer: createDOMFactory('footer'),
		    form: createDOMFactory('form'),
		    h1: createDOMFactory('h1'),
		    h2: createDOMFactory('h2'),
		    h3: createDOMFactory('h3'),
		    h4: createDOMFactory('h4'),
		    h5: createDOMFactory('h5'),
		    h6: createDOMFactory('h6'),
		    head: createDOMFactory('head'),
		    header: createDOMFactory('header'),
		    hgroup: createDOMFactory('hgroup'),
		    hr: createDOMFactory('hr'),
		    html: createDOMFactory('html'),
		    i: createDOMFactory('i'),
		    iframe: createDOMFactory('iframe'),
		    img: createDOMFactory('img'),
		    input: createDOMFactory('input'),
		    ins: createDOMFactory('ins'),
		    kbd: createDOMFactory('kbd'),
		    keygen: createDOMFactory('keygen'),
		    label: createDOMFactory('label'),
		    legend: createDOMFactory('legend'),
		    li: createDOMFactory('li'),
		    link: createDOMFactory('link'),
		    main: createDOMFactory('main'),
		    map: createDOMFactory('map'),
		    mark: createDOMFactory('mark'),
		    menu: createDOMFactory('menu'),
		    menuitem: createDOMFactory('menuitem'),
		    meta: createDOMFactory('meta'),
		    meter: createDOMFactory('meter'),
		    nav: createDOMFactory('nav'),
		    noscript: createDOMFactory('noscript'),
		    object: createDOMFactory('object'),
		    ol: createDOMFactory('ol'),
		    optgroup: createDOMFactory('optgroup'),
		    option: createDOMFactory('option'),
		    output: createDOMFactory('output'),
		    p: createDOMFactory('p'),
		    param: createDOMFactory('param'),
		    picture: createDOMFactory('picture'),
		    pre: createDOMFactory('pre'),
		    progress: createDOMFactory('progress'),
		    q: createDOMFactory('q'),
		    rp: createDOMFactory('rp'),
		    rt: createDOMFactory('rt'),
		    ruby: createDOMFactory('ruby'),
		    s: createDOMFactory('s'),
		    samp: createDOMFactory('samp'),
		    script: createDOMFactory('script'),
		    section: createDOMFactory('section'),
		    select: createDOMFactory('select'),
		    small: createDOMFactory('small'),
		    source: createDOMFactory('source'),
		    span: createDOMFactory('span'),
		    strong: createDOMFactory('strong'),
		    style: createDOMFactory('style'),
		    sub: createDOMFactory('sub'),
		    summary: createDOMFactory('summary'),
		    sup: createDOMFactory('sup'),
		    table: createDOMFactory('table'),
		    tbody: createDOMFactory('tbody'),
		    td: createDOMFactory('td'),
		    textarea: createDOMFactory('textarea'),
		    tfoot: createDOMFactory('tfoot'),
		    th: createDOMFactory('th'),
		    thead: createDOMFactory('thead'),
		    time: createDOMFactory('time'),
		    title: createDOMFactory('title'),
		    tr: createDOMFactory('tr'),
		    track: createDOMFactory('track'),
		    u: createDOMFactory('u'),
		    ul: createDOMFactory('ul'),
		    var: createDOMFactory('var'),
		    video: createDOMFactory('video'),
		    wbr: createDOMFactory('wbr'),

		    // SVG
		    circle: createDOMFactory('circle'),
		    clipPath: createDOMFactory('clipPath'),
		    defs: createDOMFactory('defs'),
		    ellipse: createDOMFactory('ellipse'),
		    g: createDOMFactory('g'),
		    image: createDOMFactory('image'),
		    line: createDOMFactory('line'),
		    linearGradient: createDOMFactory('linearGradient'),
		    mask: createDOMFactory('mask'),
		    path: createDOMFactory('path'),
		    pattern: createDOMFactory('pattern'),
		    polygon: createDOMFactory('polygon'),
		    polyline: createDOMFactory('polyline'),
		    radialGradient: createDOMFactory('radialGradient'),
		    rect: createDOMFactory('rect'),
		    stop: createDOMFactory('stop'),
		    svg: createDOMFactory('svg'),
		    text: createDOMFactory('text'),
		    tspan: createDOMFactory('tspan'),
		  };

		  // due to wrapper and conditionals at the top, this will either become
		  // `module.exports ReactDOMFactories` if that is available,
		  // otherwise it will be defined via `define(['react'], ReactDOMFactories)`
		  // if that is available,
		  // otherwise it will be defined as global variable.
		  return ReactDOMFactories;
		});


		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"react":1016}],968:[function(require,module,exports){
		/** @license React v16.2.0
		 * react-dom-server.node.production.min.js
		 *
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 */

		'use strict';var k=require("object-assign"),r=require("react"),aa=require("fbjs/lib/emptyFunction"),t=require("fbjs/lib/emptyObject"),ba=require("fbjs/lib/hyphenateStyleName"),ca=require("fbjs/lib/memoizeStringOnly"),da=require("stream");
		function w(a){for(var b=arguments.length-1,g="Minified React error #"+a+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d"+a,c=0;c<b;c++)g+="\x26args[]\x3d"+encodeURIComponent(arguments[c+1]);b=Error(g+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name="Invariant Violation";b.framesToPop=1;throw b;}
		var x={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function z(a,b){return(a&b)===b}
		var B={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=B,g=a.Properties||{},c=a.DOMAttributeNamespaces||{},h=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in g){C.hasOwnProperty(f)?w("48",f):void 0;var e=f.toLowerCase(),d=g[f];e={attributeName:e,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:z(d,b.MUST_USE_PROPERTY),
		hasBooleanValue:z(d,b.HAS_BOOLEAN_VALUE),hasNumericValue:z(d,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:z(d,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:z(d,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:z(d,b.HAS_STRING_BOOLEAN_VALUE)};1>=e.hasBooleanValue+e.hasNumericValue+e.hasOverloadedBooleanValue?void 0:w("50",f);h.hasOwnProperty(f)&&(e.attributeName=h[f]);c.hasOwnProperty(f)&&(e.attributeNamespace=c[f]);a.hasOwnProperty(f)&&(e.mutationMethod=a[f]);C[f]=e}}},C={};
		function ea(a,b){if(x.hasOwnProperty(a)||2<a.length&&("o"===a[0]||"O"===a[0])&&("n"===a[1]||"N"===a[1]))return!1;if(null===b)return!0;switch(typeof b){case "boolean":return D(a);case "undefined":case "number":case "string":case "object":return!0;default:return!1}}function E(a){return C.hasOwnProperty(a)?C[a]:null}
		function D(a){if(x.hasOwnProperty(a))return!0;var b=E(a);if(b)return b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue;a=a.toLowerCase().slice(0,5);return"data-"===a||"aria-"===a}
		var F=B,G=F.MUST_USE_PROPERTY,H=F.HAS_BOOLEAN_VALUE,I=F.HAS_NUMERIC_VALUE,J=F.HAS_POSITIVE_NUMERIC_VALUE,K=F.HAS_OVERLOADED_BOOLEAN_VALUE,L=F.HAS_STRING_BOOLEAN_VALUE,fa={Properties:{allowFullScreen:H,async:H,autoFocus:H,autoPlay:H,capture:K,checked:G|H,cols:J,contentEditable:L,controls:H,"default":H,defer:H,disabled:H,download:K,draggable:L,formNoValidate:H,hidden:H,loop:H,multiple:G|H,muted:G|H,noValidate:H,open:H,playsInline:H,readOnly:H,required:H,reversed:H,rows:J,rowSpan:I,scoped:H,seamless:H,
		selected:G|H,size:J,start:I,span:J,spellCheck:L,style:0,tabIndex:0,itemScope:H,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:L},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute("value");"number"!==a.type||!1===a.hasAttribute("value")?a.setAttribute("value",""+b):a.validity&&!a.validity.badInput&&a.ownerDocument.activeElement!==a&&a.setAttribute("value",""+
		b)}}},M=F.HAS_STRING_BOOLEAN_VALUE,N={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},O={Properties:{autoReverse:M,externalResourcesRequired:M,preserveAlpha:M},DOMAttributeNames:{autoReverse:"autoReverse",externalResourcesRequired:"externalResourcesRequired",preserveAlpha:"preserveAlpha"},DOMAttributeNamespaces:{xlinkActuate:N.xlink,xlinkArcrole:N.xlink,xlinkHref:N.xlink,xlinkRole:N.xlink,xlinkShow:N.xlink,xlinkTitle:N.xlink,xlinkType:N.xlink,xmlBase:N.xml,xmlLang:N.xml,
		xmlSpace:N.xml}},ha=/[\-\:]([a-z])/g;function ia(a){return a[1].toUpperCase()}
		"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function(a){var b=a.replace(ha,
		ia);O.Properties[b]=0;O.DOMAttributeNames[b]=a});F.injectDOMPropertyConfig(fa);F.injectDOMPropertyConfig(O);var P="function"===typeof Symbol&&Symbol["for"]?Symbol["for"]("react.fragment"):60107,ja=/["'&<>]/;
		function Q(a){if("boolean"===typeof a||"number"===typeof a)return""+a;a=""+a;var b=ja.exec(a);if(b){var g="",c,h=0;for(c=b.index;c<a.length;c++){switch(a.charCodeAt(c)){case 34:b="\x26quot;";break;case 38:b="\x26amp;";break;case 39:b="\x26#x27;";break;case 60:b="\x26lt;";break;case 62:b="\x26gt;";break;default:continue}h!==c&&(g+=a.substring(h,c));h=c+1;g+=b}a=h!==c?g+a.substring(h,c):g}return a}
		var ka=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,R={},S={};function la(a){if(S.hasOwnProperty(a))return!0;if(R.hasOwnProperty(a))return!1;if(ka.test(a))return S[a]=!0;R[a]=!0;return!1}
		function ma(a,b){var g=E(a);if(g){if(null==b||g.hasBooleanValue&&!b||g.hasNumericValue&&isNaN(b)||g.hasPositiveNumericValue&&1>b||g.hasOverloadedBooleanValue&&!1===b)return"";var c=g.attributeName;if(g.hasBooleanValue||g.hasOverloadedBooleanValue&&!0===b)return c+'\x3d""';if("boolean"!==typeof b||D(a))return c+"\x3d"+('"'+Q(b)+'"')}else if(ea(a,b))return null==b?"":a+"\x3d"+('"'+Q(b)+'"');return null}var T={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
		function U(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}
		var V={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},na=k({menuitem:!0},V),W={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,
		fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},oa=["Webkit","ms","Moz","O"];Object.keys(W).forEach(function(a){oa.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);W[b]=W[a]})});var X=r.Children.toArray,pa=aa.thatReturns(""),qa={listing:!0,pre:!0,textarea:!0};
		function ra(a){return"string"===typeof a?a:"function"===typeof a?a.displayName||a.name:null}var sa=/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,ta={},ua=ca(function(a){return ba(a)});function va(a){var b="";r.Children.forEach(a,function(a){null==a||"string"!==typeof a&&"number"!==typeof a||(b+=a)});return b}function wa(a,b){if(a=a.contextTypes){var g={},c;for(c in a)g[c]=b[c];b=g}else b=t;return b}var xa={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null,suppressHydrationWarning:null};
		function ya(a,b){void 0===a&&w("152",ra(b)||"Component")}
		function za(a,b){for(;r.isValidElement(a);){var g=a,c=g.type;if("function"!==typeof c)break;a=wa(c,b);var h=[],f=!1,e={isMounted:function(){return!1},enqueueForceUpdate:function(){if(null===h)return null},enqueueReplaceState:function(a,b){f=!0;h=[b]},enqueueSetState:function(a,b){if(null===h)return null;h.push(b)}};if(c.prototype&&c.prototype.isReactComponent)var d=new c(g.props,a,e);else if(d=c(g.props,a,e),null==d||null==d.render){a=d;ya(a,c);continue}d.props=g.props;d.context=a;d.updater=e;e=d.state;
		void 0===e&&(d.state=e=null);if(d.componentWillMount)if(d.componentWillMount(),h.length){e=h;var n=f;h=null;f=!1;if(n&&1===e.length)d.state=e[0];else{var p=n?e[0]:d.state,l=!0;for(n=n?1:0;n<e.length;n++){var m=e[n];if(m="function"===typeof m?m.call(d,p,g.props,a):m)l?(l=!1,p=k({},p,m)):k(p,m)}d.state=p}}else h=null;a=d.render();ya(a,c);if("function"===typeof d.getChildContext&&(g=c.childContextTypes,"object"===typeof g)){var A=d.getChildContext();for(var y in A)y in g?void 0:w("108",ra(c)||"Unknown",
		y)}A&&(b=k({},b,A))}return{child:a,context:b}}
		var Y=function(){function a(b,g){if(!(this instanceof a))throw new TypeError("Cannot call a class as a function");r.isValidElement(b)?b.type!==P?b=[b]:(b=b.props.children,b=r.isValidElement(b)?[b]:X(b)):b=X(b);this.stack=[{domNamespace:T.html,children:b,childIndex:0,context:t,footer:""}];this.exhausted=!1;this.currentSelectValue=null;this.previousWasTextNode=!1;this.makeStaticMarkup=g}a.prototype.read=function(a){if(this.exhausted)return null;for(var b="";b.length<a;){if(0===this.stack.length){this.exhausted=
		!0;break}var c=this.stack[this.stack.length-1];if(c.childIndex>=c.children.length){var h=c.footer;b+=h;""!==h&&(this.previousWasTextNode=!1);this.stack.pop();"select"===c.tag&&(this.currentSelectValue=null)}else h=c.children[c.childIndex++],b+=this.render(h,c.context,c.domNamespace)}return b};a.prototype.render=function(a,g,c){if("string"===typeof a||"number"===typeof a){c=""+a;if(""===c)return"";if(this.makeStaticMarkup)return Q(c);if(this.previousWasTextNode)return"\x3c!-- --\x3e"+Q(c);this.previousWasTextNode=
		!0;return Q(c)}g=za(a,g);a=g.child;g=g.context;if(null===a||!1===a)return"";if(r.isValidElement(a))return a.type===P?(a=X(a.props.children),this.stack.push({domNamespace:c,children:a,childIndex:0,context:g,footer:""}),""):this.renderDOM(a,g,c);a=X(a);this.stack.push({domNamespace:c,children:a,childIndex:0,context:g,footer:""});return""};a.prototype.renderDOM=function(a,g,c){var b=a.type.toLowerCase();c===T.html&&U(b);ta.hasOwnProperty(b)||(sa.test(b)?void 0:w("65",b),ta[b]=!0);var f=a.props;if("input"===
		b)f=k({type:void 0},f,{defaultChecked:void 0,defaultValue:void 0,value:null!=f.value?f.value:f.defaultValue,checked:null!=f.checked?f.checked:f.defaultChecked});else if("textarea"===b){var e=f.value;if(null==e){e=f.defaultValue;var d=f.children;null!=d&&(null!=e?w("92"):void 0,Array.isArray(d)&&(1>=d.length?void 0:w("93"),d=d[0]),e=""+d);null==e&&(e="")}f=k({},f,{value:void 0,children:""+e})}else if("select"===b)this.currentSelectValue=null!=f.value?f.value:f.defaultValue,f=k({},f,{value:void 0});
		else if("option"===b){d=this.currentSelectValue;var n=va(f.children);if(null!=d){var p=null!=f.value?f.value+"":n;e=!1;if(Array.isArray(d))for(var l=0;l<d.length;l++){if(""+d[l]===p){e=!0;break}}else e=""+d===p;f=k({selected:void 0,children:void 0},f,{selected:e,children:n})}}if(e=f)na[b]&&(null!=e.children||null!=e.dangerouslySetInnerHTML?w("137",b,pa()):void 0),null!=e.dangerouslySetInnerHTML&&(null!=e.children?w("60"):void 0,"object"===typeof e.dangerouslySetInnerHTML&&"__html"in e.dangerouslySetInnerHTML?
		void 0:w("61")),null!=e.style&&"object"!==typeof e.style?w("62",pa()):void 0;e=f;d=this.makeStaticMarkup;n=1===this.stack.length;p="\x3c"+a.type;for(q in e)if(e.hasOwnProperty(q)){var m=e[q];if(null!=m){if("style"===q){l=void 0;var A="",y="";for(l in m)if(m.hasOwnProperty(l)){var u=0===l.indexOf("--"),v=m[l];null!=v&&(A+=y+ua(l)+":",y=l,u=null==v||"boolean"===typeof v||""===v?"":u||"number"!==typeof v||0===v||W.hasOwnProperty(y)&&W[y]?(""+v).trim():v+"px",A+=u,y=";")}m=A||null}l=null;b:if(u=b,v=e,
		-1===u.indexOf("-"))u="string"===typeof v.is;else switch(u){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":u=!1;break b;default:u=!0}u?xa.hasOwnProperty(q)||(l=q,l=la(l)&&null!=m?l+"\x3d"+('"'+Q(m)+'"'):""):l=ma(q,m);l&&(p+=" "+l)}}d||n&&(p+=' data-reactroot\x3d""');var q=p;e="";V.hasOwnProperty(b)?q+="/\x3e":(q+="\x3e",e="\x3c/"+a.type+"\x3e");a:{d=f.dangerouslySetInnerHTML;if(null!=
		d){if(null!=d.__html){d=d.__html;break a}}else if(d=f.children,"string"===typeof d||"number"===typeof d){d=Q(d);break a}d=null}null!=d?(f=[],qa[b]&&"\n"===d.charAt(0)&&(q+="\n"),q+=d):f=X(f.children);a=a.type;c=null==c||"http://www.w3.org/1999/xhtml"===c?U(a):"http://www.w3.org/2000/svg"===c&&"foreignObject"===a?"http://www.w3.org/1999/xhtml":c;this.stack.push({domNamespace:c,tag:b,children:f,childIndex:0,context:g,footer:e});this.previousWasTextNode=!1;return q};return a}();
		function Aa(a,b){if("function"!==typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function, not "+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}});b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}
		var Ba=function(a){function b(g,c){if(!(this instanceof b))throw new TypeError("Cannot call a class as a function");var h=a.call(this,{});if(!this)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");h=!h||"object"!==typeof h&&"function"!==typeof h?this:h;h.partialRenderer=new Y(g,c);return h}Aa(b,a);b.prototype._read=function(a){try{this.push(this.partialRenderer.read(a))}catch(c){this.emit("error",c)}};return b}(da.Readable),Ca={renderToString:function(a){return(new Y(a,
		!1)).read(Infinity)},renderToStaticMarkup:function(a){return(new Y(a,!0)).read(Infinity)},renderToNodeStream:function(a){return new Ba(a,!1)},renderToStaticNodeStream:function(a){return new Ba(a,!0)},version:"16.2.0"},Da=Object.freeze({default:Ca}),Z=Da&&Ca||Da;module.exports=Z["default"]?Z["default"]:Z;

		},{"fbjs/lib/emptyFunction":670,"fbjs/lib/emptyObject":671,"fbjs/lib/hyphenateStyleName":675,"fbjs/lib/memoizeStringOnly":679,"object-assign":954,"react":1016,"stream":1047}],969:[function(require,module,exports){
		(function (process){
		/** @license React v16.2.0
		 * react-dom.development.js
		 *
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 */

		'use strict';



		if (process.env.NODE_ENV !== "production") {
		  (function() {
		'use strict';

		var React = require('react');
		var invariant = require('fbjs/lib/invariant');
		var warning = require('fbjs/lib/warning');
		var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
		var _assign = require('object-assign');
		var emptyFunction = require('fbjs/lib/emptyFunction');
		var EventListener = require('fbjs/lib/EventListener');
		var getActiveElement = require('fbjs/lib/getActiveElement');
		var shallowEqual = require('fbjs/lib/shallowEqual');
		var containsNode = require('fbjs/lib/containsNode');
		var focusNode = require('fbjs/lib/focusNode');
		var emptyObject = require('fbjs/lib/emptyObject');
		var checkPropTypes = require('prop-types/checkPropTypes');
		var hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');
		var camelizeStyleName = require('fbjs/lib/camelizeStyleName');

		/**
		 * WARNING: DO NOT manually require this module.
		 * This is a replacement for `invariant(...)` used by the error code system
		 * and will _only_ be required by the corresponding babel pass.
		 * It always throws.
		 */

		!React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;

		// These attributes should be all lowercase to allow for
		// case insensitive checks
		var RESERVED_PROPS = {
		  children: true,
		  dangerouslySetInnerHTML: true,
		  defaultValue: true,
		  defaultChecked: true,
		  innerHTML: true,
		  suppressContentEditableWarning: true,
		  suppressHydrationWarning: true,
		  style: true
		};

		function checkMask(value, bitmask) {
		  return (value & bitmask) === bitmask;
		}

		var DOMPropertyInjection = {
		  /**
		   * Mapping from normalized, camelcased property names to a configuration that
		   * specifies how the associated DOM property should be accessed or rendered.
		   */
		  MUST_USE_PROPERTY: 0x1,
		  HAS_BOOLEAN_VALUE: 0x4,
		  HAS_NUMERIC_VALUE: 0x8,
		  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
		  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
		  HAS_STRING_BOOLEAN_VALUE: 0x40,

		  /**
		   * Inject some specialized knowledge about the DOM. This takes a config object
		   * with the following properties:
		   *
		   * Properties: object mapping DOM property name to one of the
		   * DOMPropertyInjection constants or null. If your attribute isn't in here,
		   * it won't get written to the DOM.
		   *
		   * DOMAttributeNames: object mapping React attribute name to the DOM
		   * attribute name. Attribute names not specified use the **lowercase**
		   * normalized name.
		   *
		   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
		   * attribute namespace URL. (Attribute names not specified use no namespace.)
		   *
		   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
		   * Property names not specified use the normalized name.
		   *
		   * DOMMutationMethods: Properties that require special mutation methods. If
		   * `value` is undefined, the mutation method should unset the property.
		   *
		   * @param {object} domPropertyConfig the config as described above.
		   */
		  injectDOMPropertyConfig: function (domPropertyConfig) {
		    var Injection = DOMPropertyInjection;
		    var Properties = domPropertyConfig.Properties || {};
		    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
		    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
		    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

		    for (var propName in Properties) {
		      !!properties.hasOwnProperty(propName) ? invariant(false, "injectDOMPropertyConfig(...): You're trying to inject DOM property '%s' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.", propName) : void 0;

		      var lowerCased = propName.toLowerCase();
		      var propConfig = Properties[propName];

		      var propertyInfo = {
		        attributeName: lowerCased,
		        attributeNamespace: null,
		        propertyName: propName,
		        mutationMethod: null,

		        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
		        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
		        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
		        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
		        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE),
		        hasStringBooleanValue: checkMask(propConfig, Injection.HAS_STRING_BOOLEAN_VALUE)
		      };
		      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? invariant(false, "DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s", propName) : void 0;

		      if (DOMAttributeNames.hasOwnProperty(propName)) {
		        var attributeName = DOMAttributeNames[propName];

		        propertyInfo.attributeName = attributeName;
		      }

		      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
		        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
		      }

		      if (DOMMutationMethods.hasOwnProperty(propName)) {
		        propertyInfo.mutationMethod = DOMMutationMethods[propName];
		      }

		      // Downcase references to whitelist properties to check for membership
		      // without case-sensitivity. This allows the whitelist to pick up
		      // `allowfullscreen`, which should be written using the property configuration
		      // for `allowFullscreen`
		      properties[propName] = propertyInfo;
		    }
		  }
		};

		/* eslint-disable max-len */
		var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
		/* eslint-enable max-len */
		var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";


		var ROOT_ATTRIBUTE_NAME = 'data-reactroot';

		/**
		 * Map from property "standard name" to an object with info about how to set
		 * the property in the DOM. Each object contains:
		 *
		 * attributeName:
		 *   Used when rendering markup or with `*Attribute()`.
		 * attributeNamespace
		 * propertyName:
		 *   Used on DOM node instances. (This includes properties that mutate due to
		 *   external factors.)
		 * mutationMethod:
		 *   If non-null, used instead of the property or `setAttribute()` after
		 *   initial render.
		 * mustUseProperty:
		 *   Whether the property must be accessed and mutated as an object property.
		 * hasBooleanValue:
		 *   Whether the property should be removed when set to a falsey value.
		 * hasNumericValue:
		 *   Whether the property must be numeric or parse as a numeric and should be
		 *   removed when set to a falsey value.
		 * hasPositiveNumericValue:
		 *   Whether the property must be positive numeric or parse as a positive
		 *   numeric and should be removed when set to a falsey value.
		 * hasOverloadedBooleanValue:
		 *   Whether the property can be used as a flag as well as with a value.
		 *   Removed when strictly equal to false; present without a value when
		 *   strictly equal to true; present with a value otherwise.
		 */
		var properties = {};

		/**
		 * Checks whether a property name is a writeable attribute.
		 * @method
		 */
		function shouldSetAttribute(name, value) {
		  if (isReservedProp(name)) {
		    return false;
		  }
		  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
		    return false;
		  }
		  if (value === null) {
		    return true;
		  }
		  switch (typeof value) {
		    case 'boolean':
		      return shouldAttributeAcceptBooleanValue(name);
		    case 'undefined':
		    case 'number':
		    case 'string':
		    case 'object':
		      return true;
		    default:
		      // function, symbol
		      return false;
		  }
		}

		function getPropertyInfo(name) {
		  return properties.hasOwnProperty(name) ? properties[name] : null;
		}

		function shouldAttributeAcceptBooleanValue(name) {
		  if (isReservedProp(name)) {
		    return true;
		  }
		  var propertyInfo = getPropertyInfo(name);
		  if (propertyInfo) {
		    return propertyInfo.hasBooleanValue || propertyInfo.hasStringBooleanValue || propertyInfo.hasOverloadedBooleanValue;
		  }
		  var prefix = name.toLowerCase().slice(0, 5);
		  return prefix === 'data-' || prefix === 'aria-';
		}

		/**
		 * Checks to see if a property name is within the list of properties
		 * reserved for internal React operations. These properties should
		 * not be set on an HTML element.
		 *
		 * @private
		 * @param {string} name
		 * @return {boolean} If the name is within reserved props
		 */
		function isReservedProp(name) {
		  return RESERVED_PROPS.hasOwnProperty(name);
		}

		var injection = DOMPropertyInjection;

		var MUST_USE_PROPERTY = injection.MUST_USE_PROPERTY;
		var HAS_BOOLEAN_VALUE = injection.HAS_BOOLEAN_VALUE;
		var HAS_NUMERIC_VALUE = injection.HAS_NUMERIC_VALUE;
		var HAS_POSITIVE_NUMERIC_VALUE = injection.HAS_POSITIVE_NUMERIC_VALUE;
		var HAS_OVERLOADED_BOOLEAN_VALUE = injection.HAS_OVERLOADED_BOOLEAN_VALUE;
		var HAS_STRING_BOOLEAN_VALUE = injection.HAS_STRING_BOOLEAN_VALUE;

		var HTMLDOMPropertyConfig = {
		  // When adding attributes to this list, be sure to also add them to
		  // the `possibleStandardNames` module to ensure casing and incorrect
		  // name warnings.
		  Properties: {
		    allowFullScreen: HAS_BOOLEAN_VALUE,
		    // specifies target context for links with `preload` type
		    async: HAS_BOOLEAN_VALUE,
		    // Note: there is a special case that prevents it from being written to the DOM
		    // on the client side because the browsers are inconsistent. Instead we call focus().
		    autoFocus: HAS_BOOLEAN_VALUE,
		    autoPlay: HAS_BOOLEAN_VALUE,
		    capture: HAS_OVERLOADED_BOOLEAN_VALUE,
		    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
		    cols: HAS_POSITIVE_NUMERIC_VALUE,
		    contentEditable: HAS_STRING_BOOLEAN_VALUE,
		    controls: HAS_BOOLEAN_VALUE,
		    'default': HAS_BOOLEAN_VALUE,
		    defer: HAS_BOOLEAN_VALUE,
		    disabled: HAS_BOOLEAN_VALUE,
		    download: HAS_OVERLOADED_BOOLEAN_VALUE,
		    draggable: HAS_STRING_BOOLEAN_VALUE,
		    formNoValidate: HAS_BOOLEAN_VALUE,
		    hidden: HAS_BOOLEAN_VALUE,
		    loop: HAS_BOOLEAN_VALUE,
		    // Caution; `option.selected` is not updated if `select.multiple` is
		    // disabled with `removeAttribute`.
		    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
		    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
		    noValidate: HAS_BOOLEAN_VALUE,
		    open: HAS_BOOLEAN_VALUE,
		    playsInline: HAS_BOOLEAN_VALUE,
		    readOnly: HAS_BOOLEAN_VALUE,
		    required: HAS_BOOLEAN_VALUE,
		    reversed: HAS_BOOLEAN_VALUE,
		    rows: HAS_POSITIVE_NUMERIC_VALUE,
		    rowSpan: HAS_NUMERIC_VALUE,
		    scoped: HAS_BOOLEAN_VALUE,
		    seamless: HAS_BOOLEAN_VALUE,
		    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
		    size: HAS_POSITIVE_NUMERIC_VALUE,
		    start: HAS_NUMERIC_VALUE,
		    // support for projecting regular DOM Elements via V1 named slots ( shadow dom )
		    span: HAS_POSITIVE_NUMERIC_VALUE,
		    spellCheck: HAS_STRING_BOOLEAN_VALUE,
		    // Style must be explicitly set in the attribute list. React components
		    // expect a style object
		    style: 0,
		    // Keep it in the whitelist because it is case-sensitive for SVG.
		    tabIndex: 0,
		    // itemScope is for for Microdata support.
		    // See http://schema.org/docs/gs.html
		    itemScope: HAS_BOOLEAN_VALUE,
		    // These attributes must stay in the white-list because they have
		    // different attribute names (see DOMAttributeNames below)
		    acceptCharset: 0,
		    className: 0,
		    htmlFor: 0,
		    httpEquiv: 0,
		    // Attributes with mutation methods must be specified in the whitelist
		    // Set the string boolean flag to allow the behavior
		    value: HAS_STRING_BOOLEAN_VALUE
		  },
		  DOMAttributeNames: {
		    acceptCharset: 'accept-charset',
		    className: 'class',
		    htmlFor: 'for',
		    httpEquiv: 'http-equiv'
		  },
		  DOMMutationMethods: {
		    value: function (node, value) {
		      if (value == null) {
		        return node.removeAttribute('value');
		      }

		      // Number inputs get special treatment due to some edge cases in
		      // Chrome. Let everything else assign the value attribute as normal.
		      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
		      if (node.type !== 'number' || node.hasAttribute('value') === false) {
		        node.setAttribute('value', '' + value);
		      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
		        // Don't assign an attribute if validation reports bad
		        // input. Chrome will clear the value. Additionally, don't
		        // operate on inputs that have focus, otherwise Chrome might
		        // strip off trailing decimal places and cause the user's
		        // cursor position to jump to the beginning of the input.
		        //
		        // In ReactDOMInput, we have an onBlur event that will trigger
		        // this function again when focus is lost.
		        node.setAttribute('value', '' + value);
		      }
		    }
		  }
		};

		var HAS_STRING_BOOLEAN_VALUE$1 = injection.HAS_STRING_BOOLEAN_VALUE;


		var NS = {
		  xlink: 'http://www.w3.org/1999/xlink',
		  xml: 'http://www.w3.org/XML/1998/namespace'
		};

		/**
		 * This is a list of all SVG attributes that need special casing,
		 * namespacing, or boolean value assignment.
		 *
		 * When adding attributes to this list, be sure to also add them to
		 * the `possibleStandardNames` module to ensure casing and incorrect
		 * name warnings.
		 *
		 * SVG Attributes List:
		 * https://www.w3.org/TR/SVG/attindex.html
		 * SMIL Spec:
		 * https://www.w3.org/TR/smil
		 */
		var ATTRS = ['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'x-height', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xmlns:xlink', 'xml:lang', 'xml:space'];

		var SVGDOMPropertyConfig = {
		  Properties: {
		    autoReverse: HAS_STRING_BOOLEAN_VALUE$1,
		    externalResourcesRequired: HAS_STRING_BOOLEAN_VALUE$1,
		    preserveAlpha: HAS_STRING_BOOLEAN_VALUE$1
		  },
		  DOMAttributeNames: {
		    autoReverse: 'autoReverse',
		    externalResourcesRequired: 'externalResourcesRequired',
		    preserveAlpha: 'preserveAlpha'
		  },
		  DOMAttributeNamespaces: {
		    xlinkActuate: NS.xlink,
		    xlinkArcrole: NS.xlink,
		    xlinkHref: NS.xlink,
		    xlinkRole: NS.xlink,
		    xlinkShow: NS.xlink,
		    xlinkTitle: NS.xlink,
		    xlinkType: NS.xlink,
		    xmlBase: NS.xml,
		    xmlLang: NS.xml,
		    xmlSpace: NS.xml
		  }
		};

		var CAMELIZE = /[\-\:]([a-z])/g;
		var capitalize = function (token) {
		  return token[1].toUpperCase();
		};

		ATTRS.forEach(function (original) {
		  var reactName = original.replace(CAMELIZE, capitalize);

		  SVGDOMPropertyConfig.Properties[reactName] = 0;
		  SVGDOMPropertyConfig.DOMAttributeNames[reactName] = original;
		});

		injection.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
		injection.injectDOMPropertyConfig(SVGDOMPropertyConfig);

		var ReactErrorUtils = {
		  // Used by Fiber to simulate a try-catch.
		  _caughtError: null,
		  _hasCaughtError: false,

		  // Used by event system to capture/rethrow the first error.
		  _rethrowError: null,
		  _hasRethrowError: false,

		  injection: {
		    injectErrorUtils: function (injectedErrorUtils) {
		      !(typeof injectedErrorUtils.invokeGuardedCallback === 'function') ? invariant(false, 'Injected invokeGuardedCallback() must be a function.') : void 0;
		      invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
		    }
		  },

		  /**
		   * Call a function while guarding against errors that happens within it.
		   * Returns an error if it throws, otherwise null.
		   *
		   * In production, this is implemented using a try-catch. The reason we don't
		   * use a try-catch directly is so that we can swap out a different
		   * implementation in DEV mode.
		   *
		   * @param {String} name of the guard to use for logging or debugging
		   * @param {Function} func The function to invoke
		   * @param {*} context The context to use when calling the function
		   * @param {...*} args Arguments for function
		   */
		  invokeGuardedCallback: function (name, func, context, a, b, c, d, e, f) {
		    invokeGuardedCallback.apply(ReactErrorUtils, arguments);
		  },

		  /**
		   * Same as invokeGuardedCallback, but instead of returning an error, it stores
		   * it in a global so it can be rethrown by `rethrowCaughtError` later.
		   * TODO: See if _caughtError and _rethrowError can be unified.
		   *
		   * @param {String} name of the guard to use for logging or debugging
		   * @param {Function} func The function to invoke
		   * @param {*} context The context to use when calling the function
		   * @param {...*} args Arguments for function
		   */
		  invokeGuardedCallbackAndCatchFirstError: function (name, func, context, a, b, c, d, e, f) {
		    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
		    if (ReactErrorUtils.hasCaughtError()) {
		      var error = ReactErrorUtils.clearCaughtError();
		      if (!ReactErrorUtils._hasRethrowError) {
		        ReactErrorUtils._hasRethrowError = true;
		        ReactErrorUtils._rethrowError = error;
		      }
		    }
		  },

		  /**
		   * During execution of guarded functions we will capture the first error which
		   * we will rethrow to be handled by the top level error handler.
		   */
		  rethrowCaughtError: function () {
		    return rethrowCaughtError.apply(ReactErrorUtils, arguments);
		  },

		  hasCaughtError: function () {
		    return ReactErrorUtils._hasCaughtError;
		  },

		  clearCaughtError: function () {
		    if (ReactErrorUtils._hasCaughtError) {
		      var error = ReactErrorUtils._caughtError;
		      ReactErrorUtils._caughtError = null;
		      ReactErrorUtils._hasCaughtError = false;
		      return error;
		    } else {
		      invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
		    }
		  }
		};

		var invokeGuardedCallback = function (name, func, context, a, b, c, d, e, f) {
		  ReactErrorUtils._hasCaughtError = false;
		  ReactErrorUtils._caughtError = null;
		  var funcArgs = Array.prototype.slice.call(arguments, 3);
		  try {
		    func.apply(context, funcArgs);
		  } catch (error) {
		    ReactErrorUtils._caughtError = error;
		    ReactErrorUtils._hasCaughtError = true;
		  }
		};

		{
		  // In DEV mode, we swap out invokeGuardedCallback for a special version
		  // that plays more nicely with the browser's DevTools. The idea is to preserve
		  // "Pause on exceptions" behavior. Because React wraps all user-provided
		  // functions in invokeGuardedCallback, and the production version of
		  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
		  // like caught exceptions, and the DevTools won't pause unless the developer
		  // takes the extra step of enabling pause on caught exceptions. This is
		  // untintuitive, though, because even though React has caught the error, from
		  // the developer's perspective, the error is uncaught.
		  //
		  // To preserve the expected "Pause on exceptions" behavior, we don't use a
		  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
		  // DOM node, and call the user-provided callback from inside an event handler
		  // for that fake event. If the callback throws, the error is "captured" using
		  // a global event handler. But because the error happens in a different
		  // event loop context, it does not interrupt the normal program flow.
		  // Effectively, this gives us try-catch behavior without actually using
		  // try-catch. Neat!

		  // Check that the browser supports the APIs we need to implement our special
		  // DEV version of invokeGuardedCallback
		  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
		    var fakeNode = document.createElement('react');

		    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
		      // Keeps track of whether the user-provided callback threw an error. We
		      // set this to true at the beginning, then set it to false right after
		      // calling the function. If the function errors, `didError` will never be
		      // set to false. This strategy works even if the browser is flaky and
		      // fails to call our global error handler, because it doesn't rely on
		      // the error event at all.
		      var didError = true;

		      // Create an event handler for our fake event. We will synchronously
		      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
		      // call the user-provided callback.
		      var funcArgs = Array.prototype.slice.call(arguments, 3);
		      function callCallback() {
		        // We immediately remove the callback from event listeners so that
		        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
		        // nested call would trigger the fake event handlers of any call higher
		        // in the stack.
		        fakeNode.removeEventListener(evtType, callCallback, false);
		        func.apply(context, funcArgs);
		        didError = false;
		      }

		      // Create a global error event handler. We use this to capture the value
		      // that was thrown. It's possible that this error handler will fire more
		      // than once; for example, if non-React code also calls `dispatchEvent`
		      // and a handler for that event throws. We should be resilient to most of
		      // those cases. Even if our error event handler fires more than once, the
		      // last error event is always used. If the callback actually does error,
		      // we know that the last error event is the correct one, because it's not
		      // possible for anything else to have happened in between our callback
		      // erroring and the code that follows the `dispatchEvent` call below. If
		      // the callback doesn't error, but the error event was fired, we know to
		      // ignore it because `didError` will be false, as described above.
		      var error = void 0;
		      // Use this to track whether the error event is ever called.
		      var didSetError = false;
		      var isCrossOriginError = false;

		      function onError(event) {
		        error = event.error;
		        didSetError = true;
		        if (error === null && event.colno === 0 && event.lineno === 0) {
		          isCrossOriginError = true;
		        }
		      }

		      // Create a fake event type.
		      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');

		      // Attach our event handlers
		      window.addEventListener('error', onError);
		      fakeNode.addEventListener(evtType, callCallback, false);

		      // Synchronously dispatch our fake event. If the user-provided function
		      // errors, it will trigger our global error handler.
		      var evt = document.createEvent('Event');
		      evt.initEvent(evtType, false, false);
		      fakeNode.dispatchEvent(evt);

		      if (didError) {
		        if (!didSetError) {
		          // The callback errored, but the error event never fired.
		          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
		        } else if (isCrossOriginError) {
		          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
		        }
		        ReactErrorUtils._hasCaughtError = true;
		        ReactErrorUtils._caughtError = error;
		      } else {
		        ReactErrorUtils._hasCaughtError = false;
		        ReactErrorUtils._caughtError = null;
		      }

		      // Remove our event listeners
		      window.removeEventListener('error', onError);
		    };

		    invokeGuardedCallback = invokeGuardedCallbackDev;
		  }
		}

		var rethrowCaughtError = function () {
		  if (ReactErrorUtils._hasRethrowError) {
		    var error = ReactErrorUtils._rethrowError;
		    ReactErrorUtils._rethrowError = null;
		    ReactErrorUtils._hasRethrowError = false;
		    throw error;
		  }
		};

		/**
		 * Injectable ordering of event plugins.
		 */
		var eventPluginOrder = null;

		/**
		 * Injectable mapping from names to event plugin modules.
		 */
		var namesToPlugins = {};

		/**
		 * Recomputes the plugin list using the injected plugins and plugin ordering.
		 *
		 * @private
		 */
		function recomputePluginOrdering() {
		  if (!eventPluginOrder) {
		    // Wait until an `eventPluginOrder` is injected.
		    return;
		  }
		  for (var pluginName in namesToPlugins) {
		    var pluginModule = namesToPlugins[pluginName];
		    var pluginIndex = eventPluginOrder.indexOf(pluginName);
		    !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;
		    if (plugins[pluginIndex]) {
		      continue;
		    }
		    !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
		    plugins[pluginIndex] = pluginModule;
		    var publishedEvents = pluginModule.eventTypes;
		    for (var eventName in publishedEvents) {
		      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
		    }
		  }
		}

		/**
		 * Publishes an event so that it can be dispatched by the supplied plugin.
		 *
		 * @param {object} dispatchConfig Dispatch configuration for the event.
		 * @param {object} PluginModule Plugin publishing the event.
		 * @return {boolean} True if the event was successfully published.
		 * @private
		 */
		function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
		  !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
		  eventNameDispatchConfigs[eventName] = dispatchConfig;

		  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
		  if (phasedRegistrationNames) {
		    for (var phaseName in phasedRegistrationNames) {
		      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
		        var phasedRegistrationName = phasedRegistrationNames[phaseName];
		        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
		      }
		    }
		    return true;
		  } else if (dispatchConfig.registrationName) {
		    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
		    return true;
		  }
		  return false;
		}

		/**
		 * Publishes a registration name that is used to identify dispatched events.
		 *
		 * @param {string} registrationName Registration name to add.
		 * @param {object} PluginModule Plugin publishing the event.
		 * @private
		 */
		function publishRegistrationName(registrationName, pluginModule, eventName) {
		  !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
		  registrationNameModules[registrationName] = pluginModule;
		  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

		  {
		    var lowerCasedName = registrationName.toLowerCase();
		    possibleRegistrationNames[lowerCasedName] = registrationName;

		    if (registrationName === 'onDoubleClick') {
		      possibleRegistrationNames.ondblclick = registrationName;
		    }
		  }
		}

		/**
		 * Registers plugins so that they can extract and dispatch events.
		 *
		 * @see {EventPluginHub}
		 */

		/**
		 * Ordered list of injected plugins.
		 */
		var plugins = [];

		/**
		 * Mapping from event name to dispatch config
		 */
		var eventNameDispatchConfigs = {};

		/**
		 * Mapping from registration name to plugin module
		 */
		var registrationNameModules = {};

		/**
		 * Mapping from registration name to event name
		 */
		var registrationNameDependencies = {};

		/**
		 * Mapping from lowercase registration names to the properly cased version,
		 * used to warn in the case of missing event handlers. Available
		 * only in true.
		 * @type {Object}
		 */
		var possibleRegistrationNames = {};
		// Trust the developer to only use possibleRegistrationNames in true

		/**
		 * Injects an ordering of plugins (by plugin name). This allows the ordering
		 * to be decoupled from injection of the actual plugins so that ordering is
		 * always deterministic regardless of packaging, on-the-fly injection, etc.
		 *
		 * @param {array} InjectedEventPluginOrder
		 * @internal
		 * @see {EventPluginHub.injection.injectEventPluginOrder}
		 */
		function injectEventPluginOrder(injectedEventPluginOrder) {
		  !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;
		  // Clone the ordering so it cannot be dynamically mutated.
		  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
		  recomputePluginOrdering();
		}

		/**
		 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
		 * in the ordering injected by `injectEventPluginOrder`.
		 *
		 * Plugins can be injected as part of page initialization or on-the-fly.
		 *
		 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
		 * @internal
		 * @see {EventPluginHub.injection.injectEventPluginsByName}
		 */
		function injectEventPluginsByName(injectedNamesToPlugins) {
		  var isOrderingDirty = false;
		  for (var pluginName in injectedNamesToPlugins) {
		    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
		      continue;
		    }
		    var pluginModule = injectedNamesToPlugins[pluginName];
		    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
		      !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
		      namesToPlugins[pluginName] = pluginModule;
		      isOrderingDirty = true;
		    }
		  }
		  if (isOrderingDirty) {
		    recomputePluginOrdering();
		  }
		}

		var EventPluginRegistry = Object.freeze({
			plugins: plugins,
			eventNameDispatchConfigs: eventNameDispatchConfigs,
			registrationNameModules: registrationNameModules,
			registrationNameDependencies: registrationNameDependencies,
			possibleRegistrationNames: possibleRegistrationNames,
			injectEventPluginOrder: injectEventPluginOrder,
			injectEventPluginsByName: injectEventPluginsByName
		});

		var getFiberCurrentPropsFromNode = null;
		var getInstanceFromNode = null;
		var getNodeFromInstance = null;

		var injection$2 = {
		  injectComponentTree: function (Injected) {
		    getFiberCurrentPropsFromNode = Injected.getFiberCurrentPropsFromNode;
		    getInstanceFromNode = Injected.getInstanceFromNode;
		    getNodeFromInstance = Injected.getNodeFromInstance;

		    {
		      warning(getNodeFromInstance && getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.');
		    }
		  }
		};






		var validateEventDispatches;
		{
		  validateEventDispatches = function (event) {
		    var dispatchListeners = event._dispatchListeners;
		    var dispatchInstances = event._dispatchInstances;

		    var listenersIsArr = Array.isArray(dispatchListeners);
		    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

		    var instancesIsArr = Array.isArray(dispatchInstances);
		    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

		    warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.');
		  };
		}

		/**
		 * Dispatch the event to the listener.
		 * @param {SyntheticEvent} event SyntheticEvent to handle
		 * @param {boolean} simulated If the event is simulated (changes exn behavior)
		 * @param {function} listener Application-level callback
		 * @param {*} inst Internal component instance
		 */
		function executeDispatch(event, simulated, listener, inst) {
		  var type = event.type || 'unknown-event';
		  event.currentTarget = getNodeFromInstance(inst);
		  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
		  event.currentTarget = null;
		}

		/**
		 * Standard/simple iteration through an event's collected dispatches.
		 */
		function executeDispatchesInOrder(event, simulated) {
		  var dispatchListeners = event._dispatchListeners;
		  var dispatchInstances = event._dispatchInstances;
		  {
		    validateEventDispatches(event);
		  }
		  if (Array.isArray(dispatchListeners)) {
		    for (var i = 0; i < dispatchListeners.length; i++) {
		      if (event.isPropagationStopped()) {
		        break;
		      }
		      // Listeners and Instances are two parallel arrays that are always in sync.
		      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
		    }
		  } else if (dispatchListeners) {
		    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
		  }
		  event._dispatchListeners = null;
		  event._dispatchInstances = null;
		}

		/**
		 * @see executeDispatchesInOrderStopAtTrueImpl
		 */


		/**
		 * Execution of a "direct" dispatch - there must be at most one dispatch
		 * accumulated on the event or it is considered an error. It doesn't really make
		 * sense for an event with multiple dispatches (bubbled) to keep track of the
		 * return values at each dispatch execution, but it does tend to make sense when
		 * dealing with "direct" dispatches.
		 *
		 * @return {*} The return value of executing the single dispatch.
		 */


		/**
		 * @param {SyntheticEvent} event
		 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
		 */

		/**
		 * Accumulates items that must not be null or undefined into the first one. This
		 * is used to conserve memory by avoiding array allocations, and thus sacrifices
		 * API cleanness. Since `current` can be null before being passed in and not
		 * null after this function, make sure to assign it back to `current`:
		 *
		 * `a = accumulateInto(a, b);`
		 *
		 * This API should be sparingly used. Try `accumulate` for something cleaner.
		 *
		 * @return {*|array<*>} An accumulation of items.
		 */

		function accumulateInto(current, next) {
		  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;

		  if (current == null) {
		    return next;
		  }

		  // Both are not empty. Warning: Never call x.concat(y) when you are not
		  // certain that x is an Array (x could be a string with concat method).
		  if (Array.isArray(current)) {
		    if (Array.isArray(next)) {
		      current.push.apply(current, next);
		      return current;
		    }
		    current.push(next);
		    return current;
		  }

		  if (Array.isArray(next)) {
		    // A bit too dangerous to mutate `next`.
		    return [current].concat(next);
		  }

		  return [current, next];
		}

		/**
		 * @param {array} arr an "accumulation" of items which is either an Array or
		 * a single item. Useful when paired with the `accumulate` module. This is a
		 * simple utility that allows us to reason about a collection of items, but
		 * handling the case when there is exactly one item (and we do not need to
		 * allocate an array).
		 * @param {function} cb Callback invoked with each element or a collection.
		 * @param {?} [scope] Scope used as `this` in a callback.
		 */
		function forEachAccumulated(arr, cb, scope) {
		  if (Array.isArray(arr)) {
		    arr.forEach(cb, scope);
		  } else if (arr) {
		    cb.call(scope, arr);
		  }
		}

		/**
		 * Internal queue of events that have accumulated their dispatches and are
		 * waiting to have their dispatches executed.
		 */
		var eventQueue = null;

		/**
		 * Dispatches an event and releases it back into the pool, unless persistent.
		 *
		 * @param {?object} event Synthetic event to be dispatched.
		 * @param {boolean} simulated If the event is simulated (changes exn behavior)
		 * @private
		 */
		var executeDispatchesAndRelease = function (event, simulated) {
		  if (event) {
		    executeDispatchesInOrder(event, simulated);

		    if (!event.isPersistent()) {
		      event.constructor.release(event);
		    }
		  }
		};
		var executeDispatchesAndReleaseSimulated = function (e) {
		  return executeDispatchesAndRelease(e, true);
		};
		var executeDispatchesAndReleaseTopLevel = function (e) {
		  return executeDispatchesAndRelease(e, false);
		};

		function isInteractive(tag) {
		  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
		}

		function shouldPreventMouseEvent(name, type, props) {
		  switch (name) {
		    case 'onClick':
		    case 'onClickCapture':
		    case 'onDoubleClick':
		    case 'onDoubleClickCapture':
		    case 'onMouseDown':
		    case 'onMouseDownCapture':
		    case 'onMouseMove':
		    case 'onMouseMoveCapture':
		    case 'onMouseUp':
		    case 'onMouseUpCapture':
		      return !!(props.disabled && isInteractive(type));
		    default:
		      return false;
		  }
		}

		/**
		 * This is a unified interface for event plugins to be installed and configured.
		 *
		 * Event plugins can implement the following properties:
		 *
		 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
		 *     Required. When a top-level event is fired, this method is expected to
		 *     extract synthetic events that will in turn be queued and dispatched.
		 *
		 *   `eventTypes` {object}
		 *     Optional, plugins that fire events must publish a mapping of registration
		 *     names that are used to register listeners. Values of this mapping must
		 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
		 *
		 *   `executeDispatch` {function(object, function, string)}
		 *     Optional, allows plugins to override how an event gets dispatched. By
		 *     default, the listener is simply invoked.
		 *
		 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
		 *
		 * @public
		 */

		/**
		 * Methods for injecting dependencies.
		 */
		var injection$1 = {
		  /**
		   * @param {array} InjectedEventPluginOrder
		   * @public
		   */
		  injectEventPluginOrder: injectEventPluginOrder,

		  /**
		   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
		   */
		  injectEventPluginsByName: injectEventPluginsByName
		};

		/**
		 * @param {object} inst The instance, which is the source of events.
		 * @param {string} registrationName Name of listener (e.g. `onClick`).
		 * @return {?function} The stored callback.
		 */
		function getListener(inst, registrationName) {
		  var listener;

		  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
		  // live here; needs to be moved to a better place soon
		  var stateNode = inst.stateNode;
		  if (!stateNode) {
		    // Work in progress (ex: onload events in incremental mode).
		    return null;
		  }
		  var props = getFiberCurrentPropsFromNode(stateNode);
		  if (!props) {
		    // Work in progress.
		    return null;
		  }
		  listener = props[registrationName];
		  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
		    return null;
		  }
		  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;
		  return listener;
		}

		/**
		 * Allows registered plugins an opportunity to extract events from top-level
		 * native browser events.
		 *
		 * @return {*} An accumulation of synthetic events.
		 * @internal
		 */
		function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		  var events;
		  for (var i = 0; i < plugins.length; i++) {
		    // Not every plugin in the ordering may be loaded at runtime.
		    var possiblePlugin = plugins[i];
		    if (possiblePlugin) {
		      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
		      if (extractedEvents) {
		        events = accumulateInto(events, extractedEvents);
		      }
		    }
		  }
		  return events;
		}

		/**
		 * Enqueues a synthetic event that should be dispatched when
		 * `processEventQueue` is invoked.
		 *
		 * @param {*} events An accumulation of synthetic events.
		 * @internal
		 */
		function enqueueEvents(events) {
		  if (events) {
		    eventQueue = accumulateInto(eventQueue, events);
		  }
		}

		/**
		 * Dispatches all synthetic events on the event queue.
		 *
		 * @internal
		 */
		function processEventQueue(simulated) {
		  // Set `eventQueue` to null before processing it so that we can tell if more
		  // events get enqueued while processing.
		  var processingEventQueue = eventQueue;
		  eventQueue = null;

		  if (!processingEventQueue) {
		    return;
		  }

		  if (simulated) {
		    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
		  } else {
		    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
		  }
		  !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;
		  // This would be a good time to rethrow if any of the event handlers threw.
		  ReactErrorUtils.rethrowCaughtError();
		}

		var EventPluginHub = Object.freeze({
			injection: injection$1,
			getListener: getListener,
			extractEvents: extractEvents,
			enqueueEvents: enqueueEvents,
			processEventQueue: processEventQueue
		});

		var IndeterminateComponent = 0; // Before we know whether it is functional or class
		var FunctionalComponent = 1;
		var ClassComponent = 2;
		var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
		var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
		var HostComponent = 5;
		var HostText = 6;
		var CallComponent = 7;
		var CallHandlerPhase = 8;
		var ReturnComponent = 9;
		var Fragment = 10;

		var randomKey = Math.random().toString(36).slice(2);
		var internalInstanceKey = '__reactInternalInstance$' + randomKey;
		var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

		function precacheFiberNode$1(hostInst, node) {
		  node[internalInstanceKey] = hostInst;
		}

		/**
		 * Given a DOM node, return the closest ReactDOMComponent or
		 * ReactDOMTextComponent instance ancestor.
		 */
		function getClosestInstanceFromNode(node) {
		  if (node[internalInstanceKey]) {
		    return node[internalInstanceKey];
		  }

		  // Walk up the tree until we find an ancestor whose instance we have cached.
		  var parents = [];
		  while (!node[internalInstanceKey]) {
		    parents.push(node);
		    if (node.parentNode) {
		      node = node.parentNode;
		    } else {
		      // Top of the tree. This node must not be part of a React tree (or is
		      // unmounted, potentially).
		      return null;
		    }
		  }

		  var closest = void 0;
		  var inst = node[internalInstanceKey];
		  if (inst.tag === HostComponent || inst.tag === HostText) {
		    // In Fiber, this will always be the deepest root.
		    return inst;
		  }
		  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
		    closest = inst;
		  }

		  return closest;
		}

		/**
		 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
		 * instance, or null if the node was not rendered by this React.
		 */
		function getInstanceFromNode$1(node) {
		  var inst = node[internalInstanceKey];
		  if (inst) {
		    if (inst.tag === HostComponent || inst.tag === HostText) {
		      return inst;
		    } else {
		      return null;
		    }
		  }
		  return null;
		}

		/**
		 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
		 * DOM node.
		 */
		function getNodeFromInstance$1(inst) {
		  if (inst.tag === HostComponent || inst.tag === HostText) {
		    // In Fiber this, is just the state node right now. We assume it will be
		    // a host component or host text.
		    return inst.stateNode;
		  }

		  // Without this first invariant, passing a non-DOM-component triggers the next
		  // invariant for a missing parent, which is super confusing.
		  invariant(false, 'getNodeFromInstance: Invalid argument.');
		}

		function getFiberCurrentPropsFromNode$1(node) {
		  return node[internalEventHandlersKey] || null;
		}

		function updateFiberProps$1(node, props) {
		  node[internalEventHandlersKey] = props;
		}

		var ReactDOMComponentTree = Object.freeze({
			precacheFiberNode: precacheFiberNode$1,
			getClosestInstanceFromNode: getClosestInstanceFromNode,
			getInstanceFromNode: getInstanceFromNode$1,
			getNodeFromInstance: getNodeFromInstance$1,
			getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode$1,
			updateFiberProps: updateFiberProps$1
		});

		function getParent(inst) {
		  do {
		    inst = inst['return'];
		    // TODO: If this is a HostRoot we might want to bail out.
		    // That is depending on if we want nested subtrees (layers) to bubble
		    // events to their parent. We could also go through parentNode on the
		    // host node but that wouldn't work for React Native and doesn't let us
		    // do the portal feature.
		  } while (inst && inst.tag !== HostComponent);
		  if (inst) {
		    return inst;
		  }
		  return null;
		}

		/**
		 * Return the lowest common ancestor of A and B, or null if they are in
		 * different trees.
		 */
		function getLowestCommonAncestor(instA, instB) {
		  var depthA = 0;
		  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
		    depthA++;
		  }
		  var depthB = 0;
		  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
		    depthB++;
		  }

		  // If A is deeper, crawl up.
		  while (depthA - depthB > 0) {
		    instA = getParent(instA);
		    depthA--;
		  }

		  // If B is deeper, crawl up.
		  while (depthB - depthA > 0) {
		    instB = getParent(instB);
		    depthB--;
		  }

		  // Walk in lockstep until we find a match.
		  var depth = depthA;
		  while (depth--) {
		    if (instA === instB || instA === instB.alternate) {
		      return instA;
		    }
		    instA = getParent(instA);
		    instB = getParent(instB);
		  }
		  return null;
		}

		/**
		 * Return if A is an ancestor of B.
		 */


		/**
		 * Return the parent instance of the passed-in instance.
		 */
		function getParentInstance(inst) {
		  return getParent(inst);
		}

		/**
		 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
		 */
		function traverseTwoPhase(inst, fn, arg) {
		  var path = [];
		  while (inst) {
		    path.push(inst);
		    inst = getParent(inst);
		  }
		  var i;
		  for (i = path.length; i-- > 0;) {
		    fn(path[i], 'captured', arg);
		  }
		  for (i = 0; i < path.length; i++) {
		    fn(path[i], 'bubbled', arg);
		  }
		}

		/**
		 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
		 * should would receive a `mouseEnter` or `mouseLeave` event.
		 *
		 * Does not invoke the callback on the nearest common ancestor because nothing
		 * "entered" or "left" that element.
		 */
		function traverseEnterLeave(from, to, fn, argFrom, argTo) {
		  var common = from && to ? getLowestCommonAncestor(from, to) : null;
		  var pathFrom = [];
		  while (true) {
		    if (!from) {
		      break;
		    }
		    if (from === common) {
		      break;
		    }
		    var alternate = from.alternate;
		    if (alternate !== null && alternate === common) {
		      break;
		    }
		    pathFrom.push(from);
		    from = getParent(from);
		  }
		  var pathTo = [];
		  while (true) {
		    if (!to) {
		      break;
		    }
		    if (to === common) {
		      break;
		    }
		    var _alternate = to.alternate;
		    if (_alternate !== null && _alternate === common) {
		      break;
		    }
		    pathTo.push(to);
		    to = getParent(to);
		  }
		  for (var i = 0; i < pathFrom.length; i++) {
		    fn(pathFrom[i], 'bubbled', argFrom);
		  }
		  for (var _i = pathTo.length; _i-- > 0;) {
		    fn(pathTo[_i], 'captured', argTo);
		  }
		}

		/**
		 * Some event types have a notion of different registration names for different
		 * "phases" of propagation. This finds listeners by a given phase.
		 */
		function listenerAtPhase(inst, event, propagationPhase) {
		  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
		  return getListener(inst, registrationName);
		}

		/**
		 * A small set of propagation patterns, each of which will accept a small amount
		 * of information, and generate a set of "dispatch ready event objects" - which
		 * are sets of events that have already been annotated with a set of dispatched
		 * listener functions/ids. The API is designed this way to discourage these
		 * propagation strategies from actually executing the dispatches, since we
		 * always want to collect the entire set of dispatches before executing even a
		 * single one.
		 */

		/**
		 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
		 * here, allows us to not have to bind or create functions for each event.
		 * Mutating the event's members allows us to not have to create a wrapping
		 * "dispatch" object that pairs the event with the listener.
		 */
		function accumulateDirectionalDispatches(inst, phase, event) {
		  {
		    warning(inst, 'Dispatching inst must not be null');
		  }
		  var listener = listenerAtPhase(inst, event, phase);
		  if (listener) {
		    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
		    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
		  }
		}

		/**
		 * Collect dispatches (must be entirely collected before dispatching - see unit
		 * tests). Lazily allocate the array to conserve memory.  We must loop through
		 * each event and perform the traversal for each one. We cannot perform a
		 * single traversal for the entire collection of events because each event may
		 * have a different target.
		 */
		function accumulateTwoPhaseDispatchesSingle(event) {
		  if (event && event.dispatchConfig.phasedRegistrationNames) {
		    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
		  }
		}

		/**
		 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
		 */
		function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
		  if (event && event.dispatchConfig.phasedRegistrationNames) {
		    var targetInst = event._targetInst;
		    var parentInst = targetInst ? getParentInstance(targetInst) : null;
		    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
		  }
		}

		/**
		 * Accumulates without regard to direction, does not look for phased
		 * registration names. Same as `accumulateDirectDispatchesSingle` but without
		 * requiring that the `dispatchMarker` be the same as the dispatched ID.
		 */
		function accumulateDispatches(inst, ignoredDirection, event) {
		  if (inst && event && event.dispatchConfig.registrationName) {
		    var registrationName = event.dispatchConfig.registrationName;
		    var listener = getListener(inst, registrationName);
		    if (listener) {
		      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
		      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
		    }
		  }
		}

		/**
		 * Accumulates dispatches on an `SyntheticEvent`, but only for the
		 * `dispatchMarker`.
		 * @param {SyntheticEvent} event
		 */
		function accumulateDirectDispatchesSingle(event) {
		  if (event && event.dispatchConfig.registrationName) {
		    accumulateDispatches(event._targetInst, null, event);
		  }
		}

		function accumulateTwoPhaseDispatches(events) {
		  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
		}

		function accumulateTwoPhaseDispatchesSkipTarget(events) {
		  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
		}

		function accumulateEnterLeaveDispatches(leave, enter, from, to) {
		  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
		}

		function accumulateDirectDispatches(events) {
		  forEachAccumulated(events, accumulateDirectDispatchesSingle);
		}

		var EventPropagators = Object.freeze({
			accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
			accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
			accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
			accumulateDirectDispatches: accumulateDirectDispatches
		});

		var contentKey = null;

		/**
		 * Gets the key used to access text content on a DOM node.
		 *
		 * @return {?string} Key used to access text content.
		 * @internal
		 */
		function getTextContentAccessor() {
		  if (!contentKey && ExecutionEnvironment.canUseDOM) {
		    // Prefer textContent to innerText because many browsers support both but
		    // SVG <text> elements don't support innerText even when <div> does.
		    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
		  }
		  return contentKey;
		}

		/**
		 * This helper object stores information about text content of a target node,
		 * allowing comparison of content before and after a given event.
		 *
		 * Identify the node where selection currently begins, then observe
		 * both its text content and its current position in the DOM. Since the
		 * browser may natively replace the target node during composition, we can
		 * use its position to find its replacement.
		 *
		 *
		 */
		var compositionState = {
		  _root: null,
		  _startText: null,
		  _fallbackText: null
		};

		function initialize(nativeEventTarget) {
		  compositionState._root = nativeEventTarget;
		  compositionState._startText = getText();
		  return true;
		}

		function reset() {
		  compositionState._root = null;
		  compositionState._startText = null;
		  compositionState._fallbackText = null;
		}

		function getData() {
		  if (compositionState._fallbackText) {
		    return compositionState._fallbackText;
		  }

		  var start;
		  var startValue = compositionState._startText;
		  var startLength = startValue.length;
		  var end;
		  var endValue = getText();
		  var endLength = endValue.length;

		  for (start = 0; start < startLength; start++) {
		    if (startValue[start] !== endValue[start]) {
		      break;
		    }
		  }

		  var minEnd = startLength - start;
		  for (end = 1; end <= minEnd; end++) {
		    if (startValue[startLength - end] !== endValue[endLength - end]) {
		      break;
		    }
		  }

		  var sliceTail = end > 1 ? 1 - end : undefined;
		  compositionState._fallbackText = endValue.slice(start, sliceTail);
		  return compositionState._fallbackText;
		}

		function getText() {
		  if ('value' in compositionState._root) {
		    return compositionState._root.value;
		  }
		  return compositionState._root[getTextContentAccessor()];
		}

		/* eslint valid-typeof: 0 */

		var didWarnForAddedNewProperty = false;
		var isProxySupported = typeof Proxy === 'function';
		var EVENT_POOL_SIZE = 10;

		var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

		/**
		 * @interface Event
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var EventInterface = {
		  type: null,
		  target: null,
		  // currentTarget is set when dispatching; no use in copying it here
		  currentTarget: emptyFunction.thatReturnsNull,
		  eventPhase: null,
		  bubbles: null,
		  cancelable: null,
		  timeStamp: function (event) {
		    return event.timeStamp || Date.now();
		  },
		  defaultPrevented: null,
		  isTrusted: null
		};

		/**
		 * Synthetic events are dispatched by event plugins, typically in response to a
		 * top-level event delegation handler.
		 *
		 * These systems should generally use pooling to reduce the frequency of garbage
		 * collection. The system should check `isPersistent` to determine whether the
		 * event should be released into the pool after being dispatched. Users that
		 * need a persisted event should invoke `persist`.
		 *
		 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
		 * normalizing browser quirks. Subclasses do not necessarily have to implement a
		 * DOM interface; custom application-specific events can also subclass this.
		 *
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {*} targetInst Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @param {DOMEventTarget} nativeEventTarget Target node.
		 */
		function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
		  {
		    // these have a getter/setter for warnings
		    delete this.nativeEvent;
		    delete this.preventDefault;
		    delete this.stopPropagation;
		  }

		  this.dispatchConfig = dispatchConfig;
		  this._targetInst = targetInst;
		  this.nativeEvent = nativeEvent;

		  var Interface = this.constructor.Interface;
		  for (var propName in Interface) {
		    if (!Interface.hasOwnProperty(propName)) {
		      continue;
		    }
		    {
		      delete this[propName]; // this has a getter/setter for warnings
		    }
		    var normalize = Interface[propName];
		    if (normalize) {
		      this[propName] = normalize(nativeEvent);
		    } else {
		      if (propName === 'target') {
		        this.target = nativeEventTarget;
		      } else {
		        this[propName] = nativeEvent[propName];
		      }
		    }
		  }

		  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
		  if (defaultPrevented) {
		    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
		  } else {
		    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
		  }
		  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
		  return this;
		}

		_assign(SyntheticEvent.prototype, {
		  preventDefault: function () {
		    this.defaultPrevented = true;
		    var event = this.nativeEvent;
		    if (!event) {
		      return;
		    }

		    if (event.preventDefault) {
		      event.preventDefault();
		    } else if (typeof event.returnValue !== 'unknown') {
		      event.returnValue = false;
		    }
		    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
		  },

		  stopPropagation: function () {
		    var event = this.nativeEvent;
		    if (!event) {
		      return;
		    }

		    if (event.stopPropagation) {
		      event.stopPropagation();
		    } else if (typeof event.cancelBubble !== 'unknown') {
		      // The ChangeEventPlugin registers a "propertychange" event for
		      // IE. This event does not support bubbling or cancelling, and
		      // any references to cancelBubble throw "Member not found".  A
		      // typeof check of "unknown" circumvents this issue (and is also
		      // IE specific).
		      event.cancelBubble = true;
		    }

		    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
		  },

		  /**
		   * We release all dispatched `SyntheticEvent`s after each event loop, adding
		   * them back into the pool. This allows a way to hold onto a reference that
		   * won't be added back into the pool.
		   */
		  persist: function () {
		    this.isPersistent = emptyFunction.thatReturnsTrue;
		  },

		  /**
		   * Checks if this event should be released back into the pool.
		   *
		   * @return {boolean} True if this should not be released, false otherwise.
		   */
		  isPersistent: emptyFunction.thatReturnsFalse,

		  /**
		   * `PooledClass` looks for `destructor` on each instance it releases.
		   */
		  destructor: function () {
		    var Interface = this.constructor.Interface;
		    for (var propName in Interface) {
		      {
		        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
		      }
		    }
		    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
		      this[shouldBeReleasedProperties[i]] = null;
		    }
		    {
		      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
		      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
		      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
		    }
		  }
		});

		SyntheticEvent.Interface = EventInterface;

		/**
		 * Helper to reduce boilerplate when creating subclasses.
		 *
		 * @param {function} Class
		 * @param {?object} Interface
		 */
		SyntheticEvent.augmentClass = function (Class, Interface) {
		  var Super = this;

		  var E = function () {};
		  E.prototype = Super.prototype;
		  var prototype = new E();

		  _assign(prototype, Class.prototype);
		  Class.prototype = prototype;
		  Class.prototype.constructor = Class;

		  Class.Interface = _assign({}, Super.Interface, Interface);
		  Class.augmentClass = Super.augmentClass;
		  addEventPoolingTo(Class);
		};

		/** Proxying after everything set on SyntheticEvent
		 * to resolve Proxy issue on some WebKit browsers
		 * in which some Event properties are set to undefined (GH#10010)
		 */
		{
		  if (isProxySupported) {
		    /*eslint-disable no-func-assign */
		    SyntheticEvent = new Proxy(SyntheticEvent, {
		      construct: function (target, args) {
		        return this.apply(target, Object.create(target.prototype), args);
		      },
		      apply: function (constructor, that, args) {
		        return new Proxy(constructor.apply(that, args), {
		          set: function (target, prop, value) {
		            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
		              warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.');
		              didWarnForAddedNewProperty = true;
		            }
		            target[prop] = value;
		            return true;
		          }
		        });
		      }
		    });
		    /*eslint-enable no-func-assign */
		  }
		}

		addEventPoolingTo(SyntheticEvent);

		/**
		 * Helper to nullify syntheticEvent instance properties when destructing
		 *
		 * @param {String} propName
		 * @param {?object} getVal
		 * @return {object} defineProperty object
		 */
		function getPooledWarningPropertyDefinition(propName, getVal) {
		  var isFunction = typeof getVal === 'function';
		  return {
		    configurable: true,
		    set: set,
		    get: get
		  };

		  function set(val) {
		    var action = isFunction ? 'setting the method' : 'setting the property';
		    warn(action, 'This is effectively a no-op');
		    return val;
		  }

		  function get() {
		    var action = isFunction ? 'accessing the method' : 'accessing the property';
		    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
		    warn(action, result);
		    return getVal;
		  }

		  function warn(action, result) {
		    var warningCondition = false;
		    warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result);
		  }
		}

		function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
		  var EventConstructor = this;
		  if (EventConstructor.eventPool.length) {
		    var instance = EventConstructor.eventPool.pop();
		    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
		    return instance;
		  }
		  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
		}

		function releasePooledEvent(event) {
		  var EventConstructor = this;
		  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance  into a pool of a different type.') : void 0;
		  event.destructor();
		  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
		    EventConstructor.eventPool.push(event);
		  }
		}

		function addEventPoolingTo(EventConstructor) {
		  EventConstructor.eventPool = [];
		  EventConstructor.getPooled = getPooledEvent;
		  EventConstructor.release = releasePooledEvent;
		}

		var SyntheticEvent$1 = SyntheticEvent;

		/**
		 * @interface Event
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
		 */
		var CompositionEventInterface = {
		  data: null
		};

		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticEvent}
		 */
		function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}

		SyntheticEvent$1.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

		/**
		 * @interface Event
		 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
		 *      /#events-inputevents
		 */
		var InputEventInterface = {
		  data: null
		};

		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticEvent}
		 */
		function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}

		SyntheticEvent$1.augmentClass(SyntheticInputEvent, InputEventInterface);

		var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
		var START_KEYCODE = 229;

		var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

		var documentMode = null;
		if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
		  documentMode = document.documentMode;
		}

		// Webkit offers a very useful `textInput` event that can be used to
		// directly represent `beforeInput`. The IE `textinput` event is not as
		// useful, so we don't use it.
		var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

		// In IE9+, we have access to composition events, but the data supplied
		// by the native compositionend event may be incorrect. Japanese ideographic
		// spaces, for instance (\u3000) are not recorded correctly.
		var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

		/**
		 * Opera <= 12 includes TextEvent in window, but does not fire
		 * text input events. Rely on keypress instead.
		 */
		function isPresto() {
		  var opera = window.opera;
		  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
		}

		var SPACEBAR_CODE = 32;
		var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

		// Events and their corresponding property names.
		var eventTypes = {
		  beforeInput: {
		    phasedRegistrationNames: {
		      bubbled: 'onBeforeInput',
		      captured: 'onBeforeInputCapture'
		    },
		    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
		  },
		  compositionEnd: {
		    phasedRegistrationNames: {
		      bubbled: 'onCompositionEnd',
		      captured: 'onCompositionEndCapture'
		    },
		    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
		  },
		  compositionStart: {
		    phasedRegistrationNames: {
		      bubbled: 'onCompositionStart',
		      captured: 'onCompositionStartCapture'
		    },
		    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
		  },
		  compositionUpdate: {
		    phasedRegistrationNames: {
		      bubbled: 'onCompositionUpdate',
		      captured: 'onCompositionUpdateCapture'
		    },
		    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
		  }
		};

		// Track whether we've ever handled a keypress on the space key.
		var hasSpaceKeypress = false;

		/**
		 * Return whether a native keypress event is assumed to be a command.
		 * This is required because Firefox fires `keypress` events for key commands
		 * (cut, copy, select-all, etc.) even though no character is inserted.
		 */
		function isKeypressCommand(nativeEvent) {
		  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
		  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
		  !(nativeEvent.ctrlKey && nativeEvent.altKey);
		}

		/**
		 * Translate native top level events into event types.
		 *
		 * @param {string} topLevelType
		 * @return {object}
		 */
		function getCompositionEventType(topLevelType) {
		  switch (topLevelType) {
		    case 'topCompositionStart':
		      return eventTypes.compositionStart;
		    case 'topCompositionEnd':
		      return eventTypes.compositionEnd;
		    case 'topCompositionUpdate':
		      return eventTypes.compositionUpdate;
		  }
		}

		/**
		 * Does our fallback best-guess model think this event signifies that
		 * composition has begun?
		 *
		 * @param {string} topLevelType
		 * @param {object} nativeEvent
		 * @return {boolean}
		 */
		function isFallbackCompositionStart(topLevelType, nativeEvent) {
		  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
		}

		/**
		 * Does our fallback mode think that this event is the end of composition?
		 *
		 * @param {string} topLevelType
		 * @param {object} nativeEvent
		 * @return {boolean}
		 */
		function isFallbackCompositionEnd(topLevelType, nativeEvent) {
		  switch (topLevelType) {
		    case 'topKeyUp':
		      // Command keys insert or clear IME input.
		      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
		    case 'topKeyDown':
		      // Expect IME keyCode on each keydown. If we get any other
		      // code we must have exited earlier.
		      return nativeEvent.keyCode !== START_KEYCODE;
		    case 'topKeyPress':
		    case 'topMouseDown':
		    case 'topBlur':
		      // Events are not possible without cancelling IME.
		      return true;
		    default:
		      return false;
		  }
		}

		/**
		 * Google Input Tools provides composition data via a CustomEvent,
		 * with the `data` property populated in the `detail` object. If this
		 * is available on the event object, use it. If not, this is a plain
		 * composition event and we have nothing special to extract.
		 *
		 * @param {object} nativeEvent
		 * @return {?string}
		 */
		function getDataFromCustomEvent(nativeEvent) {
		  var detail = nativeEvent.detail;
		  if (typeof detail === 'object' && 'data' in detail) {
		    return detail.data;
		  }
		  return null;
		}

		// Track the current IME composition status, if any.
		var isComposing = false;

		/**
		 * @return {?object} A SyntheticCompositionEvent.
		 */
		function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		  var eventType;
		  var fallbackData;

		  if (canUseCompositionEvent) {
		    eventType = getCompositionEventType(topLevelType);
		  } else if (!isComposing) {
		    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
		      eventType = eventTypes.compositionStart;
		    }
		  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
		    eventType = eventTypes.compositionEnd;
		  }

		  if (!eventType) {
		    return null;
		  }

		  if (useFallbackCompositionData) {
		    // The current composition is stored statically and must not be
		    // overwritten while composition continues.
		    if (!isComposing && eventType === eventTypes.compositionStart) {
		      isComposing = initialize(nativeEventTarget);
		    } else if (eventType === eventTypes.compositionEnd) {
		      if (isComposing) {
		        fallbackData = getData();
		      }
		    }
		  }

		  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

		  if (fallbackData) {
		    // Inject data generated from fallback path into the synthetic event.
		    // This matches the property of native CompositionEventInterface.
		    event.data = fallbackData;
		  } else {
		    var customData = getDataFromCustomEvent(nativeEvent);
		    if (customData !== null) {
		      event.data = customData;
		    }
		  }

		  accumulateTwoPhaseDispatches(event);
		  return event;
		}

		/**
		 * @param {TopLevelTypes} topLevelType Record from `BrowserEventConstants`.
		 * @param {object} nativeEvent Native browser event.
		 * @return {?string} The string corresponding to this `beforeInput` event.
		 */
		function getNativeBeforeInputChars(topLevelType, nativeEvent) {
		  switch (topLevelType) {
		    case 'topCompositionEnd':
		      return getDataFromCustomEvent(nativeEvent);
		    case 'topKeyPress':
		      /**
		       * If native `textInput` events are available, our goal is to make
		       * use of them. However, there is a special case: the spacebar key.
		       * In Webkit, preventing default on a spacebar `textInput` event
		       * cancels character insertion, but it *also* causes the browser
		       * to fall back to its default spacebar behavior of scrolling the
		       * page.
		       *
		       * Tracking at:
		       * https://code.google.com/p/chromium/issues/detail?id=355103
		       *
		       * To avoid this issue, use the keypress event as if no `textInput`
		       * event is available.
		       */
		      var which = nativeEvent.which;
		      if (which !== SPACEBAR_CODE) {
		        return null;
		      }

		      hasSpaceKeypress = true;
		      return SPACEBAR_CHAR;

		    case 'topTextInput':
		      // Record the characters to be added to the DOM.
		      var chars = nativeEvent.data;

		      // If it's a spacebar character, assume that we have already handled
		      // it at the keypress level and bail immediately. Android Chrome
		      // doesn't give us keycodes, so we need to blacklist it.
		      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
		        return null;
		      }

		      return chars;

		    default:
		      // For other native event types, do nothing.
		      return null;
		  }
		}

		/**
		 * For browsers that do not provide the `textInput` event, extract the
		 * appropriate string to use for SyntheticInputEvent.
		 *
		 * @param {string} topLevelType Record from `BrowserEventConstants`.
		 * @param {object} nativeEvent Native browser event.
		 * @return {?string} The fallback string for this `beforeInput` event.
		 */
		function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
		  // If we are currently composing (IME) and using a fallback to do so,
		  // try to extract the composed characters from the fallback object.
		  // If composition event is available, we extract a string only at
		  // compositionevent, otherwise extract it at fallback events.
		  if (isComposing) {
		    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
		      var chars = getData();
		      reset();
		      isComposing = false;
		      return chars;
		    }
		    return null;
		  }

		  switch (topLevelType) {
		    case 'topPaste':
		      // If a paste event occurs after a keypress, throw out the input
		      // chars. Paste events should not lead to BeforeInput events.
		      return null;
		    case 'topKeyPress':
		      /**
		       * As of v27, Firefox may fire keypress events even when no character
		       * will be inserted. A few possibilities:
		       *
		       * - `which` is `0`. Arrow keys, Esc key, etc.
		       *
		       * - `which` is the pressed key code, but no char is available.
		       *   Ex: 'AltGr + d` in Polish. There is no modified character for
		       *   this key combination and no character is inserted into the
		       *   document, but FF fires the keypress for char code `100` anyway.
		       *   No `input` event will occur.
		       *
		       * - `which` is the pressed key code, but a command combination is
		       *   being used. Ex: `Cmd+C`. No character is inserted, and no
		       *   `input` event will occur.
		       */
		      if (!isKeypressCommand(nativeEvent)) {
		        // IE fires the `keypress` event when a user types an emoji via
		        // Touch keyboard of Windows.  In such a case, the `char` property
		        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
		        // is 2, the property `which` does not represent an emoji correctly.
		        // In such a case, we directly return the `char` property instead of
		        // using `which`.
		        if (nativeEvent.char && nativeEvent.char.length > 1) {
		          return nativeEvent.char;
		        } else if (nativeEvent.which) {
		          return String.fromCharCode(nativeEvent.which);
		        }
		      }
		      return null;
		    case 'topCompositionEnd':
		      return useFallbackCompositionData ? null : nativeEvent.data;
		    default:
		      return null;
		  }
		}

		/**
		 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
		 * `textInput` or fallback behavior.
		 *
		 * @return {?object} A SyntheticInputEvent.
		 */
		function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		  var chars;

		  if (canUseTextInputEvent) {
		    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
		  } else {
		    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
		  }

		  // If no characters are being inserted, no BeforeInput event should
		  // be fired.
		  if (!chars) {
		    return null;
		  }

		  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

		  event.data = chars;
		  accumulateTwoPhaseDispatches(event);
		  return event;
		}

		/**
		 * Create an `onBeforeInput` event to match
		 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
		 *
		 * This event plugin is based on the native `textInput` event
		 * available in Chrome, Safari, Opera, and IE. This event fires after
		 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
		 *
		 * `beforeInput` is spec'd but not implemented in any browsers, and
		 * the `input` event does not provide any useful information about what has
		 * actually been added, contrary to the spec. Thus, `textInput` is the best
		 * available event to identify the characters that have actually been inserted
		 * into the target node.
		 *
		 * This plugin is also responsible for emitting `composition` events, thus
		 * allowing us to share composition fallback code for both `beforeInput` and
		 * `composition` event types.
		 */
		var BeforeInputEventPlugin = {
		  eventTypes: eventTypes,

		  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
		  }
		};

		// Use to restore controlled state after a change event has fired.

		var fiberHostComponent = null;

		var ReactControlledComponentInjection = {
		  injectFiberControlledHostComponent: function (hostComponentImpl) {
		    // The fiber implementation doesn't use dynamic dispatch so we need to
		    // inject the implementation.
		    fiberHostComponent = hostComponentImpl;
		  }
		};

		var restoreTarget = null;
		var restoreQueue = null;

		function restoreStateOfTarget(target) {
		  // We perform this translation at the end of the event loop so that we
		  // always receive the correct fiber here
		  var internalInstance = getInstanceFromNode(target);
		  if (!internalInstance) {
		    // Unmounted
		    return;
		  }
		  !(fiberHostComponent && typeof fiberHostComponent.restoreControlledState === 'function') ? invariant(false, 'Fiber needs to be injected to handle a fiber target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
		  fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
		}

		var injection$3 = ReactControlledComponentInjection;

		function enqueueStateRestore(target) {
		  if (restoreTarget) {
		    if (restoreQueue) {
		      restoreQueue.push(target);
		    } else {
		      restoreQueue = [target];
		    }
		  } else {
		    restoreTarget = target;
		  }
		}

		function restoreStateIfNeeded() {
		  if (!restoreTarget) {
		    return;
		  }
		  var target = restoreTarget;
		  var queuedTargets = restoreQueue;
		  restoreTarget = null;
		  restoreQueue = null;

		  restoreStateOfTarget(target);
		  if (queuedTargets) {
		    for (var i = 0; i < queuedTargets.length; i++) {
		      restoreStateOfTarget(queuedTargets[i]);
		    }
		  }
		}

		var ReactControlledComponent = Object.freeze({
			injection: injection$3,
			enqueueStateRestore: enqueueStateRestore,
			restoreStateIfNeeded: restoreStateIfNeeded
		});

		// Used as a way to call batchedUpdates when we don't have a reference to
		// the renderer. Such as when we're dispatching events or if third party
		// libraries need to call batchedUpdates. Eventually, this API will go away when
		// everything is batched by default. We'll then have a similar API to opt-out of
		// scheduled work and instead do synchronous work.

		// Defaults
		var fiberBatchedUpdates = function (fn, bookkeeping) {
		  return fn(bookkeeping);
		};

		var isNestingBatched = false;
		function batchedUpdates(fn, bookkeeping) {
		  if (isNestingBatched) {
		    // If we are currently inside another batch, we need to wait until it
		    // fully completes before restoring state. Therefore, we add the target to
		    // a queue of work.
		    return fiberBatchedUpdates(fn, bookkeeping);
		  }
		  isNestingBatched = true;
		  try {
		    return fiberBatchedUpdates(fn, bookkeeping);
		  } finally {
		    // Here we wait until all updates have propagated, which is important
		    // when using controlled components within layers:
		    // https://github.com/facebook/react/issues/1698
		    // Then we restore state of any controlled component.
		    isNestingBatched = false;
		    restoreStateIfNeeded();
		  }
		}

		var ReactGenericBatchingInjection = {
		  injectFiberBatchedUpdates: function (_batchedUpdates) {
		    fiberBatchedUpdates = _batchedUpdates;
		  }
		};

		var injection$4 = ReactGenericBatchingInjection;

		/**
		 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
		 */
		var supportedInputTypes = {
		  color: true,
		  date: true,
		  datetime: true,
		  'datetime-local': true,
		  email: true,
		  month: true,
		  number: true,
		  password: true,
		  range: true,
		  search: true,
		  tel: true,
		  text: true,
		  time: true,
		  url: true,
		  week: true
		};

		function isTextInputElement(elem) {
		  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

		  if (nodeName === 'input') {
		    return !!supportedInputTypes[elem.type];
		  }

		  if (nodeName === 'textarea') {
		    return true;
		  }

		  return false;
		}

		/**
		 * HTML nodeType values that represent the type of the node
		 */

		var ELEMENT_NODE = 1;
		var TEXT_NODE = 3;
		var COMMENT_NODE = 8;
		var DOCUMENT_NODE = 9;
		var DOCUMENT_FRAGMENT_NODE = 11;

		/**
		 * Gets the target node from a native browser event by accounting for
		 * inconsistencies in browser DOM APIs.
		 *
		 * @param {object} nativeEvent Native browser event.
		 * @return {DOMEventTarget} Target node.
		 */
		function getEventTarget(nativeEvent) {
		  var target = nativeEvent.target || nativeEvent.srcElement || window;

		  // Normalize SVG <use> element events #4963
		  if (target.correspondingUseElement) {
		    target = target.correspondingUseElement;
		  }

		  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
		  // @see http://www.quirksmode.org/js/events_properties.html
		  return target.nodeType === TEXT_NODE ? target.parentNode : target;
		}

		var useHasFeature;
		if (ExecutionEnvironment.canUseDOM) {
		  useHasFeature = document.implementation && document.implementation.hasFeature &&
		  // always returns true in newer browsers as per the standard.
		  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
		  document.implementation.hasFeature('', '') !== true;
		}

		/**
		 * Checks if an event is supported in the current execution environment.
		 *
		 * NOTE: This will not work correctly for non-generic events such as `change`,
		 * `reset`, `load`, `error`, and `select`.
		 *
		 * Borrows from Modernizr.
		 *
		 * @param {string} eventNameSuffix Event name, e.g. "click".
		 * @param {?boolean} capture Check if the capture phase is supported.
		 * @return {boolean} True if the event is supported.
		 * @internal
		 * @license Modernizr 3.0.0pre (Custom Build) | MIT
		 */
		function isEventSupported(eventNameSuffix, capture) {
		  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
		    return false;
		  }

		  var eventName = 'on' + eventNameSuffix;
		  var isSupported = eventName in document;

		  if (!isSupported) {
		    var element = document.createElement('div');
		    element.setAttribute(eventName, 'return;');
		    isSupported = typeof element[eventName] === 'function';
		  }

		  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
		    // This is the only way to test support for the `wheel` event in IE9+.
		    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
		  }

		  return isSupported;
		}

		function isCheckable(elem) {
		  var type = elem.type;
		  var nodeName = elem.nodeName;
		  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
		}

		function getTracker(node) {
		  return node._valueTracker;
		}

		function detachTracker(node) {
		  node._valueTracker = null;
		}

		function getValueFromNode(node) {
		  var value = '';
		  if (!node) {
		    return value;
		  }

		  if (isCheckable(node)) {
		    value = node.checked ? 'true' : 'false';
		  } else {
		    value = node.value;
		  }

		  return value;
		}

		function trackValueOnNode(node) {
		  var valueField = isCheckable(node) ? 'checked' : 'value';
		  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

		  var currentValue = '' + node[valueField];

		  // if someone has already defined a value or Safari, then bail
		  // and don't track value will cause over reporting of changes,
		  // but it's better then a hard failure
		  // (needed for certain tests that spyOn input values and Safari)
		  if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
		    return;
		  }

		  Object.defineProperty(node, valueField, {
		    enumerable: descriptor.enumerable,
		    configurable: true,
		    get: function () {
		      return descriptor.get.call(this);
		    },
		    set: function (value) {
		      currentValue = '' + value;
		      descriptor.set.call(this, value);
		    }
		  });

		  var tracker = {
		    getValue: function () {
		      return currentValue;
		    },
		    setValue: function (value) {
		      currentValue = '' + value;
		    },
		    stopTracking: function () {
		      detachTracker(node);
		      delete node[valueField];
		    }
		  };
		  return tracker;
		}

		function track(node) {
		  if (getTracker(node)) {
		    return;
		  }

		  // TODO: Once it's just Fiber we can move this to node._wrapperState
		  node._valueTracker = trackValueOnNode(node);
		}

		function updateValueIfChanged(node) {
		  if (!node) {
		    return false;
		  }

		  var tracker = getTracker(node);
		  // if there is no tracker at this point it's unlikely
		  // that trying again will succeed
		  if (!tracker) {
		    return true;
		  }

		  var lastValue = tracker.getValue();
		  var nextValue = getValueFromNode(node);
		  if (nextValue !== lastValue) {
		    tracker.setValue(nextValue);
		    return true;
		  }
		  return false;
		}

		var eventTypes$1 = {
		  change: {
		    phasedRegistrationNames: {
		      bubbled: 'onChange',
		      captured: 'onChangeCapture'
		    },
		    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
		  }
		};

		function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
		  var event = SyntheticEvent$1.getPooled(eventTypes$1.change, inst, nativeEvent, target);
		  event.type = 'change';
		  // Flag this event loop as needing state restore.
		  enqueueStateRestore(target);
		  accumulateTwoPhaseDispatches(event);
		  return event;
		}
		/**
		 * For IE shims
		 */
		var activeElement = null;
		var activeElementInst = null;

		/**
		 * SECTION: handle `change` event
		 */
		function shouldUseChangeEvent(elem) {
		  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
		  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
		}

		function manualDispatchChangeEvent(nativeEvent) {
		  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

		  // If change and propertychange bubbled, we'd just bind to it like all the
		  // other events and have it go through ReactBrowserEventEmitter. Since it
		  // doesn't, we manually listen for the events and so we have to enqueue and
		  // process the abstract event manually.
		  //
		  // Batching is necessary here in order to ensure that all event handlers run
		  // before the next rerender (including event handlers attached to ancestor
		  // elements instead of directly on the input). Without this, controlled
		  // components don't work properly in conjunction with event bubbling because
		  // the component is rerendered and the value reverted before all the event
		  // handlers can run. See https://github.com/facebook/react/issues/708.
		  batchedUpdates(runEventInBatch, event);
		}

		function runEventInBatch(event) {
		  enqueueEvents(event);
		  processEventQueue(false);
		}

		function getInstIfValueChanged(targetInst) {
		  var targetNode = getNodeFromInstance$1(targetInst);
		  if (updateValueIfChanged(targetNode)) {
		    return targetInst;
		  }
		}

		function getTargetInstForChangeEvent(topLevelType, targetInst) {
		  if (topLevelType === 'topChange') {
		    return targetInst;
		  }
		}

		/**
		 * SECTION: handle `input` event
		 */
		var isInputEventSupported = false;
		if (ExecutionEnvironment.canUseDOM) {
		  // IE9 claims to support the input event but fails to trigger it when
		  // deleting text, so we ignore its input events.
		  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
		}

		/**
		 * (For IE <=9) Starts tracking propertychange events on the passed-in element
		 * and override the value property so that we can distinguish user events from
		 * value changes in JS.
		 */
		function startWatchingForValueChange(target, targetInst) {
		  activeElement = target;
		  activeElementInst = targetInst;
		  activeElement.attachEvent('onpropertychange', handlePropertyChange);
		}

		/**
		 * (For IE <=9) Removes the event listeners from the currently-tracked element,
		 * if any exists.
		 */
		function stopWatchingForValueChange() {
		  if (!activeElement) {
		    return;
		  }
		  activeElement.detachEvent('onpropertychange', handlePropertyChange);
		  activeElement = null;
		  activeElementInst = null;
		}

		/**
		 * (For IE <=9) Handles a propertychange event, sending a `change` event if
		 * the value of the active element has changed.
		 */
		function handlePropertyChange(nativeEvent) {
		  if (nativeEvent.propertyName !== 'value') {
		    return;
		  }
		  if (getInstIfValueChanged(activeElementInst)) {
		    manualDispatchChangeEvent(nativeEvent);
		  }
		}

		function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
		  if (topLevelType === 'topFocus') {
		    // In IE9, propertychange fires for most input events but is buggy and
		    // doesn't fire when text is deleted, but conveniently, selectionchange
		    // appears to fire in all of the remaining cases so we catch those and
		    // forward the event if the value has changed
		    // In either case, we don't want to call the event handler if the value
		    // is changed from JS so we redefine a setter for `.value` that updates
		    // our activeElementValue variable, allowing us to ignore those changes
		    //
		    // stopWatching() should be a noop here but we call it just in case we
		    // missed a blur event somehow.
		    stopWatchingForValueChange();
		    startWatchingForValueChange(target, targetInst);
		  } else if (topLevelType === 'topBlur') {
		    stopWatchingForValueChange();
		  }
		}

		// For IE8 and IE9.
		function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
		  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
		    // On the selectionchange event, the target is just document which isn't
		    // helpful for us so just check activeElement instead.
		    //
		    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
		    // propertychange on the first input event after setting `value` from a
		    // script and fires only keydown, keypress, keyup. Catching keyup usually
		    // gets it and catching keydown lets us fire an event for the first
		    // keystroke if user does a key repeat (it'll be a little delayed: right
		    // before the second keystroke). Other input methods (e.g., paste) seem to
		    // fire selectionchange normally.
		    return getInstIfValueChanged(activeElementInst);
		  }
		}

		/**
		 * SECTION: handle `click` event
		 */
		function shouldUseClickEvent(elem) {
		  // Use the `click` event to detect changes to checkbox and radio inputs.
		  // This approach works across all browsers, whereas `change` does not fire
		  // until `blur` in IE8.
		  var nodeName = elem.nodeName;
		  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
		}

		function getTargetInstForClickEvent(topLevelType, targetInst) {
		  if (topLevelType === 'topClick') {
		    return getInstIfValueChanged(targetInst);
		  }
		}

		function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
		  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
		    return getInstIfValueChanged(targetInst);
		  }
		}

		function handleControlledInputBlur(inst, node) {
		  // TODO: In IE, inst is occasionally null. Why?
		  if (inst == null) {
		    return;
		  }

		  // Fiber and ReactDOM keep wrapper state in separate places
		  var state = inst._wrapperState || node._wrapperState;

		  if (!state || !state.controlled || node.type !== 'number') {
		    return;
		  }

		  // If controlled, assign the value attribute to the current value on blur
		  var value = '' + node.value;
		  if (node.getAttribute('value') !== value) {
		    node.setAttribute('value', value);
		  }
		}

		/**
		 * This plugin creates an `onChange` event that normalizes change events
		 * across form elements. This event fires at a time when it's possible to
		 * change the element's value without seeing a flicker.
		 *
		 * Supported elements are:
		 * - input (see `isTextInputElement`)
		 * - textarea
		 * - select
		 */
		var ChangeEventPlugin = {
		  eventTypes: eventTypes$1,

		  _isInputEventSupported: isInputEventSupported,

		  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

		    var getTargetInstFunc, handleEventFunc;
		    if (shouldUseChangeEvent(targetNode)) {
		      getTargetInstFunc = getTargetInstForChangeEvent;
		    } else if (isTextInputElement(targetNode)) {
		      if (isInputEventSupported) {
		        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
		      } else {
		        getTargetInstFunc = getTargetInstForInputEventPolyfill;
		        handleEventFunc = handleEventsForInputEventPolyfill;
		      }
		    } else if (shouldUseClickEvent(targetNode)) {
		      getTargetInstFunc = getTargetInstForClickEvent;
		    }

		    if (getTargetInstFunc) {
		      var inst = getTargetInstFunc(topLevelType, targetInst);
		      if (inst) {
		        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
		        return event;
		      }
		    }

		    if (handleEventFunc) {
		      handleEventFunc(topLevelType, targetNode, targetInst);
		    }

		    // When blurring, set the value attribute for number inputs
		    if (topLevelType === 'topBlur') {
		      handleControlledInputBlur(targetInst, targetNode);
		    }
		  }
		};

		/**
		 * Module that is injectable into `EventPluginHub`, that specifies a
		 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
		 * plugins, without having to package every one of them. This is better than
		 * having plugins be ordered in the same order that they are injected because
		 * that ordering would be influenced by the packaging order.
		 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
		 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
		 */
		var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

		/**
		 * @interface UIEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var UIEventInterface = {
		  view: null,
		  detail: null
		};

		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticEvent}
		 */
		function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}

		SyntheticEvent$1.augmentClass(SyntheticUIEvent, UIEventInterface);

		/**
		 * Translation from modifier key to the associated property in the event.
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
		 */

		var modifierKeyToProp = {
		  Alt: 'altKey',
		  Control: 'ctrlKey',
		  Meta: 'metaKey',
		  Shift: 'shiftKey'
		};

		// IE8 does not implement getModifierState so we simply map it to the only
		// modifier keys exposed by the event itself, does not support Lock-keys.
		// Currently, all major browsers except Chrome seems to support Lock-keys.
		function modifierStateGetter(keyArg) {
		  var syntheticEvent = this;
		  var nativeEvent = syntheticEvent.nativeEvent;
		  if (nativeEvent.getModifierState) {
		    return nativeEvent.getModifierState(keyArg);
		  }
		  var keyProp = modifierKeyToProp[keyArg];
		  return keyProp ? !!nativeEvent[keyProp] : false;
		}

		function getEventModifierState(nativeEvent) {
		  return modifierStateGetter;
		}

		/**
		 * @interface MouseEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var MouseEventInterface = {
		  screenX: null,
		  screenY: null,
		  clientX: null,
		  clientY: null,
		  pageX: null,
		  pageY: null,
		  ctrlKey: null,
		  shiftKey: null,
		  altKey: null,
		  metaKey: null,
		  getModifierState: getEventModifierState,
		  button: null,
		  buttons: null,
		  relatedTarget: function (event) {
		    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
		  }
		};

		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticUIEvent}
		 */
		function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}

		SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

		var eventTypes$2 = {
		  mouseEnter: {
		    registrationName: 'onMouseEnter',
		    dependencies: ['topMouseOut', 'topMouseOver']
		  },
		  mouseLeave: {
		    registrationName: 'onMouseLeave',
		    dependencies: ['topMouseOut', 'topMouseOver']
		  }
		};

		var EnterLeaveEventPlugin = {
		  eventTypes: eventTypes$2,

		  /**
		   * For almost every interaction we care about, there will be both a top-level
		   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
		   * we do not extract duplicate events. However, moving the mouse into the
		   * browser from outside will not fire a `mouseout` event. In this case, we use
		   * the `mouseover` top-level event.
		   */
		  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
		      return null;
		    }
		    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
		      // Must not be a mouse in or mouse out - ignoring.
		      return null;
		    }

		    var win;
		    if (nativeEventTarget.window === nativeEventTarget) {
		      // `nativeEventTarget` is probably a window object.
		      win = nativeEventTarget;
		    } else {
		      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
		      var doc = nativeEventTarget.ownerDocument;
		      if (doc) {
		        win = doc.defaultView || doc.parentWindow;
		      } else {
		        win = window;
		      }
		    }

		    var from;
		    var to;
		    if (topLevelType === 'topMouseOut') {
		      from = targetInst;
		      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
		      to = related ? getClosestInstanceFromNode(related) : null;
		    } else {
		      // Moving to a node from outside the window.
		      from = null;
		      to = targetInst;
		    }

		    if (from === to) {
		      // Nothing pertains to our managed components.
		      return null;
		    }

		    var fromNode = from == null ? win : getNodeFromInstance$1(from);
		    var toNode = to == null ? win : getNodeFromInstance$1(to);

		    var leave = SyntheticMouseEvent.getPooled(eventTypes$2.mouseLeave, from, nativeEvent, nativeEventTarget);
		    leave.type = 'mouseleave';
		    leave.target = fromNode;
		    leave.relatedTarget = toNode;

		    var enter = SyntheticMouseEvent.getPooled(eventTypes$2.mouseEnter, to, nativeEvent, nativeEventTarget);
		    enter.type = 'mouseenter';
		    enter.target = toNode;
		    enter.relatedTarget = fromNode;

		    accumulateEnterLeaveDispatches(leave, enter, from, to);

		    return [leave, enter];
		  }
		};

		/**
		 * `ReactInstanceMap` maintains a mapping from a public facing stateful
		 * instance (key) and the internal representation (value). This allows public
		 * methods to accept the user facing instance as an argument and map them back
		 * to internal methods.
		 *
		 * Note that this module is currently shared and assumed to be stateless.
		 * If this becomes an actual Map, that will break.
		 */

		/**
		 * This API should be called `delete` but we'd have to make sure to always
		 * transform these to strings for IE support. When this transform is fully
		 * supported we can rename it.
		 */


		function get(key) {
		  return key._reactInternalFiber;
		}

		function has(key) {
		  return key._reactInternalFiber !== undefined;
		}

		function set(key, value) {
		  key._reactInternalFiber = value;
		}

		var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

		var ReactCurrentOwner = ReactInternals.ReactCurrentOwner;
		var ReactDebugCurrentFrame = ReactInternals.ReactDebugCurrentFrame;

		function getComponentName(fiber) {
		  var type = fiber.type;

		  if (typeof type === 'string') {
		    return type;
		  }
		  if (typeof type === 'function') {
		    return type.displayName || type.name;
		  }
		  return null;
		}

		// Don't change these two values:
		var NoEffect = 0; //           0b00000000
		var PerformedWork = 1; //      0b00000001

		// You can change the rest (and add more).
		var Placement = 2; //          0b00000010
		var Update = 4; //             0b00000100
		var PlacementAndUpdate = 6; // 0b00000110
		var Deletion = 8; //           0b00001000
		var ContentReset = 16; //      0b00010000
		var Callback = 32; //          0b00100000
		var Err = 64; //               0b01000000
		var Ref = 128; //              0b10000000

		var MOUNTING = 1;
		var MOUNTED = 2;
		var UNMOUNTED = 3;

		function isFiberMountedImpl(fiber) {
		  var node = fiber;
		  if (!fiber.alternate) {
		    // If there is no alternate, this might be a new tree that isn't inserted
		    // yet. If it is, then it will have a pending insertion effect on it.
		    if ((node.effectTag & Placement) !== NoEffect) {
		      return MOUNTING;
		    }
		    while (node['return']) {
		      node = node['return'];
		      if ((node.effectTag & Placement) !== NoEffect) {
		        return MOUNTING;
		      }
		    }
		  } else {
		    while (node['return']) {
		      node = node['return'];
		    }
		  }
		  if (node.tag === HostRoot) {
		    // TODO: Check if this was a nested HostRoot when used with
		    // renderContainerIntoSubtree.
		    return MOUNTED;
		  }
		  // If we didn't hit the root, that means that we're in an disconnected tree
		  // that has been unmounted.
		  return UNMOUNTED;
		}

		function isFiberMounted(fiber) {
		  return isFiberMountedImpl(fiber) === MOUNTED;
		}

		function isMounted(component) {
		  {
		    var owner = ReactCurrentOwner.current;
		    if (owner !== null && owner.tag === ClassComponent) {
		      var ownerFiber = owner;
		      var instance = ownerFiber.stateNode;
		      warning(instance._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber) || 'A component');
		      instance._warnedAboutRefsInRender = true;
		    }
		  }

		  var fiber = get(component);
		  if (!fiber) {
		    return false;
		  }
		  return isFiberMountedImpl(fiber) === MOUNTED;
		}

		function assertIsMounted(fiber) {
		  !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
		}

		function findCurrentFiberUsingSlowPath(fiber) {
		  var alternate = fiber.alternate;
		  if (!alternate) {
		    // If there is no alternate, then we only need to check if it is mounted.
		    var state = isFiberMountedImpl(fiber);
		    !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
		    if (state === MOUNTING) {
		      return null;
		    }
		    return fiber;
		  }
		  // If we have two possible branches, we'll walk backwards up to the root
		  // to see what path the root points to. On the way we may hit one of the
		  // special cases and we'll deal with them.
		  var a = fiber;
		  var b = alternate;
		  while (true) {
		    var parentA = a['return'];
		    var parentB = parentA ? parentA.alternate : null;
		    if (!parentA || !parentB) {
		      // We're at the root.
		      break;
		    }

		    // If both copies of the parent fiber point to the same child, we can
		    // assume that the child is current. This happens when we bailout on low
		    // priority: the bailed out fiber's child reuses the current child.
		    if (parentA.child === parentB.child) {
		      var child = parentA.child;
		      while (child) {
		        if (child === a) {
		          // We've determined that A is the current branch.
		          assertIsMounted(parentA);
		          return fiber;
		        }
		        if (child === b) {
		          // We've determined that B is the current branch.
		          assertIsMounted(parentA);
		          return alternate;
		        }
		        child = child.sibling;
		      }
		      // We should never have an alternate for any mounting node. So the only
		      // way this could possibly happen is if this was unmounted, if at all.
		      invariant(false, 'Unable to find node on an unmounted component.');
		    }

		    if (a['return'] !== b['return']) {
		      // The return pointer of A and the return pointer of B point to different
		      // fibers. We assume that return pointers never criss-cross, so A must
		      // belong to the child set of A.return, and B must belong to the child
		      // set of B.return.
		      a = parentA;
		      b = parentB;
		    } else {
		      // The return pointers point to the same fiber. We'll have to use the
		      // default, slow path: scan the child sets of each parent alternate to see
		      // which child belongs to which set.
		      //
		      // Search parent A's child set
		      var didFindChild = false;
		      var _child = parentA.child;
		      while (_child) {
		        if (_child === a) {
		          didFindChild = true;
		          a = parentA;
		          b = parentB;
		          break;
		        }
		        if (_child === b) {
		          didFindChild = true;
		          b = parentA;
		          a = parentB;
		          break;
		        }
		        _child = _child.sibling;
		      }
		      if (!didFindChild) {
		        // Search parent B's child set
		        _child = parentB.child;
		        while (_child) {
		          if (_child === a) {
		            didFindChild = true;
		            a = parentB;
		            b = parentA;
		            break;
		          }
		          if (_child === b) {
		            didFindChild = true;
		            b = parentB;
		            a = parentA;
		            break;
		          }
		          _child = _child.sibling;
		        }
		        !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
		      }
		    }

		    !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		  }
		  // If the root is not a host container, we're in a disconnected tree. I.e.
		  // unmounted.
		  !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
		  if (a.stateNode.current === a) {
		    // We've determined that A is the current branch.
		    return fiber;
		  }
		  // Otherwise B has to be current branch.
		  return alternate;
		}

		function findCurrentHostFiber(parent) {
		  var currentParent = findCurrentFiberUsingSlowPath(parent);
		  if (!currentParent) {
		    return null;
		  }

		  // Next we'll drill down this component to find the first HostComponent/Text.
		  var node = currentParent;
		  while (true) {
		    if (node.tag === HostComponent || node.tag === HostText) {
		      return node;
		    } else if (node.child) {
		      node.child['return'] = node;
		      node = node.child;
		      continue;
		    }
		    if (node === currentParent) {
		      return null;
		    }
		    while (!node.sibling) {
		      if (!node['return'] || node['return'] === currentParent) {
		        return null;
		      }
		      node = node['return'];
		    }
		    node.sibling['return'] = node['return'];
		    node = node.sibling;
		  }
		  // Flow needs the return null here, but ESLint complains about it.
		  // eslint-disable-next-line no-unreachable
		  return null;
		}

		function findCurrentHostFiberWithNoPortals(parent) {
		  var currentParent = findCurrentFiberUsingSlowPath(parent);
		  if (!currentParent) {
		    return null;
		  }

		  // Next we'll drill down this component to find the first HostComponent/Text.
		  var node = currentParent;
		  while (true) {
		    if (node.tag === HostComponent || node.tag === HostText) {
		      return node;
		    } else if (node.child && node.tag !== HostPortal) {
		      node.child['return'] = node;
		      node = node.child;
		      continue;
		    }
		    if (node === currentParent) {
		      return null;
		    }
		    while (!node.sibling) {
		      if (!node['return'] || node['return'] === currentParent) {
		        return null;
		      }
		      node = node['return'];
		    }
		    node.sibling['return'] = node['return'];
		    node = node.sibling;
		  }
		  // Flow needs the return null here, but ESLint complains about it.
		  // eslint-disable-next-line no-unreachable
		  return null;
		}

		var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
		var callbackBookkeepingPool = [];

		/**
		 * Find the deepest React component completely containing the root of the
		 * passed-in instance (for use when entire React trees are nested within each
		 * other). If React trees are not nested, returns null.
		 */
		function findRootContainerNode(inst) {
		  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
		  // traversal, but caching is difficult to do correctly without using a
		  // mutation observer to listen for all DOM changes.
		  while (inst['return']) {
		    inst = inst['return'];
		  }
		  if (inst.tag !== HostRoot) {
		    // This can happen if we're in a detached tree.
		    return null;
		  }
		  return inst.stateNode.containerInfo;
		}

		// Used to store ancestor hierarchy in top level callback
		function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
		  if (callbackBookkeepingPool.length) {
		    var instance = callbackBookkeepingPool.pop();
		    instance.topLevelType = topLevelType;
		    instance.nativeEvent = nativeEvent;
		    instance.targetInst = targetInst;
		    return instance;
		  }
		  return {
		    topLevelType: topLevelType,
		    nativeEvent: nativeEvent,
		    targetInst: targetInst,
		    ancestors: []
		  };
		}

		function releaseTopLevelCallbackBookKeeping(instance) {
		  instance.topLevelType = null;
		  instance.nativeEvent = null;
		  instance.targetInst = null;
		  instance.ancestors.length = 0;
		  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
		    callbackBookkeepingPool.push(instance);
		  }
		}

		function handleTopLevelImpl(bookKeeping) {
		  var targetInst = bookKeeping.targetInst;

		  // Loop through the hierarchy, in case there's any nested components.
		  // It's important that we build the array of ancestors before calling any
		  // event handlers, because event handlers can modify the DOM, leading to
		  // inconsistencies with ReactMount's node cache. See #1105.
		  var ancestor = targetInst;
		  do {
		    if (!ancestor) {
		      bookKeeping.ancestors.push(ancestor);
		      break;
		    }
		    var root = findRootContainerNode(ancestor);
		    if (!root) {
		      break;
		    }
		    bookKeeping.ancestors.push(ancestor);
		    ancestor = getClosestInstanceFromNode(root);
		  } while (ancestor);

		  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
		    targetInst = bookKeeping.ancestors[i];
		    _handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
		  }
		}

		// TODO: can we stop exporting these?
		var _enabled = true;
		var _handleTopLevel = void 0;

		function setHandleTopLevel(handleTopLevel) {
		  _handleTopLevel = handleTopLevel;
		}

		function setEnabled(enabled) {
		  _enabled = !!enabled;
		}

		function isEnabled() {
		  return _enabled;
		}

		/**
		 * Traps top-level events by using event bubbling.
		 *
		 * @param {string} topLevelType Record from `BrowserEventConstants`.
		 * @param {string} handlerBaseName Event name (e.g. "click").
		 * @param {object} element Element on which to attach listener.
		 * @return {?object} An object with a remove function which will forcefully
		 *                  remove the listener.
		 * @internal
		 */
		function trapBubbledEvent(topLevelType, handlerBaseName, element) {
		  if (!element) {
		    return null;
		  }
		  return EventListener.listen(element, handlerBaseName, dispatchEvent.bind(null, topLevelType));
		}

		/**
		 * Traps a top-level event by using event capturing.
		 *
		 * @param {string} topLevelType Record from `BrowserEventConstants`.
		 * @param {string} handlerBaseName Event name (e.g. "click").
		 * @param {object} element Element on which to attach listener.
		 * @return {?object} An object with a remove function which will forcefully
		 *                  remove the listener.
		 * @internal
		 */
		function trapCapturedEvent(topLevelType, handlerBaseName, element) {
		  if (!element) {
		    return null;
		  }
		  return EventListener.capture(element, handlerBaseName, dispatchEvent.bind(null, topLevelType));
		}

		function dispatchEvent(topLevelType, nativeEvent) {
		  if (!_enabled) {
		    return;
		  }

		  var nativeEventTarget = getEventTarget(nativeEvent);
		  var targetInst = getClosestInstanceFromNode(nativeEventTarget);
		  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
		    // If we get an event (ex: img onload) before committing that
		    // component's mount, ignore it for now (that is, treat it as if it was an
		    // event on a non-React tree). We might also consider queueing events and
		    // dispatching them after the mount.
		    targetInst = null;
		  }

		  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

		  try {
		    // Event queue being processed in the same cycle allows
		    // `preventDefault`.
		    batchedUpdates(handleTopLevelImpl, bookKeeping);
		  } finally {
		    releaseTopLevelCallbackBookKeeping(bookKeeping);
		  }
		}

		var ReactDOMEventListener = Object.freeze({
			get _enabled () { return _enabled; },
			get _handleTopLevel () { return _handleTopLevel; },
			setHandleTopLevel: setHandleTopLevel,
			setEnabled: setEnabled,
			isEnabled: isEnabled,
			trapBubbledEvent: trapBubbledEvent,
			trapCapturedEvent: trapCapturedEvent,
			dispatchEvent: dispatchEvent
		});

		/**
		 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
		 *
		 * @param {string} styleProp
		 * @param {string} eventName
		 * @returns {object}
		 */
		function makePrefixMap(styleProp, eventName) {
		  var prefixes = {};

		  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
		  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
		  prefixes['Moz' + styleProp] = 'moz' + eventName;
		  prefixes['ms' + styleProp] = 'MS' + eventName;
		  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

		  return prefixes;
		}

		/**
		 * A list of event names to a configurable list of vendor prefixes.
		 */
		var vendorPrefixes = {
		  animationend: makePrefixMap('Animation', 'AnimationEnd'),
		  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
		  animationstart: makePrefixMap('Animation', 'AnimationStart'),
		  transitionend: makePrefixMap('Transition', 'TransitionEnd')
		};

		/**
		 * Event names that have already been detected and prefixed (if applicable).
		 */
		var prefixedEventNames = {};

		/**
		 * Element to check for prefixes on.
		 */
		var style = {};

		/**
		 * Bootstrap if a DOM exists.
		 */
		if (ExecutionEnvironment.canUseDOM) {
		  style = document.createElement('div').style;

		  // On some platforms, in particular some releases of Android 4.x,
		  // the un-prefixed "animation" and "transition" properties are defined on the
		  // style object but the events that fire will still be prefixed, so we need
		  // to check if the un-prefixed events are usable, and if not remove them from the map.
		  if (!('AnimationEvent' in window)) {
		    delete vendorPrefixes.animationend.animation;
		    delete vendorPrefixes.animationiteration.animation;
		    delete vendorPrefixes.animationstart.animation;
		  }

		  // Same as above
		  if (!('TransitionEvent' in window)) {
		    delete vendorPrefixes.transitionend.transition;
		  }
		}

		/**
		 * Attempts to determine the correct vendor prefixed event name.
		 *
		 * @param {string} eventName
		 * @returns {string}
		 */
		function getVendorPrefixedEventName(eventName) {
		  if (prefixedEventNames[eventName]) {
		    return prefixedEventNames[eventName];
		  } else if (!vendorPrefixes[eventName]) {
		    return eventName;
		  }

		  var prefixMap = vendorPrefixes[eventName];

		  for (var styleProp in prefixMap) {
		    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
		      return prefixedEventNames[eventName] = prefixMap[styleProp];
		    }
		  }

		  return '';
		}

		/**
		 * Types of raw signals from the browser caught at the top level.
		 *
		 * For events like 'submit' which don't consistently bubble (which we
		 * trap at a lower node than `document`), binding at `document` would
		 * cause duplicate events so we don't include them here.
		 */
		var topLevelTypes$1 = {
		  topAbort: 'abort',
		  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
		  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
		  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
		  topBlur: 'blur',
		  topCancel: 'cancel',
		  topCanPlay: 'canplay',
		  topCanPlayThrough: 'canplaythrough',
		  topChange: 'change',
		  topClick: 'click',
		  topClose: 'close',
		  topCompositionEnd: 'compositionend',
		  topCompositionStart: 'compositionstart',
		  topCompositionUpdate: 'compositionupdate',
		  topContextMenu: 'contextmenu',
		  topCopy: 'copy',
		  topCut: 'cut',
		  topDoubleClick: 'dblclick',
		  topDrag: 'drag',
		  topDragEnd: 'dragend',
		  topDragEnter: 'dragenter',
		  topDragExit: 'dragexit',
		  topDragLeave: 'dragleave',
		  topDragOver: 'dragover',
		  topDragStart: 'dragstart',
		  topDrop: 'drop',
		  topDurationChange: 'durationchange',
		  topEmptied: 'emptied',
		  topEncrypted: 'encrypted',
		  topEnded: 'ended',
		  topError: 'error',
		  topFocus: 'focus',
		  topInput: 'input',
		  topKeyDown: 'keydown',
		  topKeyPress: 'keypress',
		  topKeyUp: 'keyup',
		  topLoadedData: 'loadeddata',
		  topLoad: 'load',
		  topLoadedMetadata: 'loadedmetadata',
		  topLoadStart: 'loadstart',
		  topMouseDown: 'mousedown',
		  topMouseMove: 'mousemove',
		  topMouseOut: 'mouseout',
		  topMouseOver: 'mouseover',
		  topMouseUp: 'mouseup',
		  topPaste: 'paste',
		  topPause: 'pause',
		  topPlay: 'play',
		  topPlaying: 'playing',
		  topProgress: 'progress',
		  topRateChange: 'ratechange',
		  topScroll: 'scroll',
		  topSeeked: 'seeked',
		  topSeeking: 'seeking',
		  topSelectionChange: 'selectionchange',
		  topStalled: 'stalled',
		  topSuspend: 'suspend',
		  topTextInput: 'textInput',
		  topTimeUpdate: 'timeupdate',
		  topToggle: 'toggle',
		  topTouchCancel: 'touchcancel',
		  topTouchEnd: 'touchend',
		  topTouchMove: 'touchmove',
		  topTouchStart: 'touchstart',
		  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
		  topVolumeChange: 'volumechange',
		  topWaiting: 'waiting',
		  topWheel: 'wheel'
		};

		var BrowserEventConstants = {
		  topLevelTypes: topLevelTypes$1
		};

		function runEventQueueInBatch(events) {
		  enqueueEvents(events);
		  processEventQueue(false);
		}

		/**
		 * Streams a fired top-level event to `EventPluginHub` where plugins have the
		 * opportunity to create `ReactEvent`s to be dispatched.
		 */
		function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		  var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
		  runEventQueueInBatch(events);
		}

		var topLevelTypes = BrowserEventConstants.topLevelTypes;

		/**
		 * Summary of `ReactBrowserEventEmitter` event handling:
		 *
		 *  - Top-level delegation is used to trap most native browser events. This
		 *    may only occur in the main thread and is the responsibility of
		 *    ReactDOMEventListener, which is injected and can therefore support
		 *    pluggable event sources. This is the only work that occurs in the main
		 *    thread.
		 *
		 *  - We normalize and de-duplicate events to account for browser quirks. This
		 *    may be done in the worker thread.
		 *
		 *  - Forward these native events (with the associated top-level type used to
		 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
		 *    to extract any synthetic events.
		 *
		 *  - The `EventPluginHub` will then process each event by annotating them with
		 *    "dispatches", a sequence of listeners and IDs that care about that event.
		 *
		 *  - The `EventPluginHub` then dispatches the events.
		 *
		 * Overview of React and the event system:
		 *
		 * +------------+    .
		 * |    DOM     |    .
		 * +------------+    .
		 *       |           .
		 *       v           .
		 * +------------+    .
		 * | ReactEvent |    .
		 * |  Listener  |    .
		 * +------------+    .                         +-----------+
		 *       |           .               +--------+|SimpleEvent|
		 *       |           .               |         |Plugin     |
		 * +-----|------+    .               v         +-----------+
		 * |     |      |    .    +--------------+                    +------------+
		 * |     +-----------.--->|EventPluginHub|                    |    Event   |
		 * |            |    .    |              |     +-----------+  | Propagators|
		 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
		 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
		 * |            |    .    |              |     +-----------+  |  utilities |
		 * |     +-----------.--->|              |                    +------------+
		 * |     |      |    .    +--------------+
		 * +-----|------+    .                ^        +-----------+
		 *       |           .                |        |Enter/Leave|
		 *       +           .                +-------+|Plugin     |
		 * +-------------+   .                         +-----------+
		 * | application |   .
		 * |-------------|   .
		 * |             |   .
		 * |             |   .
		 * +-------------+   .
		 *                   .
		 *    React Core     .  General Purpose Event Plugin System
		 */

		var alreadyListeningTo = {};
		var reactTopListenersCounter = 0;

		/**
		 * To ensure no conflicts with other potential React instances on the page
		 */
		var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);

		function getListeningForDocument(mountAt) {
		  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
		  // directly.
		  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
		    mountAt[topListenersIDKey] = reactTopListenersCounter++;
		    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
		  }
		  return alreadyListeningTo[mountAt[topListenersIDKey]];
		}

		/**
		 * We listen for bubbled touch events on the document object.
		 *
		 * Firefox v8.01 (and possibly others) exhibited strange behavior when
		 * mounting `onmousemove` events at some node that was not the document
		 * element. The symptoms were that if your mouse is not moving over something
		 * contained within that mount point (for example on the background) the
		 * top-level listeners for `onmousemove` won't be called. However, if you
		 * register the `mousemove` on the document object, then it will of course
		 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
		 * top-level listeners to the document object only, at least for these
		 * movement types of events and possibly all events.
		 *
		 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
		 *
		 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
		 * they bubble to document.
		 *
		 * @param {string} registrationName Name of listener (e.g. `onClick`).
		 * @param {object} contentDocumentHandle Document which owns the container
		 */
		function listenTo(registrationName, contentDocumentHandle) {
		  var mountAt = contentDocumentHandle;
		  var isListening = getListeningForDocument(mountAt);
		  var dependencies = registrationNameDependencies[registrationName];

		  for (var i = 0; i < dependencies.length; i++) {
		    var dependency = dependencies[i];
		    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
		      if (dependency === 'topScroll') {
		        trapCapturedEvent('topScroll', 'scroll', mountAt);
		      } else if (dependency === 'topFocus' || dependency === 'topBlur') {
		        trapCapturedEvent('topFocus', 'focus', mountAt);
		        trapCapturedEvent('topBlur', 'blur', mountAt);

		        // to make sure blur and focus event listeners are only attached once
		        isListening.topBlur = true;
		        isListening.topFocus = true;
		      } else if (dependency === 'topCancel') {
		        if (isEventSupported('cancel', true)) {
		          trapCapturedEvent('topCancel', 'cancel', mountAt);
		        }
		        isListening.topCancel = true;
		      } else if (dependency === 'topClose') {
		        if (isEventSupported('close', true)) {
		          trapCapturedEvent('topClose', 'close', mountAt);
		        }
		        isListening.topClose = true;
		      } else if (topLevelTypes.hasOwnProperty(dependency)) {
		        trapBubbledEvent(dependency, topLevelTypes[dependency], mountAt);
		      }

		      isListening[dependency] = true;
		    }
		  }
		}

		function isListeningToAllDependencies(registrationName, mountAt) {
		  var isListening = getListeningForDocument(mountAt);
		  var dependencies = registrationNameDependencies[registrationName];
		  for (var i = 0; i < dependencies.length; i++) {
		    var dependency = dependencies[i];
		    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
		      return false;
		    }
		  }
		  return true;
		}

		/**
		 * Given any node return the first leaf node without children.
		 *
		 * @param {DOMElement|DOMTextNode} node
		 * @return {DOMElement|DOMTextNode}
		 */
		function getLeafNode(node) {
		  while (node && node.firstChild) {
		    node = node.firstChild;
		  }
		  return node;
		}

		/**
		 * Get the next sibling within a container. This will walk up the
		 * DOM if a node's siblings have been exhausted.
		 *
		 * @param {DOMElement|DOMTextNode} node
		 * @return {?DOMElement|DOMTextNode}
		 */
		function getSiblingNode(node) {
		  while (node) {
		    if (node.nextSibling) {
		      return node.nextSibling;
		    }
		    node = node.parentNode;
		  }
		}

		/**
		 * Get object describing the nodes which contain characters at offset.
		 *
		 * @param {DOMElement|DOMTextNode} root
		 * @param {number} offset
		 * @return {?object}
		 */
		function getNodeForCharacterOffset(root, offset) {
		  var node = getLeafNode(root);
		  var nodeStart = 0;
		  var nodeEnd = 0;

		  while (node) {
		    if (node.nodeType === TEXT_NODE) {
		      nodeEnd = nodeStart + node.textContent.length;

		      if (nodeStart <= offset && nodeEnd >= offset) {
		        return {
		          node: node,
		          offset: offset - nodeStart
		        };
		      }

		      nodeStart = nodeEnd;
		    }

		    node = getLeafNode(getSiblingNode(node));
		  }
		}

		/**
		 * @param {DOMElement} outerNode
		 * @return {?object}
		 */
		function getOffsets(outerNode) {
		  var selection = window.getSelection && window.getSelection();

		  if (!selection || selection.rangeCount === 0) {
		    return null;
		  }

		  var anchorNode = selection.anchorNode,
		      anchorOffset = selection.anchorOffset,
		      focusNode$$1 = selection.focusNode,
		      focusOffset = selection.focusOffset;

		  // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
		  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
		  // expose properties, triggering a "Permission denied error" if any of its
		  // properties are accessed. The only seemingly possible way to avoid erroring
		  // is to access a property that typically works for non-anonymous divs and
		  // catch any error that may otherwise arise. See
		  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

		  try {
		    /* eslint-disable no-unused-expressions */
		    anchorNode.nodeType;
		    focusNode$$1.nodeType;
		    /* eslint-enable no-unused-expressions */
		  } catch (e) {
		    return null;
		  }

		  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode$$1, focusOffset);
		}

		/**
		 * Returns {start, end} where `start` is the character/codepoint index of
		 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
		 * `end` is the index of (focusNode, focusOffset).
		 *
		 * Returns null if you pass in garbage input but we should probably just crash.
		 *
		 * Exported only for testing.
		 */
		function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode$$1, focusOffset) {
		  var length = 0;
		  var start = -1;
		  var end = -1;
		  var indexWithinAnchor = 0;
		  var indexWithinFocus = 0;
		  var node = outerNode;
		  var parentNode = null;

		  outer: while (true) {
		    var next = null;

		    while (true) {
		      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
		        start = length + anchorOffset;
		      }
		      if (node === focusNode$$1 && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
		        end = length + focusOffset;
		      }

		      if (node.nodeType === TEXT_NODE) {
		        length += node.nodeValue.length;
		      }

		      if ((next = node.firstChild) === null) {
		        break;
		      }
		      // Moving from `node` to its first child `next`.
		      parentNode = node;
		      node = next;
		    }

		    while (true) {
		      if (node === outerNode) {
		        // If `outerNode` has children, this is always the second time visiting
		        // it. If it has no children, this is still the first loop, and the only
		        // valid selection is anchorNode and focusNode both equal to this node
		        // and both offsets 0, in which case we will have handled above.
		        break outer;
		      }
		      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
		        start = length;
		      }
		      if (parentNode === focusNode$$1 && ++indexWithinFocus === focusOffset) {
		        end = length;
		      }
		      if ((next = node.nextSibling) !== null) {
		        break;
		      }
		      node = parentNode;
		      parentNode = node.parentNode;
		    }

		    // Moving from `node` to its next sibling `next`.
		    node = next;
		  }

		  if (start === -1 || end === -1) {
		    // This should never happen. (Would happen if the anchor/focus nodes aren't
		    // actually inside the passed-in node.)
		    return null;
		  }

		  return {
		    start: start,
		    end: end
		  };
		}

		/**
		 * In modern non-IE browsers, we can support both forward and backward
		 * selections.
		 *
		 * Note: IE10+ supports the Selection object, but it does not support
		 * the `extend` method, which means that even in modern IE, it's not possible
		 * to programmatically create a backward selection. Thus, for all IE
		 * versions, we use the old IE API to create our selections.
		 *
		 * @param {DOMElement|DOMTextNode} node
		 * @param {object} offsets
		 */
		function setOffsets(node, offsets) {
		  if (!window.getSelection) {
		    return;
		  }

		  var selection = window.getSelection();
		  var length = node[getTextContentAccessor()].length;
		  var start = Math.min(offsets.start, length);
		  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

		  // IE 11 uses modern selection, but doesn't support the extend method.
		  // Flip backward selections, so we can set with a single range.
		  if (!selection.extend && start > end) {
		    var temp = end;
		    end = start;
		    start = temp;
		  }

		  var startMarker = getNodeForCharacterOffset(node, start);
		  var endMarker = getNodeForCharacterOffset(node, end);

		  if (startMarker && endMarker) {
		    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
		      return;
		    }
		    var range = document.createRange();
		    range.setStart(startMarker.node, startMarker.offset);
		    selection.removeAllRanges();

		    if (start > end) {
		      selection.addRange(range);
		      selection.extend(endMarker.node, endMarker.offset);
		    } else {
		      range.setEnd(endMarker.node, endMarker.offset);
		      selection.addRange(range);
		    }
		  }
		}

		function isInDocument(node) {
		  return containsNode(document.documentElement, node);
		}

		/**
		 * @ReactInputSelection: React input selection module. Based on Selection.js,
		 * but modified to be suitable for react and has a couple of bug fixes (doesn't
		 * assume buttons have range selections allowed).
		 * Input selection module for React.
		 */

		function hasSelectionCapabilities(elem) {
		  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
		  return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
		}

		function getSelectionInformation() {
		  var focusedElem = getActiveElement();
		  return {
		    focusedElem: focusedElem,
		    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
		  };
		}

		/**
		 * @restoreSelection: If any selection information was potentially lost,
		 * restore it. This is useful when performing operations that could remove dom
		 * nodes and place them back in, resulting in focus being lost.
		 */
		function restoreSelection(priorSelectionInformation) {
		  var curFocusedElem = getActiveElement();
		  var priorFocusedElem = priorSelectionInformation.focusedElem;
		  var priorSelectionRange = priorSelectionInformation.selectionRange;
		  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
		    if (hasSelectionCapabilities(priorFocusedElem)) {
		      setSelection(priorFocusedElem, priorSelectionRange);
		    }

		    // Focusing a node can change the scroll position, which is undesirable
		    var ancestors = [];
		    var ancestor = priorFocusedElem;
		    while (ancestor = ancestor.parentNode) {
		      if (ancestor.nodeType === ELEMENT_NODE) {
		        ancestors.push({
		          element: ancestor,
		          left: ancestor.scrollLeft,
		          top: ancestor.scrollTop
		        });
		      }
		    }

		    focusNode(priorFocusedElem);

		    for (var i = 0; i < ancestors.length; i++) {
		      var info = ancestors[i];
		      info.element.scrollLeft = info.left;
		      info.element.scrollTop = info.top;
		    }
		  }
		}

		/**
		 * @getSelection: Gets the selection bounds of a focused textarea, input or
		 * contentEditable node.
		 * -@input: Look up selection bounds of this input
		 * -@return {start: selectionStart, end: selectionEnd}
		 */
		function getSelection$1(input) {
		  var selection = void 0;

		  if ('selectionStart' in input) {
		    // Modern browser with input or textarea.
		    selection = {
		      start: input.selectionStart,
		      end: input.selectionEnd
		    };
		  } else {
		    // Content editable or old IE textarea.
		    selection = getOffsets(input);
		  }

		  return selection || { start: 0, end: 0 };
		}

		/**
		 * @setSelection: Sets the selection bounds of a textarea or input and focuses
		 * the input.
		 * -@input     Set selection bounds of this input or textarea
		 * -@offsets   Object of same form that is returned from get*
		 */
		function setSelection(input, offsets) {
		  var start = offsets.start,
		      end = offsets.end;

		  if (end === undefined) {
		    end = start;
		  }

		  if ('selectionStart' in input) {
		    input.selectionStart = start;
		    input.selectionEnd = Math.min(end, input.value.length);
		  } else {
		    setOffsets(input, offsets);
		  }
		}

		var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

		var eventTypes$3 = {
		  select: {
		    phasedRegistrationNames: {
		      bubbled: 'onSelect',
		      captured: 'onSelectCapture'
		    },
		    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
		  }
		};

		var activeElement$1 = null;
		var activeElementInst$1 = null;
		var lastSelection = null;
		var mouseDown = false;

		/**
		 * Get an object which is a unique representation of the current selection.
		 *
		 * The return value will not be consistent across nodes or browsers, but
		 * two identical selections on the same node will return identical objects.
		 *
		 * @param {DOMElement} node
		 * @return {object}
		 */
		function getSelection(node) {
		  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
		    return {
		      start: node.selectionStart,
		      end: node.selectionEnd
		    };
		  } else if (window.getSelection) {
		    var selection = window.getSelection();
		    return {
		      anchorNode: selection.anchorNode,
		      anchorOffset: selection.anchorOffset,
		      focusNode: selection.focusNode,
		      focusOffset: selection.focusOffset
		    };
		  }
		}

		/**
		 * Poll selection to see whether it's changed.
		 *
		 * @param {object} nativeEvent
		 * @return {?SyntheticEvent}
		 */
		function constructSelectEvent(nativeEvent, nativeEventTarget) {
		  // Ensure we have the right element, and that the user is not dragging a
		  // selection (this matches native `select` event behavior). In HTML5, select
		  // fires only on input and textarea thus if there's no focused element we
		  // won't dispatch.
		  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement()) {
		    return null;
		  }

		  // Only fire when selection has actually changed.
		  var currentSelection = getSelection(activeElement$1);
		  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
		    lastSelection = currentSelection;

		    var syntheticEvent = SyntheticEvent$1.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);

		    syntheticEvent.type = 'select';
		    syntheticEvent.target = activeElement$1;

		    accumulateTwoPhaseDispatches(syntheticEvent);

		    return syntheticEvent;
		  }

		  return null;
		}

		/**
		 * This plugin creates an `onSelect` event that normalizes select events
		 * across form elements.
		 *
		 * Supported elements are:
		 * - input (see `isTextInputElement`)
		 * - textarea
		 * - contentEditable
		 *
		 * This differs from native browser implementations in the following ways:
		 * - Fires on contentEditable fields as well as inputs.
		 * - Fires for collapsed selection.
		 * - Fires after user input.
		 */
		var SelectEventPlugin = {
		  eventTypes: eventTypes$3,

		  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		    var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : nativeEventTarget.nodeType === DOCUMENT_NODE ? nativeEventTarget : nativeEventTarget.ownerDocument;
		    // Track whether all listeners exists for this plugin. If none exist, we do
		    // not extract events. See #3639.
		    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
		      return null;
		    }

		    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

		    switch (topLevelType) {
		      // Track the input node that has focus.
		      case 'topFocus':
		        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
		          activeElement$1 = targetNode;
		          activeElementInst$1 = targetInst;
		          lastSelection = null;
		        }
		        break;
		      case 'topBlur':
		        activeElement$1 = null;
		        activeElementInst$1 = null;
		        lastSelection = null;
		        break;
		      // Don't fire the event while the user is dragging. This matches the
		      // semantics of the native select event.
		      case 'topMouseDown':
		        mouseDown = true;
		        break;
		      case 'topContextMenu':
		      case 'topMouseUp':
		        mouseDown = false;
		        return constructSelectEvent(nativeEvent, nativeEventTarget);
		      // Chrome and IE fire non-standard event when selection is changed (and
		      // sometimes when it hasn't). IE's event fires out of order with respect
		      // to key and input events on deletion, so we discard it.
		      //
		      // Firefox doesn't support selectionchange, so check selection status
		      // after each key entry. The selection changes after keydown and before
		      // keyup, but we check on keydown as well in the case of holding down a
		      // key, when multiple keydown events are fired but only one keyup is.
		      // This is also our approach for IE handling, for the reason above.
		      case 'topSelectionChange':
		        if (skipSelectionChangeEvent) {
		          break;
		        }
		      // falls through
		      case 'topKeyDown':
		      case 'topKeyUp':
		        return constructSelectEvent(nativeEvent, nativeEventTarget);
		    }

		    return null;
		  }
		};

		/**
		 * @interface Event
		 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
		 */
		var AnimationEventInterface = {
		  animationName: null,
		  elapsedTime: null,
		  pseudoElement: null
		};

		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticEvent}
		 */
		function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}

		SyntheticEvent$1.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

		/**
		 * @interface Event
		 * @see http://www.w3.org/TR/clipboard-apis/
		 */
		var ClipboardEventInterface = {
		  clipboardData: function (event) {
		    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
		  }
		};

		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticEvent}
		 */
		function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}

		SyntheticEvent$1.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

		/**
		 * @interface FocusEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var FocusEventInterface = {
		  relatedTarget: null
		};

		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticUIEvent}
		 */
		function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}

		SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

		/**
		 * `charCode` represents the actual "character code" and is safe to use with
		 * `String.fromCharCode`. As such, only keys that correspond to printable
		 * characters produce a valid `charCode`, the only exception to this is Enter.
		 * The Tab-key is considered non-printable and does not have a `charCode`,
		 * presumably because it does not produce a tab-character in browsers.
		 *
		 * @param {object} nativeEvent Native browser event.
		 * @return {number} Normalized `charCode` property.
		 */
		function getEventCharCode(nativeEvent) {
		  var charCode;
		  var keyCode = nativeEvent.keyCode;

		  if ('charCode' in nativeEvent) {
		    charCode = nativeEvent.charCode;

		    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
		    if (charCode === 0 && keyCode === 13) {
		      charCode = 13;
		    }
		  } else {
		    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
		    charCode = keyCode;
		  }

		  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
		  // Must not discard the (non-)printable Enter-key.
		  if (charCode >= 32 || charCode === 13) {
		    return charCode;
		  }

		  return 0;
		}

		/**
		 * Normalization of deprecated HTML5 `key` values
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
		 */
		var normalizeKey = {
		  Esc: 'Escape',
		  Spacebar: ' ',
		  Left: 'ArrowLeft',
		  Up: 'ArrowUp',
		  Right: 'ArrowRight',
		  Down: 'ArrowDown',
		  Del: 'Delete',
		  Win: 'OS',
		  Menu: 'ContextMenu',
		  Apps: 'ContextMenu',
		  Scroll: 'ScrollLock',
		  MozPrintableKey: 'Unidentified'
		};

		/**
		 * Translation from legacy `keyCode` to HTML5 `key`
		 * Only special keys supported, all others depend on keyboard layout or browser
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
		 */
		var translateToKey = {
		  '8': 'Backspace',
		  '9': 'Tab',
		  '12': 'Clear',
		  '13': 'Enter',
		  '16': 'Shift',
		  '17': 'Control',
		  '18': 'Alt',
		  '19': 'Pause',
		  '20': 'CapsLock',
		  '27': 'Escape',
		  '32': ' ',
		  '33': 'PageUp',
		  '34': 'PageDown',
		  '35': 'End',
		  '36': 'Home',
		  '37': 'ArrowLeft',
		  '38': 'ArrowUp',
		  '39': 'ArrowRight',
		  '40': 'ArrowDown',
		  '45': 'Insert',
		  '46': 'Delete',
		  '112': 'F1',
		  '113': 'F2',
		  '114': 'F3',
		  '115': 'F4',
		  '116': 'F5',
		  '117': 'F6',
		  '118': 'F7',
		  '119': 'F8',
		  '120': 'F9',
		  '121': 'F10',
		  '122': 'F11',
		  '123': 'F12',
		  '144': 'NumLock',
		  '145': 'ScrollLock',
		  '224': 'Meta'
		};

		/**
		 * @param {object} nativeEvent Native browser event.
		 * @return {string} Normalized `key` property.
		 */
		function getEventKey(nativeEvent) {
		  if (nativeEvent.key) {
		    // Normalize inconsistent values reported by browsers due to
		    // implementations of a working draft specification.

		    // FireFox implements `key` but returns `MozPrintableKey` for all
		    // printable characters (normalized to `Unidentified`), ignore it.
		    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
		    if (key !== 'Unidentified') {
		      return key;
		    }
		  }

		  // Browser does not implement `key`, polyfill as much of it as we can.
		  if (nativeEvent.type === 'keypress') {
		    var charCode = getEventCharCode(nativeEvent);

		    // The enter-key is technically both printable and non-printable and can
		    // thus be captured by `keypress`, no other non-printable key should.
		    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
		  }
		  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
		    // While user keyboard layout determines the actual meaning of each
		    // `keyCode` value, almost all function keys have a universal value.
		    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
		  }
		  return '';
		}

		/**
		 * @interface KeyboardEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var KeyboardEventInterface = {
		  key: getEventKey,
		  location: null,
		  ctrlKey: null,
		  shiftKey: null,
		  altKey: null,
		  metaKey: null,
		  repeat: null,
		  locale: null,
		  getModifierState: getEventModifierState,
		  // Legacy Interface
		  charCode: function (event) {
		    // `charCode` is the result of a KeyPress event and represents the value of
		    // the actual printable character.

		    // KeyPress is deprecated, but its replacement is not yet final and not
		    // implemented in any major browser. Only KeyPress has charCode.
		    if (event.type === 'keypress') {
		      return getEventCharCode(event);
		    }
		    return 0;
		  },
		  keyCode: function (event) {
		    // `keyCode` is the result of a KeyDown/Up event and represents the value of
		    // physical keyboard key.

		    // The actual meaning of the value depends on the users' keyboard layout
		    // which cannot be detected. Assuming that it is a US keyboard layout
		    // provides a surprisingly accurate mapping for US and European users.
		    // Due to this, it is left to the user to implement at this time.
		    if (event.type === 'keydown' || event.type === 'keyup') {
		      return event.keyCode;
		    }
		    return 0;
		  },
		  which: function (event) {
		    // `which` is an alias for either `keyCode` or `charCode` depending on the
		    // type of the event.
		    if (event.type === 'keypress') {
		      return getEventCharCode(event);
		    }
		    if (event.type === 'keydown' || event.type === 'keyup') {
		      return event.keyCode;
		    }
		    return 0;
		  }
		};

		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticUIEvent}
		 */
		function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}

		SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

		/**
		 * @interface DragEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var DragEventInterface = {
		  dataTransfer: null
		};

		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticMouseEvent}
		 */
		function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}

		SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

		/**
		 * @interface TouchEvent
		 * @see http://www.w3.org/TR/touch-events/
		 */
		var TouchEventInterface = {
		  touches: null,
		  targetTouches: null,
		  changedTouches: null,
		  altKey: null,
		  metaKey: null,
		  ctrlKey: null,
		  shiftKey: null,
		  getModifierState: getEventModifierState
		};

		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticUIEvent}
		 */
		function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}

		SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

		/**
		 * @interface Event
		 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
		 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
		 */
		var TransitionEventInterface = {
		  propertyName: null,
		  elapsedTime: null,
		  pseudoElement: null
		};

		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticEvent}
		 */
		function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}

		SyntheticEvent$1.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

		/**
		 * @interface WheelEvent
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/
		 */
		var WheelEventInterface = {
		  deltaX: function (event) {
		    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
		    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
		  },
		  deltaY: function (event) {
		    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
		    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
		    'wheelDelta' in event ? -event.wheelDelta : 0;
		  },
		  deltaZ: null,

		  // Browsers without "deltaMode" is reporting in raw wheel delta where one
		  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
		  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
		  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
		  deltaMode: null
		};

		/**
		 * @param {object} dispatchConfig Configuration used to dispatch this event.
		 * @param {string} dispatchMarker Marker identifying the event target.
		 * @param {object} nativeEvent Native browser event.
		 * @extends {SyntheticMouseEvent}
		 */
		function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
		  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
		}

		SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

		/**
		 * Turns
		 * ['abort', ...]
		 * into
		 * eventTypes = {
		 *   'abort': {
		 *     phasedRegistrationNames: {
		 *       bubbled: 'onAbort',
		 *       captured: 'onAbortCapture',
		 *     },
		 *     dependencies: ['topAbort'],
		 *   },
		 *   ...
		 * };
		 * topLevelEventsToDispatchConfig = {
		 *   'topAbort': { sameConfig }
		 * };
		 */
		var eventTypes$4 = {};
		var topLevelEventsToDispatchConfig = {};
		['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'cancel', 'canPlay', 'canPlayThrough', 'click', 'close', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'toggle', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
		  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
		  var onEvent = 'on' + capitalizedEvent;
		  var topEvent = 'top' + capitalizedEvent;

		  var type = {
		    phasedRegistrationNames: {
		      bubbled: onEvent,
		      captured: onEvent + 'Capture'
		    },
		    dependencies: [topEvent]
		  };
		  eventTypes$4[event] = type;
		  topLevelEventsToDispatchConfig[topEvent] = type;
		});

		// Only used in DEV for exhaustiveness validation.
		var knownHTMLTopLevelTypes = ['topAbort', 'topCancel', 'topCanPlay', 'topCanPlayThrough', 'topClose', 'topDurationChange', 'topEmptied', 'topEncrypted', 'topEnded', 'topError', 'topInput', 'topInvalid', 'topLoad', 'topLoadedData', 'topLoadedMetadata', 'topLoadStart', 'topPause', 'topPlay', 'topPlaying', 'topProgress', 'topRateChange', 'topReset', 'topSeeked', 'topSeeking', 'topStalled', 'topSubmit', 'topSuspend', 'topTimeUpdate', 'topToggle', 'topVolumeChange', 'topWaiting'];

		var SimpleEventPlugin = {
		  eventTypes: eventTypes$4,

		  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
		    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
		    if (!dispatchConfig) {
		      return null;
		    }
		    var EventConstructor;
		    switch (topLevelType) {
		      case 'topKeyPress':
		        // Firefox creates a keypress event for function keys too. This removes
		        // the unwanted keypress events. Enter is however both printable and
		        // non-printable. One would expect Tab to be as well (but it isn't).
		        if (getEventCharCode(nativeEvent) === 0) {
		          return null;
		        }
		      /* falls through */
		      case 'topKeyDown':
		      case 'topKeyUp':
		        EventConstructor = SyntheticKeyboardEvent;
		        break;
		      case 'topBlur':
		      case 'topFocus':
		        EventConstructor = SyntheticFocusEvent;
		        break;
		      case 'topClick':
		        // Firefox creates a click event on right mouse clicks. This removes the
		        // unwanted click events.
		        if (nativeEvent.button === 2) {
		          return null;
		        }
		      /* falls through */
		      case 'topDoubleClick':
		      case 'topMouseDown':
		      case 'topMouseMove':
		      case 'topMouseUp':
		      // TODO: Disabled elements should not respond to mouse events
		      /* falls through */
		      case 'topMouseOut':
		      case 'topMouseOver':
		      case 'topContextMenu':
		        EventConstructor = SyntheticMouseEvent;
		        break;
		      case 'topDrag':
		      case 'topDragEnd':
		      case 'topDragEnter':
		      case 'topDragExit':
		      case 'topDragLeave':
		      case 'topDragOver':
		      case 'topDragStart':
		      case 'topDrop':
		        EventConstructor = SyntheticDragEvent;
		        break;
		      case 'topTouchCancel':
		      case 'topTouchEnd':
		      case 'topTouchMove':
		      case 'topTouchStart':
		        EventConstructor = SyntheticTouchEvent;
		        break;
		      case 'topAnimationEnd':
		      case 'topAnimationIteration':
		      case 'topAnimationStart':
		        EventConstructor = SyntheticAnimationEvent;
		        break;
		      case 'topTransitionEnd':
		        EventConstructor = SyntheticTransitionEvent;
		        break;
		      case 'topScroll':
		        EventConstructor = SyntheticUIEvent;
		        break;
		      case 'topWheel':
		        EventConstructor = SyntheticWheelEvent;
		        break;
		      case 'topCopy':
		      case 'topCut':
		      case 'topPaste':
		        EventConstructor = SyntheticClipboardEvent;
		        break;
		      default:
		        {
		          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
		            warning(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
		          }
		        }
		        // HTML Events
		        // @see http://www.w3.org/TR/html5/index.html#events-0
		        EventConstructor = SyntheticEvent$1;
		        break;
		    }
		    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
		    accumulateTwoPhaseDispatches(event);
		    return event;
		  }
		};

		setHandleTopLevel(handleTopLevel);

		/**
		 * Inject modules for resolving DOM hierarchy and plugin ordering.
		 */
		injection$1.injectEventPluginOrder(DOMEventPluginOrder);
		injection$2.injectComponentTree(ReactDOMComponentTree);

		/**
		 * Some important event plugins included by default (without having to require
		 * them).
		 */
		injection$1.injectEventPluginsByName({
		  SimpleEventPlugin: SimpleEventPlugin,
		  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
		  ChangeEventPlugin: ChangeEventPlugin,
		  SelectEventPlugin: SelectEventPlugin,
		  BeforeInputEventPlugin: BeforeInputEventPlugin
		});

		var enableAsyncSubtreeAPI = true;
		var enableAsyncSchedulingByDefaultInReactDOM = false;
		// Exports ReactDOM.createRoot
		var enableCreateRoot = false;
		var enableUserTimingAPI = true;

		// Mutating mode (React DOM, React ART, React Native):
		var enableMutatingReconciler = true;
		// Experimental noop mode (currently unused):
		var enableNoopReconciler = false;
		// Experimental persistent mode (CS):
		var enablePersistentReconciler = false;

		// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
		var debugRenderPhaseSideEffects = false;

		// Only used in www builds.

		var valueStack = [];

		{
		  var fiberStack = [];
		}

		var index = -1;

		function createCursor(defaultValue) {
		  return {
		    current: defaultValue
		  };
		}



		function pop(cursor, fiber) {
		  if (index < 0) {
		    {
		      warning(false, 'Unexpected pop.');
		    }
		    return;
		  }

		  {
		    if (fiber !== fiberStack[index]) {
		      warning(false, 'Unexpected Fiber popped.');
		    }
		  }

		  cursor.current = valueStack[index];

		  valueStack[index] = null;

		  {
		    fiberStack[index] = null;
		  }

		  index--;
		}

		function push(cursor, value, fiber) {
		  index++;

		  valueStack[index] = cursor.current;

		  {
		    fiberStack[index] = fiber;
		  }

		  cursor.current = value;
		}

		function reset$1() {
		  while (index > -1) {
		    valueStack[index] = null;

		    {
		      fiberStack[index] = null;
		    }

		    index--;
		  }
		}

		var describeComponentFrame = function (name, source, ownerName) {
		  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
		};

		function describeFiber(fiber) {
		  switch (fiber.tag) {
		    case IndeterminateComponent:
		    case FunctionalComponent:
		    case ClassComponent:
		    case HostComponent:
		      var owner = fiber._debugOwner;
		      var source = fiber._debugSource;
		      var name = getComponentName(fiber);
		      var ownerName = null;
		      if (owner) {
		        ownerName = getComponentName(owner);
		      }
		      return describeComponentFrame(name, source, ownerName);
		    default:
		      return '';
		  }
		}

		// This function can only be called with a work-in-progress fiber and
		// only during begin or complete phase. Do not call it under any other
		// circumstances.
		function getStackAddendumByWorkInProgressFiber(workInProgress) {
		  var info = '';
		  var node = workInProgress;
		  do {
		    info += describeFiber(node);
		    // Otherwise this return pointer might point to the wrong tree:
		    node = node['return'];
		  } while (node);
		  return info;
		}

		function getCurrentFiberOwnerName() {
		  {
		    var fiber = ReactDebugCurrentFiber.current;
		    if (fiber === null) {
		      return null;
		    }
		    var owner = fiber._debugOwner;
		    if (owner !== null && typeof owner !== 'undefined') {
		      return getComponentName(owner);
		    }
		  }
		  return null;
		}

		function getCurrentFiberStackAddendum() {
		  {
		    var fiber = ReactDebugCurrentFiber.current;
		    if (fiber === null) {
		      return null;
		    }
		    // Safe because if current fiber exists, we are reconciling,
		    // and it is guaranteed to be the work-in-progress version.
		    return getStackAddendumByWorkInProgressFiber(fiber);
		  }
		  return null;
		}

		function resetCurrentFiber() {
		  ReactDebugCurrentFrame.getCurrentStack = null;
		  ReactDebugCurrentFiber.current = null;
		  ReactDebugCurrentFiber.phase = null;
		}

		function setCurrentFiber(fiber) {
		  ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum;
		  ReactDebugCurrentFiber.current = fiber;
		  ReactDebugCurrentFiber.phase = null;
		}

		function setCurrentPhase(phase) {
		  ReactDebugCurrentFiber.phase = phase;
		}

		var ReactDebugCurrentFiber = {
		  current: null,
		  phase: null,
		  resetCurrentFiber: resetCurrentFiber,
		  setCurrentFiber: setCurrentFiber,
		  setCurrentPhase: setCurrentPhase,
		  getCurrentFiberOwnerName: getCurrentFiberOwnerName,
		  getCurrentFiberStackAddendum: getCurrentFiberStackAddendum
		};

		// Prefix measurements so that it's possible to filter them.
		// Longer prefixes are hard to read in DevTools.
		var reactEmoji = '\u269B';
		var warningEmoji = '\u26D4';
		var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

		// Keep track of current fiber so that we know the path to unwind on pause.
		// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
		var currentFiber = null;
		// If we're in the middle of user code, which fiber and method is it?
		// Reusing `currentFiber` would be confusing for this because user code fiber
		// can change during commit phase too, but we don't need to unwind it (since
		// lifecycles in the commit phase don't resemble a tree).
		var currentPhase = null;
		var currentPhaseFiber = null;
		// Did lifecycle hook schedule an update? This is often a performance problem,
		// so we will keep track of it, and include it in the report.
		// Track commits caused by cascading updates.
		var isCommitting = false;
		var hasScheduledUpdateInCurrentCommit = false;
		var hasScheduledUpdateInCurrentPhase = false;
		var commitCountInCurrentWorkLoop = 0;
		var effectCountInCurrentCommit = 0;
		var isWaitingForCallback = false;
		// During commits, we only show a measurement once per method name
		// to avoid stretch the commit phase with measurement overhead.
		var labelsInCurrentCommit = new Set();

		var formatMarkName = function (markName) {
		  return reactEmoji + ' ' + markName;
		};

		var formatLabel = function (label, warning$$1) {
		  var prefix = warning$$1 ? warningEmoji + ' ' : reactEmoji + ' ';
		  var suffix = warning$$1 ? ' Warning: ' + warning$$1 : '';
		  return '' + prefix + label + suffix;
		};

		var beginMark = function (markName) {
		  performance.mark(formatMarkName(markName));
		};

		var clearMark = function (markName) {
		  performance.clearMarks(formatMarkName(markName));
		};

		var endMark = function (label, markName, warning$$1) {
		  var formattedMarkName = formatMarkName(markName);
		  var formattedLabel = formatLabel(label, warning$$1);
		  try {
		    performance.measure(formattedLabel, formattedMarkName);
		  } catch (err) {}
		  // If previous mark was missing for some reason, this will throw.
		  // This could only happen if React crashed in an unexpected place earlier.
		  // Don't pile on with more errors.

		  // Clear marks immediately to avoid growing buffer.
		  performance.clearMarks(formattedMarkName);
		  performance.clearMeasures(formattedLabel);
		};

		var getFiberMarkName = function (label, debugID) {
		  return label + ' (#' + debugID + ')';
		};

		var getFiberLabel = function (componentName, isMounted, phase) {
		  if (phase === null) {
		    // These are composite component total time measurements.
		    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
		  } else {
		    // Composite component methods.
		    return componentName + '.' + phase;
		  }
		};

		var beginFiberMark = function (fiber, phase) {
		  var componentName = getComponentName(fiber) || 'Unknown';
		  var debugID = fiber._debugID;
		  var isMounted = fiber.alternate !== null;
		  var label = getFiberLabel(componentName, isMounted, phase);

		  if (isCommitting && labelsInCurrentCommit.has(label)) {
		    // During the commit phase, we don't show duplicate labels because
		    // there is a fixed overhead for every measurement, and we don't
		    // want to stretch the commit phase beyond necessary.
		    return false;
		  }
		  labelsInCurrentCommit.add(label);

		  var markName = getFiberMarkName(label, debugID);
		  beginMark(markName);
		  return true;
		};

		var clearFiberMark = function (fiber, phase) {
		  var componentName = getComponentName(fiber) || 'Unknown';
		  var debugID = fiber._debugID;
		  var isMounted = fiber.alternate !== null;
		  var label = getFiberLabel(componentName, isMounted, phase);
		  var markName = getFiberMarkName(label, debugID);
		  clearMark(markName);
		};

		var endFiberMark = function (fiber, phase, warning$$1) {
		  var componentName = getComponentName(fiber) || 'Unknown';
		  var debugID = fiber._debugID;
		  var isMounted = fiber.alternate !== null;
		  var label = getFiberLabel(componentName, isMounted, phase);
		  var markName = getFiberMarkName(label, debugID);
		  endMark(label, markName, warning$$1);
		};

		var shouldIgnoreFiber = function (fiber) {
		  // Host components should be skipped in the timeline.
		  // We could check typeof fiber.type, but does this work with RN?
		  switch (fiber.tag) {
		    case HostRoot:
		    case HostComponent:
		    case HostText:
		    case HostPortal:
		    case ReturnComponent:
		    case Fragment:
		      return true;
		    default:
		      return false;
		  }
		};

		var clearPendingPhaseMeasurement = function () {
		  if (currentPhase !== null && currentPhaseFiber !== null) {
		    clearFiberMark(currentPhaseFiber, currentPhase);
		  }
		  currentPhaseFiber = null;
		  currentPhase = null;
		  hasScheduledUpdateInCurrentPhase = false;
		};

		var pauseTimers = function () {
		  // Stops all currently active measurements so that they can be resumed
		  // if we continue in a later deferred loop from the same unit of work.
		  var fiber = currentFiber;
		  while (fiber) {
		    if (fiber._debugIsCurrentlyTiming) {
		      endFiberMark(fiber, null, null);
		    }
		    fiber = fiber['return'];
		  }
		};

		var resumeTimersRecursively = function (fiber) {
		  if (fiber['return'] !== null) {
		    resumeTimersRecursively(fiber['return']);
		  }
		  if (fiber._debugIsCurrentlyTiming) {
		    beginFiberMark(fiber, null);
		  }
		};

		var resumeTimers = function () {
		  // Resumes all measurements that were active during the last deferred loop.
		  if (currentFiber !== null) {
		    resumeTimersRecursively(currentFiber);
		  }
		};

		function recordEffect() {
		  if (enableUserTimingAPI) {
		    effectCountInCurrentCommit++;
		  }
		}

		function recordScheduleUpdate() {
		  if (enableUserTimingAPI) {
		    if (isCommitting) {
		      hasScheduledUpdateInCurrentCommit = true;
		    }
		    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
		      hasScheduledUpdateInCurrentPhase = true;
		    }
		  }
		}

		function startRequestCallbackTimer() {
		  if (enableUserTimingAPI) {
		    if (supportsUserTiming && !isWaitingForCallback) {
		      isWaitingForCallback = true;
		      beginMark('(Waiting for async callback...)');
		    }
		  }
		}

		function stopRequestCallbackTimer(didExpire) {
		  if (enableUserTimingAPI) {
		    if (supportsUserTiming) {
		      isWaitingForCallback = false;
		      var warning$$1 = didExpire ? 'React was blocked by main thread' : null;
		      endMark('(Waiting for async callback...)', '(Waiting for async callback...)', warning$$1);
		    }
		  }
		}

		function startWorkTimer(fiber) {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
		      return;
		    }
		    // If we pause, this is the fiber to unwind from.
		    currentFiber = fiber;
		    if (!beginFiberMark(fiber, null)) {
		      return;
		    }
		    fiber._debugIsCurrentlyTiming = true;
		  }
		}

		function cancelWorkTimer(fiber) {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
		      return;
		    }
		    // Remember we shouldn't complete measurement for this fiber.
		    // Otherwise flamechart will be deep even for small updates.
		    fiber._debugIsCurrentlyTiming = false;
		    clearFiberMark(fiber, null);
		  }
		}

		function stopWorkTimer(fiber) {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
		      return;
		    }
		    // If we pause, its parent is the fiber to unwind from.
		    currentFiber = fiber['return'];
		    if (!fiber._debugIsCurrentlyTiming) {
		      return;
		    }
		    fiber._debugIsCurrentlyTiming = false;
		    endFiberMark(fiber, null, null);
		  }
		}

		function stopFailedWorkTimer(fiber) {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
		      return;
		    }
		    // If we pause, its parent is the fiber to unwind from.
		    currentFiber = fiber['return'];
		    if (!fiber._debugIsCurrentlyTiming) {
		      return;
		    }
		    fiber._debugIsCurrentlyTiming = false;
		    var warning$$1 = 'An error was thrown inside this error boundary';
		    endFiberMark(fiber, null, warning$$1);
		  }
		}

		function startPhaseTimer(fiber, phase) {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming) {
		      return;
		    }
		    clearPendingPhaseMeasurement();
		    if (!beginFiberMark(fiber, phase)) {
		      return;
		    }
		    currentPhaseFiber = fiber;
		    currentPhase = phase;
		  }
		}

		function stopPhaseTimer() {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming) {
		      return;
		    }
		    if (currentPhase !== null && currentPhaseFiber !== null) {
		      var warning$$1 = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
		      endFiberMark(currentPhaseFiber, currentPhase, warning$$1);
		    }
		    currentPhase = null;
		    currentPhaseFiber = null;
		  }
		}

		function startWorkLoopTimer(nextUnitOfWork) {
		  if (enableUserTimingAPI) {
		    currentFiber = nextUnitOfWork;
		    if (!supportsUserTiming) {
		      return;
		    }
		    commitCountInCurrentWorkLoop = 0;
		    // This is top level call.
		    // Any other measurements are performed within.
		    beginMark('(React Tree Reconciliation)');
		    // Resume any measurements that were in progress during the last loop.
		    resumeTimers();
		  }
		}

		function stopWorkLoopTimer(interruptedBy) {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming) {
		      return;
		    }
		    var warning$$1 = null;
		    if (interruptedBy !== null) {
		      if (interruptedBy.tag === HostRoot) {
		        warning$$1 = 'A top-level update interrupted the previous render';
		      } else {
		        var componentName = getComponentName(interruptedBy) || 'Unknown';
		        warning$$1 = 'An update to ' + componentName + ' interrupted the previous render';
		      }
		    } else if (commitCountInCurrentWorkLoop > 1) {
		      warning$$1 = 'There were cascading updates';
		    }
		    commitCountInCurrentWorkLoop = 0;
		    // Pause any measurements until the next loop.
		    pauseTimers();
		    endMark('(React Tree Reconciliation)', '(React Tree Reconciliation)', warning$$1);
		  }
		}

		function startCommitTimer() {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming) {
		      return;
		    }
		    isCommitting = true;
		    hasScheduledUpdateInCurrentCommit = false;
		    labelsInCurrentCommit.clear();
		    beginMark('(Committing Changes)');
		  }
		}

		function stopCommitTimer() {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming) {
		      return;
		    }

		    var warning$$1 = null;
		    if (hasScheduledUpdateInCurrentCommit) {
		      warning$$1 = 'Lifecycle hook scheduled a cascading update';
		    } else if (commitCountInCurrentWorkLoop > 0) {
		      warning$$1 = 'Caused by a cascading update in earlier commit';
		    }
		    hasScheduledUpdateInCurrentCommit = false;
		    commitCountInCurrentWorkLoop++;
		    isCommitting = false;
		    labelsInCurrentCommit.clear();

		    endMark('(Committing Changes)', '(Committing Changes)', warning$$1);
		  }
		}

		function startCommitHostEffectsTimer() {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming) {
		      return;
		    }
		    effectCountInCurrentCommit = 0;
		    beginMark('(Committing Host Effects)');
		  }
		}

		function stopCommitHostEffectsTimer() {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming) {
		      return;
		    }
		    var count = effectCountInCurrentCommit;
		    effectCountInCurrentCommit = 0;
		    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
		  }
		}

		function startCommitLifeCyclesTimer() {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming) {
		      return;
		    }
		    effectCountInCurrentCommit = 0;
		    beginMark('(Calling Lifecycle Methods)');
		  }
		}

		function stopCommitLifeCyclesTimer() {
		  if (enableUserTimingAPI) {
		    if (!supportsUserTiming) {
		      return;
		    }
		    var count = effectCountInCurrentCommit;
		    effectCountInCurrentCommit = 0;
		    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
		  }
		}

		{
		  var warnedAboutMissingGetChildContext = {};
		}

		// A cursor to the current merged context object on the stack.
		var contextStackCursor = createCursor(emptyObject);
		// A cursor to a boolean indicating whether the context has changed.
		var didPerformWorkStackCursor = createCursor(false);
		// Keep track of the previous context object that was on the stack.
		// We use this to get access to the parent context after we have already
		// pushed the next context provider, and now need to merge their contexts.
		var previousContext = emptyObject;

		function getUnmaskedContext(workInProgress) {
		  var hasOwnContext = isContextProvider(workInProgress);
		  if (hasOwnContext) {
		    // If the fiber is a context provider itself, when we read its context
		    // we have already pushed its own child context on the stack. A context
		    // provider should not "see" its own child context. Therefore we read the
		    // previous (parent) context instead for a context provider.
		    return previousContext;
		  }
		  return contextStackCursor.current;
		}

		function cacheContext(workInProgress, unmaskedContext, maskedContext) {
		  var instance = workInProgress.stateNode;
		  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
		  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
		}

		function getMaskedContext(workInProgress, unmaskedContext) {
		  var type = workInProgress.type;
		  var contextTypes = type.contextTypes;
		  if (!contextTypes) {
		    return emptyObject;
		  }

		  // Avoid recreating masked context unless unmasked context has changed.
		  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
		  // This may trigger infinite loops if componentWillReceiveProps calls setState.
		  var instance = workInProgress.stateNode;
		  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
		    return instance.__reactInternalMemoizedMaskedChildContext;
		  }

		  var context = {};
		  for (var key in contextTypes) {
		    context[key] = unmaskedContext[key];
		  }

		  {
		    var name = getComponentName(workInProgress) || 'Unknown';
		    checkPropTypes(contextTypes, context, 'context', name, ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
		  }

		  // Cache unmasked context so we can avoid recreating masked context unless necessary.
		  // Context is created before the class component is instantiated so check for instance.
		  if (instance) {
		    cacheContext(workInProgress, unmaskedContext, context);
		  }

		  return context;
		}

		function hasContextChanged() {
		  return didPerformWorkStackCursor.current;
		}

		function isContextConsumer(fiber) {
		  return fiber.tag === ClassComponent && fiber.type.contextTypes != null;
		}

		function isContextProvider(fiber) {
		  return fiber.tag === ClassComponent && fiber.type.childContextTypes != null;
		}

		function popContextProvider(fiber) {
		  if (!isContextProvider(fiber)) {
		    return;
		  }

		  pop(didPerformWorkStackCursor, fiber);
		  pop(contextStackCursor, fiber);
		}

		function popTopLevelContextObject(fiber) {
		  pop(didPerformWorkStackCursor, fiber);
		  pop(contextStackCursor, fiber);
		}

		function pushTopLevelContextObject(fiber, context, didChange) {
		  !(contextStackCursor.cursor == null) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;

		  push(contextStackCursor, context, fiber);
		  push(didPerformWorkStackCursor, didChange, fiber);
		}

		function processChildContext(fiber, parentContext) {
		  var instance = fiber.stateNode;
		  var childContextTypes = fiber.type.childContextTypes;

		  // TODO (bvaughn) Replace this behavior with an invariant() in the future.
		  // It has only been added in Fiber to match the (unintentional) behavior in Stack.
		  if (typeof instance.getChildContext !== 'function') {
		    {
		      var componentName = getComponentName(fiber) || 'Unknown';

		      if (!warnedAboutMissingGetChildContext[componentName]) {
		        warnedAboutMissingGetChildContext[componentName] = true;
		        warning(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
		      }
		    }
		    return parentContext;
		  }

		  var childContext = void 0;
		  {
		    ReactDebugCurrentFiber.setCurrentPhase('getChildContext');
		  }
		  startPhaseTimer(fiber, 'getChildContext');
		  childContext = instance.getChildContext();
		  stopPhaseTimer();
		  {
		    ReactDebugCurrentFiber.setCurrentPhase(null);
		  }
		  for (var contextKey in childContext) {
		    !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(fiber) || 'Unknown', contextKey) : void 0;
		  }
		  {
		    var name = getComponentName(fiber) || 'Unknown';
		    checkPropTypes(childContextTypes, childContext, 'child context', name,
		    // In practice, there is one case in which we won't get a stack. It's when
		    // somebody calls unstable_renderSubtreeIntoContainer() and we process
		    // context from the parent component instance. The stack will be missing
		    // because it's outside of the reconciliation, and so the pointer has not
		    // been set. This is rare and doesn't matter. We'll also remove that API.
		    ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
		  }

		  return _assign({}, parentContext, childContext);
		}

		function pushContextProvider(workInProgress) {
		  if (!isContextProvider(workInProgress)) {
		    return false;
		  }

		  var instance = workInProgress.stateNode;
		  // We push the context as early as possible to ensure stack integrity.
		  // If the instance does not exist yet, we will push null at first,
		  // and replace it on the stack later when invalidating the context.
		  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;

		  // Remember the parent context so we can merge with it later.
		  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
		  previousContext = contextStackCursor.current;
		  push(contextStackCursor, memoizedMergedChildContext, workInProgress);
		  push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);

		  return true;
		}

		function invalidateContextProvider(workInProgress, didChange) {
		  var instance = workInProgress.stateNode;
		  !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;

		  if (didChange) {
		    // Merge parent and own context.
		    // Skip this if we're not updating due to sCU.
		    // This avoids unnecessarily recomputing memoized values.
		    var mergedContext = processChildContext(workInProgress, previousContext);
		    instance.__reactInternalMemoizedMergedChildContext = mergedContext;

		    // Replace the old (or empty) context with the new one.
		    // It is important to unwind the context in the reverse order.
		    pop(didPerformWorkStackCursor, workInProgress);
		    pop(contextStackCursor, workInProgress);
		    // Now push the new context and mark that it has changed.
		    push(contextStackCursor, mergedContext, workInProgress);
		    push(didPerformWorkStackCursor, didChange, workInProgress);
		  } else {
		    pop(didPerformWorkStackCursor, workInProgress);
		    push(didPerformWorkStackCursor, didChange, workInProgress);
		  }
		}

		function resetContext() {
		  previousContext = emptyObject;
		  contextStackCursor.current = emptyObject;
		  didPerformWorkStackCursor.current = false;
		}

		function findCurrentUnmaskedContext(fiber) {
		  // Currently this is only used with renderSubtreeIntoContainer; not sure if it
		  // makes sense elsewhere
		  !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;

		  var node = fiber;
		  while (node.tag !== HostRoot) {
		    if (isContextProvider(node)) {
		      return node.stateNode.__reactInternalMemoizedMergedChildContext;
		    }
		    var parent = node['return'];
		    !parent ? invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		    node = parent;
		  }
		  return node.stateNode.context;
		}

		var NoWork = 0; // TODO: Use an opaque type once ESLint et al support the syntax

		var Sync = 1;
		var Never = 2147483647; // Max int32: Math.pow(2, 31) - 1

		var UNIT_SIZE = 10;
		var MAGIC_NUMBER_OFFSET = 2;

		// 1 unit of expiration time represents 10ms.
		function msToExpirationTime(ms) {
		  // Always add an offset so that we don't clash with the magic number for NoWork.
		  return (ms / UNIT_SIZE | 0) + MAGIC_NUMBER_OFFSET;
		}

		function expirationTimeToMs(expirationTime) {
		  return (expirationTime - MAGIC_NUMBER_OFFSET) * UNIT_SIZE;
		}

		function ceiling(num, precision) {
		  return ((num / precision | 0) + 1) * precision;
		}

		function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
		  return ceiling(currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
		}

		var NoContext = 0;
		var AsyncUpdates = 1;

		{
		  var hasBadMapPolyfill = false;
		  try {
		    var nonExtensibleObject = Object.preventExtensions({});
		    /* eslint-disable no-new */
		    
		    /* eslint-enable no-new */
		  } catch (e) {
		    // TODO: Consider warning about bad polyfills
		    hasBadMapPolyfill = true;
		  }
		}

		// A Fiber is work on a Component that needs to be done or was done. There can
		// be more than one per component.


		{
		  var debugCounter = 1;
		}

		function FiberNode(tag, key, internalContextTag) {
		  // Instance
		  this.tag = tag;
		  this.key = key;
		  this.type = null;
		  this.stateNode = null;

		  // Fiber
		  this['return'] = null;
		  this.child = null;
		  this.sibling = null;
		  this.index = 0;

		  this.ref = null;

		  this.pendingProps = null;
		  this.memoizedProps = null;
		  this.updateQueue = null;
		  this.memoizedState = null;

		  this.internalContextTag = internalContextTag;

		  // Effects
		  this.effectTag = NoEffect;
		  this.nextEffect = null;

		  this.firstEffect = null;
		  this.lastEffect = null;

		  this.expirationTime = NoWork;

		  this.alternate = null;

		  {
		    this._debugID = debugCounter++;
		    this._debugSource = null;
		    this._debugOwner = null;
		    this._debugIsCurrentlyTiming = false;
		    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
		      Object.preventExtensions(this);
		    }
		  }
		}

		// This is a constructor function, rather than a POJO constructor, still
		// please ensure we do the following:
		// 1) Nobody should add any instance methods on this. Instance methods can be
//		    more difficult to predict when they get optimized and they are almost
//		    never inlined properly in static compilers.
		// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//		    always know when it is a fiber.
		// 3) We might want to experiment with using numeric keys since they are easier
//		    to optimize in a non-JIT environment.
		// 4) We can easily go from a constructor to a createFiber object literal if that
//		    is faster.
		// 5) It should be easy to port this to a C struct and keep a C implementation
//		    compatible.
		var createFiber = function (tag, key, internalContextTag) {
		  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
		  return new FiberNode(tag, key, internalContextTag);
		};

		function shouldConstruct(Component) {
		  return !!(Component.prototype && Component.prototype.isReactComponent);
		}

		// This is used to create an alternate fiber to do work on.
		function createWorkInProgress(current, pendingProps, expirationTime) {
		  var workInProgress = current.alternate;
		  if (workInProgress === null) {
		    // We use a double buffering pooling technique because we know that we'll
		    // only ever need at most two versions of a tree. We pool the "other" unused
		    // node that we're free to reuse. This is lazily created to avoid allocating
		    // extra objects for things that are never updated. It also allow us to
		    // reclaim the extra memory if needed.
		    workInProgress = createFiber(current.tag, current.key, current.internalContextTag);
		    workInProgress.type = current.type;
		    workInProgress.stateNode = current.stateNode;

		    {
		      // DEV-only fields
		      workInProgress._debugID = current._debugID;
		      workInProgress._debugSource = current._debugSource;
		      workInProgress._debugOwner = current._debugOwner;
		    }

		    workInProgress.alternate = current;
		    current.alternate = workInProgress;
		  } else {
		    // We already have an alternate.
		    // Reset the effect tag.
		    workInProgress.effectTag = NoEffect;

		    // The effect list is no longer valid.
		    workInProgress.nextEffect = null;
		    workInProgress.firstEffect = null;
		    workInProgress.lastEffect = null;
		  }

		  workInProgress.expirationTime = expirationTime;
		  workInProgress.pendingProps = pendingProps;

		  workInProgress.child = current.child;
		  workInProgress.memoizedProps = current.memoizedProps;
		  workInProgress.memoizedState = current.memoizedState;
		  workInProgress.updateQueue = current.updateQueue;

		  // These will be overridden during the parent's reconciliation
		  workInProgress.sibling = current.sibling;
		  workInProgress.index = current.index;
		  workInProgress.ref = current.ref;

		  return workInProgress;
		}

		function createHostRootFiber() {
		  var fiber = createFiber(HostRoot, null, NoContext);
		  return fiber;
		}

		function createFiberFromElement(element, internalContextTag, expirationTime) {
		  var owner = null;
		  {
		    owner = element._owner;
		  }

		  var fiber = void 0;
		  var type = element.type,
		      key = element.key;

		  if (typeof type === 'function') {
		    fiber = shouldConstruct(type) ? createFiber(ClassComponent, key, internalContextTag) : createFiber(IndeterminateComponent, key, internalContextTag);
		    fiber.type = type;
		    fiber.pendingProps = element.props;
		  } else if (typeof type === 'string') {
		    fiber = createFiber(HostComponent, key, internalContextTag);
		    fiber.type = type;
		    fiber.pendingProps = element.props;
		  } else if (typeof type === 'object' && type !== null && typeof type.tag === 'number') {
		    // Currently assumed to be a continuation and therefore is a fiber already.
		    // TODO: The yield system is currently broken for updates in some cases.
		    // The reified yield stores a fiber, but we don't know which fiber that is;
		    // the current or a workInProgress? When the continuation gets rendered here
		    // we don't know if we can reuse that fiber or if we need to clone it.
		    // There is probably a clever way to restructure this.
		    fiber = type;
		    fiber.pendingProps = element.props;
		  } else {
		    var info = '';
		    {
		      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
		        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
		      }
		      var ownerName = owner ? getComponentName(owner) : null;
		      if (ownerName) {
		        info += '\n\nCheck the render method of `' + ownerName + '`.';
		      }
		    }
		    invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
		  }

		  {
		    fiber._debugSource = element._source;
		    fiber._debugOwner = element._owner;
		  }

		  fiber.expirationTime = expirationTime;

		  return fiber;
		}

		function createFiberFromFragment(elements, internalContextTag, expirationTime, key) {
		  var fiber = createFiber(Fragment, key, internalContextTag);
		  fiber.pendingProps = elements;
		  fiber.expirationTime = expirationTime;
		  return fiber;
		}

		function createFiberFromText(content, internalContextTag, expirationTime) {
		  var fiber = createFiber(HostText, null, internalContextTag);
		  fiber.pendingProps = content;
		  fiber.expirationTime = expirationTime;
		  return fiber;
		}

		function createFiberFromHostInstanceForDeletion() {
		  var fiber = createFiber(HostComponent, null, NoContext);
		  fiber.type = 'DELETED';
		  return fiber;
		}

		function createFiberFromCall(call, internalContextTag, expirationTime) {
		  var fiber = createFiber(CallComponent, call.key, internalContextTag);
		  fiber.type = call.handler;
		  fiber.pendingProps = call;
		  fiber.expirationTime = expirationTime;
		  return fiber;
		}

		function createFiberFromReturn(returnNode, internalContextTag, expirationTime) {
		  var fiber = createFiber(ReturnComponent, null, internalContextTag);
		  fiber.expirationTime = expirationTime;
		  return fiber;
		}

		function createFiberFromPortal(portal, internalContextTag, expirationTime) {
		  var fiber = createFiber(HostPortal, portal.key, internalContextTag);
		  fiber.pendingProps = portal.children || [];
		  fiber.expirationTime = expirationTime;
		  fiber.stateNode = {
		    containerInfo: portal.containerInfo,
		    pendingChildren: null, // Used by persistent updates
		    implementation: portal.implementation
		  };
		  return fiber;
		}

		function createFiberRoot(containerInfo, hydrate) {
		  // Cyclic construction. This cheats the type system right now because
		  // stateNode is any.
		  var uninitializedFiber = createHostRootFiber();
		  var root = {
		    current: uninitializedFiber,
		    containerInfo: containerInfo,
		    pendingChildren: null,
		    remainingExpirationTime: NoWork,
		    isReadyForCommit: false,
		    finishedWork: null,
		    context: null,
		    pendingContext: null,
		    hydrate: hydrate,
		    nextScheduledRoot: null
		  };
		  uninitializedFiber.stateNode = root;
		  return root;
		}

		var onCommitFiberRoot = null;
		var onCommitFiberUnmount = null;
		var hasLoggedError = false;

		function catchErrors(fn) {
		  return function (arg) {
		    try {
		      return fn(arg);
		    } catch (err) {
		      if (true && !hasLoggedError) {
		        hasLoggedError = true;
		        warning(false, 'React DevTools encountered an error: %s', err);
		      }
		    }
		  };
		}

		function injectInternals(internals) {
		  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
		    // No DevTools
		    return false;
		  }
		  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
		  if (hook.isDisabled) {
		    // This isn't a real property on the hook, but it can be set to opt out
		    // of DevTools integration and associated warnings and logs.
		    // https://github.com/facebook/react/issues/3877
		    return true;
		  }
		  if (!hook.supportsFiber) {
		    {
		      warning(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
		    }
		    // DevTools exists, even though it doesn't support Fiber.
		    return true;
		  }
		  try {
		    var rendererID = hook.inject(internals);
		    // We have successfully injected, so now it is safe to set up hooks.
		    onCommitFiberRoot = catchErrors(function (root) {
		      return hook.onCommitFiberRoot(rendererID, root);
		    });
		    onCommitFiberUnmount = catchErrors(function (fiber) {
		      return hook.onCommitFiberUnmount(rendererID, fiber);
		    });
		  } catch (err) {
		    // Catch all errors because it is unsafe to throw during initialization.
		    {
		      warning(false, 'React DevTools encountered an error: %s.', err);
		    }
		  }
		  // DevTools exists
		  return true;
		}

		function onCommitRoot(root) {
		  if (typeof onCommitFiberRoot === 'function') {
		    onCommitFiberRoot(root);
		  }
		}

		function onCommitUnmount(fiber) {
		  if (typeof onCommitFiberUnmount === 'function') {
		    onCommitFiberUnmount(fiber);
		  }
		}

		{
		  var didWarnUpdateInsideUpdate = false;
		}

		// Callbacks are not validated until invocation


		// Singly linked-list of updates. When an update is scheduled, it is added to
		// the queue of the current fiber and the work-in-progress fiber. The two queues
		// are separate but they share a persistent structure.
		//
		// During reconciliation, updates are removed from the work-in-progress fiber,
		// but they remain on the current fiber. That ensures that if a work-in-progress
		// is aborted, the aborted updates are recovered by cloning from current.
		//
		// The work-in-progress queue is always a subset of the current queue.
		//
		// When the tree is committed, the work-in-progress becomes the current.


		function createUpdateQueue(baseState) {
		  var queue = {
		    baseState: baseState,
		    expirationTime: NoWork,
		    first: null,
		    last: null,
		    callbackList: null,
		    hasForceUpdate: false,
		    isInitialized: false
		  };
		  {
		    queue.isProcessing = false;
		  }
		  return queue;
		}

		function insertUpdateIntoQueue(queue, update) {
		  // Append the update to the end of the list.
		  if (queue.last === null) {
		    // Queue is empty
		    queue.first = queue.last = update;
		  } else {
		    queue.last.next = update;
		    queue.last = update;
		  }
		  if (queue.expirationTime === NoWork || queue.expirationTime > update.expirationTime) {
		    queue.expirationTime = update.expirationTime;
		  }
		}

		function insertUpdateIntoFiber(fiber, update) {
		  // We'll have at least one and at most two distinct update queues.
		  var alternateFiber = fiber.alternate;
		  var queue1 = fiber.updateQueue;
		  if (queue1 === null) {
		    // TODO: We don't know what the base state will be until we begin work.
		    // It depends on which fiber is the next current. Initialize with an empty
		    // base state, then set to the memoizedState when rendering. Not super
		    // happy with this approach.
		    queue1 = fiber.updateQueue = createUpdateQueue(null);
		  }

		  var queue2 = void 0;
		  if (alternateFiber !== null) {
		    queue2 = alternateFiber.updateQueue;
		    if (queue2 === null) {
		      queue2 = alternateFiber.updateQueue = createUpdateQueue(null);
		    }
		  } else {
		    queue2 = null;
		  }
		  queue2 = queue2 !== queue1 ? queue2 : null;

		  // Warn if an update is scheduled from inside an updater function.
		  {
		    if ((queue1.isProcessing || queue2 !== null && queue2.isProcessing) && !didWarnUpdateInsideUpdate) {
		      warning(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
		      didWarnUpdateInsideUpdate = true;
		    }
		  }

		  // If there's only one queue, add the update to that queue and exit.
		  if (queue2 === null) {
		    insertUpdateIntoQueue(queue1, update);
		    return;
		  }

		  // If either queue is empty, we need to add to both queues.
		  if (queue1.last === null || queue2.last === null) {
		    insertUpdateIntoQueue(queue1, update);
		    insertUpdateIntoQueue(queue2, update);
		    return;
		  }

		  // If both lists are not empty, the last update is the same for both lists
		  // because of structural sharing. So, we should only append to one of
		  // the lists.
		  insertUpdateIntoQueue(queue1, update);
		  // But we still need to update the `last` pointer of queue2.
		  queue2.last = update;
		}

		function getUpdateExpirationTime(fiber) {
		  if (fiber.tag !== ClassComponent && fiber.tag !== HostRoot) {
		    return NoWork;
		  }
		  var updateQueue = fiber.updateQueue;
		  if (updateQueue === null) {
		    return NoWork;
		  }
		  return updateQueue.expirationTime;
		}

		function getStateFromUpdate(update, instance, prevState, props) {
		  var partialState = update.partialState;
		  if (typeof partialState === 'function') {
		    var updateFn = partialState;

		    // Invoke setState callback an extra time to help detect side-effects.
		    if (debugRenderPhaseSideEffects) {
		      updateFn.call(instance, prevState, props);
		    }

		    return updateFn.call(instance, prevState, props);
		  } else {
		    return partialState;
		  }
		}

		function processUpdateQueue(current, workInProgress, queue, instance, props, renderExpirationTime) {
		  if (current !== null && current.updateQueue === queue) {
		    // We need to create a work-in-progress queue, by cloning the current queue.
		    var currentQueue = queue;
		    queue = workInProgress.updateQueue = {
		      baseState: currentQueue.baseState,
		      expirationTime: currentQueue.expirationTime,
		      first: currentQueue.first,
		      last: currentQueue.last,
		      isInitialized: currentQueue.isInitialized,
		      // These fields are no longer valid because they were already committed.
		      // Reset them.
		      callbackList: null,
		      hasForceUpdate: false
		    };
		  }

		  {
		    // Set this flag so we can warn if setState is called inside the update
		    // function of another setState.
		    queue.isProcessing = true;
		  }

		  // Reset the remaining expiration time. If we skip over any updates, we'll
		  // increase this accordingly.
		  queue.expirationTime = NoWork;

		  // TODO: We don't know what the base state will be until we begin work.
		  // It depends on which fiber is the next current. Initialize with an empty
		  // base state, then set to the memoizedState when rendering. Not super
		  // happy with this approach.
		  var state = void 0;
		  if (queue.isInitialized) {
		    state = queue.baseState;
		  } else {
		    state = queue.baseState = workInProgress.memoizedState;
		    queue.isInitialized = true;
		  }
		  var dontMutatePrevState = true;
		  var update = queue.first;
		  var didSkip = false;
		  while (update !== null) {
		    var updateExpirationTime = update.expirationTime;
		    if (updateExpirationTime > renderExpirationTime) {
		      // This update does not have sufficient priority. Skip it.
		      var remainingExpirationTime = queue.expirationTime;
		      if (remainingExpirationTime === NoWork || remainingExpirationTime > updateExpirationTime) {
		        // Update the remaining expiration time.
		        queue.expirationTime = updateExpirationTime;
		      }
		      if (!didSkip) {
		        didSkip = true;
		        queue.baseState = state;
		      }
		      // Continue to the next update.
		      update = update.next;
		      continue;
		    }

		    // This update does have sufficient priority.

		    // If no previous updates were skipped, drop this update from the queue by
		    // advancing the head of the list.
		    if (!didSkip) {
		      queue.first = update.next;
		      if (queue.first === null) {
		        queue.last = null;
		      }
		    }

		    // Process the update
		    var _partialState = void 0;
		    if (update.isReplace) {
		      state = getStateFromUpdate(update, instance, state, props);
		      dontMutatePrevState = true;
		    } else {
		      _partialState = getStateFromUpdate(update, instance, state, props);
		      if (_partialState) {
		        if (dontMutatePrevState) {
		          // $FlowFixMe: Idk how to type this properly.
		          state = _assign({}, state, _partialState);
		        } else {
		          state = _assign(state, _partialState);
		        }
		        dontMutatePrevState = false;
		      }
		    }
		    if (update.isForced) {
		      queue.hasForceUpdate = true;
		    }
		    if (update.callback !== null) {
		      // Append to list of callbacks.
		      var _callbackList = queue.callbackList;
		      if (_callbackList === null) {
		        _callbackList = queue.callbackList = [];
		      }
		      _callbackList.push(update);
		    }
		    update = update.next;
		  }

		  if (queue.callbackList !== null) {
		    workInProgress.effectTag |= Callback;
		  } else if (queue.first === null && !queue.hasForceUpdate) {
		    // The queue is empty. We can reset it.
		    workInProgress.updateQueue = null;
		  }

		  if (!didSkip) {
		    didSkip = true;
		    queue.baseState = state;
		  }

		  {
		    // No longer processing.
		    queue.isProcessing = false;
		  }

		  return state;
		}

		function commitCallbacks(queue, context) {
		  var callbackList = queue.callbackList;
		  if (callbackList === null) {
		    return;
		  }
		  // Set the list to null to make sure they don't get called more than once.
		  queue.callbackList = null;
		  for (var i = 0; i < callbackList.length; i++) {
		    var update = callbackList[i];
		    var _callback = update.callback;
		    // This update might be processed again. Clear the callback so it's only
		    // called once.
		    update.callback = null;
		    !(typeof _callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback) : void 0;
		    _callback.call(context);
		  }
		}

		var fakeInternalInstance = {};
		var isArray = Array.isArray;

		{
		  var didWarnAboutStateAssignmentForComponent = {};

		  var warnOnInvalidCallback = function (callback, callerName) {
		    warning(callback === null || typeof callback === 'function', '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
		  };

		  // This is so gross but it's at least non-critical and can be removed if
		  // it causes problems. This is meant to give a nicer error message for
		  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
		  // ...)) which otherwise throws a "_processChildContext is not a function"
		  // exception.
		  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
		    enumerable: false,
		    value: function () {
		      invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
		    }
		  });
		  Object.freeze(fakeInternalInstance);
		}

		var ReactFiberClassComponent = function (scheduleWork, computeExpirationForFiber, memoizeProps, memoizeState) {
		  // Class component state updater
		  var updater = {
		    isMounted: isMounted,
		    enqueueSetState: function (instance, partialState, callback) {
		      var fiber = get(instance);
		      callback = callback === undefined ? null : callback;
		      {
		        warnOnInvalidCallback(callback, 'setState');
		      }
		      var expirationTime = computeExpirationForFiber(fiber);
		      var update = {
		        expirationTime: expirationTime,
		        partialState: partialState,
		        callback: callback,
		        isReplace: false,
		        isForced: false,
		        nextCallback: null,
		        next: null
		      };
		      insertUpdateIntoFiber(fiber, update);
		      scheduleWork(fiber, expirationTime);
		    },
		    enqueueReplaceState: function (instance, state, callback) {
		      var fiber = get(instance);
		      callback = callback === undefined ? null : callback;
		      {
		        warnOnInvalidCallback(callback, 'replaceState');
		      }
		      var expirationTime = computeExpirationForFiber(fiber);
		      var update = {
		        expirationTime: expirationTime,
		        partialState: state,
		        callback: callback,
		        isReplace: true,
		        isForced: false,
		        nextCallback: null,
		        next: null
		      };
		      insertUpdateIntoFiber(fiber, update);
		      scheduleWork(fiber, expirationTime);
		    },
		    enqueueForceUpdate: function (instance, callback) {
		      var fiber = get(instance);
		      callback = callback === undefined ? null : callback;
		      {
		        warnOnInvalidCallback(callback, 'forceUpdate');
		      }
		      var expirationTime = computeExpirationForFiber(fiber);
		      var update = {
		        expirationTime: expirationTime,
		        partialState: null,
		        callback: callback,
		        isReplace: false,
		        isForced: true,
		        nextCallback: null,
		        next: null
		      };
		      insertUpdateIntoFiber(fiber, update);
		      scheduleWork(fiber, expirationTime);
		    }
		  };

		  function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
		    if (oldProps === null || workInProgress.updateQueue !== null && workInProgress.updateQueue.hasForceUpdate) {
		      // If the workInProgress already has an Update effect, return true
		      return true;
		    }

		    var instance = workInProgress.stateNode;
		    var type = workInProgress.type;
		    if (typeof instance.shouldComponentUpdate === 'function') {
		      startPhaseTimer(workInProgress, 'shouldComponentUpdate');
		      var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
		      stopPhaseTimer();

		      // Simulate an async bailout/interruption by invoking lifecycle twice.
		      if (debugRenderPhaseSideEffects) {
		        instance.shouldComponentUpdate(newProps, newState, newContext);
		      }

		      {
		        warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(workInProgress) || 'Unknown');
		      }

		      return shouldUpdate;
		    }

		    if (type.prototype && type.prototype.isPureReactComponent) {
		      return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
		    }

		    return true;
		  }

		  function checkClassInstance(workInProgress) {
		    var instance = workInProgress.stateNode;
		    var type = workInProgress.type;
		    {
		      var name = getComponentName(workInProgress);
		      var renderPresent = instance.render;

		      if (!renderPresent) {
		        if (type.prototype && typeof type.prototype.render === 'function') {
		          warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
		        } else {
		          warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
		        }
		      }

		      var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
		      warning(noGetInitialStateOnES6, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);
		      var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
		      warning(noGetDefaultPropsOnES6, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);
		      var noInstancePropTypes = !instance.propTypes;
		      warning(noInstancePropTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);
		      var noInstanceContextTypes = !instance.contextTypes;
		      warning(noInstanceContextTypes, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);
		      var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
		      warning(noComponentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);
		      if (type.prototype && type.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
		        warning(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(workInProgress) || 'A pure component');
		      }
		      var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
		      warning(noComponentDidUnmount, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);
		      var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
		      warning(noComponentDidReceiveProps, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);
		      var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
		      warning(noComponentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);
		      var hasMutatedProps = instance.props !== workInProgress.pendingProps;
		      warning(instance.props === undefined || !hasMutatedProps, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name);
		      var noInstanceDefaultProps = !instance.defaultProps;
		      warning(noInstanceDefaultProps, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);
		    }

		    var state = instance.state;
		    if (state && (typeof state !== 'object' || isArray(state))) {
		      warning(false, '%s.state: must be set to an object or null', getComponentName(workInProgress));
		    }
		    if (typeof instance.getChildContext === 'function') {
		      warning(typeof workInProgress.type.childContextTypes === 'object', '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', getComponentName(workInProgress));
		    }
		  }

		  function resetInputPointers(workInProgress, instance) {
		    instance.props = workInProgress.memoizedProps;
		    instance.state = workInProgress.memoizedState;
		  }

		  function adoptClassInstance(workInProgress, instance) {
		    instance.updater = updater;
		    workInProgress.stateNode = instance;
		    // The instance needs access to the fiber so that it can schedule updates
		    set(instance, workInProgress);
		    {
		      instance._reactInternalInstance = fakeInternalInstance;
		    }
		  }

		  function constructClassInstance(workInProgress, props) {
		    var ctor = workInProgress.type;
		    var unmaskedContext = getUnmaskedContext(workInProgress);
		    var needsContext = isContextConsumer(workInProgress);
		    var context = needsContext ? getMaskedContext(workInProgress, unmaskedContext) : emptyObject;
		    var instance = new ctor(props, context);
		    adoptClassInstance(workInProgress, instance);

		    // Cache unmasked context so we can avoid recreating masked context unless necessary.
		    // ReactFiberContext usually updates this cache but can't for newly-created instances.
		    if (needsContext) {
		      cacheContext(workInProgress, unmaskedContext, context);
		    }

		    return instance;
		  }

		  function callComponentWillMount(workInProgress, instance) {
		    startPhaseTimer(workInProgress, 'componentWillMount');
		    var oldState = instance.state;
		    instance.componentWillMount();
		    stopPhaseTimer();

		    // Simulate an async bailout/interruption by invoking lifecycle twice.
		    if (debugRenderPhaseSideEffects) {
		      instance.componentWillMount();
		    }

		    if (oldState !== instance.state) {
		      {
		        warning(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress));
		      }
		      updater.enqueueReplaceState(instance, instance.state, null);
		    }
		  }

		  function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
		    startPhaseTimer(workInProgress, 'componentWillReceiveProps');
		    var oldState = instance.state;
		    instance.componentWillReceiveProps(newProps, newContext);
		    stopPhaseTimer();

		    // Simulate an async bailout/interruption by invoking lifecycle twice.
		    if (debugRenderPhaseSideEffects) {
		      instance.componentWillReceiveProps(newProps, newContext);
		    }

		    if (instance.state !== oldState) {
		      {
		        var componentName = getComponentName(workInProgress) || 'Component';
		        if (!didWarnAboutStateAssignmentForComponent[componentName]) {
		          warning(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
		          didWarnAboutStateAssignmentForComponent[componentName] = true;
		        }
		      }
		      updater.enqueueReplaceState(instance, instance.state, null);
		    }
		  }

		  // Invokes the mount life-cycles on a previously never rendered instance.
		  function mountClassInstance(workInProgress, renderExpirationTime) {
		    var current = workInProgress.alternate;

		    {
		      checkClassInstance(workInProgress);
		    }

		    var instance = workInProgress.stateNode;
		    var state = instance.state || null;

		    var props = workInProgress.pendingProps;
		    !props ? invariant(false, 'There must be pending props for an initial mount. This error is likely caused by a bug in React. Please file an issue.') : void 0;

		    var unmaskedContext = getUnmaskedContext(workInProgress);

		    instance.props = props;
		    instance.state = workInProgress.memoizedState = state;
		    instance.refs = emptyObject;
		    instance.context = getMaskedContext(workInProgress, unmaskedContext);

		    if (enableAsyncSubtreeAPI && workInProgress.type != null && workInProgress.type.prototype != null && workInProgress.type.prototype.unstable_isAsyncReactComponent === true) {
		      workInProgress.internalContextTag |= AsyncUpdates;
		    }

		    if (typeof instance.componentWillMount === 'function') {
		      callComponentWillMount(workInProgress, instance);
		      // If we had additional state updates during this life-cycle, let's
		      // process them now.
		      var updateQueue = workInProgress.updateQueue;
		      if (updateQueue !== null) {
		        instance.state = processUpdateQueue(current, workInProgress, updateQueue, instance, props, renderExpirationTime);
		      }
		    }
		    if (typeof instance.componentDidMount === 'function') {
		      workInProgress.effectTag |= Update;
		    }
		  }

		  // Called on a preexisting class instance. Returns false if a resumed render
		  // could be reused.
		  // function resumeMountClassInstance(
		  //   workInProgress: Fiber,
		  //   priorityLevel: PriorityLevel,
		  // ): boolean {
		  //   const instance = workInProgress.stateNode;
		  //   resetInputPointers(workInProgress, instance);

		  //   let newState = workInProgress.memoizedState;
		  //   let newProps = workInProgress.pendingProps;
		  //   if (!newProps) {
		  //     // If there isn't any new props, then we'll reuse the memoized props.
		  //     // This could be from already completed work.
		  //     newProps = workInProgress.memoizedProps;
		  //     invariant(
		  //       newProps != null,
		  //       'There should always be pending or memoized props. This error is ' +
		  //         'likely caused by a bug in React. Please file an issue.',
		  //     );
		  //   }
		  //   const newUnmaskedContext = getUnmaskedContext(workInProgress);
		  //   const newContext = getMaskedContext(workInProgress, newUnmaskedContext);

		  //   const oldContext = instance.context;
		  //   const oldProps = workInProgress.memoizedProps;

		  //   if (
		  //     typeof instance.componentWillReceiveProps === 'function' &&
		  //     (oldProps !== newProps || oldContext !== newContext)
		  //   ) {
		  //     callComponentWillReceiveProps(
		  //       workInProgress,
		  //       instance,
		  //       newProps,
		  //       newContext,
		  //     );
		  //   }

		  //   // Process the update queue before calling shouldComponentUpdate
		  //   const updateQueue = workInProgress.updateQueue;
		  //   if (updateQueue !== null) {
		  //     newState = processUpdateQueue(
		  //       workInProgress,
		  //       updateQueue,
		  //       instance,
		  //       newState,
		  //       newProps,
		  //       priorityLevel,
		  //     );
		  //   }

		  //   // TODO: Should we deal with a setState that happened after the last
		  //   // componentWillMount and before this componentWillMount? Probably
		  //   // unsupported anyway.

		  //   if (
		  //     !checkShouldComponentUpdate(
		  //       workInProgress,
		  //       workInProgress.memoizedProps,
		  //       newProps,
		  //       workInProgress.memoizedState,
		  //       newState,
		  //       newContext,
		  //     )
		  //   ) {
		  //     // Update the existing instance's state, props, and context pointers even
		  //     // though we're bailing out.
		  //     instance.props = newProps;
		  //     instance.state = newState;
		  //     instance.context = newContext;
		  //     return false;
		  //   }

		  //   // Update the input pointers now so that they are correct when we call
		  //   // componentWillMount
		  //   instance.props = newProps;
		  //   instance.state = newState;
		  //   instance.context = newContext;

		  //   if (typeof instance.componentWillMount === 'function') {
		  //     callComponentWillMount(workInProgress, instance);
		  //     // componentWillMount may have called setState. Process the update queue.
		  //     const newUpdateQueue = workInProgress.updateQueue;
		  //     if (newUpdateQueue !== null) {
		  //       newState = processUpdateQueue(
		  //         workInProgress,
		  //         newUpdateQueue,
		  //         instance,
		  //         newState,
		  //         newProps,
		  //         priorityLevel,
		  //       );
		  //     }
		  //   }

		  //   if (typeof instance.componentDidMount === 'function') {
		  //     workInProgress.effectTag |= Update;
		  //   }

		  //   instance.state = newState;

		  //   return true;
		  // }

		  // Invokes the update life-cycles and returns false if it shouldn't rerender.
		  function updateClassInstance(current, workInProgress, renderExpirationTime) {
		    var instance = workInProgress.stateNode;
		    resetInputPointers(workInProgress, instance);

		    var oldProps = workInProgress.memoizedProps;
		    var newProps = workInProgress.pendingProps;
		    if (!newProps) {
		      // If there aren't any new props, then we'll reuse the memoized props.
		      // This could be from already completed work.
		      newProps = oldProps;
		      !(newProps != null) ? invariant(false, 'There should always be pending or memoized props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		    }
		    var oldContext = instance.context;
		    var newUnmaskedContext = getUnmaskedContext(workInProgress);
		    var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

		    // Note: During these life-cycles, instance.props/instance.state are what
		    // ever the previously attempted to render - not the "current". However,
		    // during componentDidUpdate we pass the "current" props.

		    if (typeof instance.componentWillReceiveProps === 'function' && (oldProps !== newProps || oldContext !== newContext)) {
		      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
		    }

		    // Compute the next state using the memoized state and the update queue.
		    var oldState = workInProgress.memoizedState;
		    // TODO: Previous state can be null.
		    var newState = void 0;
		    if (workInProgress.updateQueue !== null) {
		      newState = processUpdateQueue(current, workInProgress, workInProgress.updateQueue, instance, newProps, renderExpirationTime);
		    } else {
		      newState = oldState;
		    }

		    if (oldProps === newProps && oldState === newState && !hasContextChanged() && !(workInProgress.updateQueue !== null && workInProgress.updateQueue.hasForceUpdate)) {
		      // If an update was already in progress, we should schedule an Update
		      // effect even though we're bailing out, so that cWU/cDU are called.
		      if (typeof instance.componentDidUpdate === 'function') {
		        if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
		          workInProgress.effectTag |= Update;
		        }
		      }
		      return false;
		    }

		    var shouldUpdate = checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

		    if (shouldUpdate) {
		      if (typeof instance.componentWillUpdate === 'function') {
		        startPhaseTimer(workInProgress, 'componentWillUpdate');
		        instance.componentWillUpdate(newProps, newState, newContext);
		        stopPhaseTimer();

		        // Simulate an async bailout/interruption by invoking lifecycle twice.
		        if (debugRenderPhaseSideEffects) {
		          instance.componentWillUpdate(newProps, newState, newContext);
		        }
		      }
		      if (typeof instance.componentDidUpdate === 'function') {
		        workInProgress.effectTag |= Update;
		      }
		    } else {
		      // If an update was already in progress, we should schedule an Update
		      // effect even though we're bailing out, so that cWU/cDU are called.
		      if (typeof instance.componentDidUpdate === 'function') {
		        if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
		          workInProgress.effectTag |= Update;
		        }
		      }

		      // If shouldComponentUpdate returned false, we should still update the
		      // memoized props/state to indicate that this work can be reused.
		      memoizeProps(workInProgress, newProps);
		      memoizeState(workInProgress, newState);
		    }

		    // Update the existing instance's state, props, and context pointers even
		    // if shouldComponentUpdate returns false.
		    instance.props = newProps;
		    instance.state = newState;
		    instance.context = newContext;

		    return shouldUpdate;
		  }

		  return {
		    adoptClassInstance: adoptClassInstance,
		    constructClassInstance: constructClassInstance,
		    mountClassInstance: mountClassInstance,
		    // resumeMountClassInstance,
		    updateClassInstance: updateClassInstance
		  };
		};

		// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
		// nor polyfill, then a plain number is used for performance.
		var hasSymbol = typeof Symbol === 'function' && Symbol['for'];

		var REACT_ELEMENT_TYPE = hasSymbol ? Symbol['for']('react.element') : 0xeac7;
		var REACT_CALL_TYPE = hasSymbol ? Symbol['for']('react.call') : 0xeac8;
		var REACT_RETURN_TYPE = hasSymbol ? Symbol['for']('react.return') : 0xeac9;
		var REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;
		var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;

		var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
		var FAUX_ITERATOR_SYMBOL = '@@iterator';

		function getIteratorFn(maybeIterable) {
		  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
		    return null;
		  }
		  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
		  if (typeof maybeIterator === 'function') {
		    return maybeIterator;
		  }
		  return null;
		}

		var getCurrentFiberStackAddendum$1 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


		{
		  var didWarnAboutMaps = false;
		  /**
		   * Warn if there's no key explicitly set on dynamic arrays of children or
		   * object keys are not valid. This allows us to keep track of children between
		   * updates.
		   */
		  var ownerHasKeyUseWarning = {};
		  var ownerHasFunctionTypeWarning = {};

		  var warnForMissingKey = function (child) {
		    if (child === null || typeof child !== 'object') {
		      return;
		    }
		    if (!child._store || child._store.validated || child.key != null) {
		      return;
		    }
		    !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		    child._store.validated = true;

		    var currentComponentErrorInfo = 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + (getCurrentFiberStackAddendum$1() || '');
		    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
		      return;
		    }
		    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

		    warning(false, 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.%s', getCurrentFiberStackAddendum$1());
		  };
		}

		var isArray$1 = Array.isArray;

		function coerceRef(current, element) {
		  var mixedRef = element.ref;
		  if (mixedRef !== null && typeof mixedRef !== 'function') {
		    if (element._owner) {
		      var owner = element._owner;
		      var inst = void 0;
		      if (owner) {
		        var ownerFiber = owner;
		        !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Stateless function components cannot have refs.') : void 0;
		        inst = ownerFiber.stateNode;
		      }
		      !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
		      var stringRef = '' + mixedRef;
		      // Check if previous string ref matches new string ref
		      if (current !== null && current.ref !== null && current.ref._stringRef === stringRef) {
		        return current.ref;
		      }
		      var ref = function (value) {
		        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
		        if (value === null) {
		          delete refs[stringRef];
		        } else {
		          refs[stringRef] = value;
		        }
		      };
		      ref._stringRef = stringRef;
		      return ref;
		    } else {
		      !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function or a string.') : void 0;
		      !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. You may have multiple copies of React loaded. (details: https://fb.me/react-refs-must-have-owner).', mixedRef) : void 0;
		    }
		  }
		  return mixedRef;
		}

		function throwOnInvalidObjectType(returnFiber, newChild) {
		  if (returnFiber.type !== 'textarea') {
		    var addendum = '';
		    {
		      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + (getCurrentFiberStackAddendum$1() || '');
		    }
		    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
		  }
		}

		function warnOnFunctionType() {
		  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + (getCurrentFiberStackAddendum$1() || '');

		  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
		    return;
		  }
		  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

		  warning(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.%s', getCurrentFiberStackAddendum$1() || '');
		}

		// This wrapper function exists because I expect to clone the code in each path
		// to be able to optimize each path individually by branching early. This needs
		// a compiler or we can do it manually. Helpers that don't need this branching
		// live outside of this function.
		function ChildReconciler(shouldTrackSideEffects) {
		  function deleteChild(returnFiber, childToDelete) {
		    if (!shouldTrackSideEffects) {
		      // Noop.
		      return;
		    }
		    // Deletions are added in reversed order so we add it to the front.
		    // At this point, the return fiber's effect list is empty except for
		    // deletions, so we can just append the deletion to the list. The remaining
		    // effects aren't added until the complete phase. Once we implement
		    // resuming, this may not be true.
		    var last = returnFiber.lastEffect;
		    if (last !== null) {
		      last.nextEffect = childToDelete;
		      returnFiber.lastEffect = childToDelete;
		    } else {
		      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
		    }
		    childToDelete.nextEffect = null;
		    childToDelete.effectTag = Deletion;
		  }

		  function deleteRemainingChildren(returnFiber, currentFirstChild) {
		    if (!shouldTrackSideEffects) {
		      // Noop.
		      return null;
		    }

		    // TODO: For the shouldClone case, this could be micro-optimized a bit by
		    // assuming that after the first child we've already added everything.
		    var childToDelete = currentFirstChild;
		    while (childToDelete !== null) {
		      deleteChild(returnFiber, childToDelete);
		      childToDelete = childToDelete.sibling;
		    }
		    return null;
		  }

		  function mapRemainingChildren(returnFiber, currentFirstChild) {
		    // Add the remaining children to a temporary map so that we can find them by
		    // keys quickly. Implicit (null) keys get added to this set with their index
		    var existingChildren = new Map();

		    var existingChild = currentFirstChild;
		    while (existingChild !== null) {
		      if (existingChild.key !== null) {
		        existingChildren.set(existingChild.key, existingChild);
		      } else {
		        existingChildren.set(existingChild.index, existingChild);
		      }
		      existingChild = existingChild.sibling;
		    }
		    return existingChildren;
		  }

		  function useFiber(fiber, pendingProps, expirationTime) {
		    // We currently set sibling to null and index to 0 here because it is easy
		    // to forget to do before returning it. E.g. for the single child case.
		    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
		    clone.index = 0;
		    clone.sibling = null;
		    return clone;
		  }

		  function placeChild(newFiber, lastPlacedIndex, newIndex) {
		    newFiber.index = newIndex;
		    if (!shouldTrackSideEffects) {
		      // Noop.
		      return lastPlacedIndex;
		    }
		    var current = newFiber.alternate;
		    if (current !== null) {
		      var oldIndex = current.index;
		      if (oldIndex < lastPlacedIndex) {
		        // This is a move.
		        newFiber.effectTag = Placement;
		        return lastPlacedIndex;
		      } else {
		        // This item can stay in place.
		        return oldIndex;
		      }
		    } else {
		      // This is an insertion.
		      newFiber.effectTag = Placement;
		      return lastPlacedIndex;
		    }
		  }

		  function placeSingleChild(newFiber) {
		    // This is simpler for the single child case. We only need to do a
		    // placement for inserting new children.
		    if (shouldTrackSideEffects && newFiber.alternate === null) {
		      newFiber.effectTag = Placement;
		    }
		    return newFiber;
		  }

		  function updateTextNode(returnFiber, current, textContent, expirationTime) {
		    if (current === null || current.tag !== HostText) {
		      // Insert
		      var created = createFiberFromText(textContent, returnFiber.internalContextTag, expirationTime);
		      created['return'] = returnFiber;
		      return created;
		    } else {
		      // Update
		      var existing = useFiber(current, textContent, expirationTime);
		      existing['return'] = returnFiber;
		      return existing;
		    }
		  }

		  function updateElement(returnFiber, current, element, expirationTime) {
		    if (current !== null && current.type === element.type) {
		      // Move based on index
		      var existing = useFiber(current, element.props, expirationTime);
		      existing.ref = coerceRef(current, element);
		      existing['return'] = returnFiber;
		      {
		        existing._debugSource = element._source;
		        existing._debugOwner = element._owner;
		      }
		      return existing;
		    } else {
		      // Insert
		      var created = createFiberFromElement(element, returnFiber.internalContextTag, expirationTime);
		      created.ref = coerceRef(current, element);
		      created['return'] = returnFiber;
		      return created;
		    }
		  }

		  function updateCall(returnFiber, current, call, expirationTime) {
		    // TODO: Should this also compare handler to determine whether to reuse?
		    if (current === null || current.tag !== CallComponent) {
		      // Insert
		      var created = createFiberFromCall(call, returnFiber.internalContextTag, expirationTime);
		      created['return'] = returnFiber;
		      return created;
		    } else {
		      // Move based on index
		      var existing = useFiber(current, call, expirationTime);
		      existing['return'] = returnFiber;
		      return existing;
		    }
		  }

		  function updateReturn(returnFiber, current, returnNode, expirationTime) {
		    if (current === null || current.tag !== ReturnComponent) {
		      // Insert
		      var created = createFiberFromReturn(returnNode, returnFiber.internalContextTag, expirationTime);
		      created.type = returnNode.value;
		      created['return'] = returnFiber;
		      return created;
		    } else {
		      // Move based on index
		      var existing = useFiber(current, null, expirationTime);
		      existing.type = returnNode.value;
		      existing['return'] = returnFiber;
		      return existing;
		    }
		  }

		  function updatePortal(returnFiber, current, portal, expirationTime) {
		    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
		      // Insert
		      var created = createFiberFromPortal(portal, returnFiber.internalContextTag, expirationTime);
		      created['return'] = returnFiber;
		      return created;
		    } else {
		      // Update
		      var existing = useFiber(current, portal.children || [], expirationTime);
		      existing['return'] = returnFiber;
		      return existing;
		    }
		  }

		  function updateFragment(returnFiber, current, fragment, expirationTime, key) {
		    if (current === null || current.tag !== Fragment) {
		      // Insert
		      var created = createFiberFromFragment(fragment, returnFiber.internalContextTag, expirationTime, key);
		      created['return'] = returnFiber;
		      return created;
		    } else {
		      // Update
		      var existing = useFiber(current, fragment, expirationTime);
		      existing['return'] = returnFiber;
		      return existing;
		    }
		  }

		  function createChild(returnFiber, newChild, expirationTime) {
		    if (typeof newChild === 'string' || typeof newChild === 'number') {
		      // Text nodes don't have keys. If the previous node is implicitly keyed
		      // we can continue to replace it without aborting even if it is not a text
		      // node.
		      var created = createFiberFromText('' + newChild, returnFiber.internalContextTag, expirationTime);
		      created['return'] = returnFiber;
		      return created;
		    }

		    if (typeof newChild === 'object' && newChild !== null) {
		      switch (newChild.$$typeof) {
		        case REACT_ELEMENT_TYPE:
		          {
		            if (newChild.type === REACT_FRAGMENT_TYPE) {
		              var _created = createFiberFromFragment(newChild.props.children, returnFiber.internalContextTag, expirationTime, newChild.key);
		              _created['return'] = returnFiber;
		              return _created;
		            } else {
		              var _created2 = createFiberFromElement(newChild, returnFiber.internalContextTag, expirationTime);
		              _created2.ref = coerceRef(null, newChild);
		              _created2['return'] = returnFiber;
		              return _created2;
		            }
		          }

		        case REACT_CALL_TYPE:
		          {
		            var _created3 = createFiberFromCall(newChild, returnFiber.internalContextTag, expirationTime);
		            _created3['return'] = returnFiber;
		            return _created3;
		          }

		        case REACT_RETURN_TYPE:
		          {
		            var _created4 = createFiberFromReturn(newChild, returnFiber.internalContextTag, expirationTime);
		            _created4.type = newChild.value;
		            _created4['return'] = returnFiber;
		            return _created4;
		          }

		        case REACT_PORTAL_TYPE:
		          {
		            var _created5 = createFiberFromPortal(newChild, returnFiber.internalContextTag, expirationTime);
		            _created5['return'] = returnFiber;
		            return _created5;
		          }
		      }

		      if (isArray$1(newChild) || getIteratorFn(newChild)) {
		        var _created6 = createFiberFromFragment(newChild, returnFiber.internalContextTag, expirationTime, null);
		        _created6['return'] = returnFiber;
		        return _created6;
		      }

		      throwOnInvalidObjectType(returnFiber, newChild);
		    }

		    {
		      if (typeof newChild === 'function') {
		        warnOnFunctionType();
		      }
		    }

		    return null;
		  }

		  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
		    // Update the fiber if the keys match, otherwise return null.

		    var key = oldFiber !== null ? oldFiber.key : null;

		    if (typeof newChild === 'string' || typeof newChild === 'number') {
		      // Text nodes don't have keys. If the previous node is implicitly keyed
		      // we can continue to replace it without aborting even if it is not a text
		      // node.
		      if (key !== null) {
		        return null;
		      }
		      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
		    }

		    if (typeof newChild === 'object' && newChild !== null) {
		      switch (newChild.$$typeof) {
		        case REACT_ELEMENT_TYPE:
		          {
		            if (newChild.key === key) {
		              if (newChild.type === REACT_FRAGMENT_TYPE) {
		                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
		              }
		              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
		            } else {
		              return null;
		            }
		          }

		        case REACT_CALL_TYPE:
		          {
		            if (newChild.key === key) {
		              return updateCall(returnFiber, oldFiber, newChild, expirationTime);
		            } else {
		              return null;
		            }
		          }

		        case REACT_RETURN_TYPE:
		          {
		            // Returns don't have keys. If the previous node is implicitly keyed
		            // we can continue to replace it without aborting even if it is not a
		            // yield.
		            if (key === null) {
		              return updateReturn(returnFiber, oldFiber, newChild, expirationTime);
		            } else {
		              return null;
		            }
		          }

		        case REACT_PORTAL_TYPE:
		          {
		            if (newChild.key === key) {
		              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
		            } else {
		              return null;
		            }
		          }
		      }

		      if (isArray$1(newChild) || getIteratorFn(newChild)) {
		        if (key !== null) {
		          return null;
		        }

		        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
		      }

		      throwOnInvalidObjectType(returnFiber, newChild);
		    }

		    {
		      if (typeof newChild === 'function') {
		        warnOnFunctionType();
		      }
		    }

		    return null;
		  }

		  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
		    if (typeof newChild === 'string' || typeof newChild === 'number') {
		      // Text nodes don't have keys, so we neither have to check the old nor
		      // new node for the key. If both are text nodes, they match.
		      var matchedFiber = existingChildren.get(newIdx) || null;
		      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
		    }

		    if (typeof newChild === 'object' && newChild !== null) {
		      switch (newChild.$$typeof) {
		        case REACT_ELEMENT_TYPE:
		          {
		            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
		            if (newChild.type === REACT_FRAGMENT_TYPE) {
		              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
		            }
		            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
		          }

		        case REACT_CALL_TYPE:
		          {
		            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
		            return updateCall(returnFiber, _matchedFiber2, newChild, expirationTime);
		          }

		        case REACT_RETURN_TYPE:
		          {
		            // Returns don't have keys, so we neither have to check the old nor
		            // new node for the key. If both are returns, they match.
		            var _matchedFiber3 = existingChildren.get(newIdx) || null;
		            return updateReturn(returnFiber, _matchedFiber3, newChild, expirationTime);
		          }

		        case REACT_PORTAL_TYPE:
		          {
		            var _matchedFiber4 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
		            return updatePortal(returnFiber, _matchedFiber4, newChild, expirationTime);
		          }
		      }

		      if (isArray$1(newChild) || getIteratorFn(newChild)) {
		        var _matchedFiber5 = existingChildren.get(newIdx) || null;
		        return updateFragment(returnFiber, _matchedFiber5, newChild, expirationTime, null);
		      }

		      throwOnInvalidObjectType(returnFiber, newChild);
		    }

		    {
		      if (typeof newChild === 'function') {
		        warnOnFunctionType();
		      }
		    }

		    return null;
		  }

		  /**
		   * Warns if there is a duplicate or missing key
		   */
		  function warnOnInvalidKey(child, knownKeys) {
		    {
		      if (typeof child !== 'object' || child === null) {
		        return knownKeys;
		      }
		      switch (child.$$typeof) {
		        case REACT_ELEMENT_TYPE:
		        case REACT_CALL_TYPE:
		        case REACT_PORTAL_TYPE:
		          warnForMissingKey(child);
		          var key = child.key;
		          if (typeof key !== 'string') {
		            break;
		          }
		          if (knownKeys === null) {
		            knownKeys = new Set();
		            knownKeys.add(key);
		            break;
		          }
		          if (!knownKeys.has(key)) {
		            knownKeys.add(key);
		            break;
		          }
		          warning(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.%s', key, getCurrentFiberStackAddendum$1());
		          break;
		        default:
		          break;
		      }
		    }
		    return knownKeys;
		  }

		  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
		    // This algorithm can't optimize by searching from boths ends since we
		    // don't have backpointers on fibers. I'm trying to see how far we can get
		    // with that model. If it ends up not being worth the tradeoffs, we can
		    // add it later.

		    // Even with a two ended optimization, we'd want to optimize for the case
		    // where there are few changes and brute force the comparison instead of
		    // going for the Map. It'd like to explore hitting that path first in
		    // forward-only mode and only go for the Map once we notice that we need
		    // lots of look ahead. This doesn't handle reversal as well as two ended
		    // search but that's unusual. Besides, for the two ended optimization to
		    // work on Iterables, we'd need to copy the whole set.

		    // In this first iteration, we'll just live with hitting the bad case
		    // (adding everything to a Map) in for every insert/move.

		    // If you change this code, also update reconcileChildrenIterator() which
		    // uses the same algorithm.

		    {
		      // First, validate keys.
		      var knownKeys = null;
		      for (var i = 0; i < newChildren.length; i++) {
		        var child = newChildren[i];
		        knownKeys = warnOnInvalidKey(child, knownKeys);
		      }
		    }

		    var resultingFirstChild = null;
		    var previousNewFiber = null;

		    var oldFiber = currentFirstChild;
		    var lastPlacedIndex = 0;
		    var newIdx = 0;
		    var nextOldFiber = null;
		    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
		      if (oldFiber.index > newIdx) {
		        nextOldFiber = oldFiber;
		        oldFiber = null;
		      } else {
		        nextOldFiber = oldFiber.sibling;
		      }
		      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
		      if (newFiber === null) {
		        // TODO: This breaks on empty slots like null children. That's
		        // unfortunate because it triggers the slow path all the time. We need
		        // a better way to communicate whether this was a miss or null,
		        // boolean, undefined, etc.
		        if (oldFiber === null) {
		          oldFiber = nextOldFiber;
		        }
		        break;
		      }
		      if (shouldTrackSideEffects) {
		        if (oldFiber && newFiber.alternate === null) {
		          // We matched the slot, but we didn't reuse the existing fiber, so we
		          // need to delete the existing child.
		          deleteChild(returnFiber, oldFiber);
		        }
		      }
		      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
		      if (previousNewFiber === null) {
		        // TODO: Move out of the loop. This only happens for the first run.
		        resultingFirstChild = newFiber;
		      } else {
		        // TODO: Defer siblings if we're not at the right index for this slot.
		        // I.e. if we had null values before, then we want to defer this
		        // for each null value. However, we also don't want to call updateSlot
		        // with the previous one.
		        previousNewFiber.sibling = newFiber;
		      }
		      previousNewFiber = newFiber;
		      oldFiber = nextOldFiber;
		    }

		    if (newIdx === newChildren.length) {
		      // We've reached the end of the new children. We can delete the rest.
		      deleteRemainingChildren(returnFiber, oldFiber);
		      return resultingFirstChild;
		    }

		    if (oldFiber === null) {
		      // If we don't have any more existing children we can choose a fast path
		      // since the rest will all be insertions.
		      for (; newIdx < newChildren.length; newIdx++) {
		        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
		        if (!_newFiber) {
		          continue;
		        }
		        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
		        if (previousNewFiber === null) {
		          // TODO: Move out of the loop. This only happens for the first run.
		          resultingFirstChild = _newFiber;
		        } else {
		          previousNewFiber.sibling = _newFiber;
		        }
		        previousNewFiber = _newFiber;
		      }
		      return resultingFirstChild;
		    }

		    // Add all children to a key map for quick lookups.
		    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

		    // Keep scanning and use the map to restore deleted items as moves.
		    for (; newIdx < newChildren.length; newIdx++) {
		      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
		      if (_newFiber2) {
		        if (shouldTrackSideEffects) {
		          if (_newFiber2.alternate !== null) {
		            // The new fiber is a work in progress, but if there exists a
		            // current, that means that we reused the fiber. We need to delete
		            // it from the child list so that we don't add it to the deletion
		            // list.
		            existingChildren['delete'](_newFiber2.key === null ? newIdx : _newFiber2.key);
		          }
		        }
		        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
		        if (previousNewFiber === null) {
		          resultingFirstChild = _newFiber2;
		        } else {
		          previousNewFiber.sibling = _newFiber2;
		        }
		        previousNewFiber = _newFiber2;
		      }
		    }

		    if (shouldTrackSideEffects) {
		      // Any existing children that weren't consumed above were deleted. We need
		      // to add them to the deletion list.
		      existingChildren.forEach(function (child) {
		        return deleteChild(returnFiber, child);
		      });
		    }

		    return resultingFirstChild;
		  }

		  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
		    // This is the same implementation as reconcileChildrenArray(),
		    // but using the iterator instead.

		    var iteratorFn = getIteratorFn(newChildrenIterable);
		    !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;

		    {
		      // Warn about using Maps as children
		      if (typeof newChildrenIterable.entries === 'function') {
		        var possibleMap = newChildrenIterable;
		        if (possibleMap.entries === iteratorFn) {
		          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getCurrentFiberStackAddendum$1());
		          didWarnAboutMaps = true;
		        }
		      }

		      // First, validate keys.
		      // We'll get a different iterator later for the main pass.
		      var _newChildren = iteratorFn.call(newChildrenIterable);
		      if (_newChildren) {
		        var knownKeys = null;
		        var _step = _newChildren.next();
		        for (; !_step.done; _step = _newChildren.next()) {
		          var child = _step.value;
		          knownKeys = warnOnInvalidKey(child, knownKeys);
		        }
		      }
		    }

		    var newChildren = iteratorFn.call(newChildrenIterable);
		    !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;

		    var resultingFirstChild = null;
		    var previousNewFiber = null;

		    var oldFiber = currentFirstChild;
		    var lastPlacedIndex = 0;
		    var newIdx = 0;
		    var nextOldFiber = null;

		    var step = newChildren.next();
		    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
		      if (oldFiber.index > newIdx) {
		        nextOldFiber = oldFiber;
		        oldFiber = null;
		      } else {
		        nextOldFiber = oldFiber.sibling;
		      }
		      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
		      if (newFiber === null) {
		        // TODO: This breaks on empty slots like null children. That's
		        // unfortunate because it triggers the slow path all the time. We need
		        // a better way to communicate whether this was a miss or null,
		        // boolean, undefined, etc.
		        if (!oldFiber) {
		          oldFiber = nextOldFiber;
		        }
		        break;
		      }
		      if (shouldTrackSideEffects) {
		        if (oldFiber && newFiber.alternate === null) {
		          // We matched the slot, but we didn't reuse the existing fiber, so we
		          // need to delete the existing child.
		          deleteChild(returnFiber, oldFiber);
		        }
		      }
		      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
		      if (previousNewFiber === null) {
		        // TODO: Move out of the loop. This only happens for the first run.
		        resultingFirstChild = newFiber;
		      } else {
		        // TODO: Defer siblings if we're not at the right index for this slot.
		        // I.e. if we had null values before, then we want to defer this
		        // for each null value. However, we also don't want to call updateSlot
		        // with the previous one.
		        previousNewFiber.sibling = newFiber;
		      }
		      previousNewFiber = newFiber;
		      oldFiber = nextOldFiber;
		    }

		    if (step.done) {
		      // We've reached the end of the new children. We can delete the rest.
		      deleteRemainingChildren(returnFiber, oldFiber);
		      return resultingFirstChild;
		    }

		    if (oldFiber === null) {
		      // If we don't have any more existing children we can choose a fast path
		      // since the rest will all be insertions.
		      for (; !step.done; newIdx++, step = newChildren.next()) {
		        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
		        if (_newFiber3 === null) {
		          continue;
		        }
		        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
		        if (previousNewFiber === null) {
		          // TODO: Move out of the loop. This only happens for the first run.
		          resultingFirstChild = _newFiber3;
		        } else {
		          previousNewFiber.sibling = _newFiber3;
		        }
		        previousNewFiber = _newFiber3;
		      }
		      return resultingFirstChild;
		    }

		    // Add all children to a key map for quick lookups.
		    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

		    // Keep scanning and use the map to restore deleted items as moves.
		    for (; !step.done; newIdx++, step = newChildren.next()) {
		      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
		      if (_newFiber4 !== null) {
		        if (shouldTrackSideEffects) {
		          if (_newFiber4.alternate !== null) {
		            // The new fiber is a work in progress, but if there exists a
		            // current, that means that we reused the fiber. We need to delete
		            // it from the child list so that we don't add it to the deletion
		            // list.
		            existingChildren['delete'](_newFiber4.key === null ? newIdx : _newFiber4.key);
		          }
		        }
		        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
		        if (previousNewFiber === null) {
		          resultingFirstChild = _newFiber4;
		        } else {
		          previousNewFiber.sibling = _newFiber4;
		        }
		        previousNewFiber = _newFiber4;
		      }
		    }

		    if (shouldTrackSideEffects) {
		      // Any existing children that weren't consumed above were deleted. We need
		      // to add them to the deletion list.
		      existingChildren.forEach(function (child) {
		        return deleteChild(returnFiber, child);
		      });
		    }

		    return resultingFirstChild;
		  }

		  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
		    // There's no need to check for keys on text nodes since we don't have a
		    // way to define them.
		    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
		      // We already have an existing node so let's just update it and delete
		      // the rest.
		      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
		      var existing = useFiber(currentFirstChild, textContent, expirationTime);
		      existing['return'] = returnFiber;
		      return existing;
		    }
		    // The existing first child is not a text node so we need to create one
		    // and delete the existing ones.
		    deleteRemainingChildren(returnFiber, currentFirstChild);
		    var created = createFiberFromText(textContent, returnFiber.internalContextTag, expirationTime);
		    created['return'] = returnFiber;
		    return created;
		  }

		  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
		    var key = element.key;
		    var child = currentFirstChild;
		    while (child !== null) {
		      // TODO: If key === null and child.key === null, then this only applies to
		      // the first item in the list.
		      if (child.key === key) {
		        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.type === element.type) {
		          deleteRemainingChildren(returnFiber, child.sibling);
		          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
		          existing.ref = coerceRef(child, element);
		          existing['return'] = returnFiber;
		          {
		            existing._debugSource = element._source;
		            existing._debugOwner = element._owner;
		          }
		          return existing;
		        } else {
		          deleteRemainingChildren(returnFiber, child);
		          break;
		        }
		      } else {
		        deleteChild(returnFiber, child);
		      }
		      child = child.sibling;
		    }

		    if (element.type === REACT_FRAGMENT_TYPE) {
		      var created = createFiberFromFragment(element.props.children, returnFiber.internalContextTag, expirationTime, element.key);
		      created['return'] = returnFiber;
		      return created;
		    } else {
		      var _created7 = createFiberFromElement(element, returnFiber.internalContextTag, expirationTime);
		      _created7.ref = coerceRef(currentFirstChild, element);
		      _created7['return'] = returnFiber;
		      return _created7;
		    }
		  }

		  function reconcileSingleCall(returnFiber, currentFirstChild, call, expirationTime) {
		    var key = call.key;
		    var child = currentFirstChild;
		    while (child !== null) {
		      // TODO: If key === null and child.key === null, then this only applies to
		      // the first item in the list.
		      if (child.key === key) {
		        if (child.tag === CallComponent) {
		          deleteRemainingChildren(returnFiber, child.sibling);
		          var existing = useFiber(child, call, expirationTime);
		          existing['return'] = returnFiber;
		          return existing;
		        } else {
		          deleteRemainingChildren(returnFiber, child);
		          break;
		        }
		      } else {
		        deleteChild(returnFiber, child);
		      }
		      child = child.sibling;
		    }

		    var created = createFiberFromCall(call, returnFiber.internalContextTag, expirationTime);
		    created['return'] = returnFiber;
		    return created;
		  }

		  function reconcileSingleReturn(returnFiber, currentFirstChild, returnNode, expirationTime) {
		    // There's no need to check for keys on yields since they're stateless.
		    var child = currentFirstChild;
		    if (child !== null) {
		      if (child.tag === ReturnComponent) {
		        deleteRemainingChildren(returnFiber, child.sibling);
		        var existing = useFiber(child, null, expirationTime);
		        existing.type = returnNode.value;
		        existing['return'] = returnFiber;
		        return existing;
		      } else {
		        deleteRemainingChildren(returnFiber, child);
		      }
		    }

		    var created = createFiberFromReturn(returnNode, returnFiber.internalContextTag, expirationTime);
		    created.type = returnNode.value;
		    created['return'] = returnFiber;
		    return created;
		  }

		  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
		    var key = portal.key;
		    var child = currentFirstChild;
		    while (child !== null) {
		      // TODO: If key === null and child.key === null, then this only applies to
		      // the first item in the list.
		      if (child.key === key) {
		        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
		          deleteRemainingChildren(returnFiber, child.sibling);
		          var existing = useFiber(child, portal.children || [], expirationTime);
		          existing['return'] = returnFiber;
		          return existing;
		        } else {
		          deleteRemainingChildren(returnFiber, child);
		          break;
		        }
		      } else {
		        deleteChild(returnFiber, child);
		      }
		      child = child.sibling;
		    }

		    var created = createFiberFromPortal(portal, returnFiber.internalContextTag, expirationTime);
		    created['return'] = returnFiber;
		    return created;
		  }

		  // This API will tag the children with the side-effect of the reconciliation
		  // itself. They will be added to the side-effect list as we pass through the
		  // children and the parent.
		  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
		    // This function is not recursive.
		    // If the top level item is an array, we treat it as a set of children,
		    // not as a fragment. Nested arrays on the other hand will be treated as
		    // fragment nodes. Recursion happens at the normal flow.

		    // Handle top level unkeyed fragments as if they were arrays.
		    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
		    // We treat the ambiguous cases above the same.
		    if (typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null) {
		      newChild = newChild.props.children;
		    }

		    // Handle object types
		    var isObject = typeof newChild === 'object' && newChild !== null;

		    if (isObject) {
		      switch (newChild.$$typeof) {
		        case REACT_ELEMENT_TYPE:
		          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));

		        case REACT_CALL_TYPE:
		          return placeSingleChild(reconcileSingleCall(returnFiber, currentFirstChild, newChild, expirationTime));
		        case REACT_RETURN_TYPE:
		          return placeSingleChild(reconcileSingleReturn(returnFiber, currentFirstChild, newChild, expirationTime));
		        case REACT_PORTAL_TYPE:
		          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
		      }
		    }

		    if (typeof newChild === 'string' || typeof newChild === 'number') {
		      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
		    }

		    if (isArray$1(newChild)) {
		      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
		    }

		    if (getIteratorFn(newChild)) {
		      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
		    }

		    if (isObject) {
		      throwOnInvalidObjectType(returnFiber, newChild);
		    }

		    {
		      if (typeof newChild === 'function') {
		        warnOnFunctionType();
		      }
		    }
		    if (typeof newChild === 'undefined') {
		      // If the new child is undefined, and the return fiber is a composite
		      // component, throw an error. If Fiber return types are disabled,
		      // we already threw above.
		      switch (returnFiber.tag) {
		        case ClassComponent:
		          {
		            {
		              var instance = returnFiber.stateNode;
		              if (instance.render._isMockFunction) {
		                // We allow auto-mocks to proceed as if they're returning null.
		                break;
		              }
		            }
		          }
		        // Intentionally fall through to the next case, which handles both
		        // functions and classes
		        // eslint-disable-next-lined no-fallthrough
		        case FunctionalComponent:
		          {
		            var Component = returnFiber.type;
		            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
		          }
		      }
		    }

		    // Remaining cases are all treated as empty.
		    return deleteRemainingChildren(returnFiber, currentFirstChild);
		  }

		  return reconcileChildFibers;
		}

		var reconcileChildFibers = ChildReconciler(true);
		var mountChildFibers = ChildReconciler(false);

		function cloneChildFibers(current, workInProgress) {
		  !(current === null || workInProgress.child === current.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;

		  if (workInProgress.child === null) {
		    return;
		  }

		  var currentChild = workInProgress.child;
		  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
		  workInProgress.child = newChild;

		  newChild['return'] = workInProgress;
		  while (currentChild.sibling !== null) {
		    currentChild = currentChild.sibling;
		    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
		    newChild['return'] = workInProgress;
		  }
		  newChild.sibling = null;
		}

		{
		  var warnedAboutStatelessRefs = {};
		}

		var ReactFiberBeginWork = function (config, hostContext, hydrationContext, scheduleWork, computeExpirationForFiber) {
		  var shouldSetTextContent = config.shouldSetTextContent,
		      useSyncScheduling = config.useSyncScheduling,
		      shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree;
		  var pushHostContext = hostContext.pushHostContext,
		      pushHostContainer = hostContext.pushHostContainer;
		  var enterHydrationState = hydrationContext.enterHydrationState,
		      resetHydrationState = hydrationContext.resetHydrationState,
		      tryToClaimNextHydratableInstance = hydrationContext.tryToClaimNextHydratableInstance;

		  var _ReactFiberClassCompo = ReactFiberClassComponent(scheduleWork, computeExpirationForFiber, memoizeProps, memoizeState),
		      adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
		      constructClassInstance = _ReactFiberClassCompo.constructClassInstance,
		      mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
		      updateClassInstance = _ReactFiberClassCompo.updateClassInstance;

		  // TODO: Remove this and use reconcileChildrenAtExpirationTime directly.


		  function reconcileChildren(current, workInProgress, nextChildren) {
		    reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, workInProgress.expirationTime);
		  }

		  function reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime) {
		    if (current === null) {
		      // If this is a fresh new component that hasn't been rendered yet, we
		      // won't update its child set by applying minimal side-effects. Instead,
		      // we will add them all to the child before it gets rendered. That means
		      // we can optimize this reconciliation pass by not tracking side-effects.
		      workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
		    } else {
		      // If the current child is the same as the work in progress, it means that
		      // we haven't yet started any work on these children. Therefore, we use
		      // the clone algorithm to create a copy of all the current children.

		      // If we had any progressed work already, that is invalid at this point so
		      // let's throw it out.
		      workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderExpirationTime);
		    }
		  }

		  function updateFragment(current, workInProgress) {
		    var nextChildren = workInProgress.pendingProps;
		    if (hasContextChanged()) {
		      // Normally we can bail out on props equality but if context has changed
		      // we don't do the bailout and we have to reuse existing props instead.
		      if (nextChildren === null) {
		        nextChildren = workInProgress.memoizedProps;
		      }
		    } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
		      return bailoutOnAlreadyFinishedWork(current, workInProgress);
		    }
		    reconcileChildren(current, workInProgress, nextChildren);
		    memoizeProps(workInProgress, nextChildren);
		    return workInProgress.child;
		  }

		  function markRef(current, workInProgress) {
		    var ref = workInProgress.ref;
		    if (ref !== null && (!current || current.ref !== ref)) {
		      // Schedule a Ref effect
		      workInProgress.effectTag |= Ref;
		    }
		  }

		  function updateFunctionalComponent(current, workInProgress) {
		    var fn = workInProgress.type;
		    var nextProps = workInProgress.pendingProps;

		    var memoizedProps = workInProgress.memoizedProps;
		    if (hasContextChanged()) {
		      // Normally we can bail out on props equality but if context has changed
		      // we don't do the bailout and we have to reuse existing props instead.
		      if (nextProps === null) {
		        nextProps = memoizedProps;
		      }
		    } else {
		      if (nextProps === null || memoizedProps === nextProps) {
		        return bailoutOnAlreadyFinishedWork(current, workInProgress);
		      }
		      // TODO: consider bringing fn.shouldComponentUpdate() back.
		      // It used to be here.
		    }

		    var unmaskedContext = getUnmaskedContext(workInProgress);
		    var context = getMaskedContext(workInProgress, unmaskedContext);

		    var nextChildren;

		    {
		      ReactCurrentOwner.current = workInProgress;
		      ReactDebugCurrentFiber.setCurrentPhase('render');
		      nextChildren = fn(nextProps, context);
		      ReactDebugCurrentFiber.setCurrentPhase(null);
		    }
		    // React DevTools reads this flag.
		    workInProgress.effectTag |= PerformedWork;
		    reconcileChildren(current, workInProgress, nextChildren);
		    memoizeProps(workInProgress, nextProps);
		    return workInProgress.child;
		  }

		  function updateClassComponent(current, workInProgress, renderExpirationTime) {
		    // Push context providers early to prevent context stack mismatches.
		    // During mounting we don't know the child context yet as the instance doesn't exist.
		    // We will invalidate the child context in finishClassComponent() right after rendering.
		    var hasContext = pushContextProvider(workInProgress);

		    var shouldUpdate = void 0;
		    if (current === null) {
		      if (!workInProgress.stateNode) {
		        // In the initial pass we might need to construct the instance.
		        constructClassInstance(workInProgress, workInProgress.pendingProps);
		        mountClassInstance(workInProgress, renderExpirationTime);
		        shouldUpdate = true;
		      } else {
		        invariant(false, 'Resuming work not yet implemented.');
		        // In a resume, we'll already have an instance we can reuse.
		        // shouldUpdate = resumeMountClassInstance(workInProgress, renderExpirationTime);
		      }
		    } else {
		      shouldUpdate = updateClassInstance(current, workInProgress, renderExpirationTime);
		    }
		    return finishClassComponent(current, workInProgress, shouldUpdate, hasContext);
		  }

		  function finishClassComponent(current, workInProgress, shouldUpdate, hasContext) {
		    // Refs should update even if shouldComponentUpdate returns false
		    markRef(current, workInProgress);

		    if (!shouldUpdate) {
		      // Context providers should defer to sCU for rendering
		      if (hasContext) {
		        invalidateContextProvider(workInProgress, false);
		      }

		      return bailoutOnAlreadyFinishedWork(current, workInProgress);
		    }

		    var instance = workInProgress.stateNode;

		    // Rerender
		    ReactCurrentOwner.current = workInProgress;
		    var nextChildren = void 0;
		    {
		      ReactDebugCurrentFiber.setCurrentPhase('render');
		      nextChildren = instance.render();
		      if (debugRenderPhaseSideEffects) {
		        instance.render();
		      }
		      ReactDebugCurrentFiber.setCurrentPhase(null);
		    }
		    // React DevTools reads this flag.
		    workInProgress.effectTag |= PerformedWork;
		    reconcileChildren(current, workInProgress, nextChildren);
		    // Memoize props and state using the values we just used to render.
		    // TODO: Restructure so we never read values from the instance.
		    memoizeState(workInProgress, instance.state);
		    memoizeProps(workInProgress, instance.props);

		    // The context might have changed so we need to recalculate it.
		    if (hasContext) {
		      invalidateContextProvider(workInProgress, true);
		    }

		    return workInProgress.child;
		  }

		  function pushHostRootContext(workInProgress) {
		    var root = workInProgress.stateNode;
		    if (root.pendingContext) {
		      pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
		    } else if (root.context) {
		      // Should always be set
		      pushTopLevelContextObject(workInProgress, root.context, false);
		    }
		    pushHostContainer(workInProgress, root.containerInfo);
		  }

		  function updateHostRoot(current, workInProgress, renderExpirationTime) {
		    pushHostRootContext(workInProgress);
		    var updateQueue = workInProgress.updateQueue;
		    if (updateQueue !== null) {
		      var prevState = workInProgress.memoizedState;
		      var state = processUpdateQueue(current, workInProgress, updateQueue, null, null, renderExpirationTime);
		      if (prevState === state) {
		        // If the state is the same as before, that's a bailout because we had
		        // no work that expires at this time.
		        resetHydrationState();
		        return bailoutOnAlreadyFinishedWork(current, workInProgress);
		      }
		      var element = state.element;
		      var root = workInProgress.stateNode;
		      if ((current === null || current.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
		        // If we don't have any current children this might be the first pass.
		        // We always try to hydrate. If this isn't a hydration pass there won't
		        // be any children to hydrate which is effectively the same thing as
		        // not hydrating.

		        // This is a bit of a hack. We track the host root as a placement to
		        // know that we're currently in a mounting state. That way isMounted
		        // works as expected. We must reset this before committing.
		        // TODO: Delete this when we delete isMounted and findDOMNode.
		        workInProgress.effectTag |= Placement;

		        // Ensure that children mount into this root without tracking
		        // side-effects. This ensures that we don't store Placement effects on
		        // nodes that will be hydrated.
		        workInProgress.child = mountChildFibers(workInProgress, null, element, renderExpirationTime);
		      } else {
		        // Otherwise reset hydration state in case we aborted and resumed another
		        // root.
		        resetHydrationState();
		        reconcileChildren(current, workInProgress, element);
		      }
		      memoizeState(workInProgress, state);
		      return workInProgress.child;
		    }
		    resetHydrationState();
		    // If there is no update queue, that's a bailout because the root has no props.
		    return bailoutOnAlreadyFinishedWork(current, workInProgress);
		  }

		  function updateHostComponent(current, workInProgress, renderExpirationTime) {
		    pushHostContext(workInProgress);

		    if (current === null) {
		      tryToClaimNextHydratableInstance(workInProgress);
		    }

		    var type = workInProgress.type;
		    var memoizedProps = workInProgress.memoizedProps;
		    var nextProps = workInProgress.pendingProps;
		    if (nextProps === null) {
		      nextProps = memoizedProps;
		      !(nextProps !== null) ? invariant(false, 'We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		    }
		    var prevProps = current !== null ? current.memoizedProps : null;

		    if (hasContextChanged()) {
		      // Normally we can bail out on props equality but if context has changed
		      // we don't do the bailout and we have to reuse existing props instead.
		    } else if (nextProps === null || memoizedProps === nextProps) {
		      return bailoutOnAlreadyFinishedWork(current, workInProgress);
		    }

		    var nextChildren = nextProps.children;
		    var isDirectTextChild = shouldSetTextContent(type, nextProps);

		    if (isDirectTextChild) {
		      // We special case a direct text child of a host node. This is a common
		      // case. We won't handle it as a reified child. We will instead handle
		      // this in the host environment that also have access to this prop. That
		      // avoids allocating another HostText fiber and traversing it.
		      nextChildren = null;
		    } else if (prevProps && shouldSetTextContent(type, prevProps)) {
		      // If we're switching from a direct text child to a normal child, or to
		      // empty, we need to schedule the text content to be reset.
		      workInProgress.effectTag |= ContentReset;
		    }

		    markRef(current, workInProgress);

		    // Check the host config to see if the children are offscreen/hidden.
		    if (renderExpirationTime !== Never && !useSyncScheduling && shouldDeprioritizeSubtree(type, nextProps)) {
		      // Down-prioritize the children.
		      workInProgress.expirationTime = Never;
		      // Bailout and come back to this fiber later.
		      return null;
		    }

		    reconcileChildren(current, workInProgress, nextChildren);
		    memoizeProps(workInProgress, nextProps);
		    return workInProgress.child;
		  }

		  function updateHostText(current, workInProgress) {
		    if (current === null) {
		      tryToClaimNextHydratableInstance(workInProgress);
		    }
		    var nextProps = workInProgress.pendingProps;
		    if (nextProps === null) {
		      nextProps = workInProgress.memoizedProps;
		    }
		    memoizeProps(workInProgress, nextProps);
		    // Nothing to do here. This is terminal. We'll do the completion step
		    // immediately after.
		    return null;
		  }

		  function mountIndeterminateComponent(current, workInProgress, renderExpirationTime) {
		    !(current === null) ? invariant(false, 'An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		    var fn = workInProgress.type;
		    var props = workInProgress.pendingProps;
		    var unmaskedContext = getUnmaskedContext(workInProgress);
		    var context = getMaskedContext(workInProgress, unmaskedContext);

		    var value;

		    {
		      if (fn.prototype && typeof fn.prototype.render === 'function') {
		        var componentName = getComponentName(workInProgress);
		        warning(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
		      }
		      ReactCurrentOwner.current = workInProgress;
		      value = fn(props, context);
		    }
		    // React DevTools reads this flag.
		    workInProgress.effectTag |= PerformedWork;

		    if (typeof value === 'object' && value !== null && typeof value.render === 'function') {
		      // Proceed under the assumption that this is a class instance
		      workInProgress.tag = ClassComponent;

		      // Push context providers early to prevent context stack mismatches.
		      // During mounting we don't know the child context yet as the instance doesn't exist.
		      // We will invalidate the child context in finishClassComponent() right after rendering.
		      var hasContext = pushContextProvider(workInProgress);
		      adoptClassInstance(workInProgress, value);
		      mountClassInstance(workInProgress, renderExpirationTime);
		      return finishClassComponent(current, workInProgress, true, hasContext);
		    } else {
		      // Proceed under the assumption that this is a functional component
		      workInProgress.tag = FunctionalComponent;
		      {
		        var Component = workInProgress.type;

		        if (Component) {
		          warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component');
		        }
		        if (workInProgress.ref !== null) {
		          var info = '';
		          var ownerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName();
		          if (ownerName) {
		            info += '\n\nCheck the render method of `' + ownerName + '`.';
		          }

		          var warningKey = ownerName || workInProgress._debugID || '';
		          var debugSource = workInProgress._debugSource;
		          if (debugSource) {
		            warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
		          }
		          if (!warnedAboutStatelessRefs[warningKey]) {
		            warnedAboutStatelessRefs[warningKey] = true;
		            warning(false, 'Stateless function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s%s', info, ReactDebugCurrentFiber.getCurrentFiberStackAddendum());
		          }
		        }
		      }
		      reconcileChildren(current, workInProgress, value);
		      memoizeProps(workInProgress, props);
		      return workInProgress.child;
		    }
		  }

		  function updateCallComponent(current, workInProgress, renderExpirationTime) {
		    var nextCall = workInProgress.pendingProps;
		    if (hasContextChanged()) {
		      // Normally we can bail out on props equality but if context has changed
		      // we don't do the bailout and we have to reuse existing props instead.
		      if (nextCall === null) {
		        nextCall = current && current.memoizedProps;
		        !(nextCall !== null) ? invariant(false, 'We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		      }
		    } else if (nextCall === null || workInProgress.memoizedProps === nextCall) {
		      nextCall = workInProgress.memoizedProps;
		      // TODO: When bailing out, we might need to return the stateNode instead
		      // of the child. To check it for work.
		      // return bailoutOnAlreadyFinishedWork(current, workInProgress);
		    }

		    var nextChildren = nextCall.children;

		    // The following is a fork of reconcileChildrenAtExpirationTime but using
		    // stateNode to store the child.
		    if (current === null) {
		      workInProgress.stateNode = mountChildFibers(workInProgress, workInProgress.stateNode, nextChildren, renderExpirationTime);
		    } else {
		      workInProgress.stateNode = reconcileChildFibers(workInProgress, workInProgress.stateNode, nextChildren, renderExpirationTime);
		    }

		    memoizeProps(workInProgress, nextCall);
		    // This doesn't take arbitrary time so we could synchronously just begin
		    // eagerly do the work of workInProgress.child as an optimization.
		    return workInProgress.stateNode;
		  }

		  function updatePortalComponent(current, workInProgress, renderExpirationTime) {
		    pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
		    var nextChildren = workInProgress.pendingProps;
		    if (hasContextChanged()) {
		      // Normally we can bail out on props equality but if context has changed
		      // we don't do the bailout and we have to reuse existing props instead.
		      if (nextChildren === null) {
		        nextChildren = current && current.memoizedProps;
		        !(nextChildren != null) ? invariant(false, 'We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		      }
		    } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
		      return bailoutOnAlreadyFinishedWork(current, workInProgress);
		    }

		    if (current === null) {
		      // Portals are special because we don't append the children during mount
		      // but at commit. Therefore we need to track insertions which the normal
		      // flow doesn't do during mount. This doesn't happen at the root because
		      // the root always starts with a "current" with a null child.
		      // TODO: Consider unifying this with how the root works.
		      workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
		      memoizeProps(workInProgress, nextChildren);
		    } else {
		      reconcileChildren(current, workInProgress, nextChildren);
		      memoizeProps(workInProgress, nextChildren);
		    }
		    return workInProgress.child;
		  }

		  /*
		  function reuseChildrenEffects(returnFiber : Fiber, firstChild : Fiber) {
		    let child = firstChild;
		    do {
		      // Ensure that the first and last effect of the parent corresponds
		      // to the children's first and last effect.
		      if (!returnFiber.firstEffect) {
		        returnFiber.firstEffect = child.firstEffect;
		      }
		      if (child.lastEffect) {
		        if (returnFiber.lastEffect) {
		          returnFiber.lastEffect.nextEffect = child.firstEffect;
		        }
		        returnFiber.lastEffect = child.lastEffect;
		      }
		    } while (child = child.sibling);
		  }
		  */

		  function bailoutOnAlreadyFinishedWork(current, workInProgress) {
		    cancelWorkTimer(workInProgress);

		    // TODO: We should ideally be able to bail out early if the children have no
		    // more work to do. However, since we don't have a separation of this
		    // Fiber's priority and its children yet - we don't know without doing lots
		    // of the same work we do anyway. Once we have that separation we can just
		    // bail out here if the children has no more work at this priority level.
		    // if (workInProgress.priorityOfChildren <= priorityLevel) {
		    //   // If there are side-effects in these children that have not yet been
		    //   // committed we need to ensure that they get properly transferred up.
		    //   if (current && current.child !== workInProgress.child) {
		    //     reuseChildrenEffects(workInProgress, child);
		    //   }
		    //   return null;
		    // }

		    cloneChildFibers(current, workInProgress);
		    return workInProgress.child;
		  }

		  function bailoutOnLowPriority(current, workInProgress) {
		    cancelWorkTimer(workInProgress);

		    // TODO: Handle HostComponent tags here as well and call pushHostContext()?
		    // See PR 8590 discussion for context
		    switch (workInProgress.tag) {
		      case HostRoot:
		        pushHostRootContext(workInProgress);
		        break;
		      case ClassComponent:
		        pushContextProvider(workInProgress);
		        break;
		      case HostPortal:
		        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
		        break;
		    }
		    // TODO: What if this is currently in progress?
		    // How can that happen? How is this not being cloned?
		    return null;
		  }

		  // TODO: Delete memoizeProps/State and move to reconcile/bailout instead
		  function memoizeProps(workInProgress, nextProps) {
		    workInProgress.memoizedProps = nextProps;
		  }

		  function memoizeState(workInProgress, nextState) {
		    workInProgress.memoizedState = nextState;
		    // Don't reset the updateQueue, in case there are pending updates. Resetting
		    // is handled by processUpdateQueue.
		  }

		  function beginWork(current, workInProgress, renderExpirationTime) {
		    if (workInProgress.expirationTime === NoWork || workInProgress.expirationTime > renderExpirationTime) {
		      return bailoutOnLowPriority(current, workInProgress);
		    }

		    switch (workInProgress.tag) {
		      case IndeterminateComponent:
		        return mountIndeterminateComponent(current, workInProgress, renderExpirationTime);
		      case FunctionalComponent:
		        return updateFunctionalComponent(current, workInProgress);
		      case ClassComponent:
		        return updateClassComponent(current, workInProgress, renderExpirationTime);
		      case HostRoot:
		        return updateHostRoot(current, workInProgress, renderExpirationTime);
		      case HostComponent:
		        return updateHostComponent(current, workInProgress, renderExpirationTime);
		      case HostText:
		        return updateHostText(current, workInProgress);
		      case CallHandlerPhase:
		        // This is a restart. Reset the tag to the initial phase.
		        workInProgress.tag = CallComponent;
		      // Intentionally fall through since this is now the same.
		      case CallComponent:
		        return updateCallComponent(current, workInProgress, renderExpirationTime);
		      case ReturnComponent:
		        // A return component is just a placeholder, we can just run through the
		        // next one immediately.
		        return null;
		      case HostPortal:
		        return updatePortalComponent(current, workInProgress, renderExpirationTime);
		      case Fragment:
		        return updateFragment(current, workInProgress);
		      default:
		        invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
		    }
		  }

		  function beginFailedWork(current, workInProgress, renderExpirationTime) {
		    // Push context providers here to avoid a push/pop context mismatch.
		    switch (workInProgress.tag) {
		      case ClassComponent:
		        pushContextProvider(workInProgress);
		        break;
		      case HostRoot:
		        pushHostRootContext(workInProgress);
		        break;
		      default:
		        invariant(false, 'Invalid type of work. This error is likely caused by a bug in React. Please file an issue.');
		    }

		    // Add an error effect so we can handle the error during the commit phase
		    workInProgress.effectTag |= Err;

		    // This is a weird case where we do "resume" work — work that failed on
		    // our first attempt. Because we no longer have a notion of "progressed
		    // deletions," reset the child to the current child to make sure we delete
		    // it again. TODO: Find a better way to handle this, perhaps during a more
		    // general overhaul of error handling.
		    if (current === null) {
		      workInProgress.child = null;
		    } else if (workInProgress.child !== current.child) {
		      workInProgress.child = current.child;
		    }

		    if (workInProgress.expirationTime === NoWork || workInProgress.expirationTime > renderExpirationTime) {
		      return bailoutOnLowPriority(current, workInProgress);
		    }

		    // If we don't bail out, we're going be recomputing our children so we need
		    // to drop our effect list.
		    workInProgress.firstEffect = null;
		    workInProgress.lastEffect = null;

		    // Unmount the current children as if the component rendered null
		    var nextChildren = null;
		    reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime);

		    if (workInProgress.tag === ClassComponent) {
		      var instance = workInProgress.stateNode;
		      workInProgress.memoizedProps = instance.props;
		      workInProgress.memoizedState = instance.state;
		    }

		    return workInProgress.child;
		  }

		  return {
		    beginWork: beginWork,
		    beginFailedWork: beginFailedWork
		  };
		};

		var ReactFiberCompleteWork = function (config, hostContext, hydrationContext) {
		  var createInstance = config.createInstance,
		      createTextInstance = config.createTextInstance,
		      appendInitialChild = config.appendInitialChild,
		      finalizeInitialChildren = config.finalizeInitialChildren,
		      prepareUpdate = config.prepareUpdate,
		      mutation = config.mutation,
		      persistence = config.persistence;
		  var getRootHostContainer = hostContext.getRootHostContainer,
		      popHostContext = hostContext.popHostContext,
		      getHostContext = hostContext.getHostContext,
		      popHostContainer = hostContext.popHostContainer;
		  var prepareToHydrateHostInstance = hydrationContext.prepareToHydrateHostInstance,
		      prepareToHydrateHostTextInstance = hydrationContext.prepareToHydrateHostTextInstance,
		      popHydrationState = hydrationContext.popHydrationState;


		  function markUpdate(workInProgress) {
		    // Tag the fiber with an update effect. This turns a Placement into
		    // an UpdateAndPlacement.
		    workInProgress.effectTag |= Update;
		  }

		  function markRef(workInProgress) {
		    workInProgress.effectTag |= Ref;
		  }

		  function appendAllReturns(returns, workInProgress) {
		    var node = workInProgress.stateNode;
		    if (node) {
		      node['return'] = workInProgress;
		    }
		    while (node !== null) {
		      if (node.tag === HostComponent || node.tag === HostText || node.tag === HostPortal) {
		        invariant(false, 'A call cannot have host component children.');
		      } else if (node.tag === ReturnComponent) {
		        returns.push(node.type);
		      } else if (node.child !== null) {
		        node.child['return'] = node;
		        node = node.child;
		        continue;
		      }
		      while (node.sibling === null) {
		        if (node['return'] === null || node['return'] === workInProgress) {
		          return;
		        }
		        node = node['return'];
		      }
		      node.sibling['return'] = node['return'];
		      node = node.sibling;
		    }
		  }

		  function moveCallToHandlerPhase(current, workInProgress, renderExpirationTime) {
		    var call = workInProgress.memoizedProps;
		    !call ? invariant(false, 'Should be resolved by now. This error is likely caused by a bug in React. Please file an issue.') : void 0;

		    // First step of the call has completed. Now we need to do the second.
		    // TODO: It would be nice to have a multi stage call represented by a
		    // single component, or at least tail call optimize nested ones. Currently
		    // that requires additional fields that we don't want to add to the fiber.
		    // So this requires nested handlers.
		    // Note: This doesn't mutate the alternate node. I don't think it needs to
		    // since this stage is reset for every pass.
		    workInProgress.tag = CallHandlerPhase;

		    // Build up the returns.
		    // TODO: Compare this to a generator or opaque helpers like Children.
		    var returns = [];
		    appendAllReturns(returns, workInProgress);
		    var fn = call.handler;
		    var props = call.props;
		    var nextChildren = fn(props, returns);

		    var currentFirstChild = current !== null ? current.child : null;
		    workInProgress.child = reconcileChildFibers(workInProgress, currentFirstChild, nextChildren, renderExpirationTime);
		    return workInProgress.child;
		  }

		  function appendAllChildren(parent, workInProgress) {
		    // We only have the top Fiber that was created but we need recurse down its
		    // children to find all the terminal nodes.
		    var node = workInProgress.child;
		    while (node !== null) {
		      if (node.tag === HostComponent || node.tag === HostText) {
		        appendInitialChild(parent, node.stateNode);
		      } else if (node.tag === HostPortal) {
		        // If we have a portal child, then we don't want to traverse
		        // down its children. Instead, we'll get insertions from each child in
		        // the portal directly.
		      } else if (node.child !== null) {
		        node.child['return'] = node;
		        node = node.child;
		        continue;
		      }
		      if (node === workInProgress) {
		        return;
		      }
		      while (node.sibling === null) {
		        if (node['return'] === null || node['return'] === workInProgress) {
		          return;
		        }
		        node = node['return'];
		      }
		      node.sibling['return'] = node['return'];
		      node = node.sibling;
		    }
		  }

		  var updateHostContainer = void 0;
		  var updateHostComponent = void 0;
		  var updateHostText = void 0;
		  if (mutation) {
		    if (enableMutatingReconciler) {
		      // Mutation mode
		      updateHostContainer = function (workInProgress) {
		        // Noop
		      };
		      updateHostComponent = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance) {
		        // TODO: Type this specific to this type of component.
		        workInProgress.updateQueue = updatePayload;
		        // If the update payload indicates that there is a change or if there
		        // is a new ref we mark this as an update. All the work is done in commitWork.
		        if (updatePayload) {
		          markUpdate(workInProgress);
		        }
		      };
		      updateHostText = function (current, workInProgress, oldText, newText) {
		        // If the text differs, mark it as an update. All the work in done in commitWork.
		        if (oldText !== newText) {
		          markUpdate(workInProgress);
		        }
		      };
		    } else {
		      invariant(false, 'Mutating reconciler is disabled.');
		    }
		  } else if (persistence) {
		    if (enablePersistentReconciler) {
		      // Persistent host tree mode
		      var cloneInstance = persistence.cloneInstance,
		          createContainerChildSet = persistence.createContainerChildSet,
		          appendChildToContainerChildSet = persistence.appendChildToContainerChildSet,
		          finalizeContainerChildren = persistence.finalizeContainerChildren;

		      // An unfortunate fork of appendAllChildren because we have two different parent types.

		      var appendAllChildrenToContainer = function (containerChildSet, workInProgress) {
		        // We only have the top Fiber that was created but we need recurse down its
		        // children to find all the terminal nodes.
		        var node = workInProgress.child;
		        while (node !== null) {
		          if (node.tag === HostComponent || node.tag === HostText) {
		            appendChildToContainerChildSet(containerChildSet, node.stateNode);
		          } else if (node.tag === HostPortal) {
		            // If we have a portal child, then we don't want to traverse
		            // down its children. Instead, we'll get insertions from each child in
		            // the portal directly.
		          } else if (node.child !== null) {
		            node.child['return'] = node;
		            node = node.child;
		            continue;
		          }
		          if (node === workInProgress) {
		            return;
		          }
		          while (node.sibling === null) {
		            if (node['return'] === null || node['return'] === workInProgress) {
		              return;
		            }
		            node = node['return'];
		          }
		          node.sibling['return'] = node['return'];
		          node = node.sibling;
		        }
		      };
		      updateHostContainer = function (workInProgress) {
		        var portalOrRoot = workInProgress.stateNode;
		        var childrenUnchanged = workInProgress.firstEffect === null;
		        if (childrenUnchanged) {
		          // No changes, just reuse the existing instance.
		        } else {
		          var container = portalOrRoot.containerInfo;
		          var newChildSet = createContainerChildSet(container);
		          if (finalizeContainerChildren(container, newChildSet)) {
		            markUpdate(workInProgress);
		          }
		          portalOrRoot.pendingChildren = newChildSet;
		          // If children might have changed, we have to add them all to the set.
		          appendAllChildrenToContainer(newChildSet, workInProgress);
		          // Schedule an update on the container to swap out the container.
		          markUpdate(workInProgress);
		        }
		      };
		      updateHostComponent = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance) {
		        // If there are no effects associated with this node, then none of our children had any updates.
		        // This guarantees that we can reuse all of them.
		        var childrenUnchanged = workInProgress.firstEffect === null;
		        var currentInstance = current.stateNode;
		        if (childrenUnchanged && updatePayload === null) {
		          // No changes, just reuse the existing instance.
		          // Note that this might release a previous clone.
		          workInProgress.stateNode = currentInstance;
		        } else {
		          var recyclableInstance = workInProgress.stateNode;
		          var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);
		          if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance)) {
		            markUpdate(workInProgress);
		          }
		          workInProgress.stateNode = newInstance;
		          if (childrenUnchanged) {
		            // If there are no other effects in this tree, we need to flag this node as having one.
		            // Even though we're not going to use it for anything.
		            // Otherwise parents won't know that there are new children to propagate upwards.
		            markUpdate(workInProgress);
		          } else {
		            // If children might have changed, we have to add them all to the set.
		            appendAllChildren(newInstance, workInProgress);
		          }
		        }
		      };
		      updateHostText = function (current, workInProgress, oldText, newText) {
		        if (oldText !== newText) {
		          // If the text content differs, we'll create a new text instance for it.
		          var rootContainerInstance = getRootHostContainer();
		          var currentHostContext = getHostContext();
		          workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);
		          // We'll have to mark it as having an effect, even though we won't use the effect for anything.
		          // This lets the parents know that at least one of their children has changed.
		          markUpdate(workInProgress);
		        }
		      };
		    } else {
		      invariant(false, 'Persistent reconciler is disabled.');
		    }
		  } else {
		    if (enableNoopReconciler) {
		      // No host operations
		      updateHostContainer = function (workInProgress) {
		        // Noop
		      };
		      updateHostComponent = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance) {
		        // Noop
		      };
		      updateHostText = function (current, workInProgress, oldText, newText) {
		        // Noop
		      };
		    } else {
		      invariant(false, 'Noop reconciler is disabled.');
		    }
		  }

		  function completeWork(current, workInProgress, renderExpirationTime) {
		    // Get the latest props.
		    var newProps = workInProgress.pendingProps;
		    if (newProps === null) {
		      newProps = workInProgress.memoizedProps;
		    } else if (workInProgress.expirationTime !== Never || renderExpirationTime === Never) {
		      // Reset the pending props, unless this was a down-prioritization.
		      workInProgress.pendingProps = null;
		    }

		    switch (workInProgress.tag) {
		      case FunctionalComponent:
		        return null;
		      case ClassComponent:
		        {
		          // We are leaving this subtree, so pop context if any.
		          popContextProvider(workInProgress);
		          return null;
		        }
		      case HostRoot:
		        {
		          popHostContainer(workInProgress);
		          popTopLevelContextObject(workInProgress);
		          var fiberRoot = workInProgress.stateNode;
		          if (fiberRoot.pendingContext) {
		            fiberRoot.context = fiberRoot.pendingContext;
		            fiberRoot.pendingContext = null;
		          }

		          if (current === null || current.child === null) {
		            // If we hydrated, pop so that we can delete any remaining children
		            // that weren't hydrated.
		            popHydrationState(workInProgress);
		            // This resets the hacky state to fix isMounted before committing.
		            // TODO: Delete this when we delete isMounted and findDOMNode.
		            workInProgress.effectTag &= ~Placement;
		          }
		          updateHostContainer(workInProgress);
		          return null;
		        }
		      case HostComponent:
		        {
		          popHostContext(workInProgress);
		          var rootContainerInstance = getRootHostContainer();
		          var type = workInProgress.type;
		          if (current !== null && workInProgress.stateNode != null) {
		            // If we have an alternate, that means this is an update and we need to
		            // schedule a side-effect to do the updates.
		            var oldProps = current.memoizedProps;
		            // If we get updated because one of our children updated, we don't
		            // have newProps so we'll have to reuse them.
		            // TODO: Split the update API as separate for the props vs. children.
		            // Even better would be if children weren't special cased at all tho.
		            var instance = workInProgress.stateNode;
		            var currentHostContext = getHostContext();
		            var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);

		            updateHostComponent(current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance);

		            if (current.ref !== workInProgress.ref) {
		              markRef(workInProgress);
		            }
		          } else {
		            if (!newProps) {
		              !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		              // This can happen when we abort work.
		              return null;
		            }

		            var _currentHostContext = getHostContext();
		            // TODO: Move createInstance to beginWork and keep it on a context
		            // "stack" as the parent. Then append children as we go in beginWork
		            // or completeWork depending on we want to add then top->down or
		            // bottom->up. Top->down is faster in IE11.
		            var wasHydrated = popHydrationState(workInProgress);
		            if (wasHydrated) {
		              // TODO: Move this and createInstance step into the beginPhase
		              // to consolidate.
		              if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext)) {
		                // If changes to the hydrated node needs to be applied at the
		                // commit-phase we mark this as such.
		                markUpdate(workInProgress);
		              }
		            } else {
		              var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);

		              appendAllChildren(_instance, workInProgress);

		              // Certain renderers require commit-time effects for initial mount.
		              // (eg DOM renderer supports auto-focus for certain elements).
		              // Make sure such renderers get scheduled for later work.
		              if (finalizeInitialChildren(_instance, type, newProps, rootContainerInstance)) {
		                markUpdate(workInProgress);
		              }
		              workInProgress.stateNode = _instance;
		            }

		            if (workInProgress.ref !== null) {
		              // If there is a ref on a host node we need to schedule a callback
		              markRef(workInProgress);
		            }
		          }
		          return null;
		        }
		      case HostText:
		        {
		          var newText = newProps;
		          if (current && workInProgress.stateNode != null) {
		            var oldText = current.memoizedProps;
		            // If we have an alternate, that means this is an update and we need
		            // to schedule a side-effect to do the updates.
		            updateHostText(current, workInProgress, oldText, newText);
		          } else {
		            if (typeof newText !== 'string') {
		              !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		              // This can happen when we abort work.
		              return null;
		            }
		            var _rootContainerInstance = getRootHostContainer();
		            var _currentHostContext2 = getHostContext();
		            var _wasHydrated = popHydrationState(workInProgress);
		            if (_wasHydrated) {
		              if (prepareToHydrateHostTextInstance(workInProgress)) {
		                markUpdate(workInProgress);
		              }
		            } else {
		              workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
		            }
		          }
		          return null;
		        }
		      case CallComponent:
		        return moveCallToHandlerPhase(current, workInProgress, renderExpirationTime);
		      case CallHandlerPhase:
		        // Reset the tag to now be a first phase call.
		        workInProgress.tag = CallComponent;
		        return null;
		      case ReturnComponent:
		        // Does nothing.
		        return null;
		      case Fragment:
		        return null;
		      case HostPortal:
		        popHostContainer(workInProgress);
		        updateHostContainer(workInProgress);
		        return null;
		      // Error cases
		      case IndeterminateComponent:
		        invariant(false, 'An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue.');
		      // eslint-disable-next-line no-fallthrough
		      default:
		        invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
		    }
		  }

		  return {
		    completeWork: completeWork
		  };
		};

		var invokeGuardedCallback$2 = ReactErrorUtils.invokeGuardedCallback;
		var hasCaughtError$1 = ReactErrorUtils.hasCaughtError;
		var clearCaughtError$1 = ReactErrorUtils.clearCaughtError;


		var ReactFiberCommitWork = function (config, captureError) {
		  var getPublicInstance = config.getPublicInstance,
		      mutation = config.mutation,
		      persistence = config.persistence;


		  var callComponentWillUnmountWithTimer = function (current, instance) {
		    startPhaseTimer(current, 'componentWillUnmount');
		    instance.props = current.memoizedProps;
		    instance.state = current.memoizedState;
		    instance.componentWillUnmount();
		    stopPhaseTimer();
		  };

		  // Capture errors so they don't interrupt unmounting.
		  function safelyCallComponentWillUnmount(current, instance) {
		    {
		      invokeGuardedCallback$2(null, callComponentWillUnmountWithTimer, null, current, instance);
		      if (hasCaughtError$1()) {
		        var unmountError = clearCaughtError$1();
		        captureError(current, unmountError);
		      }
		    }
		  }

		  function safelyDetachRef(current) {
		    var ref = current.ref;
		    if (ref !== null) {
		      {
		        invokeGuardedCallback$2(null, ref, null, null);
		        if (hasCaughtError$1()) {
		          var refError = clearCaughtError$1();
		          captureError(current, refError);
		        }
		      }
		    }
		  }

		  function commitLifeCycles(current, finishedWork) {
		    switch (finishedWork.tag) {
		      case ClassComponent:
		        {
		          var instance = finishedWork.stateNode;
		          if (finishedWork.effectTag & Update) {
		            if (current === null) {
		              startPhaseTimer(finishedWork, 'componentDidMount');
		              instance.props = finishedWork.memoizedProps;
		              instance.state = finishedWork.memoizedState;
		              instance.componentDidMount();
		              stopPhaseTimer();
		            } else {
		              var prevProps = current.memoizedProps;
		              var prevState = current.memoizedState;
		              startPhaseTimer(finishedWork, 'componentDidUpdate');
		              instance.props = finishedWork.memoizedProps;
		              instance.state = finishedWork.memoizedState;
		              instance.componentDidUpdate(prevProps, prevState);
		              stopPhaseTimer();
		            }
		          }
		          var updateQueue = finishedWork.updateQueue;
		          if (updateQueue !== null) {
		            commitCallbacks(updateQueue, instance);
		          }
		          return;
		        }
		      case HostRoot:
		        {
		          var _updateQueue = finishedWork.updateQueue;
		          if (_updateQueue !== null) {
		            var _instance = finishedWork.child !== null ? finishedWork.child.stateNode : null;
		            commitCallbacks(_updateQueue, _instance);
		          }
		          return;
		        }
		      case HostComponent:
		        {
		          var _instance2 = finishedWork.stateNode;

		          // Renderers may schedule work to be done after host components are mounted
		          // (eg DOM renderer may schedule auto-focus for inputs and form controls).
		          // These effects should only be committed when components are first mounted,
		          // aka when there is no current/alternate.
		          if (current === null && finishedWork.effectTag & Update) {
		            var type = finishedWork.type;
		            var props = finishedWork.memoizedProps;
		            commitMount(_instance2, type, props, finishedWork);
		          }

		          return;
		        }
		      case HostText:
		        {
		          // We have no life-cycles associated with text.
		          return;
		        }
		      case HostPortal:
		        {
		          // We have no life-cycles associated with portals.
		          return;
		        }
		      default:
		        {
		          invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
		        }
		    }
		  }

		  function commitAttachRef(finishedWork) {
		    var ref = finishedWork.ref;
		    if (ref !== null) {
		      var instance = finishedWork.stateNode;
		      switch (finishedWork.tag) {
		        case HostComponent:
		          ref(getPublicInstance(instance));
		          break;
		        default:
		          ref(instance);
		      }
		    }
		  }

		  function commitDetachRef(current) {
		    var currentRef = current.ref;
		    if (currentRef !== null) {
		      currentRef(null);
		    }
		  }

		  // User-originating errors (lifecycles and refs) should not interrupt
		  // deletion, so don't let them throw. Host-originating errors should
		  // interrupt deletion, so it's okay
		  function commitUnmount(current) {
		    if (typeof onCommitUnmount === 'function') {
		      onCommitUnmount(current);
		    }

		    switch (current.tag) {
		      case ClassComponent:
		        {
		          safelyDetachRef(current);
		          var instance = current.stateNode;
		          if (typeof instance.componentWillUnmount === 'function') {
		            safelyCallComponentWillUnmount(current, instance);
		          }
		          return;
		        }
		      case HostComponent:
		        {
		          safelyDetachRef(current);
		          return;
		        }
		      case CallComponent:
		        {
		          commitNestedUnmounts(current.stateNode);
		          return;
		        }
		      case HostPortal:
		        {
		          // TODO: this is recursive.
		          // We are also not using this parent because
		          // the portal will get pushed immediately.
		          if (enableMutatingReconciler && mutation) {
		            unmountHostComponents(current);
		          } else if (enablePersistentReconciler && persistence) {
		            emptyPortalContainer(current);
		          }
		          return;
		        }
		    }
		  }

		  function commitNestedUnmounts(root) {
		    // While we're inside a removed host node we don't want to call
		    // removeChild on the inner nodes because they're removed by the top
		    // call anyway. We also want to call componentWillUnmount on all
		    // composites before this host node is removed from the tree. Therefore
		    var node = root;
		    while (true) {
		      commitUnmount(node);
		      // Visit children because they may contain more composite or host nodes.
		      // Skip portals because commitUnmount() currently visits them recursively.
		      if (node.child !== null && (
		      // If we use mutation we drill down into portals using commitUnmount above.
		      // If we don't use mutation we drill down into portals here instead.
		      !mutation || node.tag !== HostPortal)) {
		        node.child['return'] = node;
		        node = node.child;
		        continue;
		      }
		      if (node === root) {
		        return;
		      }
		      while (node.sibling === null) {
		        if (node['return'] === null || node['return'] === root) {
		          return;
		        }
		        node = node['return'];
		      }
		      node.sibling['return'] = node['return'];
		      node = node.sibling;
		    }
		  }

		  function detachFiber(current) {
		    // Cut off the return pointers to disconnect it from the tree. Ideally, we
		    // should clear the child pointer of the parent alternate to let this
		    // get GC:ed but we don't know which for sure which parent is the current
		    // one so we'll settle for GC:ing the subtree of this child. This child
		    // itself will be GC:ed when the parent updates the next time.
		    current['return'] = null;
		    current.child = null;
		    if (current.alternate) {
		      current.alternate.child = null;
		      current.alternate['return'] = null;
		    }
		  }

		  if (!mutation) {
		    var commitContainer = void 0;
		    if (persistence) {
		      var replaceContainerChildren = persistence.replaceContainerChildren,
		          createContainerChildSet = persistence.createContainerChildSet;

		      var emptyPortalContainer = function (current) {
		        var portal = current.stateNode;
		        var containerInfo = portal.containerInfo;

		        var emptyChildSet = createContainerChildSet(containerInfo);
		        replaceContainerChildren(containerInfo, emptyChildSet);
		      };
		      commitContainer = function (finishedWork) {
		        switch (finishedWork.tag) {
		          case ClassComponent:
		            {
		              return;
		            }
		          case HostComponent:
		            {
		              return;
		            }
		          case HostText:
		            {
		              return;
		            }
		          case HostRoot:
		          case HostPortal:
		            {
		              var portalOrRoot = finishedWork.stateNode;
		              var containerInfo = portalOrRoot.containerInfo,
		                  _pendingChildren = portalOrRoot.pendingChildren;

		              replaceContainerChildren(containerInfo, _pendingChildren);
		              return;
		            }
		          default:
		            {
		              invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
		            }
		        }
		      };
		    } else {
		      commitContainer = function (finishedWork) {
		        // Noop
		      };
		    }
		    if (enablePersistentReconciler || enableNoopReconciler) {
		      return {
		        commitResetTextContent: function (finishedWork) {},
		        commitPlacement: function (finishedWork) {},
		        commitDeletion: function (current) {
		          // Detach refs and call componentWillUnmount() on the whole subtree.
		          commitNestedUnmounts(current);
		          detachFiber(current);
		        },
		        commitWork: function (current, finishedWork) {
		          commitContainer(finishedWork);
		        },

		        commitLifeCycles: commitLifeCycles,
		        commitAttachRef: commitAttachRef,
		        commitDetachRef: commitDetachRef
		      };
		    } else if (persistence) {
		      invariant(false, 'Persistent reconciler is disabled.');
		    } else {
		      invariant(false, 'Noop reconciler is disabled.');
		    }
		  }
		  var commitMount = mutation.commitMount,
		      commitUpdate = mutation.commitUpdate,
		      resetTextContent = mutation.resetTextContent,
		      commitTextUpdate = mutation.commitTextUpdate,
		      appendChild = mutation.appendChild,
		      appendChildToContainer = mutation.appendChildToContainer,
		      insertBefore = mutation.insertBefore,
		      insertInContainerBefore = mutation.insertInContainerBefore,
		      removeChild = mutation.removeChild,
		      removeChildFromContainer = mutation.removeChildFromContainer;


		  function getHostParentFiber(fiber) {
		    var parent = fiber['return'];
		    while (parent !== null) {
		      if (isHostParent(parent)) {
		        return parent;
		      }
		      parent = parent['return'];
		    }
		    invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
		  }

		  function isHostParent(fiber) {
		    return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
		  }

		  function getHostSibling(fiber) {
		    // We're going to search forward into the tree until we find a sibling host
		    // node. Unfortunately, if multiple insertions are done in a row we have to
		    // search past them. This leads to exponential search for the next sibling.
		    var node = fiber;
		    siblings: while (true) {
		      // If we didn't find anything, let's try the next sibling.
		      while (node.sibling === null) {
		        if (node['return'] === null || isHostParent(node['return'])) {
		          // If we pop out of the root or hit the parent the fiber we are the
		          // last sibling.
		          return null;
		        }
		        node = node['return'];
		      }
		      node.sibling['return'] = node['return'];
		      node = node.sibling;
		      while (node.tag !== HostComponent && node.tag !== HostText) {
		        // If it is not host node and, we might have a host node inside it.
		        // Try to search down until we find one.
		        if (node.effectTag & Placement) {
		          // If we don't have a child, try the siblings instead.
		          continue siblings;
		        }
		        // If we don't have a child, try the siblings instead.
		        // We also skip portals because they are not part of this host tree.
		        if (node.child === null || node.tag === HostPortal) {
		          continue siblings;
		        } else {
		          node.child['return'] = node;
		          node = node.child;
		        }
		      }
		      // Check if this host node is stable or about to be placed.
		      if (!(node.effectTag & Placement)) {
		        // Found it!
		        return node.stateNode;
		      }
		    }
		  }

		  function commitPlacement(finishedWork) {
		    // Recursively insert all host nodes into the parent.
		    var parentFiber = getHostParentFiber(finishedWork);
		    var parent = void 0;
		    var isContainer = void 0;
		    switch (parentFiber.tag) {
		      case HostComponent:
		        parent = parentFiber.stateNode;
		        isContainer = false;
		        break;
		      case HostRoot:
		        parent = parentFiber.stateNode.containerInfo;
		        isContainer = true;
		        break;
		      case HostPortal:
		        parent = parentFiber.stateNode.containerInfo;
		        isContainer = true;
		        break;
		      default:
		        invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
		    }
		    if (parentFiber.effectTag & ContentReset) {
		      // Reset the text content of the parent before doing any insertions
		      resetTextContent(parent);
		      // Clear ContentReset from the effect tag
		      parentFiber.effectTag &= ~ContentReset;
		    }

		    var before = getHostSibling(finishedWork);
		    // We only have the top Fiber that was inserted but we need recurse down its
		    // children to find all the terminal nodes.
		    var node = finishedWork;
		    while (true) {
		      if (node.tag === HostComponent || node.tag === HostText) {
		        if (before) {
		          if (isContainer) {
		            insertInContainerBefore(parent, node.stateNode, before);
		          } else {
		            insertBefore(parent, node.stateNode, before);
		          }
		        } else {
		          if (isContainer) {
		            appendChildToContainer(parent, node.stateNode);
		          } else {
		            appendChild(parent, node.stateNode);
		          }
		        }
		      } else if (node.tag === HostPortal) {
		        // If the insertion itself is a portal, then we don't want to traverse
		        // down its children. Instead, we'll get insertions from each child in
		        // the portal directly.
		      } else if (node.child !== null) {
		        node.child['return'] = node;
		        node = node.child;
		        continue;
		      }
		      if (node === finishedWork) {
		        return;
		      }
		      while (node.sibling === null) {
		        if (node['return'] === null || node['return'] === finishedWork) {
		          return;
		        }
		        node = node['return'];
		      }
		      node.sibling['return'] = node['return'];
		      node = node.sibling;
		    }
		  }

		  function unmountHostComponents(current) {
		    // We only have the top Fiber that was inserted but we need recurse down its
		    var node = current;

		    // Each iteration, currentParent is populated with node's host parent if not
		    // currentParentIsValid.
		    var currentParentIsValid = false;
		    var currentParent = void 0;
		    var currentParentIsContainer = void 0;

		    while (true) {
		      if (!currentParentIsValid) {
		        var parent = node['return'];
		        findParent: while (true) {
		          !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		          switch (parent.tag) {
		            case HostComponent:
		              currentParent = parent.stateNode;
		              currentParentIsContainer = false;
		              break findParent;
		            case HostRoot:
		              currentParent = parent.stateNode.containerInfo;
		              currentParentIsContainer = true;
		              break findParent;
		            case HostPortal:
		              currentParent = parent.stateNode.containerInfo;
		              currentParentIsContainer = true;
		              break findParent;
		          }
		          parent = parent['return'];
		        }
		        currentParentIsValid = true;
		      }

		      if (node.tag === HostComponent || node.tag === HostText) {
		        commitNestedUnmounts(node);
		        // After all the children have unmounted, it is now safe to remove the
		        // node from the tree.
		        if (currentParentIsContainer) {
		          removeChildFromContainer(currentParent, node.stateNode);
		        } else {
		          removeChild(currentParent, node.stateNode);
		        }
		        // Don't visit children because we already visited them.
		      } else if (node.tag === HostPortal) {
		        // When we go into a portal, it becomes the parent to remove from.
		        // We will reassign it back when we pop the portal on the way up.
		        currentParent = node.stateNode.containerInfo;
		        // Visit children because portals might contain host components.
		        if (node.child !== null) {
		          node.child['return'] = node;
		          node = node.child;
		          continue;
		        }
		      } else {
		        commitUnmount(node);
		        // Visit children because we may find more host components below.
		        if (node.child !== null) {
		          node.child['return'] = node;
		          node = node.child;
		          continue;
		        }
		      }
		      if (node === current) {
		        return;
		      }
		      while (node.sibling === null) {
		        if (node['return'] === null || node['return'] === current) {
		          return;
		        }
		        node = node['return'];
		        if (node.tag === HostPortal) {
		          // When we go out of the portal, we need to restore the parent.
		          // Since we don't keep a stack of them, we will search for it.
		          currentParentIsValid = false;
		        }
		      }
		      node.sibling['return'] = node['return'];
		      node = node.sibling;
		    }
		  }

		  function commitDeletion(current) {
		    // Recursively delete all host nodes from the parent.
		    // Detach refs and call componentWillUnmount() on the whole subtree.
		    unmountHostComponents(current);
		    detachFiber(current);
		  }

		  function commitWork(current, finishedWork) {
		    switch (finishedWork.tag) {
		      case ClassComponent:
		        {
		          return;
		        }
		      case HostComponent:
		        {
		          var instance = finishedWork.stateNode;
		          if (instance != null) {
		            // Commit the work prepared earlier.
		            var newProps = finishedWork.memoizedProps;
		            // For hydration we reuse the update path but we treat the oldProps
		            // as the newProps. The updatePayload will contain the real change in
		            // this case.
		            var oldProps = current !== null ? current.memoizedProps : newProps;
		            var type = finishedWork.type;
		            // TODO: Type the updateQueue to be specific to host components.
		            var updatePayload = finishedWork.updateQueue;
		            finishedWork.updateQueue = null;
		            if (updatePayload !== null) {
		              commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
		            }
		          }
		          return;
		        }
		      case HostText:
		        {
		          !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		          var textInstance = finishedWork.stateNode;
		          var newText = finishedWork.memoizedProps;
		          // For hydration we reuse the update path but we treat the oldProps
		          // as the newProps. The updatePayload will contain the real change in
		          // this case.
		          var oldText = current !== null ? current.memoizedProps : newText;
		          commitTextUpdate(textInstance, oldText, newText);
		          return;
		        }
		      case HostRoot:
		        {
		          return;
		        }
		      default:
		        {
		          invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
		        }
		    }
		  }

		  function commitResetTextContent(current) {
		    resetTextContent(current.stateNode);
		  }

		  if (enableMutatingReconciler) {
		    return {
		      commitResetTextContent: commitResetTextContent,
		      commitPlacement: commitPlacement,
		      commitDeletion: commitDeletion,
		      commitWork: commitWork,
		      commitLifeCycles: commitLifeCycles,
		      commitAttachRef: commitAttachRef,
		      commitDetachRef: commitDetachRef
		    };
		  } else {
		    invariant(false, 'Mutating reconciler is disabled.');
		  }
		};

		var NO_CONTEXT = {};

		var ReactFiberHostContext = function (config) {
		  var getChildHostContext = config.getChildHostContext,
		      getRootHostContext = config.getRootHostContext;


		  var contextStackCursor = createCursor(NO_CONTEXT);
		  var contextFiberStackCursor = createCursor(NO_CONTEXT);
		  var rootInstanceStackCursor = createCursor(NO_CONTEXT);

		  function requiredContext(c) {
		    !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		    return c;
		  }

		  function getRootHostContainer() {
		    var rootInstance = requiredContext(rootInstanceStackCursor.current);
		    return rootInstance;
		  }

		  function pushHostContainer(fiber, nextRootInstance) {
		    // Push current root instance onto the stack;
		    // This allows us to reset root when portals are popped.
		    push(rootInstanceStackCursor, nextRootInstance, fiber);

		    var nextRootContext = getRootHostContext(nextRootInstance);

		    // Track the context and the Fiber that provided it.
		    // This enables us to pop only Fibers that provide unique contexts.
		    push(contextFiberStackCursor, fiber, fiber);
		    push(contextStackCursor, nextRootContext, fiber);
		  }

		  function popHostContainer(fiber) {
		    pop(contextStackCursor, fiber);
		    pop(contextFiberStackCursor, fiber);
		    pop(rootInstanceStackCursor, fiber);
		  }

		  function getHostContext() {
		    var context = requiredContext(contextStackCursor.current);
		    return context;
		  }

		  function pushHostContext(fiber) {
		    var rootInstance = requiredContext(rootInstanceStackCursor.current);
		    var context = requiredContext(contextStackCursor.current);
		    var nextContext = getChildHostContext(context, fiber.type, rootInstance);

		    // Don't push this Fiber's context unless it's unique.
		    if (context === nextContext) {
		      return;
		    }

		    // Track the context and the Fiber that provided it.
		    // This enables us to pop only Fibers that provide unique contexts.
		    push(contextFiberStackCursor, fiber, fiber);
		    push(contextStackCursor, nextContext, fiber);
		  }

		  function popHostContext(fiber) {
		    // Do not pop unless this Fiber provided the current context.
		    // pushHostContext() only pushes Fibers that provide unique contexts.
		    if (contextFiberStackCursor.current !== fiber) {
		      return;
		    }

		    pop(contextStackCursor, fiber);
		    pop(contextFiberStackCursor, fiber);
		  }

		  function resetHostContainer() {
		    contextStackCursor.current = NO_CONTEXT;
		    rootInstanceStackCursor.current = NO_CONTEXT;
		  }

		  return {
		    getHostContext: getHostContext,
		    getRootHostContainer: getRootHostContainer,
		    popHostContainer: popHostContainer,
		    popHostContext: popHostContext,
		    pushHostContainer: pushHostContainer,
		    pushHostContext: pushHostContext,
		    resetHostContainer: resetHostContainer
		  };
		};

		var ReactFiberHydrationContext = function (config) {
		  var shouldSetTextContent = config.shouldSetTextContent,
		      hydration = config.hydration;

		  // If this doesn't have hydration mode.

		  if (!hydration) {
		    return {
		      enterHydrationState: function () {
		        return false;
		      },
		      resetHydrationState: function () {},
		      tryToClaimNextHydratableInstance: function () {},
		      prepareToHydrateHostInstance: function () {
		        invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
		      },
		      prepareToHydrateHostTextInstance: function () {
		        invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
		      },
		      popHydrationState: function (fiber) {
		        return false;
		      }
		    };
		  }

		  var canHydrateInstance = hydration.canHydrateInstance,
		      canHydrateTextInstance = hydration.canHydrateTextInstance,
		      getNextHydratableSibling = hydration.getNextHydratableSibling,
		      getFirstHydratableChild = hydration.getFirstHydratableChild,
		      hydrateInstance = hydration.hydrateInstance,
		      hydrateTextInstance = hydration.hydrateTextInstance,
		      didNotMatchHydratedContainerTextInstance = hydration.didNotMatchHydratedContainerTextInstance,
		      didNotMatchHydratedTextInstance = hydration.didNotMatchHydratedTextInstance,
		      didNotHydrateContainerInstance = hydration.didNotHydrateContainerInstance,
		      didNotHydrateInstance = hydration.didNotHydrateInstance,
		      didNotFindHydratableContainerInstance = hydration.didNotFindHydratableContainerInstance,
		      didNotFindHydratableContainerTextInstance = hydration.didNotFindHydratableContainerTextInstance,
		      didNotFindHydratableInstance = hydration.didNotFindHydratableInstance,
		      didNotFindHydratableTextInstance = hydration.didNotFindHydratableTextInstance;

		  // The deepest Fiber on the stack involved in a hydration context.
		  // This may have been an insertion or a hydration.

		  var hydrationParentFiber = null;
		  var nextHydratableInstance = null;
		  var isHydrating = false;

		  function enterHydrationState(fiber) {
		    var parentInstance = fiber.stateNode.containerInfo;
		    nextHydratableInstance = getFirstHydratableChild(parentInstance);
		    hydrationParentFiber = fiber;
		    isHydrating = true;
		    return true;
		  }

		  function deleteHydratableInstance(returnFiber, instance) {
		    {
		      switch (returnFiber.tag) {
		        case HostRoot:
		          didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
		          break;
		        case HostComponent:
		          didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
		          break;
		      }
		    }

		    var childToDelete = createFiberFromHostInstanceForDeletion();
		    childToDelete.stateNode = instance;
		    childToDelete['return'] = returnFiber;
		    childToDelete.effectTag = Deletion;

		    // This might seem like it belongs on progressedFirstDeletion. However,
		    // these children are not part of the reconciliation list of children.
		    // Even if we abort and rereconcile the children, that will try to hydrate
		    // again and the nodes are still in the host tree so these will be
		    // recreated.
		    if (returnFiber.lastEffect !== null) {
		      returnFiber.lastEffect.nextEffect = childToDelete;
		      returnFiber.lastEffect = childToDelete;
		    } else {
		      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
		    }
		  }

		  function insertNonHydratedInstance(returnFiber, fiber) {
		    fiber.effectTag |= Placement;
		    {
		      switch (returnFiber.tag) {
		        case HostRoot:
		          {
		            var parentContainer = returnFiber.stateNode.containerInfo;
		            switch (fiber.tag) {
		              case HostComponent:
		                var type = fiber.type;
		                var props = fiber.pendingProps;
		                didNotFindHydratableContainerInstance(parentContainer, type, props);
		                break;
		              case HostText:
		                var text = fiber.pendingProps;
		                didNotFindHydratableContainerTextInstance(parentContainer, text);
		                break;
		            }
		            break;
		          }
		        case HostComponent:
		          {
		            var parentType = returnFiber.type;
		            var parentProps = returnFiber.memoizedProps;
		            var parentInstance = returnFiber.stateNode;
		            switch (fiber.tag) {
		              case HostComponent:
		                var _type = fiber.type;
		                var _props = fiber.pendingProps;
		                didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
		                break;
		              case HostText:
		                var _text = fiber.pendingProps;
		                didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
		                break;
		            }
		            break;
		          }
		        default:
		          return;
		      }
		    }
		  }

		  function tryHydrate(fiber, nextInstance) {
		    switch (fiber.tag) {
		      case HostComponent:
		        {
		          var type = fiber.type;
		          var props = fiber.pendingProps;
		          var instance = canHydrateInstance(nextInstance, type, props);
		          if (instance !== null) {
		            fiber.stateNode = instance;
		            return true;
		          }
		          return false;
		        }
		      case HostText:
		        {
		          var text = fiber.pendingProps;
		          var textInstance = canHydrateTextInstance(nextInstance, text);
		          if (textInstance !== null) {
		            fiber.stateNode = textInstance;
		            return true;
		          }
		          return false;
		        }
		      default:
		        return false;
		    }
		  }

		  function tryToClaimNextHydratableInstance(fiber) {
		    if (!isHydrating) {
		      return;
		    }
		    var nextInstance = nextHydratableInstance;
		    if (!nextInstance) {
		      // Nothing to hydrate. Make it an insertion.
		      insertNonHydratedInstance(hydrationParentFiber, fiber);
		      isHydrating = false;
		      hydrationParentFiber = fiber;
		      return;
		    }
		    if (!tryHydrate(fiber, nextInstance)) {
		      // If we can't hydrate this instance let's try the next one.
		      // We use this as a heuristic. It's based on intuition and not data so it
		      // might be flawed or unnecessary.
		      nextInstance = getNextHydratableSibling(nextInstance);
		      if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
		        // Nothing to hydrate. Make it an insertion.
		        insertNonHydratedInstance(hydrationParentFiber, fiber);
		        isHydrating = false;
		        hydrationParentFiber = fiber;
		        return;
		      }
		      // We matched the next one, we'll now assume that the first one was
		      // superfluous and we'll delete it. Since we can't eagerly delete it
		      // we'll have to schedule a deletion. To do that, this node needs a dummy
		      // fiber associated with it.
		      deleteHydratableInstance(hydrationParentFiber, nextHydratableInstance);
		    }
		    hydrationParentFiber = fiber;
		    nextHydratableInstance = getFirstHydratableChild(nextInstance);
		  }

		  function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
		    var instance = fiber.stateNode;
		    var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
		    // TODO: Type this specific to this type of component.
		    fiber.updateQueue = updatePayload;
		    // If the update payload indicates that there is a change or if there
		    // is a new ref we mark this as an update.
		    if (updatePayload !== null) {
		      return true;
		    }
		    return false;
		  }

		  function prepareToHydrateHostTextInstance(fiber) {
		    var textInstance = fiber.stateNode;
		    var textContent = fiber.memoizedProps;
		    var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
		    {
		      if (shouldUpdate) {
		        // We assume that prepareToHydrateHostTextInstance is called in a context where the
		        // hydration parent is the parent host component of this host text.
		        var returnFiber = hydrationParentFiber;
		        if (returnFiber !== null) {
		          switch (returnFiber.tag) {
		            case HostRoot:
		              {
		                var parentContainer = returnFiber.stateNode.containerInfo;
		                didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
		                break;
		              }
		            case HostComponent:
		              {
		                var parentType = returnFiber.type;
		                var parentProps = returnFiber.memoizedProps;
		                var parentInstance = returnFiber.stateNode;
		                didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
		                break;
		              }
		          }
		        }
		      }
		    }
		    return shouldUpdate;
		  }

		  function popToNextHostParent(fiber) {
		    var parent = fiber['return'];
		    while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot) {
		      parent = parent['return'];
		    }
		    hydrationParentFiber = parent;
		  }

		  function popHydrationState(fiber) {
		    if (fiber !== hydrationParentFiber) {
		      // We're deeper than the current hydration context, inside an inserted
		      // tree.
		      return false;
		    }
		    if (!isHydrating) {
		      // If we're not currently hydrating but we're in a hydration context, then
		      // we were an insertion and now need to pop up reenter hydration of our
		      // siblings.
		      popToNextHostParent(fiber);
		      isHydrating = true;
		      return false;
		    }

		    var type = fiber.type;

		    // If we have any remaining hydratable nodes, we need to delete them now.
		    // We only do this deeper than head and body since they tend to have random
		    // other nodes in them. We also ignore components with pure text content in
		    // side of them.
		    // TODO: Better heuristic.
		    if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
		      var nextInstance = nextHydratableInstance;
		      while (nextInstance) {
		        deleteHydratableInstance(fiber, nextInstance);
		        nextInstance = getNextHydratableSibling(nextInstance);
		      }
		    }

		    popToNextHostParent(fiber);
		    nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
		    return true;
		  }

		  function resetHydrationState() {
		    hydrationParentFiber = null;
		    nextHydratableInstance = null;
		    isHydrating = false;
		  }

		  return {
		    enterHydrationState: enterHydrationState,
		    resetHydrationState: resetHydrationState,
		    tryToClaimNextHydratableInstance: tryToClaimNextHydratableInstance,
		    prepareToHydrateHostInstance: prepareToHydrateHostInstance,
		    prepareToHydrateHostTextInstance: prepareToHydrateHostTextInstance,
		    popHydrationState: popHydrationState
		  };
		};

		// This lets us hook into Fiber to debug what it's doing.
		// See https://github.com/facebook/react/pull/8033.
		// This is not part of the public API, not even for React DevTools.
		// You may only inject a debugTool if you work on React Fiber itself.
		var ReactFiberInstrumentation = {
		  debugTool: null
		};

		var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

		var defaultShowDialog = function (capturedError) {
		  return true;
		};

		var showDialog = defaultShowDialog;

		function logCapturedError(capturedError) {
		  var logError = showDialog(capturedError);

		  // Allow injected showDialog() to prevent default console.error logging.
		  // This enables renderers like ReactNative to better manage redbox behavior.
		  if (logError === false) {
		    return;
		  }

		  var error = capturedError.error;
		  var suppressLogging = error && error.suppressReactErrorLogging;
		  if (suppressLogging) {
		    return;
		  }

		  {
		    var componentName = capturedError.componentName,
		        componentStack = capturedError.componentStack,
		        errorBoundaryName = capturedError.errorBoundaryName,
		        errorBoundaryFound = capturedError.errorBoundaryFound,
		        willRetry = capturedError.willRetry;


		    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';

		    var errorBoundaryMessage = void 0;
		    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
		    if (errorBoundaryFound && errorBoundaryName) {
		      if (willRetry) {
		        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
		      } else {
		        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
		      }
		    } else {
		      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
		    }
		    var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);

		    // In development, we provide our own message with just the component stack.
		    // We don't include the original error message and JS stack because the browser
		    // has already printed it. Even if the application swallows the error, it is still
		    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
		    console.error(combinedMessage);
		  }
		}

		var invokeGuardedCallback$1 = ReactErrorUtils.invokeGuardedCallback;
		var hasCaughtError = ReactErrorUtils.hasCaughtError;
		var clearCaughtError = ReactErrorUtils.clearCaughtError;


		{
		  var didWarnAboutStateTransition = false;
		  var didWarnSetStateChildContext = false;
		  var didWarnStateUpdateForUnmountedComponent = {};

		  var warnAboutUpdateOnUnmounted = function (fiber) {
		    var componentName = getComponentName(fiber) || 'ReactClass';
		    if (didWarnStateUpdateForUnmountedComponent[componentName]) {
		      return;
		    }
		    warning(false, 'Can only update a mounted or mounting ' + 'component. This usually means you called setState, replaceState, ' + 'or forceUpdate on an unmounted component. This is a no-op.\n\nPlease ' + 'check the code for the %s component.', componentName);
		    didWarnStateUpdateForUnmountedComponent[componentName] = true;
		  };

		  var warnAboutInvalidUpdates = function (instance) {
		    switch (ReactDebugCurrentFiber.phase) {
		      case 'getChildContext':
		        if (didWarnSetStateChildContext) {
		          return;
		        }
		        warning(false, 'setState(...): Cannot call setState() inside getChildContext()');
		        didWarnSetStateChildContext = true;
		        break;
		      case 'render':
		        if (didWarnAboutStateTransition) {
		          return;
		        }
		        warning(false, 'Cannot update during an existing state transition (such as within ' + "`render` or another component's constructor). Render methods should " + 'be a pure function of props and state; constructor side-effects are ' + 'an anti-pattern, but can be moved to `componentWillMount`.');
		        didWarnAboutStateTransition = true;
		        break;
		    }
		  };
		}

		var ReactFiberScheduler = function (config) {
		  var hostContext = ReactFiberHostContext(config);
		  var hydrationContext = ReactFiberHydrationContext(config);
		  var popHostContainer = hostContext.popHostContainer,
		      popHostContext = hostContext.popHostContext,
		      resetHostContainer = hostContext.resetHostContainer;

		  var _ReactFiberBeginWork = ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleWork, computeExpirationForFiber),
		      beginWork = _ReactFiberBeginWork.beginWork,
		      beginFailedWork = _ReactFiberBeginWork.beginFailedWork;

		  var _ReactFiberCompleteWo = ReactFiberCompleteWork(config, hostContext, hydrationContext),
		      completeWork = _ReactFiberCompleteWo.completeWork;

		  var _ReactFiberCommitWork = ReactFiberCommitWork(config, captureError),
		      commitResetTextContent = _ReactFiberCommitWork.commitResetTextContent,
		      commitPlacement = _ReactFiberCommitWork.commitPlacement,
		      commitDeletion = _ReactFiberCommitWork.commitDeletion,
		      commitWork = _ReactFiberCommitWork.commitWork,
		      commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
		      commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
		      commitDetachRef = _ReactFiberCommitWork.commitDetachRef;

		  var now = config.now,
		      scheduleDeferredCallback = config.scheduleDeferredCallback,
		      cancelDeferredCallback = config.cancelDeferredCallback,
		      useSyncScheduling = config.useSyncScheduling,
		      prepareForCommit = config.prepareForCommit,
		      resetAfterCommit = config.resetAfterCommit;

		  // Represents the current time in ms.

		  var startTime = now();
		  var mostRecentCurrentTime = msToExpirationTime(0);

		  // Represents the expiration time that incoming updates should use. (If this
		  // is NoWork, use the default strategy: async updates in async mode, sync
		  // updates in sync mode.)
		  var expirationContext = NoWork;

		  var isWorking = false;

		  // The next work in progress fiber that we're currently working on.
		  var nextUnitOfWork = null;
		  var nextRoot = null;
		  // The time at which we're currently rendering work.
		  var nextRenderExpirationTime = NoWork;

		  // The next fiber with an effect that we're currently committing.
		  var nextEffect = null;

		  // Keep track of which fibers have captured an error that need to be handled.
		  // Work is removed from this collection after componentDidCatch is called.
		  var capturedErrors = null;
		  // Keep track of which fibers have failed during the current batch of work.
		  // This is a different set than capturedErrors, because it is not reset until
		  // the end of the batch. This is needed to propagate errors correctly if a
		  // subtree fails more than once.
		  var failedBoundaries = null;
		  // Error boundaries that captured an error during the current commit.
		  var commitPhaseBoundaries = null;
		  var firstUncaughtError = null;
		  var didFatal = false;

		  var isCommitting = false;
		  var isUnmounting = false;

		  // Used for performance tracking.
		  var interruptedBy = null;

		  function resetContextStack() {
		    // Reset the stack
		    reset$1();
		    // Reset the cursors
		    resetContext();
		    resetHostContainer();
		  }

		  function commitAllHostEffects() {
		    while (nextEffect !== null) {
		      {
		        ReactDebugCurrentFiber.setCurrentFiber(nextEffect);
		      }
		      recordEffect();

		      var effectTag = nextEffect.effectTag;
		      if (effectTag & ContentReset) {
		        commitResetTextContent(nextEffect);
		      }

		      if (effectTag & Ref) {
		        var current = nextEffect.alternate;
		        if (current !== null) {
		          commitDetachRef(current);
		        }
		      }

		      // The following switch statement is only concerned about placement,
		      // updates, and deletions. To avoid needing to add a case for every
		      // possible bitmap value, we remove the secondary effects from the
		      // effect tag and switch on that value.
		      var primaryEffectTag = effectTag & ~(Callback | Err | ContentReset | Ref | PerformedWork);
		      switch (primaryEffectTag) {
		        case Placement:
		          {
		            commitPlacement(nextEffect);
		            // Clear the "placement" from effect tag so that we know that this is inserted, before
		            // any life-cycles like componentDidMount gets called.
		            // TODO: findDOMNode doesn't rely on this any more but isMounted
		            // does and isMounted is deprecated anyway so we should be able
		            // to kill this.
		            nextEffect.effectTag &= ~Placement;
		            break;
		          }
		        case PlacementAndUpdate:
		          {
		            // Placement
		            commitPlacement(nextEffect);
		            // Clear the "placement" from effect tag so that we know that this is inserted, before
		            // any life-cycles like componentDidMount gets called.
		            nextEffect.effectTag &= ~Placement;

		            // Update
		            var _current = nextEffect.alternate;
		            commitWork(_current, nextEffect);
		            break;
		          }
		        case Update:
		          {
		            var _current2 = nextEffect.alternate;
		            commitWork(_current2, nextEffect);
		            break;
		          }
		        case Deletion:
		          {
		            isUnmounting = true;
		            commitDeletion(nextEffect);
		            isUnmounting = false;
		            break;
		          }
		      }
		      nextEffect = nextEffect.nextEffect;
		    }

		    {
		      ReactDebugCurrentFiber.resetCurrentFiber();
		    }
		  }

		  function commitAllLifeCycles() {
		    while (nextEffect !== null) {
		      var effectTag = nextEffect.effectTag;

		      if (effectTag & (Update | Callback)) {
		        recordEffect();
		        var current = nextEffect.alternate;
		        commitLifeCycles(current, nextEffect);
		      }

		      if (effectTag & Ref) {
		        recordEffect();
		        commitAttachRef(nextEffect);
		      }

		      if (effectTag & Err) {
		        recordEffect();
		        commitErrorHandling(nextEffect);
		      }

		      var next = nextEffect.nextEffect;
		      // Ensure that we clean these up so that we don't accidentally keep them.
		      // I'm not actually sure this matters because we can't reset firstEffect
		      // and lastEffect since they're on every node, not just the effectful
		      // ones. So we have to clean everything as we reuse nodes anyway.
		      nextEffect.nextEffect = null;
		      // Ensure that we reset the effectTag here so that we can rely on effect
		      // tags to reason about the current life-cycle.
		      nextEffect = next;
		    }
		  }

		  function commitRoot(finishedWork) {
		    // We keep track of this so that captureError can collect any boundaries
		    // that capture an error during the commit phase. The reason these aren't
		    // local to this function is because errors that occur during cWU are
		    // captured elsewhere, to prevent the unmount from being interrupted.
		    isWorking = true;
		    isCommitting = true;
		    startCommitTimer();

		    var root = finishedWork.stateNode;
		    !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		    root.isReadyForCommit = false;

		    // Reset this to null before calling lifecycles
		    ReactCurrentOwner.current = null;

		    var firstEffect = void 0;
		    if (finishedWork.effectTag > PerformedWork) {
		      // A fiber's effect list consists only of its children, not itself. So if
		      // the root has an effect, we need to add it to the end of the list. The
		      // resulting list is the set that would belong to the root's parent, if
		      // it had one; that is, all the effects in the tree including the root.
		      if (finishedWork.lastEffect !== null) {
		        finishedWork.lastEffect.nextEffect = finishedWork;
		        firstEffect = finishedWork.firstEffect;
		      } else {
		        firstEffect = finishedWork;
		      }
		    } else {
		      // There is no effect on the root.
		      firstEffect = finishedWork.firstEffect;
		    }

		    prepareForCommit();

		    // Commit all the side-effects within a tree. We'll do this in two passes.
		    // The first pass performs all the host insertions, updates, deletions and
		    // ref unmounts.
		    nextEffect = firstEffect;
		    startCommitHostEffectsTimer();
		    while (nextEffect !== null) {
		      var didError = false;
		      var _error = void 0;
		      {
		        invokeGuardedCallback$1(null, commitAllHostEffects, null);
		        if (hasCaughtError()) {
		          didError = true;
		          _error = clearCaughtError();
		        }
		      }
		      if (didError) {
		        !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		        captureError(nextEffect, _error);
		        // Clean-up
		        if (nextEffect !== null) {
		          nextEffect = nextEffect.nextEffect;
		        }
		      }
		    }
		    stopCommitHostEffectsTimer();

		    resetAfterCommit();

		    // The work-in-progress tree is now the current tree. This must come after
		    // the first pass of the commit phase, so that the previous tree is still
		    // current during componentWillUnmount, but before the second pass, so that
		    // the finished work is current during componentDidMount/Update.
		    root.current = finishedWork;

		    // In the second pass we'll perform all life-cycles and ref callbacks.
		    // Life-cycles happen as a separate pass so that all placements, updates,
		    // and deletions in the entire tree have already been invoked.
		    // This pass also triggers any renderer-specific initial effects.
		    nextEffect = firstEffect;
		    startCommitLifeCyclesTimer();
		    while (nextEffect !== null) {
		      var _didError = false;
		      var _error2 = void 0;
		      {
		        invokeGuardedCallback$1(null, commitAllLifeCycles, null);
		        if (hasCaughtError()) {
		          _didError = true;
		          _error2 = clearCaughtError();
		        }
		      }
		      if (_didError) {
		        !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		        captureError(nextEffect, _error2);
		        if (nextEffect !== null) {
		          nextEffect = nextEffect.nextEffect;
		        }
		      }
		    }

		    isCommitting = false;
		    isWorking = false;
		    stopCommitLifeCyclesTimer();
		    stopCommitTimer();
		    if (typeof onCommitRoot === 'function') {
		      onCommitRoot(finishedWork.stateNode);
		    }
		    if (true && ReactFiberInstrumentation_1.debugTool) {
		      ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
		    }

		    // If we caught any errors during this commit, schedule their boundaries
		    // to update.
		    if (commitPhaseBoundaries) {
		      commitPhaseBoundaries.forEach(scheduleErrorRecovery);
		      commitPhaseBoundaries = null;
		    }

		    if (firstUncaughtError !== null) {
		      var _error3 = firstUncaughtError;
		      firstUncaughtError = null;
		      onUncaughtError(_error3);
		    }

		    var remainingTime = root.current.expirationTime;

		    if (remainingTime === NoWork) {
		      capturedErrors = null;
		      failedBoundaries = null;
		    }

		    return remainingTime;
		  }

		  function resetExpirationTime(workInProgress, renderTime) {
		    if (renderTime !== Never && workInProgress.expirationTime === Never) {
		      // The children of this component are hidden. Don't bubble their
		      // expiration times.
		      return;
		    }

		    // Check for pending updates.
		    var newExpirationTime = getUpdateExpirationTime(workInProgress);

		    // TODO: Calls need to visit stateNode

		    // Bubble up the earliest expiration time.
		    var child = workInProgress.child;
		    while (child !== null) {
		      if (child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > child.expirationTime)) {
		        newExpirationTime = child.expirationTime;
		      }
		      child = child.sibling;
		    }
		    workInProgress.expirationTime = newExpirationTime;
		  }

		  function completeUnitOfWork(workInProgress) {
		    while (true) {
		      // The current, flushed, state of this fiber is the alternate.
		      // Ideally nothing should rely on this, but relying on it here
		      // means that we don't need an additional field on the work in
		      // progress.
		      var current = workInProgress.alternate;
		      {
		        ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
		      }
		      var next = completeWork(current, workInProgress, nextRenderExpirationTime);
		      {
		        ReactDebugCurrentFiber.resetCurrentFiber();
		      }

		      var returnFiber = workInProgress['return'];
		      var siblingFiber = workInProgress.sibling;

		      resetExpirationTime(workInProgress, nextRenderExpirationTime);

		      if (next !== null) {
		        stopWorkTimer(workInProgress);
		        if (true && ReactFiberInstrumentation_1.debugTool) {
		          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
		        }
		        // If completing this work spawned new work, do that next. We'll come
		        // back here again.
		        return next;
		      }

		      if (returnFiber !== null) {
		        // Append all the effects of the subtree and this fiber onto the effect
		        // list of the parent. The completion order of the children affects the
		        // side-effect order.
		        if (returnFiber.firstEffect === null) {
		          returnFiber.firstEffect = workInProgress.firstEffect;
		        }
		        if (workInProgress.lastEffect !== null) {
		          if (returnFiber.lastEffect !== null) {
		            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
		          }
		          returnFiber.lastEffect = workInProgress.lastEffect;
		        }

		        // If this fiber had side-effects, we append it AFTER the children's
		        // side-effects. We can perform certain side-effects earlier if
		        // needed, by doing multiple passes over the effect list. We don't want
		        // to schedule our own side-effect on our own list because if end up
		        // reusing children we'll schedule this effect onto itself since we're
		        // at the end.
		        var effectTag = workInProgress.effectTag;
		        // Skip both NoWork and PerformedWork tags when creating the effect list.
		        // PerformedWork effect is read by React DevTools but shouldn't be committed.
		        if (effectTag > PerformedWork) {
		          if (returnFiber.lastEffect !== null) {
		            returnFiber.lastEffect.nextEffect = workInProgress;
		          } else {
		            returnFiber.firstEffect = workInProgress;
		          }
		          returnFiber.lastEffect = workInProgress;
		        }
		      }

		      stopWorkTimer(workInProgress);
		      if (true && ReactFiberInstrumentation_1.debugTool) {
		        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
		      }

		      if (siblingFiber !== null) {
		        // If there is more work to do in this returnFiber, do that next.
		        return siblingFiber;
		      } else if (returnFiber !== null) {
		        // If there's no more work in this returnFiber. Complete the returnFiber.
		        workInProgress = returnFiber;
		        continue;
		      } else {
		        // We've reached the root.
		        var root = workInProgress.stateNode;
		        root.isReadyForCommit = true;
		        return null;
		      }
		    }

		    // Without this explicit null return Flow complains of invalid return type
		    // TODO Remove the above while(true) loop
		    // eslint-disable-next-line no-unreachable
		    return null;
		  }

		  function performUnitOfWork(workInProgress) {
		    // The current, flushed, state of this fiber is the alternate.
		    // Ideally nothing should rely on this, but relying on it here
		    // means that we don't need an additional field on the work in
		    // progress.
		    var current = workInProgress.alternate;

		    // See if beginning this work spawns more work.
		    startWorkTimer(workInProgress);
		    {
		      ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
		    }

		    var next = beginWork(current, workInProgress, nextRenderExpirationTime);
		    {
		      ReactDebugCurrentFiber.resetCurrentFiber();
		    }
		    if (true && ReactFiberInstrumentation_1.debugTool) {
		      ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
		    }

		    if (next === null) {
		      // If this doesn't spawn new work, complete the current work.
		      next = completeUnitOfWork(workInProgress);
		    }

		    ReactCurrentOwner.current = null;

		    return next;
		  }

		  function performFailedUnitOfWork(workInProgress) {
		    // The current, flushed, state of this fiber is the alternate.
		    // Ideally nothing should rely on this, but relying on it here
		    // means that we don't need an additional field on the work in
		    // progress.
		    var current = workInProgress.alternate;

		    // See if beginning this work spawns more work.
		    startWorkTimer(workInProgress);
		    {
		      ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
		    }
		    var next = beginFailedWork(current, workInProgress, nextRenderExpirationTime);
		    {
		      ReactDebugCurrentFiber.resetCurrentFiber();
		    }
		    if (true && ReactFiberInstrumentation_1.debugTool) {
		      ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
		    }

		    if (next === null) {
		      // If this doesn't spawn new work, complete the current work.
		      next = completeUnitOfWork(workInProgress);
		    }

		    ReactCurrentOwner.current = null;

		    return next;
		  }

		  function workLoop(expirationTime) {
		    if (capturedErrors !== null) {
		      // If there are unhandled errors, switch to the slow work loop.
		      // TODO: How to avoid this check in the fast path? Maybe the renderer
		      // could keep track of which roots have unhandled errors and call a
		      // forked version of renderRoot.
		      slowWorkLoopThatChecksForFailedWork(expirationTime);
		      return;
		    }
		    if (nextRenderExpirationTime === NoWork || nextRenderExpirationTime > expirationTime) {
		      return;
		    }

		    if (nextRenderExpirationTime <= mostRecentCurrentTime) {
		      // Flush all expired work.
		      while (nextUnitOfWork !== null) {
		        nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
		      }
		    } else {
		      // Flush asynchronous work until the deadline runs out of time.
		      while (nextUnitOfWork !== null && !shouldYield()) {
		        nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
		      }
		    }
		  }

		  function slowWorkLoopThatChecksForFailedWork(expirationTime) {
		    if (nextRenderExpirationTime === NoWork || nextRenderExpirationTime > expirationTime) {
		      return;
		    }

		    if (nextRenderExpirationTime <= mostRecentCurrentTime) {
		      // Flush all expired work.
		      while (nextUnitOfWork !== null) {
		        if (hasCapturedError(nextUnitOfWork)) {
		          // Use a forked version of performUnitOfWork
		          nextUnitOfWork = performFailedUnitOfWork(nextUnitOfWork);
		        } else {
		          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
		        }
		      }
		    } else {
		      // Flush asynchronous work until the deadline runs out of time.
		      while (nextUnitOfWork !== null && !shouldYield()) {
		        if (hasCapturedError(nextUnitOfWork)) {
		          // Use a forked version of performUnitOfWork
		          nextUnitOfWork = performFailedUnitOfWork(nextUnitOfWork);
		        } else {
		          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
		        }
		      }
		    }
		  }

		  function renderRootCatchBlock(root, failedWork, boundary, expirationTime) {
		    // We're going to restart the error boundary that captured the error.
		    // Conceptually, we're unwinding the stack. We need to unwind the
		    // context stack, too.
		    unwindContexts(failedWork, boundary);

		    // Restart the error boundary using a forked version of
		    // performUnitOfWork that deletes the boundary's children. The entire
		    // failed subree will be unmounted. During the commit phase, a special
		    // lifecycle method is called on the error boundary, which triggers
		    // a re-render.
		    nextUnitOfWork = performFailedUnitOfWork(boundary);

		    // Continue working.
		    workLoop(expirationTime);
		  }

		  function renderRoot(root, expirationTime) {
		    !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		    isWorking = true;

		    // We're about to mutate the work-in-progress tree. If the root was pending
		    // commit, it no longer is: we'll need to complete it again.
		    root.isReadyForCommit = false;

		    // Check if we're starting from a fresh stack, or if we're resuming from
		    // previously yielded work.
		    if (root !== nextRoot || expirationTime !== nextRenderExpirationTime || nextUnitOfWork === null) {
		      // Reset the stack and start working from the root.
		      resetContextStack();
		      nextRoot = root;
		      nextRenderExpirationTime = expirationTime;
		      nextUnitOfWork = createWorkInProgress(nextRoot.current, null, expirationTime);
		    }

		    startWorkLoopTimer(nextUnitOfWork);

		    var didError = false;
		    var error = null;
		    {
		      invokeGuardedCallback$1(null, workLoop, null, expirationTime);
		      if (hasCaughtError()) {
		        didError = true;
		        error = clearCaughtError();
		      }
		    }

		    // An error was thrown during the render phase.
		    while (didError) {
		      if (didFatal) {
		        // This was a fatal error. Don't attempt to recover from it.
		        firstUncaughtError = error;
		        break;
		      }

		      var failedWork = nextUnitOfWork;
		      if (failedWork === null) {
		        // An error was thrown but there's no current unit of work. This can
		        // happen during the commit phase if there's a bug in the renderer.
		        didFatal = true;
		        continue;
		      }

		      // "Capture" the error by finding the nearest boundary. If there is no
		      // error boundary, we use the root.
		      var boundary = captureError(failedWork, error);
		      !(boundary !== null) ? invariant(false, 'Should have found an error boundary. This error is likely caused by a bug in React. Please file an issue.') : void 0;

		      if (didFatal) {
		        // The error we just captured was a fatal error. This happens
		        // when the error propagates to the root more than once.
		        continue;
		      }

		      didError = false;
		      error = null;
		      {
		        invokeGuardedCallback$1(null, renderRootCatchBlock, null, root, failedWork, boundary, expirationTime);
		        if (hasCaughtError()) {
		          didError = true;
		          error = clearCaughtError();
		          continue;
		        }
		      }
		      // We're finished working. Exit the error loop.
		      break;
		    }

		    var uncaughtError = firstUncaughtError;

		    // We're done performing work. Time to clean up.
		    stopWorkLoopTimer(interruptedBy);
		    interruptedBy = null;
		    isWorking = false;
		    didFatal = false;
		    firstUncaughtError = null;

		    if (uncaughtError !== null) {
		      onUncaughtError(uncaughtError);
		    }

		    return root.isReadyForCommit ? root.current.alternate : null;
		  }

		  // Returns the boundary that captured the error, or null if the error is ignored
		  function captureError(failedWork, error) {
		    // It is no longer valid because we exited the user code.
		    ReactCurrentOwner.current = null;
		    {
		      ReactDebugCurrentFiber.resetCurrentFiber();
		    }

		    // Search for the nearest error boundary.
		    var boundary = null;

		    // Passed to logCapturedError()
		    var errorBoundaryFound = false;
		    var willRetry = false;
		    var errorBoundaryName = null;

		    // Host containers are a special case. If the failed work itself is a host
		    // container, then it acts as its own boundary. In all other cases, we
		    // ignore the work itself and only search through the parents.
		    if (failedWork.tag === HostRoot) {
		      boundary = failedWork;

		      if (isFailedBoundary(failedWork)) {
		        // If this root already failed, there must have been an error when
		        // attempting to unmount it. This is a worst-case scenario and
		        // should only be possible if there's a bug in the renderer.
		        didFatal = true;
		      }
		    } else {
		      var node = failedWork['return'];
		      while (node !== null && boundary === null) {
		        if (node.tag === ClassComponent) {
		          var instance = node.stateNode;
		          if (typeof instance.componentDidCatch === 'function') {
		            errorBoundaryFound = true;
		            errorBoundaryName = getComponentName(node);

		            // Found an error boundary!
		            boundary = node;
		            willRetry = true;
		          }
		        } else if (node.tag === HostRoot) {
		          // Treat the root like a no-op error boundary
		          boundary = node;
		        }

		        if (isFailedBoundary(node)) {
		          // This boundary is already in a failed state.

		          // If we're currently unmounting, that means this error was
		          // thrown while unmounting a failed subtree. We should ignore
		          // the error.
		          if (isUnmounting) {
		            return null;
		          }

		          // If we're in the commit phase, we should check to see if
		          // this boundary already captured an error during this commit.
		          // This case exists because multiple errors can be thrown during
		          // a single commit without interruption.
		          if (commitPhaseBoundaries !== null && (commitPhaseBoundaries.has(node) || node.alternate !== null && commitPhaseBoundaries.has(node.alternate))) {
		            // If so, we should ignore this error.
		            return null;
		          }

		          // The error should propagate to the next boundary -— we keep looking.
		          boundary = null;
		          willRetry = false;
		        }

		        node = node['return'];
		      }
		    }

		    if (boundary !== null) {
		      // Add to the collection of failed boundaries. This lets us know that
		      // subsequent errors in this subtree should propagate to the next boundary.
		      if (failedBoundaries === null) {
		        failedBoundaries = new Set();
		      }
		      failedBoundaries.add(boundary);

		      // This method is unsafe outside of the begin and complete phases.
		      // We might be in the commit phase when an error is captured.
		      // The risk is that the return path from this Fiber may not be accurate.
		      // That risk is acceptable given the benefit of providing users more context.
		      var _componentStack = getStackAddendumByWorkInProgressFiber(failedWork);
		      var _componentName = getComponentName(failedWork);

		      // Add to the collection of captured errors. This is stored as a global
		      // map of errors and their component stack location keyed by the boundaries
		      // that capture them. We mostly use this Map as a Set; it's a Map only to
		      // avoid adding a field to Fiber to store the error.
		      if (capturedErrors === null) {
		        capturedErrors = new Map();
		      }

		      var capturedError = {
		        componentName: _componentName,
		        componentStack: _componentStack,
		        error: error,
		        errorBoundary: errorBoundaryFound ? boundary.stateNode : null,
		        errorBoundaryFound: errorBoundaryFound,
		        errorBoundaryName: errorBoundaryName,
		        willRetry: willRetry
		      };

		      capturedErrors.set(boundary, capturedError);

		      try {
		        logCapturedError(capturedError);
		      } catch (e) {
		        // Prevent cycle if logCapturedError() throws.
		        // A cycle may still occur if logCapturedError renders a component that throws.
		        var suppressLogging = e && e.suppressReactErrorLogging;
		        if (!suppressLogging) {
		          console.error(e);
		        }
		      }

		      // If we're in the commit phase, defer scheduling an update on the
		      // boundary until after the commit is complete
		      if (isCommitting) {
		        if (commitPhaseBoundaries === null) {
		          commitPhaseBoundaries = new Set();
		        }
		        commitPhaseBoundaries.add(boundary);
		      } else {
		        // Otherwise, schedule an update now.
		        // TODO: Is this actually necessary during the render phase? Is it
		        // possible to unwind and continue rendering at the same priority,
		        // without corrupting internal state?
		        scheduleErrorRecovery(boundary);
		      }
		      return boundary;
		    } else if (firstUncaughtError === null) {
		      // If no boundary is found, we'll need to throw the error
		      firstUncaughtError = error;
		    }
		    return null;
		  }

		  function hasCapturedError(fiber) {
		    // TODO: capturedErrors should store the boundary instance, to avoid needing
		    // to check the alternate.
		    return capturedErrors !== null && (capturedErrors.has(fiber) || fiber.alternate !== null && capturedErrors.has(fiber.alternate));
		  }

		  function isFailedBoundary(fiber) {
		    // TODO: failedBoundaries should store the boundary instance, to avoid
		    // needing to check the alternate.
		    return failedBoundaries !== null && (failedBoundaries.has(fiber) || fiber.alternate !== null && failedBoundaries.has(fiber.alternate));
		  }

		  function commitErrorHandling(effectfulFiber) {
		    var capturedError = void 0;
		    if (capturedErrors !== null) {
		      capturedError = capturedErrors.get(effectfulFiber);
		      capturedErrors['delete'](effectfulFiber);
		      if (capturedError == null) {
		        if (effectfulFiber.alternate !== null) {
		          effectfulFiber = effectfulFiber.alternate;
		          capturedError = capturedErrors.get(effectfulFiber);
		          capturedErrors['delete'](effectfulFiber);
		        }
		      }
		    }

		    !(capturedError != null) ? invariant(false, 'No error for given unit of work. This error is likely caused by a bug in React. Please file an issue.') : void 0;

		    switch (effectfulFiber.tag) {
		      case ClassComponent:
		        var instance = effectfulFiber.stateNode;

		        var info = {
		          componentStack: capturedError.componentStack
		        };

		        // Allow the boundary to handle the error, usually by scheduling
		        // an update to itself
		        instance.componentDidCatch(capturedError.error, info);
		        return;
		      case HostRoot:
		        if (firstUncaughtError === null) {
		          firstUncaughtError = capturedError.error;
		        }
		        return;
		      default:
		        invariant(false, 'Invalid type of work. This error is likely caused by a bug in React. Please file an issue.');
		    }
		  }

		  function unwindContexts(from, to) {
		    var node = from;
		    while (node !== null) {
		      switch (node.tag) {
		        case ClassComponent:
		          popContextProvider(node);
		          break;
		        case HostComponent:
		          popHostContext(node);
		          break;
		        case HostRoot:
		          popHostContainer(node);
		          break;
		        case HostPortal:
		          popHostContainer(node);
		          break;
		      }
		      if (node === to || node.alternate === to) {
		        stopFailedWorkTimer(node);
		        break;
		      } else {
		        stopWorkTimer(node);
		      }
		      node = node['return'];
		    }
		  }

		  function computeAsyncExpiration() {
		    // Given the current clock time, returns an expiration time. We use rounding
		    // to batch like updates together.
		    // Should complete within ~1000ms. 1200ms max.
		    var currentTime = recalculateCurrentTime();
		    var expirationMs = 1000;
		    var bucketSizeMs = 200;
		    return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
		  }

		  function computeExpirationForFiber(fiber) {
		    var expirationTime = void 0;
		    if (expirationContext !== NoWork) {
		      // An explicit expiration context was set;
		      expirationTime = expirationContext;
		    } else if (isWorking) {
		      if (isCommitting) {
		        // Updates that occur during the commit phase should have sync priority
		        // by default.
		        expirationTime = Sync;
		      } else {
		        // Updates during the render phase should expire at the same time as
		        // the work that is being rendered.
		        expirationTime = nextRenderExpirationTime;
		      }
		    } else {
		      // No explicit expiration context was set, and we're not currently
		      // performing work. Calculate a new expiration time.
		      if (useSyncScheduling && !(fiber.internalContextTag & AsyncUpdates)) {
		        // This is a sync update
		        expirationTime = Sync;
		      } else {
		        // This is an async update
		        expirationTime = computeAsyncExpiration();
		      }
		    }
		    return expirationTime;
		  }

		  function scheduleWork(fiber, expirationTime) {
		    return scheduleWorkImpl(fiber, expirationTime, false);
		  }

		  function checkRootNeedsClearing(root, fiber, expirationTime) {
		    if (!isWorking && root === nextRoot && expirationTime < nextRenderExpirationTime) {
		      // Restart the root from the top.
		      if (nextUnitOfWork !== null) {
		        // This is an interruption. (Used for performance tracking.)
		        interruptedBy = fiber;
		      }
		      nextRoot = null;
		      nextUnitOfWork = null;
		      nextRenderExpirationTime = NoWork;
		    }
		  }

		  function scheduleWorkImpl(fiber, expirationTime, isErrorRecovery) {
		    recordScheduleUpdate();

		    {
		      if (!isErrorRecovery && fiber.tag === ClassComponent) {
		        var instance = fiber.stateNode;
		        warnAboutInvalidUpdates(instance);
		      }
		    }

		    var node = fiber;
		    while (node !== null) {
		      // Walk the parent path to the root and update each node's
		      // expiration time.
		      if (node.expirationTime === NoWork || node.expirationTime > expirationTime) {
		        node.expirationTime = expirationTime;
		      }
		      if (node.alternate !== null) {
		        if (node.alternate.expirationTime === NoWork || node.alternate.expirationTime > expirationTime) {
		          node.alternate.expirationTime = expirationTime;
		        }
		      }
		      if (node['return'] === null) {
		        if (node.tag === HostRoot) {
		          var root = node.stateNode;

		          checkRootNeedsClearing(root, fiber, expirationTime);
		          requestWork(root, expirationTime);
		          checkRootNeedsClearing(root, fiber, expirationTime);
		        } else {
		          {
		            if (!isErrorRecovery && fiber.tag === ClassComponent) {
		              warnAboutUpdateOnUnmounted(fiber);
		            }
		          }
		          return;
		        }
		      }
		      node = node['return'];
		    }
		  }

		  function scheduleErrorRecovery(fiber) {
		    scheduleWorkImpl(fiber, Sync, true);
		  }

		  function recalculateCurrentTime() {
		    // Subtract initial time so it fits inside 32bits
		    var ms = now() - startTime;
		    mostRecentCurrentTime = msToExpirationTime(ms);
		    return mostRecentCurrentTime;
		  }

		  function deferredUpdates(fn) {
		    var previousExpirationContext = expirationContext;
		    expirationContext = computeAsyncExpiration();
		    try {
		      return fn();
		    } finally {
		      expirationContext = previousExpirationContext;
		    }
		  }

		  function syncUpdates(fn) {
		    var previousExpirationContext = expirationContext;
		    expirationContext = Sync;
		    try {
		      return fn();
		    } finally {
		      expirationContext = previousExpirationContext;
		    }
		  }

		  // TODO: Everything below this is written as if it has been lifted to the
		  // renderers. I'll do this in a follow-up.

		  // Linked-list of roots
		  var firstScheduledRoot = null;
		  var lastScheduledRoot = null;

		  var callbackExpirationTime = NoWork;
		  var callbackID = -1;
		  var isRendering = false;
		  var nextFlushedRoot = null;
		  var nextFlushedExpirationTime = NoWork;
		  var deadlineDidExpire = false;
		  var hasUnhandledError = false;
		  var unhandledError = null;
		  var deadline = null;

		  var isBatchingUpdates = false;
		  var isUnbatchingUpdates = false;

		  // Use these to prevent an infinite loop of nested updates
		  var NESTED_UPDATE_LIMIT = 1000;
		  var nestedUpdateCount = 0;

		  var timeHeuristicForUnitOfWork = 1;

		  function scheduleCallbackWithExpiration(expirationTime) {
		    if (callbackExpirationTime !== NoWork) {
		      // A callback is already scheduled. Check its expiration time (timeout).
		      if (expirationTime > callbackExpirationTime) {
		        // Existing callback has sufficient timeout. Exit.
		        return;
		      } else {
		        // Existing callback has insufficient timeout. Cancel and schedule a
		        // new one.
		        cancelDeferredCallback(callbackID);
		      }
		      // The request callback timer is already running. Don't start a new one.
		    } else {
		      startRequestCallbackTimer();
		    }

		    // Compute a timeout for the given expiration time.
		    var currentMs = now() - startTime;
		    var expirationMs = expirationTimeToMs(expirationTime);
		    var timeout = expirationMs - currentMs;

		    callbackExpirationTime = expirationTime;
		    callbackID = scheduleDeferredCallback(performAsyncWork, { timeout: timeout });
		  }

		  // requestWork is called by the scheduler whenever a root receives an update.
		  // It's up to the renderer to call renderRoot at some point in the future.
		  function requestWork(root, expirationTime) {
		    if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
		      invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
		    }

		    // Add the root to the schedule.
		    // Check if this root is already part of the schedule.
		    if (root.nextScheduledRoot === null) {
		      // This root is not already scheduled. Add it.
		      root.remainingExpirationTime = expirationTime;
		      if (lastScheduledRoot === null) {
		        firstScheduledRoot = lastScheduledRoot = root;
		        root.nextScheduledRoot = root;
		      } else {
		        lastScheduledRoot.nextScheduledRoot = root;
		        lastScheduledRoot = root;
		        lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
		      }
		    } else {
		      // This root is already scheduled, but its priority may have increased.
		      var remainingExpirationTime = root.remainingExpirationTime;
		      if (remainingExpirationTime === NoWork || expirationTime < remainingExpirationTime) {
		        // Update the priority.
		        root.remainingExpirationTime = expirationTime;
		      }
		    }

		    if (isRendering) {
		      // Prevent reentrancy. Remaining work will be scheduled at the end of
		      // the currently rendering batch.
		      return;
		    }

		    if (isBatchingUpdates) {
		      // Flush work at the end of the batch.
		      if (isUnbatchingUpdates) {
		        // ...unless we're inside unbatchedUpdates, in which case we should
		        // flush it now.
		        nextFlushedRoot = root;
		        nextFlushedExpirationTime = Sync;
		        performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime);
		      }
		      return;
		    }

		    // TODO: Get rid of Sync and use current time?
		    if (expirationTime === Sync) {
		      performWork(Sync, null);
		    } else {
		      scheduleCallbackWithExpiration(expirationTime);
		    }
		  }

		  function findHighestPriorityRoot() {
		    var highestPriorityWork = NoWork;
		    var highestPriorityRoot = null;

		    if (lastScheduledRoot !== null) {
		      var previousScheduledRoot = lastScheduledRoot;
		      var root = firstScheduledRoot;
		      while (root !== null) {
		        var remainingExpirationTime = root.remainingExpirationTime;
		        if (remainingExpirationTime === NoWork) {
		          // This root no longer has work. Remove it from the scheduler.

		          // TODO: This check is redudant, but Flow is confused by the branch
		          // below where we set lastScheduledRoot to null, even though we break
		          // from the loop right after.
		          !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		          if (root === root.nextScheduledRoot) {
		            // This is the only root in the list.
		            root.nextScheduledRoot = null;
		            firstScheduledRoot = lastScheduledRoot = null;
		            break;
		          } else if (root === firstScheduledRoot) {
		            // This is the first root in the list.
		            var next = root.nextScheduledRoot;
		            firstScheduledRoot = next;
		            lastScheduledRoot.nextScheduledRoot = next;
		            root.nextScheduledRoot = null;
		          } else if (root === lastScheduledRoot) {
		            // This is the last root in the list.
		            lastScheduledRoot = previousScheduledRoot;
		            lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
		            root.nextScheduledRoot = null;
		            break;
		          } else {
		            previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;
		            root.nextScheduledRoot = null;
		          }
		          root = previousScheduledRoot.nextScheduledRoot;
		        } else {
		          if (highestPriorityWork === NoWork || remainingExpirationTime < highestPriorityWork) {
		            // Update the priority, if it's higher
		            highestPriorityWork = remainingExpirationTime;
		            highestPriorityRoot = root;
		          }
		          if (root === lastScheduledRoot) {
		            break;
		          }
		          previousScheduledRoot = root;
		          root = root.nextScheduledRoot;
		        }
		      }
		    }

		    // If the next root is the same as the previous root, this is a nested
		    // update. To prevent an infinite loop, increment the nested update count.
		    var previousFlushedRoot = nextFlushedRoot;
		    if (previousFlushedRoot !== null && previousFlushedRoot === highestPriorityRoot) {
		      nestedUpdateCount++;
		    } else {
		      // Reset whenever we switch roots.
		      nestedUpdateCount = 0;
		    }
		    nextFlushedRoot = highestPriorityRoot;
		    nextFlushedExpirationTime = highestPriorityWork;
		  }

		  function performAsyncWork(dl) {
		    performWork(NoWork, dl);
		  }

		  function performWork(minExpirationTime, dl) {
		    deadline = dl;

		    // Keep working on roots until there's no more work, or until the we reach
		    // the deadline.
		    findHighestPriorityRoot();

		    if (enableUserTimingAPI && deadline !== null) {
		      var didExpire = nextFlushedExpirationTime < recalculateCurrentTime();
		      stopRequestCallbackTimer(didExpire);
		    }

		    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || nextFlushedExpirationTime <= minExpirationTime) && !deadlineDidExpire) {
		      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime);
		      // Find the next highest priority work.
		      findHighestPriorityRoot();
		    }

		    // We're done flushing work. Either we ran out of time in this callback,
		    // or there's no more work left with sufficient priority.

		    // If we're inside a callback, set this to false since we just completed it.
		    if (deadline !== null) {
		      callbackExpirationTime = NoWork;
		      callbackID = -1;
		    }
		    // If there's work left over, schedule a new callback.
		    if (nextFlushedExpirationTime !== NoWork) {
		      scheduleCallbackWithExpiration(nextFlushedExpirationTime);
		    }

		    // Clean-up.
		    deadline = null;
		    deadlineDidExpire = false;
		    nestedUpdateCount = 0;

		    if (hasUnhandledError) {
		      var _error4 = unhandledError;
		      unhandledError = null;
		      hasUnhandledError = false;
		      throw _error4;
		    }
		  }

		  function performWorkOnRoot(root, expirationTime) {
		    !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;

		    isRendering = true;

		    // Check if this is async work or sync/expired work.
		    // TODO: Pass current time as argument to renderRoot, commitRoot
		    if (expirationTime <= recalculateCurrentTime()) {
		      // Flush sync work.
		      var finishedWork = root.finishedWork;
		      if (finishedWork !== null) {
		        // This root is already complete. We can commit it.
		        root.finishedWork = null;
		        root.remainingExpirationTime = commitRoot(finishedWork);
		      } else {
		        root.finishedWork = null;
		        finishedWork = renderRoot(root, expirationTime);
		        if (finishedWork !== null) {
		          // We've completed the root. Commit it.
		          root.remainingExpirationTime = commitRoot(finishedWork);
		        }
		      }
		    } else {
		      // Flush async work.
		      var _finishedWork = root.finishedWork;
		      if (_finishedWork !== null) {
		        // This root is already complete. We can commit it.
		        root.finishedWork = null;
		        root.remainingExpirationTime = commitRoot(_finishedWork);
		      } else {
		        root.finishedWork = null;
		        _finishedWork = renderRoot(root, expirationTime);
		        if (_finishedWork !== null) {
		          // We've completed the root. Check the deadline one more time
		          // before committing.
		          if (!shouldYield()) {
		            // Still time left. Commit the root.
		            root.remainingExpirationTime = commitRoot(_finishedWork);
		          } else {
		            // There's no time left. Mark this root as complete. We'll come
		            // back and commit it later.
		            root.finishedWork = _finishedWork;
		          }
		        }
		      }
		    }

		    isRendering = false;
		  }

		  // When working on async work, the reconciler asks the renderer if it should
		  // yield execution. For DOM, we implement this with requestIdleCallback.
		  function shouldYield() {
		    if (deadline === null) {
		      return false;
		    }
		    if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
		      // Disregard deadline.didTimeout. Only expired work should be flushed
		      // during a timeout. This path is only hit for non-expired work.
		      return false;
		    }
		    deadlineDidExpire = true;
		    return true;
		  }

		  // TODO: Not happy about this hook. Conceptually, renderRoot should return a
		  // tuple of (isReadyForCommit, didError, error)
		  function onUncaughtError(error) {
		    !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
		    // Unschedule this root so we don't work on it again until there's
		    // another update.
		    nextFlushedRoot.remainingExpirationTime = NoWork;
		    if (!hasUnhandledError) {
		      hasUnhandledError = true;
		      unhandledError = error;
		    }
		  }

		  // TODO: Batching should be implemented at the renderer level, not inside
		  // the reconciler.
		  function batchedUpdates(fn, a) {
		    var previousIsBatchingUpdates = isBatchingUpdates;
		    isBatchingUpdates = true;
		    try {
		      return fn(a);
		    } finally {
		      isBatchingUpdates = previousIsBatchingUpdates;
		      if (!isBatchingUpdates && !isRendering) {
		        performWork(Sync, null);
		      }
		    }
		  }

		  // TODO: Batching should be implemented at the renderer level, not inside
		  // the reconciler.
		  function unbatchedUpdates(fn) {
		    if (isBatchingUpdates && !isUnbatchingUpdates) {
		      isUnbatchingUpdates = true;
		      try {
		        return fn();
		      } finally {
		        isUnbatchingUpdates = false;
		      }
		    }
		    return fn();
		  }

		  // TODO: Batching should be implemented at the renderer level, not within
		  // the reconciler.
		  function flushSync(fn) {
		    var previousIsBatchingUpdates = isBatchingUpdates;
		    isBatchingUpdates = true;
		    try {
		      return syncUpdates(fn);
		    } finally {
		      isBatchingUpdates = previousIsBatchingUpdates;
		      !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
		      performWork(Sync, null);
		    }
		  }

		  return {
		    computeAsyncExpiration: computeAsyncExpiration,
		    computeExpirationForFiber: computeExpirationForFiber,
		    scheduleWork: scheduleWork,
		    batchedUpdates: batchedUpdates,
		    unbatchedUpdates: unbatchedUpdates,
		    flushSync: flushSync,
		    deferredUpdates: deferredUpdates
		  };
		};

		{
		  var didWarnAboutNestedUpdates = false;
		}

		// 0 is PROD, 1 is DEV.
		// Might add PROFILE later.


		function getContextForSubtree(parentComponent) {
		  if (!parentComponent) {
		    return emptyObject;
		  }

		  var fiber = get(parentComponent);
		  var parentContext = findCurrentUnmaskedContext(fiber);
		  return isContextProvider(fiber) ? processChildContext(fiber, parentContext) : parentContext;
		}

		var ReactFiberReconciler$1 = function (config) {
		  var getPublicInstance = config.getPublicInstance;

		  var _ReactFiberScheduler = ReactFiberScheduler(config),
		      computeAsyncExpiration = _ReactFiberScheduler.computeAsyncExpiration,
		      computeExpirationForFiber = _ReactFiberScheduler.computeExpirationForFiber,
		      scheduleWork = _ReactFiberScheduler.scheduleWork,
		      batchedUpdates = _ReactFiberScheduler.batchedUpdates,
		      unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
		      flushSync = _ReactFiberScheduler.flushSync,
		      deferredUpdates = _ReactFiberScheduler.deferredUpdates;

		  function scheduleTopLevelUpdate(current, element, callback) {
		    {
		      if (ReactDebugCurrentFiber.phase === 'render' && ReactDebugCurrentFiber.current !== null && !didWarnAboutNestedUpdates) {
		        didWarnAboutNestedUpdates = true;
		        warning(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(ReactDebugCurrentFiber.current) || 'Unknown');
		      }
		    }

		    callback = callback === undefined ? null : callback;
		    {
		      warning(callback === null || typeof callback === 'function', 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);
		    }

		    var expirationTime = void 0;
		    // Check if the top-level element is an async wrapper component. If so,
		    // treat updates to the root as async. This is a bit weird but lets us
		    // avoid a separate `renderAsync` API.
		    if (enableAsyncSubtreeAPI && element != null && element.type != null && element.type.prototype != null && element.type.prototype.unstable_isAsyncReactComponent === true) {
		      expirationTime = computeAsyncExpiration();
		    } else {
		      expirationTime = computeExpirationForFiber(current);
		    }

		    var update = {
		      expirationTime: expirationTime,
		      partialState: { element: element },
		      callback: callback,
		      isReplace: false,
		      isForced: false,
		      nextCallback: null,
		      next: null
		    };
		    insertUpdateIntoFiber(current, update);
		    scheduleWork(current, expirationTime);
		  }

		  function findHostInstance(fiber) {
		    var hostFiber = findCurrentHostFiber(fiber);
		    if (hostFiber === null) {
		      return null;
		    }
		    return hostFiber.stateNode;
		  }

		  return {
		    createContainer: function (containerInfo, hydrate) {
		      return createFiberRoot(containerInfo, hydrate);
		    },
		    updateContainer: function (element, container, parentComponent, callback) {
		      // TODO: If this is a nested container, this won't be the root.
		      var current = container.current;

		      {
		        if (ReactFiberInstrumentation_1.debugTool) {
		          if (current.alternate === null) {
		            ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
		          } else if (element === null) {
		            ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
		          } else {
		            ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
		          }
		        }
		      }

		      var context = getContextForSubtree(parentComponent);
		      if (container.context === null) {
		        container.context = context;
		      } else {
		        container.pendingContext = context;
		      }

		      scheduleTopLevelUpdate(current, element, callback);
		    },


		    batchedUpdates: batchedUpdates,

		    unbatchedUpdates: unbatchedUpdates,

		    deferredUpdates: deferredUpdates,

		    flushSync: flushSync,

		    getPublicRootInstance: function (container) {
		      var containerFiber = container.current;
		      if (!containerFiber.child) {
		        return null;
		      }
		      switch (containerFiber.child.tag) {
		        case HostComponent:
		          return getPublicInstance(containerFiber.child.stateNode);
		        default:
		          return containerFiber.child.stateNode;
		      }
		    },


		    findHostInstance: findHostInstance,

		    findHostInstanceWithNoPortals: function (fiber) {
		      var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
		      if (hostFiber === null) {
		        return null;
		      }
		      return hostFiber.stateNode;
		    },
		    injectIntoDevTools: function (devToolsConfig) {
		      var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;

		      return injectInternals(_assign({}, devToolsConfig, {
		        findHostInstanceByFiber: function (fiber) {
		          return findHostInstance(fiber);
		        },
		        findFiberByHostInstance: function (instance) {
		          if (!findFiberByHostInstance) {
		            // Might not be implemented by the renderer.
		            return null;
		          }
		          return findFiberByHostInstance(instance);
		        }
		      }));
		    }
		  };
		};

		var ReactFiberReconciler$2 = Object.freeze({
			default: ReactFiberReconciler$1
		});

		var ReactFiberReconciler$3 = ( ReactFiberReconciler$2 && ReactFiberReconciler$1 ) || ReactFiberReconciler$2;

		// TODO: bundle Flow types with the package.



		// TODO: decide on the top-level export form.
		// This is hacky but makes it work with both Rollup and Jest.
		var reactReconciler = ReactFiberReconciler$3['default'] ? ReactFiberReconciler$3['default'] : ReactFiberReconciler$3;

		function createPortal$1(children, containerInfo,
		// TODO: figure out the API for cross-renderer implementation.
		implementation) {
		  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

		  return {
		    // This tag allow us to uniquely identify this as a React Portal
		    $$typeof: REACT_PORTAL_TYPE,
		    key: key == null ? null : '' + key,
		    children: children,
		    containerInfo: containerInfo,
		    implementation: implementation
		  };
		}

		// TODO: this is special because it gets imported during build.

		var ReactVersion = '16.2.0';

		// a requestAnimationFrame, storing the time for the start of the frame, then
		// scheduling a postMessage which gets scheduled after paint. Within the
		// postMessage handler do as much work as possible until time + frame rate.
		// By separating the idle call into a separate event tick we ensure that
		// layout, paint and other browser work is counted against the available time.
		// The frame rate is dynamically adjusted.

		{
		  if (ExecutionEnvironment.canUseDOM && typeof requestAnimationFrame !== 'function') {
		    warning(false, 'React depends on requestAnimationFrame. Make sure that you load a ' + 'polyfill in older browsers. http://fb.me/react-polyfills');
		  }
		}

		var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

		var now = void 0;
		if (hasNativePerformanceNow) {
		  now = function () {
		    return performance.now();
		  };
		} else {
		  now = function () {
		    return Date.now();
		  };
		}

		// TODO: There's no way to cancel, because Fiber doesn't atm.
		var rIC = void 0;
		var cIC = void 0;

		if (!ExecutionEnvironment.canUseDOM) {
		  rIC = function (frameCallback) {
		    return setTimeout(function () {
		      frameCallback({
		        timeRemaining: function () {
		          return Infinity;
		        }
		      });
		    });
		  };
		  cIC = function (timeoutID) {
		    clearTimeout(timeoutID);
		  };
		} else if (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {
		  // Polyfill requestIdleCallback and cancelIdleCallback

		  var scheduledRICCallback = null;
		  var isIdleScheduled = false;
		  var timeoutTime = -1;

		  var isAnimationFrameScheduled = false;

		  var frameDeadline = 0;
		  // We start out assuming that we run at 30fps but then the heuristic tracking
		  // will adjust this value to a faster fps if we get more frequent animation
		  // frames.
		  var previousFrameTime = 33;
		  var activeFrameTime = 33;

		  var frameDeadlineObject;
		  if (hasNativePerformanceNow) {
		    frameDeadlineObject = {
		      didTimeout: false,
		      timeRemaining: function () {
		        // We assume that if we have a performance timer that the rAF callback
		        // gets a performance timer value. Not sure if this is always true.
		        var remaining = frameDeadline - performance.now();
		        return remaining > 0 ? remaining : 0;
		      }
		    };
		  } else {
		    frameDeadlineObject = {
		      didTimeout: false,
		      timeRemaining: function () {
		        // Fallback to Date.now()
		        var remaining = frameDeadline - Date.now();
		        return remaining > 0 ? remaining : 0;
		      }
		    };
		  }

		  // We use the postMessage trick to defer idle work until after the repaint.
		  var messageKey = '__reactIdleCallback$' + Math.random().toString(36).slice(2);
		  var idleTick = function (event) {
		    if (event.source !== window || event.data !== messageKey) {
		      return;
		    }

		    isIdleScheduled = false;

		    var currentTime = now();
		    if (frameDeadline - currentTime <= 0) {
		      // There's no time left in this idle period. Check if the callback has
		      // a timeout and whether it's been exceeded.
		      if (timeoutTime !== -1 && timeoutTime <= currentTime) {
		        // Exceeded the timeout. Invoke the callback even though there's no
		        // time left.
		        frameDeadlineObject.didTimeout = true;
		      } else {
		        // No timeout.
		        if (!isAnimationFrameScheduled) {
		          // Schedule another animation callback so we retry later.
		          isAnimationFrameScheduled = true;
		          requestAnimationFrame(animationTick);
		        }
		        // Exit without invoking the callback.
		        return;
		      }
		    } else {
		      // There's still time left in this idle period.
		      frameDeadlineObject.didTimeout = false;
		    }

		    timeoutTime = -1;
		    var callback = scheduledRICCallback;
		    scheduledRICCallback = null;
		    if (callback !== null) {
		      callback(frameDeadlineObject);
		    }
		  };
		  // Assumes that we have addEventListener in this environment. Might need
		  // something better for old IE.
		  window.addEventListener('message', idleTick, false);

		  var animationTick = function (rafTime) {
		    isAnimationFrameScheduled = false;
		    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
		    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {
		      if (nextFrameTime < 8) {
		        // Defensive coding. We don't support higher frame rates than 120hz.
		        // If we get lower than that, it is probably a bug.
		        nextFrameTime = 8;
		      }
		      // If one frame goes long, then the next one can be short to catch up.
		      // If two frames are short in a row, then that's an indication that we
		      // actually have a higher frame rate than what we're currently optimizing.
		      // We adjust our heuristic dynamically accordingly. For example, if we're
		      // running on 120hz display or 90hz VR display.
		      // Take the max of the two in case one of them was an anomaly due to
		      // missed frame deadlines.
		      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;
		    } else {
		      previousFrameTime = nextFrameTime;
		    }
		    frameDeadline = rafTime + activeFrameTime;
		    if (!isIdleScheduled) {
		      isIdleScheduled = true;
		      window.postMessage(messageKey, '*');
		    }
		  };

		  rIC = function (callback, options) {
		    // This assumes that we only schedule one callback at a time because that's
		    // how Fiber uses it.
		    scheduledRICCallback = callback;
		    if (options != null && typeof options.timeout === 'number') {
		      timeoutTime = now() + options.timeout;
		    }
		    if (!isAnimationFrameScheduled) {
		      // If rAF didn't already schedule one, we need to schedule a frame.
		      // TODO: If this rAF doesn't materialize because the browser throttles, we
		      // might want to still have setTimeout trigger rIC as a backup to ensure
		      // that we keep performing work.
		      isAnimationFrameScheduled = true;
		      requestAnimationFrame(animationTick);
		    }
		    return 0;
		  };

		  cIC = function () {
		    scheduledRICCallback = null;
		    isIdleScheduled = false;
		    timeoutTime = -1;
		  };
		} else {
		  rIC = window.requestIdleCallback;
		  cIC = window.cancelIdleCallback;
		}

		/**
		 * Forked from fbjs/warning:
		 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
		 *
		 * Only change is we use console.warn instead of console.error,
		 * and do nothing when 'console' is not supported.
		 * This really simplifies the code.
		 * ---
		 * Similar to invariant but only logs a warning if the condition is not met.
		 * This can be used to log issues in development environments in critical
		 * paths. Removing the logging code for production environments will keep the
		 * same logic and follow the same code paths.
		 */

		var lowPriorityWarning = function () {};

		{
		  var printWarning = function (format) {
		    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		      args[_key - 1] = arguments[_key];
		    }

		    var argIndex = 0;
		    var message = 'Warning: ' + format.replace(/%s/g, function () {
		      return args[argIndex++];
		    });
		    if (typeof console !== 'undefined') {
		      console.warn(message);
		    }
		    try {
		      // --- Welcome to debugging React ---
		      // This error was thrown as a convenience so that you can use this stack
		      // to find the callsite that caused this warning to fire.
		      throw new Error(message);
		    } catch (x) {}
		  };

		  lowPriorityWarning = function (condition, format) {
		    if (format === undefined) {
		      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
		    }
		    if (!condition) {
		      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
		        args[_key2 - 2] = arguments[_key2];
		      }

		      printWarning.apply(undefined, [format].concat(args));
		    }
		  };
		}

		var lowPriorityWarning$1 = lowPriorityWarning;

		// isAttributeNameSafe() is currently duplicated in DOMMarkupOperations.
		// TODO: Find a better place for this.
		var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
		var illegalAttributeNameCache = {};
		var validatedAttributeNameCache = {};
		function isAttributeNameSafe(attributeName) {
		  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
		    return true;
		  }
		  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
		    return false;
		  }
		  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
		    validatedAttributeNameCache[attributeName] = true;
		    return true;
		  }
		  illegalAttributeNameCache[attributeName] = true;
		  {
		    warning(false, 'Invalid attribute name: `%s`', attributeName);
		  }
		  return false;
		}

		// shouldIgnoreValue() is currently duplicated in DOMMarkupOperations.
		// TODO: Find a better place for this.
		function shouldIgnoreValue(propertyInfo, value) {
		  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
		}

		/**
		 * Operations for dealing with DOM properties.
		 */





		/**
		 * Get the value for a property on a node. Only used in DEV for SSR validation.
		 * The "expected" argument is used as a hint of what the expected value is.
		 * Some properties have multiple equivalent values.
		 */
		function getValueForProperty(node, name, expected) {
		  {
		    var propertyInfo = getPropertyInfo(name);
		    if (propertyInfo) {
		      var mutationMethod = propertyInfo.mutationMethod;
		      if (mutationMethod || propertyInfo.mustUseProperty) {
		        return node[propertyInfo.propertyName];
		      } else {
		        var attributeName = propertyInfo.attributeName;

		        var stringValue = null;

		        if (propertyInfo.hasOverloadedBooleanValue) {
		          if (node.hasAttribute(attributeName)) {
		            var value = node.getAttribute(attributeName);
		            if (value === '') {
		              return true;
		            }
		            if (shouldIgnoreValue(propertyInfo, expected)) {
		              return value;
		            }
		            if (value === '' + expected) {
		              return expected;
		            }
		            return value;
		          }
		        } else if (node.hasAttribute(attributeName)) {
		          if (shouldIgnoreValue(propertyInfo, expected)) {
		            // We had an attribute but shouldn't have had one, so read it
		            // for the error message.
		            return node.getAttribute(attributeName);
		          }
		          if (propertyInfo.hasBooleanValue) {
		            // If this was a boolean, it doesn't matter what the value is
		            // the fact that we have it is the same as the expected.
		            return expected;
		          }
		          // Even if this property uses a namespace we use getAttribute
		          // because we assume its namespaced name is the same as our config.
		          // To use getAttributeNS we need the local name which we don't have
		          // in our config atm.
		          stringValue = node.getAttribute(attributeName);
		        }

		        if (shouldIgnoreValue(propertyInfo, expected)) {
		          return stringValue === null ? expected : stringValue;
		        } else if (stringValue === '' + expected) {
		          return expected;
		        } else {
		          return stringValue;
		        }
		      }
		    }
		  }
		}

		/**
		 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
		 * The third argument is used as a hint of what the expected value is. Some
		 * attributes have multiple equivalent values.
		 */
		function getValueForAttribute(node, name, expected) {
		  {
		    if (!isAttributeNameSafe(name)) {
		      return;
		    }
		    if (!node.hasAttribute(name)) {
		      return expected === undefined ? undefined : null;
		    }
		    var value = node.getAttribute(name);
		    if (value === '' + expected) {
		      return expected;
		    }
		    return value;
		  }
		}

		/**
		 * Sets the value for a property on a node.
		 *
		 * @param {DOMElement} node
		 * @param {string} name
		 * @param {*} value
		 */
		function setValueForProperty(node, name, value) {
		  var propertyInfo = getPropertyInfo(name);

		  if (propertyInfo && shouldSetAttribute(name, value)) {
		    var mutationMethod = propertyInfo.mutationMethod;
		    if (mutationMethod) {
		      mutationMethod(node, value);
		    } else if (shouldIgnoreValue(propertyInfo, value)) {
		      deleteValueForProperty(node, name);
		      return;
		    } else if (propertyInfo.mustUseProperty) {
		      // Contrary to `setAttribute`, object properties are properly
		      // `toString`ed by IE8/9.
		      node[propertyInfo.propertyName] = value;
		    } else {
		      var attributeName = propertyInfo.attributeName;
		      var namespace = propertyInfo.attributeNamespace;
		      // `setAttribute` with objects becomes only `[object]` in IE8/9,
		      // ('' + value) makes it output the correct toString()-value.
		      if (namespace) {
		        node.setAttributeNS(namespace, attributeName, '' + value);
		      } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
		        node.setAttribute(attributeName, '');
		      } else {
		        node.setAttribute(attributeName, '' + value);
		      }
		    }
		  } else {
		    setValueForAttribute(node, name, shouldSetAttribute(name, value) ? value : null);
		    return;
		  }

		  {
		    
		  }
		}

		function setValueForAttribute(node, name, value) {
		  if (!isAttributeNameSafe(name)) {
		    return;
		  }
		  if (value == null) {
		    node.removeAttribute(name);
		  } else {
		    node.setAttribute(name, '' + value);
		  }

		  {
		    
		  }
		}

		/**
		 * Deletes an attributes from a node.
		 *
		 * @param {DOMElement} node
		 * @param {string} name
		 */
		function deleteValueForAttribute(node, name) {
		  node.removeAttribute(name);
		}

		/**
		 * Deletes the value for a property on a node.
		 *
		 * @param {DOMElement} node
		 * @param {string} name
		 */
		function deleteValueForProperty(node, name) {
		  var propertyInfo = getPropertyInfo(name);
		  if (propertyInfo) {
		    var mutationMethod = propertyInfo.mutationMethod;
		    if (mutationMethod) {
		      mutationMethod(node, undefined);
		    } else if (propertyInfo.mustUseProperty) {
		      var propName = propertyInfo.propertyName;
		      if (propertyInfo.hasBooleanValue) {
		        node[propName] = false;
		      } else {
		        node[propName] = '';
		      }
		    } else {
		      node.removeAttribute(propertyInfo.attributeName);
		    }
		  } else {
		    node.removeAttribute(name);
		  }
		}

		var ReactControlledValuePropTypes = {
		  checkPropTypes: null
		};

		{
		  var hasReadOnlyValue = {
		    button: true,
		    checkbox: true,
		    image: true,
		    hidden: true,
		    radio: true,
		    reset: true,
		    submit: true
		  };

		  var propTypes = {
		    value: function (props, propName, componentName) {
		      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
		        return null;
		      }
		      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
		    },
		    checked: function (props, propName, componentName) {
		      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
		        return null;
		      }
		      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
		    }
		  };

		  /**
		   * Provide a linked `value` attribute for controlled forms. You should not use
		   * this outside of the ReactDOM controlled form components.
		   */
		  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props, getStack) {
		    checkPropTypes(propTypes, props, 'prop', tagName, getStack);
		  };
		}

		// TODO: direct imports like some-package/src/* are bad. Fix me.
		var getCurrentFiberOwnerName$2 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
		var getCurrentFiberStackAddendum$3 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

		var didWarnValueDefaultValue = false;
		var didWarnCheckedDefaultChecked = false;
		var didWarnControlledToUncontrolled = false;
		var didWarnUncontrolledToControlled = false;

		function isControlled(props) {
		  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
		  return usesChecked ? props.checked != null : props.value != null;
		}

		/**
		 * Implements an <input> host component that allows setting these optional
		 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
		 *
		 * If `checked` or `value` are not supplied (or null/undefined), user actions
		 * that affect the checked state or value will trigger updates to the element.
		 *
		 * If they are supplied (and not null/undefined), the rendered element will not
		 * trigger updates to the element. Instead, the props must change in order for
		 * the rendered element to be updated.
		 *
		 * The rendered element will be initialized as unchecked (or `defaultChecked`)
		 * with an empty value (or `defaultValue`).
		 *
		 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
		 */

		function getHostProps(element, props) {
		  var node = element;
		  var value = props.value;
		  var checked = props.checked;

		  var hostProps = _assign({
		    // Make sure we set .type before any other properties (setting .value
		    // before .type means .value is lost in IE11 and below)
		    type: undefined,
		    // Make sure we set .step before .value (setting .value before .step
		    // means .value is rounded on mount, based upon step precision)
		    step: undefined,
		    // Make sure we set .min & .max before .value (to ensure proper order
		    // in corner cases such as min or max deriving from value, e.g. Issue #7170)
		    min: undefined,
		    max: undefined
		  }, props, {
		    defaultChecked: undefined,
		    defaultValue: undefined,
		    value: value != null ? value : node._wrapperState.initialValue,
		    checked: checked != null ? checked : node._wrapperState.initialChecked
		  });

		  return hostProps;
		}

		function initWrapperState(element, props) {
		  {
		    ReactControlledValuePropTypes.checkPropTypes('input', props, getCurrentFiberStackAddendum$3);

		    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
		      warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName$2() || 'A component', props.type);
		      didWarnCheckedDefaultChecked = true;
		    }
		    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
		      warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName$2() || 'A component', props.type);
		      didWarnValueDefaultValue = true;
		    }
		  }

		  var defaultValue = props.defaultValue;
		  var node = element;
		  node._wrapperState = {
		    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
		    initialValue: props.value != null ? props.value : defaultValue,
		    controlled: isControlled(props)
		  };
		}

		function updateChecked(element, props) {
		  var node = element;
		  var checked = props.checked;
		  if (checked != null) {
		    setValueForProperty(node, 'checked', checked);
		  }
		}

		function updateWrapper(element, props) {
		  var node = element;
		  {
		    var controlled = isControlled(props);

		    if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
		      warning(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum$3());
		      didWarnUncontrolledToControlled = true;
		    }
		    if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
		      warning(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum$3());
		      didWarnControlledToUncontrolled = true;
		    }
		  }

		  updateChecked(element, props);

		  var value = props.value;
		  if (value != null) {
		    if (value === 0 && node.value === '') {
		      node.value = '0';
		      // Note: IE9 reports a number inputs as 'text', so check props instead.
		    } else if (props.type === 'number') {
		      // Simulate `input.valueAsNumber`. IE9 does not support it
		      var valueAsNumber = parseFloat(node.value) || 0;

		      if (
		      // eslint-disable-next-line
		      value != valueAsNumber ||
		      // eslint-disable-next-line
		      value == valueAsNumber && node.value != value) {
		        // Cast `value` to a string to ensure the value is set correctly. While
		        // browsers typically do this as necessary, jsdom doesn't.
		        node.value = '' + value;
		      }
		    } else if (node.value !== '' + value) {
		      // Cast `value` to a string to ensure the value is set correctly. While
		      // browsers typically do this as necessary, jsdom doesn't.
		      node.value = '' + value;
		    }
		  } else {
		    if (props.value == null && props.defaultValue != null) {
		      // In Chrome, assigning defaultValue to certain input types triggers input validation.
		      // For number inputs, the display value loses trailing decimal points. For email inputs,
		      // Chrome raises "The specified value <x> is not a valid email address".
		      //
		      // Here we check to see if the defaultValue has actually changed, avoiding these problems
		      // when the user is inputting text
		      //
		      // https://github.com/facebook/react/issues/7253
		      if (node.defaultValue !== '' + props.defaultValue) {
		        node.defaultValue = '' + props.defaultValue;
		      }
		    }
		    if (props.checked == null && props.defaultChecked != null) {
		      node.defaultChecked = !!props.defaultChecked;
		    }
		  }
		}

		function postMountWrapper(element, props) {
		  var node = element;

		  // Detach value from defaultValue. We won't do anything if we're working on
		  // submit or reset inputs as those values & defaultValues are linked. They
		  // are not resetable nodes so this operation doesn't matter and actually
		  // removes browser-default values (eg "Submit Query") when no value is
		  // provided.

		  switch (props.type) {
		    case 'submit':
		    case 'reset':
		      break;
		    case 'color':
		    case 'date':
		    case 'datetime':
		    case 'datetime-local':
		    case 'month':
		    case 'time':
		    case 'week':
		      // This fixes the no-show issue on iOS Safari and Android Chrome:
		      // https://github.com/facebook/react/issues/7233
		      node.value = '';
		      node.value = node.defaultValue;
		      break;
		    default:
		      node.value = node.value;
		      break;
		  }

		  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
		  // this is needed to work around a chrome bug where setting defaultChecked
		  // will sometimes influence the value of checked (even after detachment).
		  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
		  // We need to temporarily unset name to avoid disrupting radio button groups.
		  var name = node.name;
		  if (name !== '') {
		    node.name = '';
		  }
		  node.defaultChecked = !node.defaultChecked;
		  node.defaultChecked = !node.defaultChecked;
		  if (name !== '') {
		    node.name = name;
		  }
		}

		function restoreControlledState$1(element, props) {
		  var node = element;
		  updateWrapper(node, props);
		  updateNamedCousins(node, props);
		}

		function updateNamedCousins(rootNode, props) {
		  var name = props.name;
		  if (props.type === 'radio' && name != null) {
		    var queryRoot = rootNode;

		    while (queryRoot.parentNode) {
		      queryRoot = queryRoot.parentNode;
		    }

		    // If `rootNode.form` was non-null, then we could try `form.elements`,
		    // but that sometimes behaves strangely in IE8. We could also try using
		    // `form.getElementsByName`, but that will only return direct children
		    // and won't include inputs that use the HTML5 `form=` attribute. Since
		    // the input might not even be in a form. It might not even be in the
		    // document. Let's just use the local `querySelectorAll` to ensure we don't
		    // miss anything.
		    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

		    for (var i = 0; i < group.length; i++) {
		      var otherNode = group[i];
		      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
		        continue;
		      }
		      // This will throw if radio buttons rendered by different copies of React
		      // and the same name are rendered into the same form (same as #1939).
		      // That's probably okay; we don't support it just as we don't support
		      // mixing React radio buttons with non-React ones.
		      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
		      !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;

		      // We need update the tracked value on the named cousin since the value
		      // was changed but the input saw no event or value set
		      updateValueIfChanged(otherNode);

		      // If this is a controlled radio button group, forcing the input that
		      // was previously checked to update will cause it to be come re-checked
		      // as appropriate.
		      updateWrapper(otherNode, otherProps);
		    }
		  }
		}

		function flattenChildren(children) {
		  var content = '';

		  // Flatten children and warn if they aren't strings or numbers;
		  // invalid types are ignored.
		  // We can silently skip them because invalid DOM nesting warning
		  // catches these cases in Fiber.
		  React.Children.forEach(children, function (child) {
		    if (child == null) {
		      return;
		    }
		    if (typeof child === 'string' || typeof child === 'number') {
		      content += child;
		    }
		  });

		  return content;
		}

		/**
		 * Implements an <option> host component that warns when `selected` is set.
		 */

		function validateProps(element, props) {
		  // TODO (yungsters): Remove support for `selected` in <option>.
		  {
		    warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
		  }
		}

		function postMountWrapper$1(element, props) {
		  // value="" should make a value attribute (#6219)
		  if (props.value != null) {
		    element.setAttribute('value', props.value);
		  }
		}

		function getHostProps$1(element, props) {
		  var hostProps = _assign({ children: undefined }, props);
		  var content = flattenChildren(props.children);

		  if (content) {
		    hostProps.children = content;
		  }

		  return hostProps;
		}

		// TODO: direct imports like some-package/src/* are bad. Fix me.
		var getCurrentFiberOwnerName$3 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
		var getCurrentFiberStackAddendum$4 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


		{
		  var didWarnValueDefaultValue$1 = false;
		}

		function getDeclarationErrorAddendum() {
		  var ownerName = getCurrentFiberOwnerName$3();
		  if (ownerName) {
		    return '\n\nCheck the render method of `' + ownerName + '`.';
		  }
		  return '';
		}

		var valuePropNames = ['value', 'defaultValue'];

		/**
		 * Validation function for `value` and `defaultValue`.
		 */
		function checkSelectPropTypes(props) {
		  ReactControlledValuePropTypes.checkPropTypes('select', props, getCurrentFiberStackAddendum$4);

		  for (var i = 0; i < valuePropNames.length; i++) {
		    var propName = valuePropNames[i];
		    if (props[propName] == null) {
		      continue;
		    }
		    var isArray = Array.isArray(props[propName]);
		    if (props.multiple && !isArray) {
		      warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
		    } else if (!props.multiple && isArray) {
		      warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
		    }
		  }
		}

		function updateOptions(node, multiple, propValue, setDefaultSelected) {
		  var options = node.options;

		  if (multiple) {
		    var selectedValues = propValue;
		    var selectedValue = {};
		    for (var i = 0; i < selectedValues.length; i++) {
		      // Prefix to avoid chaos with special keys.
		      selectedValue['$' + selectedValues[i]] = true;
		    }
		    for (var _i = 0; _i < options.length; _i++) {
		      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
		      if (options[_i].selected !== selected) {
		        options[_i].selected = selected;
		      }
		      if (selected && setDefaultSelected) {
		        options[_i].defaultSelected = true;
		      }
		    }
		  } else {
		    // Do not set `select.value` as exact behavior isn't consistent across all
		    // browsers for all cases.
		    var _selectedValue = '' + propValue;
		    var defaultSelected = null;
		    for (var _i2 = 0; _i2 < options.length; _i2++) {
		      if (options[_i2].value === _selectedValue) {
		        options[_i2].selected = true;
		        if (setDefaultSelected) {
		          options[_i2].defaultSelected = true;
		        }
		        return;
		      }
		      if (defaultSelected === null && !options[_i2].disabled) {
		        defaultSelected = options[_i2];
		      }
		    }
		    if (defaultSelected !== null) {
		      defaultSelected.selected = true;
		    }
		  }
		}

		/**
		 * Implements a <select> host component that allows optionally setting the
		 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
		 * stringable. If `multiple` is true, the prop must be an array of stringables.
		 *
		 * If `value` is not supplied (or null/undefined), user actions that change the
		 * selected option will trigger updates to the rendered options.
		 *
		 * If it is supplied (and not null/undefined), the rendered options will not
		 * update in response to user actions. Instead, the `value` prop must change in
		 * order for the rendered options to update.
		 *
		 * If `defaultValue` is provided, any options with the supplied values will be
		 * selected.
		 */

		function getHostProps$2(element, props) {
		  return _assign({}, props, {
		    value: undefined
		  });
		}

		function initWrapperState$1(element, props) {
		  var node = element;
		  {
		    checkSelectPropTypes(props);
		  }

		  var value = props.value;
		  node._wrapperState = {
		    initialValue: value != null ? value : props.defaultValue,
		    wasMultiple: !!props.multiple
		  };

		  {
		    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
		      warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
		      didWarnValueDefaultValue$1 = true;
		    }
		  }
		}

		function postMountWrapper$2(element, props) {
		  var node = element;
		  node.multiple = !!props.multiple;
		  var value = props.value;
		  if (value != null) {
		    updateOptions(node, !!props.multiple, value, false);
		  } else if (props.defaultValue != null) {
		    updateOptions(node, !!props.multiple, props.defaultValue, true);
		  }
		}

		function postUpdateWrapper(element, props) {
		  var node = element;
		  // After the initial mount, we control selected-ness manually so don't pass
		  // this value down
		  node._wrapperState.initialValue = undefined;

		  var wasMultiple = node._wrapperState.wasMultiple;
		  node._wrapperState.wasMultiple = !!props.multiple;

		  var value = props.value;
		  if (value != null) {
		    updateOptions(node, !!props.multiple, value, false);
		  } else if (wasMultiple !== !!props.multiple) {
		    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
		    if (props.defaultValue != null) {
		      updateOptions(node, !!props.multiple, props.defaultValue, true);
		    } else {
		      // Revert the select back to its default unselected state.
		      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
		    }
		  }
		}

		function restoreControlledState$2(element, props) {
		  var node = element;
		  var value = props.value;

		  if (value != null) {
		    updateOptions(node, !!props.multiple, value, false);
		  }
		}

		// TODO: direct imports like some-package/src/* are bad. Fix me.
		var getCurrentFiberStackAddendum$5 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

		var didWarnValDefaultVal = false;

		/**
		 * Implements a <textarea> host component that allows setting `value`, and
		 * `defaultValue`. This differs from the traditional DOM API because value is
		 * usually set as PCDATA children.
		 *
		 * If `value` is not supplied (or null/undefined), user actions that affect the
		 * value will trigger updates to the element.
		 *
		 * If `value` is supplied (and not null/undefined), the rendered element will
		 * not trigger updates to the element. Instead, the `value` prop must change in
		 * order for the rendered element to be updated.
		 *
		 * The rendered element will be initialized with an empty value, the prop
		 * `defaultValue` if specified, or the children content (deprecated).
		 */

		function getHostProps$3(element, props) {
		  var node = element;
		  !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;

		  // Always set children to the same thing. In IE9, the selection range will
		  // get reset if `textContent` is mutated.  We could add a check in setTextContent
		  // to only set the value if/when the value differs from the node value (which would
		  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
		  // solution. The value can be a boolean or object so that's why it's forced
		  // to be a string.
		  var hostProps = _assign({}, props, {
		    value: undefined,
		    defaultValue: undefined,
		    children: '' + node._wrapperState.initialValue
		  });

		  return hostProps;
		}

		function initWrapperState$2(element, props) {
		  var node = element;
		  {
		    ReactControlledValuePropTypes.checkPropTypes('textarea', props, getCurrentFiberStackAddendum$5);
		    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
		      warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
		      didWarnValDefaultVal = true;
		    }
		  }

		  var initialValue = props.value;

		  // Only bother fetching default value if we're going to use it
		  if (initialValue == null) {
		    var defaultValue = props.defaultValue;
		    // TODO (yungsters): Remove support for children content in <textarea>.
		    var children = props.children;
		    if (children != null) {
		      {
		        warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
		      }
		      !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
		      if (Array.isArray(children)) {
		        !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
		        children = children[0];
		      }

		      defaultValue = '' + children;
		    }
		    if (defaultValue == null) {
		      defaultValue = '';
		    }
		    initialValue = defaultValue;
		  }

		  node._wrapperState = {
		    initialValue: '' + initialValue
		  };
		}

		function updateWrapper$1(element, props) {
		  var node = element;
		  var value = props.value;
		  if (value != null) {
		    // Cast `value` to a string to ensure the value is set correctly. While
		    // browsers typically do this as necessary, jsdom doesn't.
		    var newValue = '' + value;

		    // To avoid side effects (such as losing text selection), only set value if changed
		    if (newValue !== node.value) {
		      node.value = newValue;
		    }
		    if (props.defaultValue == null) {
		      node.defaultValue = newValue;
		    }
		  }
		  if (props.defaultValue != null) {
		    node.defaultValue = props.defaultValue;
		  }
		}

		function postMountWrapper$3(element, props) {
		  var node = element;
		  // This is in postMount because we need access to the DOM node, which is not
		  // available until after the component has mounted.
		  var textContent = node.textContent;

		  // Only set node.value if textContent is equal to the expected
		  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
		  // will populate textContent as well.
		  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
		  if (textContent === node._wrapperState.initialValue) {
		    node.value = textContent;
		  }
		}

		function restoreControlledState$3(element, props) {
		  // DOM component is still mounted; update
		  updateWrapper$1(element, props);
		}

		var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
		var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
		var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

		var Namespaces = {
		  html: HTML_NAMESPACE$1,
		  mathml: MATH_NAMESPACE,
		  svg: SVG_NAMESPACE
		};

		// Assumes there is no parent namespace.
		function getIntrinsicNamespace(type) {
		  switch (type) {
		    case 'svg':
		      return SVG_NAMESPACE;
		    case 'math':
		      return MATH_NAMESPACE;
		    default:
		      return HTML_NAMESPACE$1;
		  }
		}

		function getChildNamespace(parentNamespace, type) {
		  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
		    // No (or default) parent namespace: potential entry point.
		    return getIntrinsicNamespace(type);
		  }
		  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
		    // We're leaving SVG.
		    return HTML_NAMESPACE$1;
		  }
		  // By default, pass namespace below.
		  return parentNamespace;
		}

		/* globals MSApp */

		/**
		 * Create a function which has 'unsafe' privileges (required by windows8 apps)
		 */
		var createMicrosoftUnsafeLocalFunction = function (func) {
		  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
		    return function (arg0, arg1, arg2, arg3) {
		      MSApp.execUnsafeLocalFunction(function () {
		        return func(arg0, arg1, arg2, arg3);
		      });
		    };
		  } else {
		    return func;
		  }
		};

		// SVG temp container for IE lacking innerHTML
		var reusableSVGContainer = void 0;

		/**
		 * Set the innerHTML property of a node
		 *
		 * @param {DOMElement} node
		 * @param {string} html
		 * @internal
		 */
		var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
		  // IE does not have innerHTML for SVG nodes, so instead we inject the
		  // new markup in a temp node and then move the child nodes across into
		  // the target node

		  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
		    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
		    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
		    var svgNode = reusableSVGContainer.firstChild;
		    while (node.firstChild) {
		      node.removeChild(node.firstChild);
		    }
		    while (svgNode.firstChild) {
		      node.appendChild(svgNode.firstChild);
		    }
		  } else {
		    node.innerHTML = html;
		  }
		});

		/**
		 * Set the textContent property of a node, ensuring that whitespace is preserved
		 * even in IE8. innerText is a poor substitute for textContent and, among many
		 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
		 * as it should.
		 *
		 * @param {DOMElement} node
		 * @param {string} text
		 * @internal
		 */
		var setTextContent = function (node, text) {
		  if (text) {
		    var firstChild = node.firstChild;

		    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
		      firstChild.nodeValue = text;
		      return;
		    }
		  }
		  node.textContent = text;
		};

		/**
		 * CSS properties which accept numbers but are not in units of "px".
		 */
		var isUnitlessNumber = {
		  animationIterationCount: true,
		  borderImageOutset: true,
		  borderImageSlice: true,
		  borderImageWidth: true,
		  boxFlex: true,
		  boxFlexGroup: true,
		  boxOrdinalGroup: true,
		  columnCount: true,
		  columns: true,
		  flex: true,
		  flexGrow: true,
		  flexPositive: true,
		  flexShrink: true,
		  flexNegative: true,
		  flexOrder: true,
		  gridRow: true,
		  gridRowEnd: true,
		  gridRowSpan: true,
		  gridRowStart: true,
		  gridColumn: true,
		  gridColumnEnd: true,
		  gridColumnSpan: true,
		  gridColumnStart: true,
		  fontWeight: true,
		  lineClamp: true,
		  lineHeight: true,
		  opacity: true,
		  order: true,
		  orphans: true,
		  tabSize: true,
		  widows: true,
		  zIndex: true,
		  zoom: true,

		  // SVG-related properties
		  fillOpacity: true,
		  floodOpacity: true,
		  stopOpacity: true,
		  strokeDasharray: true,
		  strokeDashoffset: true,
		  strokeMiterlimit: true,
		  strokeOpacity: true,
		  strokeWidth: true
		};

		/**
		 * @param {string} prefix vendor-specific prefix, eg: Webkit
		 * @param {string} key style name, eg: transitionDuration
		 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
		 * WebkitTransitionDuration
		 */
		function prefixKey(prefix, key) {
		  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
		}

		/**
		 * Support style names that may come passed in prefixed by adding permutations
		 * of vendor prefixes.
		 */
		var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

		// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
		// infinite loop, because it iterates over the newly added props too.
		Object.keys(isUnitlessNumber).forEach(function (prop) {
		  prefixes.forEach(function (prefix) {
		    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
		  });
		});

		/**
		 * Convert a value into the proper css writable value. The style name `name`
		 * should be logical (no hyphens), as specified
		 * in `CSSProperty.isUnitlessNumber`.
		 *
		 * @param {string} name CSS property name such as `topMargin`.
		 * @param {*} value CSS property value such as `10px`.
		 * @return {string} Normalized style value with dimensions applied.
		 */
		function dangerousStyleValue(name, value, isCustomProperty) {
		  // Note that we've removed escapeTextForBrowser() calls here since the
		  // whole string will be escaped when the attribute is injected into
		  // the markup. If you provide unsafe user data here they can inject
		  // arbitrary CSS which may be problematic (I couldn't repro this):
		  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
		  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
		  // This is not an XSS hole but instead a potential CSS injection issue
		  // which has lead to a greater discussion about how we're going to
		  // trust URLs moving forward. See #2115901

		  var isEmpty = value == null || typeof value === 'boolean' || value === '';
		  if (isEmpty) {
		    return '';
		  }

		  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
		    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
		  }

		  return ('' + value).trim();
		}

		var warnValidStyle = emptyFunction;

		{
		  // 'msTransform' is correct, but the other prefixes should be capitalized
		  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

		  // style values shouldn't contain a semicolon
		  var badStyleValueWithSemicolonPattern = /;\s*$/;

		  var warnedStyleNames = {};
		  var warnedStyleValues = {};
		  var warnedForNaNValue = false;
		  var warnedForInfinityValue = false;

		  var warnHyphenatedStyleName = function (name, getStack) {
		    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
		      return;
		    }

		    warnedStyleNames[name] = true;
		    warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), getStack());
		  };

		  var warnBadVendoredStyleName = function (name, getStack) {
		    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
		      return;
		    }

		    warnedStyleNames[name] = true;
		    warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), getStack());
		  };

		  var warnStyleValueWithSemicolon = function (name, value, getStack) {
		    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
		      return;
		    }

		    warnedStyleValues[value] = true;
		    warning(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.%s', name, value.replace(badStyleValueWithSemicolonPattern, ''), getStack());
		  };

		  var warnStyleValueIsNaN = function (name, value, getStack) {
		    if (warnedForNaNValue) {
		      return;
		    }

		    warnedForNaNValue = true;
		    warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, getStack());
		  };

		  var warnStyleValueIsInfinity = function (name, value, getStack) {
		    if (warnedForInfinityValue) {
		      return;
		    }

		    warnedForInfinityValue = true;
		    warning(false, '`Infinity` is an invalid value for the `%s` css style property.%s', name, getStack());
		  };

		  warnValidStyle = function (name, value, getStack) {
		    if (name.indexOf('-') > -1) {
		      warnHyphenatedStyleName(name, getStack);
		    } else if (badVendoredStyleNamePattern.test(name)) {
		      warnBadVendoredStyleName(name, getStack);
		    } else if (badStyleValueWithSemicolonPattern.test(value)) {
		      warnStyleValueWithSemicolon(name, value, getStack);
		    }

		    if (typeof value === 'number') {
		      if (isNaN(value)) {
		        warnStyleValueIsNaN(name, value, getStack);
		      } else if (!isFinite(value)) {
		        warnStyleValueIsInfinity(name, value, getStack);
		      }
		    }
		  };
		}

		var warnValidStyle$1 = warnValidStyle;

		/**
		 * Operations for dealing with CSS properties.
		 */

		/**
		 * This creates a string that is expected to be equivalent to the style
		 * attribute generated by server-side rendering. It by-passes warnings and
		 * security checks so it's not safe to use this value for anything other than
		 * comparison. It is only used in DEV for SSR validation.
		 */
		function createDangerousStringForStyles(styles) {
		  {
		    var serialized = '';
		    var delimiter = '';
		    for (var styleName in styles) {
		      if (!styles.hasOwnProperty(styleName)) {
		        continue;
		      }
		      var styleValue = styles[styleName];
		      if (styleValue != null) {
		        var isCustomProperty = styleName.indexOf('--') === 0;
		        serialized += delimiter + hyphenateStyleName(styleName) + ':';
		        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);

		        delimiter = ';';
		      }
		    }
		    return serialized || null;
		  }
		}

		/**
		 * Sets the value for multiple styles on a node.  If a value is specified as
		 * '' (empty string), the corresponding style property will be unset.
		 *
		 * @param {DOMElement} node
		 * @param {object} styles
		 */
		function setValueForStyles(node, styles, getStack) {
		  var style = node.style;
		  for (var styleName in styles) {
		    if (!styles.hasOwnProperty(styleName)) {
		      continue;
		    }
		    var isCustomProperty = styleName.indexOf('--') === 0;
		    {
		      if (!isCustomProperty) {
		        warnValidStyle$1(styleName, styles[styleName], getStack);
		      }
		    }
		    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
		    if (styleName === 'float') {
		      styleName = 'cssFloat';
		    }
		    if (isCustomProperty) {
		      style.setProperty(styleName, styleValue);
		    } else {
		      style[styleName] = styleValue;
		    }
		  }
		}

		// For HTML, certain tags should omit their close tag. We keep a whitelist for
		// those special-case tags.

		var omittedCloseTags = {
		  area: true,
		  base: true,
		  br: true,
		  col: true,
		  embed: true,
		  hr: true,
		  img: true,
		  input: true,
		  keygen: true,
		  link: true,
		  meta: true,
		  param: true,
		  source: true,
		  track: true,
		  wbr: true
		};

		// For HTML, certain tags cannot have children. This has the same purpose as
		// `omittedCloseTags` except that `menuitem` should still have its closing tag.

		var voidElementTags = _assign({
		  menuitem: true
		}, omittedCloseTags);

		var HTML$1 = '__html';

		function assertValidProps(tag, props, getStack) {
		  if (!props) {
		    return;
		  }
		  // Note the use of `==` which checks for null or undefined.
		  if (voidElementTags[tag]) {
		    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, getStack()) : void 0;
		  }
		  if (props.dangerouslySetInnerHTML != null) {
		    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
		    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
		  }
		  {
		    warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.%s', getStack());
		  }
		  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getStack()) : void 0;
		}

		function isCustomComponent(tagName, props) {
		  if (tagName.indexOf('-') === -1) {
		    return typeof props.is === 'string';
		  }
		  switch (tagName) {
		    // These are reserved SVG and MathML elements.
		    // We don't mind this whitelist too much because we expect it to never grow.
		    // The alternative is to track the namespace in a few places which is convoluted.
		    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
		    case 'annotation-xml':
		    case 'color-profile':
		    case 'font-face':
		    case 'font-face-src':
		    case 'font-face-uri':
		    case 'font-face-format':
		    case 'font-face-name':
		    case 'missing-glyph':
		      return false;
		    default:
		      return true;
		  }
		}

		var ariaProperties = {
		  'aria-current': 0, // state
		  'aria-details': 0,
		  'aria-disabled': 0, // state
		  'aria-hidden': 0, // state
		  'aria-invalid': 0, // state
		  'aria-keyshortcuts': 0,
		  'aria-label': 0,
		  'aria-roledescription': 0,
		  // Widget Attributes
		  'aria-autocomplete': 0,
		  'aria-checked': 0,
		  'aria-expanded': 0,
		  'aria-haspopup': 0,
		  'aria-level': 0,
		  'aria-modal': 0,
		  'aria-multiline': 0,
		  'aria-multiselectable': 0,
		  'aria-orientation': 0,
		  'aria-placeholder': 0,
		  'aria-pressed': 0,
		  'aria-readonly': 0,
		  'aria-required': 0,
		  'aria-selected': 0,
		  'aria-sort': 0,
		  'aria-valuemax': 0,
		  'aria-valuemin': 0,
		  'aria-valuenow': 0,
		  'aria-valuetext': 0,
		  // Live Region Attributes
		  'aria-atomic': 0,
		  'aria-busy': 0,
		  'aria-live': 0,
		  'aria-relevant': 0,
		  // Drag-and-Drop Attributes
		  'aria-dropeffect': 0,
		  'aria-grabbed': 0,
		  // Relationship Attributes
		  'aria-activedescendant': 0,
		  'aria-colcount': 0,
		  'aria-colindex': 0,
		  'aria-colspan': 0,
		  'aria-controls': 0,
		  'aria-describedby': 0,
		  'aria-errormessage': 0,
		  'aria-flowto': 0,
		  'aria-labelledby': 0,
		  'aria-owns': 0,
		  'aria-posinset': 0,
		  'aria-rowcount': 0,
		  'aria-rowindex': 0,
		  'aria-rowspan': 0,
		  'aria-setsize': 0
		};

		var warnedProperties = {};
		var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
		var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

		var hasOwnProperty = Object.prototype.hasOwnProperty;

		function getStackAddendum() {
		  var stack = ReactDebugCurrentFrame.getStackAddendum();
		  return stack != null ? stack : '';
		}

		function validateProperty(tagName, name) {
		  if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
		    return true;
		  }

		  if (rARIACamel.test(name)) {
		    var ariaName = 'aria-' + name.slice(4).toLowerCase();
		    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;

		    // If this is an aria-* attribute, but is not listed in the known DOM
		    // DOM properties, then it is an invalid aria-* attribute.
		    if (correctName == null) {
		      warning(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.%s', name, getStackAddendum());
		      warnedProperties[name] = true;
		      return true;
		    }
		    // aria-* attributes should be lowercase; suggest the lowercase version.
		    if (name !== correctName) {
		      warning(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?%s', name, correctName, getStackAddendum());
		      warnedProperties[name] = true;
		      return true;
		    }
		  }

		  if (rARIA.test(name)) {
		    var lowerCasedName = name.toLowerCase();
		    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

		    // If this is an aria-* attribute, but is not listed in the known DOM
		    // DOM properties, then it is an invalid aria-* attribute.
		    if (standardName == null) {
		      warnedProperties[name] = true;
		      return false;
		    }
		    // aria-* attributes should be lowercase; suggest the lowercase version.
		    if (name !== standardName) {
		      warning(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum());
		      warnedProperties[name] = true;
		      return true;
		    }
		  }

		  return true;
		}

		function warnInvalidARIAProps(type, props) {
		  var invalidProps = [];

		  for (var key in props) {
		    var isValid = validateProperty(type, key);
		    if (!isValid) {
		      invalidProps.push(key);
		    }
		  }

		  var unknownPropString = invalidProps.map(function (prop) {
		    return '`' + prop + '`';
		  }).join(', ');

		  if (invalidProps.length === 1) {
		    warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
		  } else if (invalidProps.length > 1) {
		    warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
		  }
		}

		function validateProperties(type, props) {
		  if (isCustomComponent(type, props)) {
		    return;
		  }
		  warnInvalidARIAProps(type, props);
		}

		var didWarnValueNull = false;

		function getStackAddendum$1() {
		  var stack = ReactDebugCurrentFrame.getStackAddendum();
		  return stack != null ? stack : '';
		}

		function validateProperties$1(type, props) {
		  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
		    return;
		  }

		  if (props != null && props.value === null && !didWarnValueNull) {
		    didWarnValueNull = true;
		    if (type === 'select' && props.multiple) {
		      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.%s', type, getStackAddendum$1());
		    } else {
		      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', type, getStackAddendum$1());
		    }
		  }
		}

		// When adding attributes to the HTML or SVG whitelist, be sure to
		// also add them to this module to ensure casing and incorrect name
		// warnings.
		var possibleStandardNames = {
		  // HTML
		  accept: 'accept',
		  acceptcharset: 'acceptCharset',
		  'accept-charset': 'acceptCharset',
		  accesskey: 'accessKey',
		  action: 'action',
		  allowfullscreen: 'allowFullScreen',
		  alt: 'alt',
		  as: 'as',
		  async: 'async',
		  autocapitalize: 'autoCapitalize',
		  autocomplete: 'autoComplete',
		  autocorrect: 'autoCorrect',
		  autofocus: 'autoFocus',
		  autoplay: 'autoPlay',
		  autosave: 'autoSave',
		  capture: 'capture',
		  cellpadding: 'cellPadding',
		  cellspacing: 'cellSpacing',
		  challenge: 'challenge',
		  charset: 'charSet',
		  checked: 'checked',
		  children: 'children',
		  cite: 'cite',
		  'class': 'className',
		  classid: 'classID',
		  classname: 'className',
		  cols: 'cols',
		  colspan: 'colSpan',
		  content: 'content',
		  contenteditable: 'contentEditable',
		  contextmenu: 'contextMenu',
		  controls: 'controls',
		  controlslist: 'controlsList',
		  coords: 'coords',
		  crossorigin: 'crossOrigin',
		  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
		  data: 'data',
		  datetime: 'dateTime',
		  'default': 'default',
		  defaultchecked: 'defaultChecked',
		  defaultvalue: 'defaultValue',
		  defer: 'defer',
		  dir: 'dir',
		  disabled: 'disabled',
		  download: 'download',
		  draggable: 'draggable',
		  enctype: 'encType',
		  'for': 'htmlFor',
		  form: 'form',
		  formmethod: 'formMethod',
		  formaction: 'formAction',
		  formenctype: 'formEncType',
		  formnovalidate: 'formNoValidate',
		  formtarget: 'formTarget',
		  frameborder: 'frameBorder',
		  headers: 'headers',
		  height: 'height',
		  hidden: 'hidden',
		  high: 'high',
		  href: 'href',
		  hreflang: 'hrefLang',
		  htmlfor: 'htmlFor',
		  httpequiv: 'httpEquiv',
		  'http-equiv': 'httpEquiv',
		  icon: 'icon',
		  id: 'id',
		  innerhtml: 'innerHTML',
		  inputmode: 'inputMode',
		  integrity: 'integrity',
		  is: 'is',
		  itemid: 'itemID',
		  itemprop: 'itemProp',
		  itemref: 'itemRef',
		  itemscope: 'itemScope',
		  itemtype: 'itemType',
		  keyparams: 'keyParams',
		  keytype: 'keyType',
		  kind: 'kind',
		  label: 'label',
		  lang: 'lang',
		  list: 'list',
		  loop: 'loop',
		  low: 'low',
		  manifest: 'manifest',
		  marginwidth: 'marginWidth',
		  marginheight: 'marginHeight',
		  max: 'max',
		  maxlength: 'maxLength',
		  media: 'media',
		  mediagroup: 'mediaGroup',
		  method: 'method',
		  min: 'min',
		  minlength: 'minLength',
		  multiple: 'multiple',
		  muted: 'muted',
		  name: 'name',
		  nonce: 'nonce',
		  novalidate: 'noValidate',
		  open: 'open',
		  optimum: 'optimum',
		  pattern: 'pattern',
		  placeholder: 'placeholder',
		  playsinline: 'playsInline',
		  poster: 'poster',
		  preload: 'preload',
		  profile: 'profile',
		  radiogroup: 'radioGroup',
		  readonly: 'readOnly',
		  referrerpolicy: 'referrerPolicy',
		  rel: 'rel',
		  required: 'required',
		  reversed: 'reversed',
		  role: 'role',
		  rows: 'rows',
		  rowspan: 'rowSpan',
		  sandbox: 'sandbox',
		  scope: 'scope',
		  scoped: 'scoped',
		  scrolling: 'scrolling',
		  seamless: 'seamless',
		  selected: 'selected',
		  shape: 'shape',
		  size: 'size',
		  sizes: 'sizes',
		  span: 'span',
		  spellcheck: 'spellCheck',
		  src: 'src',
		  srcdoc: 'srcDoc',
		  srclang: 'srcLang',
		  srcset: 'srcSet',
		  start: 'start',
		  step: 'step',
		  style: 'style',
		  summary: 'summary',
		  tabindex: 'tabIndex',
		  target: 'target',
		  title: 'title',
		  type: 'type',
		  usemap: 'useMap',
		  value: 'value',
		  width: 'width',
		  wmode: 'wmode',
		  wrap: 'wrap',

		  // SVG
		  about: 'about',
		  accentheight: 'accentHeight',
		  'accent-height': 'accentHeight',
		  accumulate: 'accumulate',
		  additive: 'additive',
		  alignmentbaseline: 'alignmentBaseline',
		  'alignment-baseline': 'alignmentBaseline',
		  allowreorder: 'allowReorder',
		  alphabetic: 'alphabetic',
		  amplitude: 'amplitude',
		  arabicform: 'arabicForm',
		  'arabic-form': 'arabicForm',
		  ascent: 'ascent',
		  attributename: 'attributeName',
		  attributetype: 'attributeType',
		  autoreverse: 'autoReverse',
		  azimuth: 'azimuth',
		  basefrequency: 'baseFrequency',
		  baselineshift: 'baselineShift',
		  'baseline-shift': 'baselineShift',
		  baseprofile: 'baseProfile',
		  bbox: 'bbox',
		  begin: 'begin',
		  bias: 'bias',
		  by: 'by',
		  calcmode: 'calcMode',
		  capheight: 'capHeight',
		  'cap-height': 'capHeight',
		  clip: 'clip',
		  clippath: 'clipPath',
		  'clip-path': 'clipPath',
		  clippathunits: 'clipPathUnits',
		  cliprule: 'clipRule',
		  'clip-rule': 'clipRule',
		  color: 'color',
		  colorinterpolation: 'colorInterpolation',
		  'color-interpolation': 'colorInterpolation',
		  colorinterpolationfilters: 'colorInterpolationFilters',
		  'color-interpolation-filters': 'colorInterpolationFilters',
		  colorprofile: 'colorProfile',
		  'color-profile': 'colorProfile',
		  colorrendering: 'colorRendering',
		  'color-rendering': 'colorRendering',
		  contentscripttype: 'contentScriptType',
		  contentstyletype: 'contentStyleType',
		  cursor: 'cursor',
		  cx: 'cx',
		  cy: 'cy',
		  d: 'd',
		  datatype: 'datatype',
		  decelerate: 'decelerate',
		  descent: 'descent',
		  diffuseconstant: 'diffuseConstant',
		  direction: 'direction',
		  display: 'display',
		  divisor: 'divisor',
		  dominantbaseline: 'dominantBaseline',
		  'dominant-baseline': 'dominantBaseline',
		  dur: 'dur',
		  dx: 'dx',
		  dy: 'dy',
		  edgemode: 'edgeMode',
		  elevation: 'elevation',
		  enablebackground: 'enableBackground',
		  'enable-background': 'enableBackground',
		  end: 'end',
		  exponent: 'exponent',
		  externalresourcesrequired: 'externalResourcesRequired',
		  fill: 'fill',
		  fillopacity: 'fillOpacity',
		  'fill-opacity': 'fillOpacity',
		  fillrule: 'fillRule',
		  'fill-rule': 'fillRule',
		  filter: 'filter',
		  filterres: 'filterRes',
		  filterunits: 'filterUnits',
		  floodopacity: 'floodOpacity',
		  'flood-opacity': 'floodOpacity',
		  floodcolor: 'floodColor',
		  'flood-color': 'floodColor',
		  focusable: 'focusable',
		  fontfamily: 'fontFamily',
		  'font-family': 'fontFamily',
		  fontsize: 'fontSize',
		  'font-size': 'fontSize',
		  fontsizeadjust: 'fontSizeAdjust',
		  'font-size-adjust': 'fontSizeAdjust',
		  fontstretch: 'fontStretch',
		  'font-stretch': 'fontStretch',
		  fontstyle: 'fontStyle',
		  'font-style': 'fontStyle',
		  fontvariant: 'fontVariant',
		  'font-variant': 'fontVariant',
		  fontweight: 'fontWeight',
		  'font-weight': 'fontWeight',
		  format: 'format',
		  from: 'from',
		  fx: 'fx',
		  fy: 'fy',
		  g1: 'g1',
		  g2: 'g2',
		  glyphname: 'glyphName',
		  'glyph-name': 'glyphName',
		  glyphorientationhorizontal: 'glyphOrientationHorizontal',
		  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
		  glyphorientationvertical: 'glyphOrientationVertical',
		  'glyph-orientation-vertical': 'glyphOrientationVertical',
		  glyphref: 'glyphRef',
		  gradienttransform: 'gradientTransform',
		  gradientunits: 'gradientUnits',
		  hanging: 'hanging',
		  horizadvx: 'horizAdvX',
		  'horiz-adv-x': 'horizAdvX',
		  horizoriginx: 'horizOriginX',
		  'horiz-origin-x': 'horizOriginX',
		  ideographic: 'ideographic',
		  imagerendering: 'imageRendering',
		  'image-rendering': 'imageRendering',
		  in2: 'in2',
		  'in': 'in',
		  inlist: 'inlist',
		  intercept: 'intercept',
		  k1: 'k1',
		  k2: 'k2',
		  k3: 'k3',
		  k4: 'k4',
		  k: 'k',
		  kernelmatrix: 'kernelMatrix',
		  kernelunitlength: 'kernelUnitLength',
		  kerning: 'kerning',
		  keypoints: 'keyPoints',
		  keysplines: 'keySplines',
		  keytimes: 'keyTimes',
		  lengthadjust: 'lengthAdjust',
		  letterspacing: 'letterSpacing',
		  'letter-spacing': 'letterSpacing',
		  lightingcolor: 'lightingColor',
		  'lighting-color': 'lightingColor',
		  limitingconeangle: 'limitingConeAngle',
		  local: 'local',
		  markerend: 'markerEnd',
		  'marker-end': 'markerEnd',
		  markerheight: 'markerHeight',
		  markermid: 'markerMid',
		  'marker-mid': 'markerMid',
		  markerstart: 'markerStart',
		  'marker-start': 'markerStart',
		  markerunits: 'markerUnits',
		  markerwidth: 'markerWidth',
		  mask: 'mask',
		  maskcontentunits: 'maskContentUnits',
		  maskunits: 'maskUnits',
		  mathematical: 'mathematical',
		  mode: 'mode',
		  numoctaves: 'numOctaves',
		  offset: 'offset',
		  opacity: 'opacity',
		  operator: 'operator',
		  order: 'order',
		  orient: 'orient',
		  orientation: 'orientation',
		  origin: 'origin',
		  overflow: 'overflow',
		  overlineposition: 'overlinePosition',
		  'overline-position': 'overlinePosition',
		  overlinethickness: 'overlineThickness',
		  'overline-thickness': 'overlineThickness',
		  paintorder: 'paintOrder',
		  'paint-order': 'paintOrder',
		  panose1: 'panose1',
		  'panose-1': 'panose1',
		  pathlength: 'pathLength',
		  patterncontentunits: 'patternContentUnits',
		  patterntransform: 'patternTransform',
		  patternunits: 'patternUnits',
		  pointerevents: 'pointerEvents',
		  'pointer-events': 'pointerEvents',
		  points: 'points',
		  pointsatx: 'pointsAtX',
		  pointsaty: 'pointsAtY',
		  pointsatz: 'pointsAtZ',
		  prefix: 'prefix',
		  preservealpha: 'preserveAlpha',
		  preserveaspectratio: 'preserveAspectRatio',
		  primitiveunits: 'primitiveUnits',
		  property: 'property',
		  r: 'r',
		  radius: 'radius',
		  refx: 'refX',
		  refy: 'refY',
		  renderingintent: 'renderingIntent',
		  'rendering-intent': 'renderingIntent',
		  repeatcount: 'repeatCount',
		  repeatdur: 'repeatDur',
		  requiredextensions: 'requiredExtensions',
		  requiredfeatures: 'requiredFeatures',
		  resource: 'resource',
		  restart: 'restart',
		  result: 'result',
		  results: 'results',
		  rotate: 'rotate',
		  rx: 'rx',
		  ry: 'ry',
		  scale: 'scale',
		  security: 'security',
		  seed: 'seed',
		  shaperendering: 'shapeRendering',
		  'shape-rendering': 'shapeRendering',
		  slope: 'slope',
		  spacing: 'spacing',
		  specularconstant: 'specularConstant',
		  specularexponent: 'specularExponent',
		  speed: 'speed',
		  spreadmethod: 'spreadMethod',
		  startoffset: 'startOffset',
		  stddeviation: 'stdDeviation',
		  stemh: 'stemh',
		  stemv: 'stemv',
		  stitchtiles: 'stitchTiles',
		  stopcolor: 'stopColor',
		  'stop-color': 'stopColor',
		  stopopacity: 'stopOpacity',
		  'stop-opacity': 'stopOpacity',
		  strikethroughposition: 'strikethroughPosition',
		  'strikethrough-position': 'strikethroughPosition',
		  strikethroughthickness: 'strikethroughThickness',
		  'strikethrough-thickness': 'strikethroughThickness',
		  string: 'string',
		  stroke: 'stroke',
		  strokedasharray: 'strokeDasharray',
		  'stroke-dasharray': 'strokeDasharray',
		  strokedashoffset: 'strokeDashoffset',
		  'stroke-dashoffset': 'strokeDashoffset',
		  strokelinecap: 'strokeLinecap',
		  'stroke-linecap': 'strokeLinecap',
		  strokelinejoin: 'strokeLinejoin',
		  'stroke-linejoin': 'strokeLinejoin',
		  strokemiterlimit: 'strokeMiterlimit',
		  'stroke-miterlimit': 'strokeMiterlimit',
		  strokewidth: 'strokeWidth',
		  'stroke-width': 'strokeWidth',
		  strokeopacity: 'strokeOpacity',
		  'stroke-opacity': 'strokeOpacity',
		  suppresscontenteditablewarning: 'suppressContentEditableWarning',
		  suppresshydrationwarning: 'suppressHydrationWarning',
		  surfacescale: 'surfaceScale',
		  systemlanguage: 'systemLanguage',
		  tablevalues: 'tableValues',
		  targetx: 'targetX',
		  targety: 'targetY',
		  textanchor: 'textAnchor',
		  'text-anchor': 'textAnchor',
		  textdecoration: 'textDecoration',
		  'text-decoration': 'textDecoration',
		  textlength: 'textLength',
		  textrendering: 'textRendering',
		  'text-rendering': 'textRendering',
		  to: 'to',
		  transform: 'transform',
		  'typeof': 'typeof',
		  u1: 'u1',
		  u2: 'u2',
		  underlineposition: 'underlinePosition',
		  'underline-position': 'underlinePosition',
		  underlinethickness: 'underlineThickness',
		  'underline-thickness': 'underlineThickness',
		  unicode: 'unicode',
		  unicodebidi: 'unicodeBidi',
		  'unicode-bidi': 'unicodeBidi',
		  unicoderange: 'unicodeRange',
		  'unicode-range': 'unicodeRange',
		  unitsperem: 'unitsPerEm',
		  'units-per-em': 'unitsPerEm',
		  unselectable: 'unselectable',
		  valphabetic: 'vAlphabetic',
		  'v-alphabetic': 'vAlphabetic',
		  values: 'values',
		  vectoreffect: 'vectorEffect',
		  'vector-effect': 'vectorEffect',
		  version: 'version',
		  vertadvy: 'vertAdvY',
		  'vert-adv-y': 'vertAdvY',
		  vertoriginx: 'vertOriginX',
		  'vert-origin-x': 'vertOriginX',
		  vertoriginy: 'vertOriginY',
		  'vert-origin-y': 'vertOriginY',
		  vhanging: 'vHanging',
		  'v-hanging': 'vHanging',
		  videographic: 'vIdeographic',
		  'v-ideographic': 'vIdeographic',
		  viewbox: 'viewBox',
		  viewtarget: 'viewTarget',
		  visibility: 'visibility',
		  vmathematical: 'vMathematical',
		  'v-mathematical': 'vMathematical',
		  vocab: 'vocab',
		  widths: 'widths',
		  wordspacing: 'wordSpacing',
		  'word-spacing': 'wordSpacing',
		  writingmode: 'writingMode',
		  'writing-mode': 'writingMode',
		  x1: 'x1',
		  x2: 'x2',
		  x: 'x',
		  xchannelselector: 'xChannelSelector',
		  xheight: 'xHeight',
		  'x-height': 'xHeight',
		  xlinkactuate: 'xlinkActuate',
		  'xlink:actuate': 'xlinkActuate',
		  xlinkarcrole: 'xlinkArcrole',
		  'xlink:arcrole': 'xlinkArcrole',
		  xlinkhref: 'xlinkHref',
		  'xlink:href': 'xlinkHref',
		  xlinkrole: 'xlinkRole',
		  'xlink:role': 'xlinkRole',
		  xlinkshow: 'xlinkShow',
		  'xlink:show': 'xlinkShow',
		  xlinktitle: 'xlinkTitle',
		  'xlink:title': 'xlinkTitle',
		  xlinktype: 'xlinkType',
		  'xlink:type': 'xlinkType',
		  xmlbase: 'xmlBase',
		  'xml:base': 'xmlBase',
		  xmllang: 'xmlLang',
		  'xml:lang': 'xmlLang',
		  xmlns: 'xmlns',
		  'xml:space': 'xmlSpace',
		  xmlnsxlink: 'xmlnsXlink',
		  'xmlns:xlink': 'xmlnsXlink',
		  xmlspace: 'xmlSpace',
		  y1: 'y1',
		  y2: 'y2',
		  y: 'y',
		  ychannelselector: 'yChannelSelector',
		  z: 'z',
		  zoomandpan: 'zoomAndPan'
		};

		function getStackAddendum$2() {
		  var stack = ReactDebugCurrentFrame.getStackAddendum();
		  return stack != null ? stack : '';
		}

		{
		  var warnedProperties$1 = {};
		  var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
		  var EVENT_NAME_REGEX = /^on./;
		  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
		  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
		  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

		  var validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
		    if (hasOwnProperty$1.call(warnedProperties$1, name) && warnedProperties$1[name]) {
		      return true;
		    }

		    var lowerCasedName = name.toLowerCase();
		    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
		      warning(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
		      warnedProperties$1[name] = true;
		      return true;
		    }

		    // We can't rely on the event system being injected on the server.
		    if (canUseEventSystem) {
		      if (registrationNameModules.hasOwnProperty(name)) {
		        return true;
		      }
		      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
		      if (registrationName != null) {
		        warning(false, 'Invalid event handler property `%s`. Did you mean `%s`?%s', name, registrationName, getStackAddendum$2());
		        warnedProperties$1[name] = true;
		        return true;
		      }
		      if (EVENT_NAME_REGEX.test(name)) {
		        warning(false, 'Unknown event handler property `%s`. It will be ignored.%s', name, getStackAddendum$2());
		        warnedProperties$1[name] = true;
		        return true;
		      }
		    } else if (EVENT_NAME_REGEX.test(name)) {
		      // If no event plugins have been injected, we are in a server environment.
		      // So we can't tell if the event name is correct for sure, but we can filter
		      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
		      if (INVALID_EVENT_NAME_REGEX.test(name)) {
		        warning(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.%s', name, getStackAddendum$2());
		      }
		      warnedProperties$1[name] = true;
		      return true;
		    }

		    // Let the ARIA attribute hook validate ARIA attributes
		    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
		      return true;
		    }

		    if (lowerCasedName === 'innerhtml') {
		      warning(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
		      warnedProperties$1[name] = true;
		      return true;
		    }

		    if (lowerCasedName === 'aria') {
		      warning(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
		      warnedProperties$1[name] = true;
		      return true;
		    }

		    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
		      warning(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.%s', typeof value, getStackAddendum$2());
		      warnedProperties$1[name] = true;
		      return true;
		    }

		    if (typeof value === 'number' && isNaN(value)) {
		      warning(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.%s', name, getStackAddendum$2());
		      warnedProperties$1[name] = true;
		      return true;
		    }

		    var isReserved = isReservedProp(name);

		    // Known attributes should match the casing specified in the property config.
		    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
		      var standardName = possibleStandardNames[lowerCasedName];
		      if (standardName !== name) {
		        warning(false, 'Invalid DOM property `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum$2());
		        warnedProperties$1[name] = true;
		        return true;
		      }
		    } else if (!isReserved && name !== lowerCasedName) {
		      // Unknown attributes should have lowercase casing since that's how they
		      // will be cased anyway with server rendering.
		      warning(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.%s', name, lowerCasedName, getStackAddendum$2());
		      warnedProperties$1[name] = true;
		      return true;
		    }

		    if (typeof value === 'boolean' && !shouldAttributeAcceptBooleanValue(name)) {
		      if (value) {
		        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.%s', value, name, name, value, name, getStackAddendum$2());
		      } else {
		        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', value, name, name, value, name, name, name, getStackAddendum$2());
		      }
		      warnedProperties$1[name] = true;
		      return true;
		    }

		    // Now that we've validated casing, do not validate
		    // data types for reserved props
		    if (isReserved) {
		      return true;
		    }

		    // Warn when a known attribute is a bad type
		    if (!shouldSetAttribute(name, value)) {
		      warnedProperties$1[name] = true;
		      return false;
		    }

		    return true;
		  };
		}

		var warnUnknownProperties = function (type, props, canUseEventSystem) {
		  var unknownProps = [];
		  for (var key in props) {
		    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);
		    if (!isValid) {
		      unknownProps.push(key);
		    }
		  }

		  var unknownPropString = unknownProps.map(function (prop) {
		    return '`' + prop + '`';
		  }).join(', ');
		  if (unknownProps.length === 1) {
		    warning(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
		  } else if (unknownProps.length > 1) {
		    warning(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
		  }
		};

		function validateProperties$2(type, props, canUseEventSystem) {
		  if (isCustomComponent(type, props)) {
		    return;
		  }
		  warnUnknownProperties(type, props, canUseEventSystem);
		}

		// TODO: direct imports like some-package/src/* are bad. Fix me.
		var getCurrentFiberOwnerName$1 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
		var getCurrentFiberStackAddendum$2 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

		var didWarnInvalidHydration = false;
		var didWarnShadyDOM = false;

		var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
		var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
		var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
		var AUTOFOCUS = 'autoFocus';
		var CHILDREN = 'children';
		var STYLE = 'style';
		var HTML = '__html';

		var HTML_NAMESPACE = Namespaces.html;


		var getStack = emptyFunction.thatReturns('');

		{
		  getStack = getCurrentFiberStackAddendum$2;

		  var warnedUnknownTags = {
		    // Chrome is the only major browser not shipping <time>. But as of July
		    // 2017 it intends to ship it due to widespread usage. We intentionally
		    // *don't* warn for <time> even if it's unrecognized by Chrome because
		    // it soon will be, and many apps have been using it anyway.
		    time: true,
		    // There are working polyfills for <dialog>. Let people use it.
		    dialog: true
		  };

		  var validatePropertiesInDevelopment = function (type, props) {
		    validateProperties(type, props);
		    validateProperties$1(type, props);
		    validateProperties$2(type, props, /* canUseEventSystem */true);
		  };

		  // HTML parsing normalizes CR and CRLF to LF.
		  // It also can turn \u0000 into \uFFFD inside attributes.
		  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
		  // If we have a mismatch, it might be caused by that.
		  // We will still patch up in this case but not fire the warning.
		  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
		  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

		  var normalizeMarkupForTextOrAttribute = function (markup) {
		    var markupString = typeof markup === 'string' ? markup : '' + markup;
		    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
		  };

		  var warnForTextDifference = function (serverText, clientText) {
		    if (didWarnInvalidHydration) {
		      return;
		    }
		    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
		    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
		    if (normalizedServerText === normalizedClientText) {
		      return;
		    }
		    didWarnInvalidHydration = true;
		    warning(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
		  };

		  var warnForPropDifference = function (propName, serverValue, clientValue) {
		    if (didWarnInvalidHydration) {
		      return;
		    }
		    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
		    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
		    if (normalizedServerValue === normalizedClientValue) {
		      return;
		    }
		    didWarnInvalidHydration = true;
		    warning(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
		  };

		  var warnForExtraAttributes = function (attributeNames) {
		    if (didWarnInvalidHydration) {
		      return;
		    }
		    didWarnInvalidHydration = true;
		    var names = [];
		    attributeNames.forEach(function (name) {
		      names.push(name);
		    });
		    warning(false, 'Extra attributes from the server: %s', names);
		  };

		  var warnForInvalidEventListener = function (registrationName, listener) {
		    if (listener === false) {
		      warning(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', registrationName, registrationName, registrationName, getCurrentFiberStackAddendum$2());
		    } else {
		      warning(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.%s', registrationName, typeof listener, getCurrentFiberStackAddendum$2());
		    }
		  };

		  // Parse the HTML and read it back to normalize the HTML string so that it
		  // can be used for comparison.
		  var normalizeHTML = function (parent, html) {
		    // We could have created a separate document here to avoid
		    // re-initializing custom elements if they exist. But this breaks
		    // how <noscript> is being handled. So we use the same document.
		    // See the discussion in https://github.com/facebook/react/pull/11157.
		    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
		    testElement.innerHTML = html;
		    return testElement.innerHTML;
		  };
		}

		function ensureListeningTo(rootContainerElement, registrationName) {
		  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
		  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
		  listenTo(registrationName, doc);
		}

		function getOwnerDocumentFromRootContainer(rootContainerElement) {
		  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
		}

		// There are so many media events, it makes sense to just
		// maintain a list rather than create a `trapBubbledEvent` for each
		var mediaEvents = {
		  topAbort: 'abort',
		  topCanPlay: 'canplay',
		  topCanPlayThrough: 'canplaythrough',
		  topDurationChange: 'durationchange',
		  topEmptied: 'emptied',
		  topEncrypted: 'encrypted',
		  topEnded: 'ended',
		  topError: 'error',
		  topLoadedData: 'loadeddata',
		  topLoadedMetadata: 'loadedmetadata',
		  topLoadStart: 'loadstart',
		  topPause: 'pause',
		  topPlay: 'play',
		  topPlaying: 'playing',
		  topProgress: 'progress',
		  topRateChange: 'ratechange',
		  topSeeked: 'seeked',
		  topSeeking: 'seeking',
		  topStalled: 'stalled',
		  topSuspend: 'suspend',
		  topTimeUpdate: 'timeupdate',
		  topVolumeChange: 'volumechange',
		  topWaiting: 'waiting'
		};

		function trapClickOnNonInteractiveElement(node) {
		  // Mobile Safari does not fire properly bubble click events on
		  // non-interactive elements, which means delegated click listeners do not
		  // fire. The workaround for this bug involves attaching an empty click
		  // listener on the target node.
		  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
		  // Just set it using the onclick property so that we don't have to manage any
		  // bookkeeping for it. Not sure if we need to clear it when the listener is
		  // removed.
		  // TODO: Only do this for the relevant Safaris maybe?
		  node.onclick = emptyFunction;
		}

		function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
		  for (var propKey in nextProps) {
		    if (!nextProps.hasOwnProperty(propKey)) {
		      continue;
		    }
		    var nextProp = nextProps[propKey];
		    if (propKey === STYLE) {
		      {
		        if (nextProp) {
		          // Freeze the next style object so that we can assume it won't be
		          // mutated. We have already warned for this in the past.
		          Object.freeze(nextProp);
		        }
		      }
		      // Relies on `updateStylesByID` not mutating `styleUpdates`.
		      setValueForStyles(domElement, nextProp, getStack);
		    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
		      var nextHtml = nextProp ? nextProp[HTML] : undefined;
		      if (nextHtml != null) {
		        setInnerHTML(domElement, nextHtml);
		      }
		    } else if (propKey === CHILDREN) {
		      if (typeof nextProp === 'string') {
		        // Avoid setting initial textContent when the text is empty. In IE11 setting
		        // textContent on a <textarea> will cause the placeholder to not
		        // show within the <textarea> until it has been focused and blurred again.
		        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
		        var canSetTextContent = tag !== 'textarea' || nextProp !== '';
		        if (canSetTextContent) {
		          setTextContent(domElement, nextProp);
		        }
		      } else if (typeof nextProp === 'number') {
		        setTextContent(domElement, '' + nextProp);
		      }
		    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
		      // Noop
		    } else if (propKey === AUTOFOCUS) {
		      // We polyfill it separately on the client during commit.
		      // We blacklist it here rather than in the property list because we emit it in SSR.
		    } else if (registrationNameModules.hasOwnProperty(propKey)) {
		      if (nextProp != null) {
		        if (true && typeof nextProp !== 'function') {
		          warnForInvalidEventListener(propKey, nextProp);
		        }
		        ensureListeningTo(rootContainerElement, propKey);
		      }
		    } else if (isCustomComponentTag) {
		      setValueForAttribute(domElement, propKey, nextProp);
		    } else if (nextProp != null) {
		      // If we're updating to null or undefined, we should remove the property
		      // from the DOM node instead of inadvertently setting to a string. This
		      // brings us in line with the same behavior we have on initial render.
		      setValueForProperty(domElement, propKey, nextProp);
		    }
		  }
		}

		function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
		  // TODO: Handle wasCustomComponentTag
		  for (var i = 0; i < updatePayload.length; i += 2) {
		    var propKey = updatePayload[i];
		    var propValue = updatePayload[i + 1];
		    if (propKey === STYLE) {
		      setValueForStyles(domElement, propValue, getStack);
		    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
		      setInnerHTML(domElement, propValue);
		    } else if (propKey === CHILDREN) {
		      setTextContent(domElement, propValue);
		    } else if (isCustomComponentTag) {
		      if (propValue != null) {
		        setValueForAttribute(domElement, propKey, propValue);
		      } else {
		        deleteValueForAttribute(domElement, propKey);
		      }
		    } else if (propValue != null) {
		      setValueForProperty(domElement, propKey, propValue);
		    } else {
		      // If we're updating to null or undefined, we should remove the property
		      // from the DOM node instead of inadvertently setting to a string. This
		      // brings us in line with the same behavior we have on initial render.
		      deleteValueForProperty(domElement, propKey);
		    }
		  }
		}

		function createElement$1(type, props, rootContainerElement, parentNamespace) {
		  // We create tags in the namespace of their parent container, except HTML
		  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
		  var domElement;
		  var namespaceURI = parentNamespace;
		  if (namespaceURI === HTML_NAMESPACE) {
		    namespaceURI = getIntrinsicNamespace(type);
		  }
		  if (namespaceURI === HTML_NAMESPACE) {
		    {
		      var isCustomComponentTag = isCustomComponent(type, props);
		      // Should this check be gated by parent namespace? Not sure we want to
		      // allow <SVG> or <mATH>.
		      warning(isCustomComponentTag || type === type.toLowerCase(), '<%s /> is using uppercase HTML. Always use lowercase HTML tags ' + 'in React.', type);
		    }

		    if (type === 'script') {
		      // Create the script via .innerHTML so its "parser-inserted" flag is
		      // set to true and it does not execute
		      var div = ownerDocument.createElement('div');
		      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
		      // This is guaranteed to yield a script element.
		      var firstChild = div.firstChild;
		      domElement = div.removeChild(firstChild);
		    } else if (typeof props.is === 'string') {
		      // $FlowIssue `createElement` should be updated for Web Components
		      domElement = ownerDocument.createElement(type, { is: props.is });
		    } else {
		      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
		      // See discussion in https://github.com/facebook/react/pull/6896
		      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
		      domElement = ownerDocument.createElement(type);
		    }
		  } else {
		    domElement = ownerDocument.createElementNS(namespaceURI, type);
		  }

		  {
		    if (namespaceURI === HTML_NAMESPACE) {
		      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
		        warnedUnknownTags[type] = true;
		        warning(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
		      }
		    }
		  }

		  return domElement;
		}

		function createTextNode$1(text, rootContainerElement) {
		  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
		}

		function setInitialProperties$1(domElement, tag, rawProps, rootContainerElement) {
		  var isCustomComponentTag = isCustomComponent(tag, rawProps);
		  {
		    validatePropertiesInDevelopment(tag, rawProps);
		    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
		      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$1() || 'A component');
		      didWarnShadyDOM = true;
		    }
		  }

		  // TODO: Make sure that we check isMounted before firing any of these events.
		  var props;
		  switch (tag) {
		    case 'iframe':
		    case 'object':
		      trapBubbledEvent('topLoad', 'load', domElement);
		      props = rawProps;
		      break;
		    case 'video':
		    case 'audio':
		      // Create listener for each media event
		      for (var event in mediaEvents) {
		        if (mediaEvents.hasOwnProperty(event)) {
		          trapBubbledEvent(event, mediaEvents[event], domElement);
		        }
		      }
		      props = rawProps;
		      break;
		    case 'source':
		      trapBubbledEvent('topError', 'error', domElement);
		      props = rawProps;
		      break;
		    case 'img':
		    case 'image':
		      trapBubbledEvent('topError', 'error', domElement);
		      trapBubbledEvent('topLoad', 'load', domElement);
		      props = rawProps;
		      break;
		    case 'form':
		      trapBubbledEvent('topReset', 'reset', domElement);
		      trapBubbledEvent('topSubmit', 'submit', domElement);
		      props = rawProps;
		      break;
		    case 'details':
		      trapBubbledEvent('topToggle', 'toggle', domElement);
		      props = rawProps;
		      break;
		    case 'input':
		      initWrapperState(domElement, rawProps);
		      props = getHostProps(domElement, rawProps);
		      trapBubbledEvent('topInvalid', 'invalid', domElement);
		      // For controlled components we always need to ensure we're listening
		      // to onChange. Even if there is no listener.
		      ensureListeningTo(rootContainerElement, 'onChange');
		      break;
		    case 'option':
		      validateProps(domElement, rawProps);
		      props = getHostProps$1(domElement, rawProps);
		      break;
		    case 'select':
		      initWrapperState$1(domElement, rawProps);
		      props = getHostProps$2(domElement, rawProps);
		      trapBubbledEvent('topInvalid', 'invalid', domElement);
		      // For controlled components we always need to ensure we're listening
		      // to onChange. Even if there is no listener.
		      ensureListeningTo(rootContainerElement, 'onChange');
		      break;
		    case 'textarea':
		      initWrapperState$2(domElement, rawProps);
		      props = getHostProps$3(domElement, rawProps);
		      trapBubbledEvent('topInvalid', 'invalid', domElement);
		      // For controlled components we always need to ensure we're listening
		      // to onChange. Even if there is no listener.
		      ensureListeningTo(rootContainerElement, 'onChange');
		      break;
		    default:
		      props = rawProps;
		  }

		  assertValidProps(tag, props, getStack);

		  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

		  switch (tag) {
		    case 'input':
		      // TODO: Make sure we check if this is still unmounted or do any clean
		      // up necessary since we never stop tracking anymore.
		      track(domElement);
		      postMountWrapper(domElement, rawProps);
		      break;
		    case 'textarea':
		      // TODO: Make sure we check if this is still unmounted or do any clean
		      // up necessary since we never stop tracking anymore.
		      track(domElement);
		      postMountWrapper$3(domElement, rawProps);
		      break;
		    case 'option':
		      postMountWrapper$1(domElement, rawProps);
		      break;
		    case 'select':
		      postMountWrapper$2(domElement, rawProps);
		      break;
		    default:
		      if (typeof props.onClick === 'function') {
		        // TODO: This cast may not be sound for SVG, MathML or custom elements.
		        trapClickOnNonInteractiveElement(domElement);
		      }
		      break;
		  }
		}

		// Calculate the diff between the two objects.
		function diffProperties$1(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
		  {
		    validatePropertiesInDevelopment(tag, nextRawProps);
		  }

		  var updatePayload = null;

		  var lastProps;
		  var nextProps;
		  switch (tag) {
		    case 'input':
		      lastProps = getHostProps(domElement, lastRawProps);
		      nextProps = getHostProps(domElement, nextRawProps);
		      updatePayload = [];
		      break;
		    case 'option':
		      lastProps = getHostProps$1(domElement, lastRawProps);
		      nextProps = getHostProps$1(domElement, nextRawProps);
		      updatePayload = [];
		      break;
		    case 'select':
		      lastProps = getHostProps$2(domElement, lastRawProps);
		      nextProps = getHostProps$2(domElement, nextRawProps);
		      updatePayload = [];
		      break;
		    case 'textarea':
		      lastProps = getHostProps$3(domElement, lastRawProps);
		      nextProps = getHostProps$3(domElement, nextRawProps);
		      updatePayload = [];
		      break;
		    default:
		      lastProps = lastRawProps;
		      nextProps = nextRawProps;
		      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
		        // TODO: This cast may not be sound for SVG, MathML or custom elements.
		        trapClickOnNonInteractiveElement(domElement);
		      }
		      break;
		  }

		  assertValidProps(tag, nextProps, getStack);

		  var propKey;
		  var styleName;
		  var styleUpdates = null;
		  for (propKey in lastProps) {
		    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
		      continue;
		    }
		    if (propKey === STYLE) {
		      var lastStyle = lastProps[propKey];
		      for (styleName in lastStyle) {
		        if (lastStyle.hasOwnProperty(styleName)) {
		          if (!styleUpdates) {
		            styleUpdates = {};
		          }
		          styleUpdates[styleName] = '';
		        }
		      }
		    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {
		      // Noop. This is handled by the clear text mechanism.
		    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
		      // Noop
		    } else if (propKey === AUTOFOCUS) {
		      // Noop. It doesn't work on updates anyway.
		    } else if (registrationNameModules.hasOwnProperty(propKey)) {
		      // This is a special case. If any listener updates we need to ensure
		      // that the "current" fiber pointer gets updated so we need a commit
		      // to update this element.
		      if (!updatePayload) {
		        updatePayload = [];
		      }
		    } else {
		      // For all other deleted properties we add it to the queue. We use
		      // the whitelist in the commit phase instead.
		      (updatePayload = updatePayload || []).push(propKey, null);
		    }
		  }
		  for (propKey in nextProps) {
		    var nextProp = nextProps[propKey];
		    var lastProp = lastProps != null ? lastProps[propKey] : undefined;
		    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
		      continue;
		    }
		    if (propKey === STYLE) {
		      {
		        if (nextProp) {
		          // Freeze the next style object so that we can assume it won't be
		          // mutated. We have already warned for this in the past.
		          Object.freeze(nextProp);
		        }
		      }
		      if (lastProp) {
		        // Unset styles on `lastProp` but not on `nextProp`.
		        for (styleName in lastProp) {
		          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
		            if (!styleUpdates) {
		              styleUpdates = {};
		            }
		            styleUpdates[styleName] = '';
		          }
		        }
		        // Update styles that changed since `lastProp`.
		        for (styleName in nextProp) {
		          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
		            if (!styleUpdates) {
		              styleUpdates = {};
		            }
		            styleUpdates[styleName] = nextProp[styleName];
		          }
		        }
		      } else {
		        // Relies on `updateStylesByID` not mutating `styleUpdates`.
		        if (!styleUpdates) {
		          if (!updatePayload) {
		            updatePayload = [];
		          }
		          updatePayload.push(propKey, styleUpdates);
		        }
		        styleUpdates = nextProp;
		      }
		    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
		      var nextHtml = nextProp ? nextProp[HTML] : undefined;
		      var lastHtml = lastProp ? lastProp[HTML] : undefined;
		      if (nextHtml != null) {
		        if (lastHtml !== nextHtml) {
		          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
		        }
		      } else {
		        // TODO: It might be too late to clear this if we have children
		        // inserted already.
		      }
		    } else if (propKey === CHILDREN) {
		      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
		        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
		      }
		    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
		      // Noop
		    } else if (registrationNameModules.hasOwnProperty(propKey)) {
		      if (nextProp != null) {
		        // We eagerly listen to this even though we haven't committed yet.
		        if (true && typeof nextProp !== 'function') {
		          warnForInvalidEventListener(propKey, nextProp);
		        }
		        ensureListeningTo(rootContainerElement, propKey);
		      }
		      if (!updatePayload && lastProp !== nextProp) {
		        // This is a special case. If any listener updates we need to ensure
		        // that the "current" props pointer gets updated so we need a commit
		        // to update this element.
		        updatePayload = [];
		      }
		    } else {
		      // For any other property we always add it to the queue and then we
		      // filter it out using the whitelist during the commit.
		      (updatePayload = updatePayload || []).push(propKey, nextProp);
		    }
		  }
		  if (styleUpdates) {
		    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
		  }
		  return updatePayload;
		}

		// Apply the diff.
		function updateProperties$1(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
		  // Update checked *before* name.
		  // In the middle of an update, it is possible to have multiple checked.
		  // When a checked radio tries to change name, browser makes another radio's checked false.
		  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
		    updateChecked(domElement, nextRawProps);
		  }

		  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
		  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
		  // Apply the diff.
		  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);

		  // TODO: Ensure that an update gets scheduled if any of the special props
		  // changed.
		  switch (tag) {
		    case 'input':
		      // Update the wrapper around inputs *after* updating props. This has to
		      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
		      // raise warnings and prevent the new value from being assigned.
		      updateWrapper(domElement, nextRawProps);
		      break;
		    case 'textarea':
		      updateWrapper$1(domElement, nextRawProps);
		      break;
		    case 'select':
		      // <select> value update needs to occur after <option> children
		      // reconciliation
		      postUpdateWrapper(domElement, nextRawProps);
		      break;
		  }
		}

		function diffHydratedProperties$1(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
		  {
		    var suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
		    var isCustomComponentTag = isCustomComponent(tag, rawProps);
		    validatePropertiesInDevelopment(tag, rawProps);
		    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
		      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$1() || 'A component');
		      didWarnShadyDOM = true;
		    }
		  }

		  // TODO: Make sure that we check isMounted before firing any of these events.
		  switch (tag) {
		    case 'iframe':
		    case 'object':
		      trapBubbledEvent('topLoad', 'load', domElement);
		      break;
		    case 'video':
		    case 'audio':
		      // Create listener for each media event
		      for (var event in mediaEvents) {
		        if (mediaEvents.hasOwnProperty(event)) {
		          trapBubbledEvent(event, mediaEvents[event], domElement);
		        }
		      }
		      break;
		    case 'source':
		      trapBubbledEvent('topError', 'error', domElement);
		      break;
		    case 'img':
		    case 'image':
		      trapBubbledEvent('topError', 'error', domElement);
		      trapBubbledEvent('topLoad', 'load', domElement);
		      break;
		    case 'form':
		      trapBubbledEvent('topReset', 'reset', domElement);
		      trapBubbledEvent('topSubmit', 'submit', domElement);
		      break;
		    case 'details':
		      trapBubbledEvent('topToggle', 'toggle', domElement);
		      break;
		    case 'input':
		      initWrapperState(domElement, rawProps);
		      trapBubbledEvent('topInvalid', 'invalid', domElement);
		      // For controlled components we always need to ensure we're listening
		      // to onChange. Even if there is no listener.
		      ensureListeningTo(rootContainerElement, 'onChange');
		      break;
		    case 'option':
		      validateProps(domElement, rawProps);
		      break;
		    case 'select':
		      initWrapperState$1(domElement, rawProps);
		      trapBubbledEvent('topInvalid', 'invalid', domElement);
		      // For controlled components we always need to ensure we're listening
		      // to onChange. Even if there is no listener.
		      ensureListeningTo(rootContainerElement, 'onChange');
		      break;
		    case 'textarea':
		      initWrapperState$2(domElement, rawProps);
		      trapBubbledEvent('topInvalid', 'invalid', domElement);
		      // For controlled components we always need to ensure we're listening
		      // to onChange. Even if there is no listener.
		      ensureListeningTo(rootContainerElement, 'onChange');
		      break;
		  }

		  assertValidProps(tag, rawProps, getStack);

		  {
		    var extraAttributeNames = new Set();
		    var attributes = domElement.attributes;
		    for (var i = 0; i < attributes.length; i++) {
		      var name = attributes[i].name.toLowerCase();
		      switch (name) {
		        // Built-in SSR attribute is whitelisted
		        case 'data-reactroot':
		          break;
		        // Controlled attributes are not validated
		        // TODO: Only ignore them on controlled tags.
		        case 'value':
		          break;
		        case 'checked':
		          break;
		        case 'selected':
		          break;
		        default:
		          // Intentionally use the original name.
		          // See discussion in https://github.com/facebook/react/pull/10676.
		          extraAttributeNames.add(attributes[i].name);
		      }
		    }
		  }

		  var updatePayload = null;
		  for (var propKey in rawProps) {
		    if (!rawProps.hasOwnProperty(propKey)) {
		      continue;
		    }
		    var nextProp = rawProps[propKey];
		    if (propKey === CHILDREN) {
		      // For text content children we compare against textContent. This
		      // might match additional HTML that is hidden when we read it using
		      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
		      // satisfies our requirement. Our requirement is not to produce perfect
		      // HTML and attributes. Ideally we should preserve structure but it's
		      // ok not to if the visible content is still enough to indicate what
		      // even listeners these nodes might be wired up to.
		      // TODO: Warn if there is more than a single textNode as a child.
		      // TODO: Should we use domElement.firstChild.nodeValue to compare?
		      if (typeof nextProp === 'string') {
		        if (domElement.textContent !== nextProp) {
		          if (true && !suppressHydrationWarning) {
		            warnForTextDifference(domElement.textContent, nextProp);
		          }
		          updatePayload = [CHILDREN, nextProp];
		        }
		      } else if (typeof nextProp === 'number') {
		        if (domElement.textContent !== '' + nextProp) {
		          if (true && !suppressHydrationWarning) {
		            warnForTextDifference(domElement.textContent, nextProp);
		          }
		          updatePayload = [CHILDREN, '' + nextProp];
		        }
		      }
		    } else if (registrationNameModules.hasOwnProperty(propKey)) {
		      if (nextProp != null) {
		        if (true && typeof nextProp !== 'function') {
		          warnForInvalidEventListener(propKey, nextProp);
		        }
		        ensureListeningTo(rootContainerElement, propKey);
		      }
		    } else {
		      // Validate that the properties correspond to their expected values.
		      var serverValue;
		      var propertyInfo;
		      if (suppressHydrationWarning) {
		        // Don't bother comparing. We're ignoring all these warnings.
		      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||
		      // Controlled attributes are not validated
		      // TODO: Only ignore them on controlled tags.
		      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {
		        // Noop
		      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
		        var rawHtml = nextProp ? nextProp[HTML] || '' : '';
		        var serverHTML = domElement.innerHTML;
		        var expectedHTML = normalizeHTML(domElement, rawHtml);
		        if (expectedHTML !== serverHTML) {
		          warnForPropDifference(propKey, serverHTML, expectedHTML);
		        }
		      } else if (propKey === STYLE) {
		        // $FlowFixMe - Should be inferred as not undefined.
		        extraAttributeNames['delete'](propKey);
		        var expectedStyle = createDangerousStringForStyles(nextProp);
		        serverValue = domElement.getAttribute('style');
		        if (expectedStyle !== serverValue) {
		          warnForPropDifference(propKey, serverValue, expectedStyle);
		        }
		      } else if (isCustomComponentTag) {
		        // $FlowFixMe - Should be inferred as not undefined.
		        extraAttributeNames['delete'](propKey.toLowerCase());
		        serverValue = getValueForAttribute(domElement, propKey, nextProp);

		        if (nextProp !== serverValue) {
		          warnForPropDifference(propKey, serverValue, nextProp);
		        }
		      } else if (shouldSetAttribute(propKey, nextProp)) {
		        if (propertyInfo = getPropertyInfo(propKey)) {
		          // $FlowFixMe - Should be inferred as not undefined.
		          extraAttributeNames['delete'](propertyInfo.attributeName);
		          serverValue = getValueForProperty(domElement, propKey, nextProp);
		        } else {
		          var ownNamespace = parentNamespace;
		          if (ownNamespace === HTML_NAMESPACE) {
		            ownNamespace = getIntrinsicNamespace(tag);
		          }
		          if (ownNamespace === HTML_NAMESPACE) {
		            // $FlowFixMe - Should be inferred as not undefined.
		            extraAttributeNames['delete'](propKey.toLowerCase());
		          } else {
		            // $FlowFixMe - Should be inferred as not undefined.
		            extraAttributeNames['delete'](propKey);
		          }
		          serverValue = getValueForAttribute(domElement, propKey, nextProp);
		        }

		        if (nextProp !== serverValue) {
		          warnForPropDifference(propKey, serverValue, nextProp);
		        }
		      }
		    }
		  }

		  {
		    // $FlowFixMe - Should be inferred as not undefined.
		    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
		      // $FlowFixMe - Should be inferred as not undefined.
		      warnForExtraAttributes(extraAttributeNames);
		    }
		  }

		  switch (tag) {
		    case 'input':
		      // TODO: Make sure we check if this is still unmounted or do any clean
		      // up necessary since we never stop tracking anymore.
		      track(domElement);
		      postMountWrapper(domElement, rawProps);
		      break;
		    case 'textarea':
		      // TODO: Make sure we check if this is still unmounted or do any clean
		      // up necessary since we never stop tracking anymore.
		      track(domElement);
		      postMountWrapper$3(domElement, rawProps);
		      break;
		    case 'select':
		    case 'option':
		      // For input and textarea we current always set the value property at
		      // post mount to force it to diverge from attributes. However, for
		      // option and select we don't quite do the same thing and select
		      // is not resilient to the DOM state changing so we don't do that here.
		      // TODO: Consider not doing this for input and textarea.
		      break;
		    default:
		      if (typeof rawProps.onClick === 'function') {
		        // TODO: This cast may not be sound for SVG, MathML or custom elements.
		        trapClickOnNonInteractiveElement(domElement);
		      }
		      break;
		  }

		  return updatePayload;
		}

		function diffHydratedText$1(textNode, text) {
		  var isDifferent = textNode.nodeValue !== text;
		  return isDifferent;
		}

		function warnForUnmatchedText$1(textNode, text) {
		  {
		    warnForTextDifference(textNode.nodeValue, text);
		  }
		}

		function warnForDeletedHydratableElement$1(parentNode, child) {
		  {
		    if (didWarnInvalidHydration) {
		      return;
		    }
		    didWarnInvalidHydration = true;
		    warning(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
		  }
		}

		function warnForDeletedHydratableText$1(parentNode, child) {
		  {
		    if (didWarnInvalidHydration) {
		      return;
		    }
		    didWarnInvalidHydration = true;
		    warning(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
		  }
		}

		function warnForInsertedHydratedElement$1(parentNode, tag, props) {
		  {
		    if (didWarnInvalidHydration) {
		      return;
		    }
		    didWarnInvalidHydration = true;
		    warning(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
		  }
		}

		function warnForInsertedHydratedText$1(parentNode, text) {
		  {
		    if (text === '') {
		      // We expect to insert empty text nodes since they're not represented in
		      // the HTML.
		      // TODO: Remove this special case if we can just avoid inserting empty
		      // text nodes.
		      return;
		    }
		    if (didWarnInvalidHydration) {
		      return;
		    }
		    didWarnInvalidHydration = true;
		    warning(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
		  }
		}

		function restoreControlledState(domElement, tag, props) {
		  switch (tag) {
		    case 'input':
		      restoreControlledState$1(domElement, props);
		      return;
		    case 'textarea':
		      restoreControlledState$3(domElement, props);
		      return;
		    case 'select':
		      restoreControlledState$2(domElement, props);
		      return;
		  }
		}

		var ReactDOMFiberComponent = Object.freeze({
			createElement: createElement$1,
			createTextNode: createTextNode$1,
			setInitialProperties: setInitialProperties$1,
			diffProperties: diffProperties$1,
			updateProperties: updateProperties$1,
			diffHydratedProperties: diffHydratedProperties$1,
			diffHydratedText: diffHydratedText$1,
			warnForUnmatchedText: warnForUnmatchedText$1,
			warnForDeletedHydratableElement: warnForDeletedHydratableElement$1,
			warnForDeletedHydratableText: warnForDeletedHydratableText$1,
			warnForInsertedHydratedElement: warnForInsertedHydratedElement$1,
			warnForInsertedHydratedText: warnForInsertedHydratedText$1,
			restoreControlledState: restoreControlledState
		});

		// TODO: direct imports like some-package/src/* are bad. Fix me.
		var getCurrentFiberStackAddendum$6 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

		var validateDOMNesting = emptyFunction;

		{
		  // This validation code was written based on the HTML5 parsing spec:
		  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
		  //
		  // Note: this does not catch all invalid nesting, nor does it try to (as it's
		  // not clear what practical benefit doing so provides); instead, we warn only
		  // for cases where the parser will give a parse tree differing from what React
		  // intended. For example, <b><div></div></b> is invalid but we don't warn
		  // because it still parses correctly; we do warn for other cases like nested
		  // <p> tags where the beginning of the second element implicitly closes the
		  // first, causing a confusing mess.

		  // https://html.spec.whatwg.org/multipage/syntax.html#special
		  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

		  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
		  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

		  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
		  // TODO: Distinguish by namespace here -- for <title>, including it here
		  // errs on the side of fewer warnings
		  'foreignObject', 'desc', 'title'];

		  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
		  var buttonScopeTags = inScopeTags.concat(['button']);

		  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
		  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

		  var emptyAncestorInfo = {
		    current: null,

		    formTag: null,
		    aTagInScope: null,
		    buttonTagInScope: null,
		    nobrTagInScope: null,
		    pTagInButtonScope: null,

		    listItemTagAutoclosing: null,
		    dlItemTagAutoclosing: null
		  };

		  var updatedAncestorInfo$1 = function (oldInfo, tag, instance) {
		    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
		    var info = { tag: tag, instance: instance };

		    if (inScopeTags.indexOf(tag) !== -1) {
		      ancestorInfo.aTagInScope = null;
		      ancestorInfo.buttonTagInScope = null;
		      ancestorInfo.nobrTagInScope = null;
		    }
		    if (buttonScopeTags.indexOf(tag) !== -1) {
		      ancestorInfo.pTagInButtonScope = null;
		    }

		    // See rules for 'li', 'dd', 'dt' start tags in
		    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
		    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
		      ancestorInfo.listItemTagAutoclosing = null;
		      ancestorInfo.dlItemTagAutoclosing = null;
		    }

		    ancestorInfo.current = info;

		    if (tag === 'form') {
		      ancestorInfo.formTag = info;
		    }
		    if (tag === 'a') {
		      ancestorInfo.aTagInScope = info;
		    }
		    if (tag === 'button') {
		      ancestorInfo.buttonTagInScope = info;
		    }
		    if (tag === 'nobr') {
		      ancestorInfo.nobrTagInScope = info;
		    }
		    if (tag === 'p') {
		      ancestorInfo.pTagInButtonScope = info;
		    }
		    if (tag === 'li') {
		      ancestorInfo.listItemTagAutoclosing = info;
		    }
		    if (tag === 'dd' || tag === 'dt') {
		      ancestorInfo.dlItemTagAutoclosing = info;
		    }

		    return ancestorInfo;
		  };

		  /**
		   * Returns whether
		   */
		  var isTagValidWithParent = function (tag, parentTag) {
		    // First, let's check if we're in an unusual parsing mode...
		    switch (parentTag) {
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
		      case 'select':
		        return tag === 'option' || tag === 'optgroup' || tag === '#text';
		      case 'optgroup':
		        return tag === 'option' || tag === '#text';
		      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
		      // but
		      case 'option':
		        return tag === '#text';
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
		      // No special behavior since these rules fall back to "in body" mode for
		      // all except special table nodes which cause bad parsing behavior anyway.

		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
		      case 'tr':
		        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
		      case 'tbody':
		      case 'thead':
		      case 'tfoot':
		        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
		      case 'colgroup':
		        return tag === 'col' || tag === 'template';
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
		      case 'table':
		        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
		      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
		      case 'head':
		        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
		      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
		      case 'html':
		        return tag === 'head' || tag === 'body';
		      case '#document':
		        return tag === 'html';
		    }

		    // Probably in the "in body" parsing mode, so we outlaw only tag combos
		    // where the parsing rules cause implicit opens or closes to be added.
		    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
		    switch (tag) {
		      case 'h1':
		      case 'h2':
		      case 'h3':
		      case 'h4':
		      case 'h5':
		      case 'h6':
		        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

		      case 'rp':
		      case 'rt':
		        return impliedEndTags.indexOf(parentTag) === -1;

		      case 'body':
		      case 'caption':
		      case 'col':
		      case 'colgroup':
		      case 'frame':
		      case 'head':
		      case 'html':
		      case 'tbody':
		      case 'td':
		      case 'tfoot':
		      case 'th':
		      case 'thead':
		      case 'tr':
		        // These tags are only valid with a few parents that have special child
		        // parsing rules -- if we're down here, then none of those matched and
		        // so we allow it only if we don't know what the parent is, as all other
		        // cases are invalid.
		        return parentTag == null;
		    }

		    return true;
		  };

		  /**
		   * Returns whether
		   */
		  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
		    switch (tag) {
		      case 'address':
		      case 'article':
		      case 'aside':
		      case 'blockquote':
		      case 'center':
		      case 'details':
		      case 'dialog':
		      case 'dir':
		      case 'div':
		      case 'dl':
		      case 'fieldset':
		      case 'figcaption':
		      case 'figure':
		      case 'footer':
		      case 'header':
		      case 'hgroup':
		      case 'main':
		      case 'menu':
		      case 'nav':
		      case 'ol':
		      case 'p':
		      case 'section':
		      case 'summary':
		      case 'ul':
		      case 'pre':
		      case 'listing':
		      case 'table':
		      case 'hr':
		      case 'xmp':
		      case 'h1':
		      case 'h2':
		      case 'h3':
		      case 'h4':
		      case 'h5':
		      case 'h6':
		        return ancestorInfo.pTagInButtonScope;

		      case 'form':
		        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

		      case 'li':
		        return ancestorInfo.listItemTagAutoclosing;

		      case 'dd':
		      case 'dt':
		        return ancestorInfo.dlItemTagAutoclosing;

		      case 'button':
		        return ancestorInfo.buttonTagInScope;

		      case 'a':
		        // Spec says something about storing a list of markers, but it sounds
		        // equivalent to this check.
		        return ancestorInfo.aTagInScope;

		      case 'nobr':
		        return ancestorInfo.nobrTagInScope;
		    }

		    return null;
		  };

		  var didWarn = {};

		  validateDOMNesting = function (childTag, childText, ancestorInfo) {
		    ancestorInfo = ancestorInfo || emptyAncestorInfo;
		    var parentInfo = ancestorInfo.current;
		    var parentTag = parentInfo && parentInfo.tag;

		    if (childText != null) {
		      warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null');
		      childTag = '#text';
		    }

		    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
		    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
		    var invalidParentOrAncestor = invalidParent || invalidAncestor;
		    if (!invalidParentOrAncestor) {
		      return;
		    }

		    var ancestorTag = invalidParentOrAncestor.tag;
		    var addendum = getCurrentFiberStackAddendum$6();

		    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
		    if (didWarn[warnKey]) {
		      return;
		    }
		    didWarn[warnKey] = true;

		    var tagDisplayName = childTag;
		    var whitespaceInfo = '';
		    if (childTag === '#text') {
		      if (/\S/.test(childText)) {
		        tagDisplayName = 'Text nodes';
		      } else {
		        tagDisplayName = 'Whitespace text nodes';
		        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
		      }
		    } else {
		      tagDisplayName = '<' + childTag + '>';
		    }

		    if (invalidParent) {
		      var info = '';
		      if (ancestorTag === 'table' && childTag === 'tr') {
		        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
		      }
		      warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
		    } else {
		      warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
		    }
		  };

		  // TODO: turn this into a named export
		  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo$1;

		  // For testing
		  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
		    ancestorInfo = ancestorInfo || emptyAncestorInfo;
		    var parentInfo = ancestorInfo.current;
		    var parentTag = parentInfo && parentInfo.tag;
		    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
		  };
		}

		var validateDOMNesting$1 = validateDOMNesting;

		// TODO: direct imports like some-package/src/* are bad. Fix me.
		var createElement = createElement$1;
		var createTextNode = createTextNode$1;
		var setInitialProperties = setInitialProperties$1;
		var diffProperties = diffProperties$1;
		var updateProperties = updateProperties$1;
		var diffHydratedProperties = diffHydratedProperties$1;
		var diffHydratedText = diffHydratedText$1;
		var warnForUnmatchedText = warnForUnmatchedText$1;
		var warnForDeletedHydratableElement = warnForDeletedHydratableElement$1;
		var warnForDeletedHydratableText = warnForDeletedHydratableText$1;
		var warnForInsertedHydratedElement = warnForInsertedHydratedElement$1;
		var warnForInsertedHydratedText = warnForInsertedHydratedText$1;
		var updatedAncestorInfo = validateDOMNesting$1.updatedAncestorInfo;
		var precacheFiberNode = precacheFiberNode$1;
		var updateFiberProps = updateFiberProps$1;


		{
		  var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
		  if (typeof Map !== 'function' || Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
		    warning(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. http://fb.me/react-polyfills');
		  }
		}

		injection$3.injectFiberControlledHostComponent(ReactDOMFiberComponent);

		var eventsEnabled = null;
		var selectionInformation = null;

		/**
		 * True if the supplied DOM node is a valid node element.
		 *
		 * @param {?DOMElement} node The candidate DOM node.
		 * @return {boolean} True if the DOM is a valid DOM node.
		 * @internal
		 */
		function isValidContainer(node) {
		  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
		}

		function getReactRootElementInContainer(container) {
		  if (!container) {
		    return null;
		  }

		  if (container.nodeType === DOCUMENT_NODE) {
		    return container.documentElement;
		  } else {
		    return container.firstChild;
		  }
		}

		function shouldHydrateDueToLegacyHeuristic(container) {
		  var rootElement = getReactRootElementInContainer(container);
		  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
		}

		function shouldAutoFocusHostComponent(type, props) {
		  switch (type) {
		    case 'button':
		    case 'input':
		    case 'select':
		    case 'textarea':
		      return !!props.autoFocus;
		  }
		  return false;
		}

		var DOMRenderer = reactReconciler({
		  getRootHostContext: function (rootContainerInstance) {
		    var type = void 0;
		    var namespace = void 0;
		    var nodeType = rootContainerInstance.nodeType;
		    switch (nodeType) {
		      case DOCUMENT_NODE:
		      case DOCUMENT_FRAGMENT_NODE:
		        {
		          type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
		          var root = rootContainerInstance.documentElement;
		          namespace = root ? root.namespaceURI : getChildNamespace(null, '');
		          break;
		        }
		      default:
		        {
		          var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
		          var ownNamespace = container.namespaceURI || null;
		          type = container.tagName;
		          namespace = getChildNamespace(ownNamespace, type);
		          break;
		        }
		    }
		    {
		      var validatedTag = type.toLowerCase();
		      var _ancestorInfo = updatedAncestorInfo(null, validatedTag, null);
		      return { namespace: namespace, ancestorInfo: _ancestorInfo };
		    }
		    return namespace;
		  },
		  getChildHostContext: function (parentHostContext, type) {
		    {
		      var parentHostContextDev = parentHostContext;
		      var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
		      var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type, null);
		      return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
		    }
		    var parentNamespace = parentHostContext;
		    return getChildNamespace(parentNamespace, type);
		  },
		  getPublicInstance: function (instance) {
		    return instance;
		  },
		  prepareForCommit: function () {
		    eventsEnabled = isEnabled();
		    selectionInformation = getSelectionInformation();
		    setEnabled(false);
		  },
		  resetAfterCommit: function () {
		    restoreSelection(selectionInformation);
		    selectionInformation = null;
		    setEnabled(eventsEnabled);
		    eventsEnabled = null;
		  },
		  createInstance: function (type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
		    var parentNamespace = void 0;
		    {
		      // TODO: take namespace into account when validating.
		      var hostContextDev = hostContext;
		      validateDOMNesting$1(type, null, hostContextDev.ancestorInfo);
		      if (typeof props.children === 'string' || typeof props.children === 'number') {
		        var string = '' + props.children;
		        var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
		        validateDOMNesting$1(null, string, ownAncestorInfo);
		      }
		      parentNamespace = hostContextDev.namespace;
		    }
		    var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
		    precacheFiberNode(internalInstanceHandle, domElement);
		    updateFiberProps(domElement, props);
		    return domElement;
		  },
		  appendInitialChild: function (parentInstance, child) {
		    parentInstance.appendChild(child);
		  },
		  finalizeInitialChildren: function (domElement, type, props, rootContainerInstance) {
		    setInitialProperties(domElement, type, props, rootContainerInstance);
		    return shouldAutoFocusHostComponent(type, props);
		  },
		  prepareUpdate: function (domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
		    {
		      var hostContextDev = hostContext;
		      if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
		        var string = '' + newProps.children;
		        var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
		        validateDOMNesting$1(null, string, ownAncestorInfo);
		      }
		    }
		    return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
		  },
		  shouldSetTextContent: function (type, props) {
		    return type === 'textarea' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && typeof props.dangerouslySetInnerHTML.__html === 'string';
		  },
		  shouldDeprioritizeSubtree: function (type, props) {
		    return !!props.hidden;
		  },
		  createTextInstance: function (text, rootContainerInstance, hostContext, internalInstanceHandle) {
		    {
		      var hostContextDev = hostContext;
		      validateDOMNesting$1(null, text, hostContextDev.ancestorInfo);
		    }
		    var textNode = createTextNode(text, rootContainerInstance);
		    precacheFiberNode(internalInstanceHandle, textNode);
		    return textNode;
		  },


		  now: now,

		  mutation: {
		    commitMount: function (domElement, type, newProps, internalInstanceHandle) {
		      domElement.focus();
		    },
		    commitUpdate: function (domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
		      // Update the props handle so that we know which props are the ones with
		      // with current event handlers.
		      updateFiberProps(domElement, newProps);
		      // Apply the diff to the DOM node.
		      updateProperties(domElement, updatePayload, type, oldProps, newProps);
		    },
		    resetTextContent: function (domElement) {
		      domElement.textContent = '';
		    },
		    commitTextUpdate: function (textInstance, oldText, newText) {
		      textInstance.nodeValue = newText;
		    },
		    appendChild: function (parentInstance, child) {
		      parentInstance.appendChild(child);
		    },
		    appendChildToContainer: function (container, child) {
		      if (container.nodeType === COMMENT_NODE) {
		        container.parentNode.insertBefore(child, container);
		      } else {
		        container.appendChild(child);
		      }
		    },
		    insertBefore: function (parentInstance, child, beforeChild) {
		      parentInstance.insertBefore(child, beforeChild);
		    },
		    insertInContainerBefore: function (container, child, beforeChild) {
		      if (container.nodeType === COMMENT_NODE) {
		        container.parentNode.insertBefore(child, beforeChild);
		      } else {
		        container.insertBefore(child, beforeChild);
		      }
		    },
		    removeChild: function (parentInstance, child) {
		      parentInstance.removeChild(child);
		    },
		    removeChildFromContainer: function (container, child) {
		      if (container.nodeType === COMMENT_NODE) {
		        container.parentNode.removeChild(child);
		      } else {
		        container.removeChild(child);
		      }
		    }
		  },

		  hydration: {
		    canHydrateInstance: function (instance, type, props) {
		      if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
		        return null;
		      }
		      // This has now been refined to an element node.
		      return instance;
		    },
		    canHydrateTextInstance: function (instance, text) {
		      if (text === '' || instance.nodeType !== TEXT_NODE) {
		        // Empty strings are not parsed by HTML so there won't be a correct match here.
		        return null;
		      }
		      // This has now been refined to a text node.
		      return instance;
		    },
		    getNextHydratableSibling: function (instance) {
		      var node = instance.nextSibling;
		      // Skip non-hydratable nodes.
		      while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE) {
		        node = node.nextSibling;
		      }
		      return node;
		    },
		    getFirstHydratableChild: function (parentInstance) {
		      var next = parentInstance.firstChild;
		      // Skip non-hydratable nodes.
		      while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE) {
		        next = next.nextSibling;
		      }
		      return next;
		    },
		    hydrateInstance: function (instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
		      precacheFiberNode(internalInstanceHandle, instance);
		      // TODO: Possibly defer this until the commit phase where all the events
		      // get attached.
		      updateFiberProps(instance, props);
		      var parentNamespace = void 0;
		      {
		        var hostContextDev = hostContext;
		        parentNamespace = hostContextDev.namespace;
		      }
		      return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
		    },
		    hydrateTextInstance: function (textInstance, text, internalInstanceHandle) {
		      precacheFiberNode(internalInstanceHandle, textInstance);
		      return diffHydratedText(textInstance, text);
		    },
		    didNotMatchHydratedContainerTextInstance: function (parentContainer, textInstance, text) {
		      {
		        warnForUnmatchedText(textInstance, text);
		      }
		    },
		    didNotMatchHydratedTextInstance: function (parentType, parentProps, parentInstance, textInstance, text) {
		      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
		        warnForUnmatchedText(textInstance, text);
		      }
		    },
		    didNotHydrateContainerInstance: function (parentContainer, instance) {
		      {
		        if (instance.nodeType === 1) {
		          warnForDeletedHydratableElement(parentContainer, instance);
		        } else {
		          warnForDeletedHydratableText(parentContainer, instance);
		        }
		      }
		    },
		    didNotHydrateInstance: function (parentType, parentProps, parentInstance, instance) {
		      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
		        if (instance.nodeType === 1) {
		          warnForDeletedHydratableElement(parentInstance, instance);
		        } else {
		          warnForDeletedHydratableText(parentInstance, instance);
		        }
		      }
		    },
		    didNotFindHydratableContainerInstance: function (parentContainer, type, props) {
		      {
		        warnForInsertedHydratedElement(parentContainer, type, props);
		      }
		    },
		    didNotFindHydratableContainerTextInstance: function (parentContainer, text) {
		      {
		        warnForInsertedHydratedText(parentContainer, text);
		      }
		    },
		    didNotFindHydratableInstance: function (parentType, parentProps, parentInstance, type, props) {
		      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
		        warnForInsertedHydratedElement(parentInstance, type, props);
		      }
		    },
		    didNotFindHydratableTextInstance: function (parentType, parentProps, parentInstance, text) {
		      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
		        warnForInsertedHydratedText(parentInstance, text);
		      }
		    }
		  },

		  scheduleDeferredCallback: rIC,
		  cancelDeferredCallback: cIC,

		  useSyncScheduling: !enableAsyncSchedulingByDefaultInReactDOM
		});

		injection$4.injectFiberBatchedUpdates(DOMRenderer.batchedUpdates);

		var warnedAboutHydrateAPI = false;

		function renderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
		  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;

		  {
		    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
		      var hostInstance = DOMRenderer.findHostInstanceWithNoPortals(container._reactRootContainer.current);
		      if (hostInstance) {
		        warning(hostInstance.parentNode === container, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.');
		      }
		    }

		    var isRootRenderedBySomeReact = !!container._reactRootContainer;
		    var rootEl = getReactRootElementInContainer(container);
		    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));

		    warning(!hasNonRootReactChild || isRootRenderedBySomeReact, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.');

		    warning(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.');
		  }

		  var root = container._reactRootContainer;
		  if (!root) {
		    var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
		    // First clear any existing content.
		    if (!shouldHydrate) {
		      var warned = false;
		      var rootSibling = void 0;
		      while (rootSibling = container.lastChild) {
		        {
		          if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
		            warned = true;
		            warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
		          }
		        }
		        container.removeChild(rootSibling);
		      }
		    }
		    {
		      if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
		        warnedAboutHydrateAPI = true;
		        lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
		      }
		    }
		    var newRoot = DOMRenderer.createContainer(container, shouldHydrate);
		    root = container._reactRootContainer = newRoot;
		    // Initial mount should not be batched.
		    DOMRenderer.unbatchedUpdates(function () {
		      DOMRenderer.updateContainer(children, newRoot, parentComponent, callback);
		    });
		  } else {
		    DOMRenderer.updateContainer(children, root, parentComponent, callback);
		  }
		  return DOMRenderer.getPublicRootInstance(root);
		}

		function createPortal(children, container) {
		  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

		  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
		  // TODO: pass ReactDOM portal implementation as third argument
		  return createPortal$1(children, container, null, key);
		}

		function ReactRoot(container, hydrate) {
		  var root = DOMRenderer.createContainer(container, hydrate);
		  this._reactRootContainer = root;
		}
		ReactRoot.prototype.render = function (children, callback) {
		  var root = this._reactRootContainer;
		  DOMRenderer.updateContainer(children, root, null, callback);
		};
		ReactRoot.prototype.unmount = function (callback) {
		  var root = this._reactRootContainer;
		  DOMRenderer.updateContainer(null, root, null, callback);
		};

		var ReactDOM = {
		  createPortal: createPortal,

		  findDOMNode: function (componentOrElement) {
		    {
		      var owner = ReactCurrentOwner.current;
		      if (owner !== null) {
		        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
		        warning(warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner) || 'A component');
		        owner.stateNode._warnedAboutRefsInRender = true;
		      }
		    }
		    if (componentOrElement == null) {
		      return null;
		    }
		    if (componentOrElement.nodeType === ELEMENT_NODE) {
		      return componentOrElement;
		    }

		    var inst = get(componentOrElement);
		    if (inst) {
		      return DOMRenderer.findHostInstance(inst);
		    }

		    if (typeof componentOrElement.render === 'function') {
		      invariant(false, 'Unable to find node on an unmounted component.');
		    } else {
		      invariant(false, 'Element appears to be neither ReactComponent nor DOMNode. Keys: %s', Object.keys(componentOrElement));
		    }
		  },
		  hydrate: function (element, container, callback) {
		    // TODO: throw or warn if we couldn't hydrate?
		    return renderSubtreeIntoContainer(null, element, container, true, callback);
		  },
		  render: function (element, container, callback) {
		    return renderSubtreeIntoContainer(null, element, container, false, callback);
		  },
		  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
		    !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
		    return renderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
		  },
		  unmountComponentAtNode: function (container) {
		    !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;

		    if (container._reactRootContainer) {
		      {
		        var rootEl = getReactRootElementInContainer(container);
		        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
		        warning(!renderedByDifferentReact, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.');
		      }

		      // Unmount should not be batched.
		      DOMRenderer.unbatchedUpdates(function () {
		        renderSubtreeIntoContainer(null, null, container, false, function () {
		          container._reactRootContainer = null;
		        });
		      });
		      // If you call unmountComponentAtNode twice in quick succession, you'll
		      // get `true` twice. That's probably fine?
		      return true;
		    } else {
		      {
		        var _rootEl = getReactRootElementInContainer(container);
		        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));

		        // Check if the container itself is a React root node.
		        var isContainerReactRoot = container.nodeType === 1 && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

		        warning(!hasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.');
		      }

		      return false;
		    }
		  },


		  // Temporary alias since we already shipped React 16 RC with it.
		  // TODO: remove in React 17.
		  unstable_createPortal: createPortal,

		  unstable_batchedUpdates: batchedUpdates,

		  unstable_deferredUpdates: DOMRenderer.deferredUpdates,

		  flushSync: DOMRenderer.flushSync,

		  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
		    // For TapEventPlugin which is popular in open source
		    EventPluginHub: EventPluginHub,
		    // Used by test-utils
		    EventPluginRegistry: EventPluginRegistry,
		    EventPropagators: EventPropagators,
		    ReactControlledComponent: ReactControlledComponent,
		    ReactDOMComponentTree: ReactDOMComponentTree,
		    ReactDOMEventListener: ReactDOMEventListener
		  }
		};

		if (enableCreateRoot) {
		  ReactDOM.createRoot = function createRoot(container, options) {
		    var hydrate = options != null && options.hydrate === true;
		    return new ReactRoot(container, hydrate);
		  };
		}

		var foundDevTools = DOMRenderer.injectIntoDevTools({
		  findFiberByHostInstance: getClosestInstanceFromNode,
		  bundleType: 1,
		  version: ReactVersion,
		  rendererPackageName: 'react-dom'
		});

		{
		  if (!foundDevTools && ExecutionEnvironment.canUseDOM && window.top === window.self) {
		    // If we're in Chrome or Firefox, provide a download link if not installed.
		    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
		      var protocol = window.location.protocol;
		      // Don't warn in exotic cases like chrome-extension://.
		      if (/^(https?|file):$/.test(protocol)) {
		        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
		      }
		    }
		  }
		}



		var ReactDOM$2 = Object.freeze({
			default: ReactDOM
		});

		var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

		// TODO: decide on the top-level export form.
		// This is hacky but makes it work with both Rollup and Jest.
		var reactDom = ReactDOM$3['default'] ? ReactDOM$3['default'] : ReactDOM$3;

		module.exports = reactDom;
		  })();
		}

		}).call(this,require('_process'))
		},{"_process":957,"fbjs/lib/EventListener":665,"fbjs/lib/ExecutionEnvironment":666,"fbjs/lib/camelizeStyleName":668,"fbjs/lib/containsNode":669,"fbjs/lib/emptyFunction":670,"fbjs/lib/emptyObject":671,"fbjs/lib/focusNode":672,"fbjs/lib/getActiveElement":673,"fbjs/lib/hyphenateStyleName":675,"fbjs/lib/invariant":676,"fbjs/lib/shallowEqual":680,"fbjs/lib/warning":681,"object-assign":954,"prop-types/checkPropTypes":958,"react":1016}],970:[function(require,module,exports){
		/** @license React v16.2.0
		 * react-dom.production.min.js
		 *
		 * Copyright (c) 2013-present, Facebook, Inc.
		 *
		 * This source code is licensed under the MIT license found in the
		 * LICENSE file in the root directory of this source tree.
		 */

		/*
		 Modernizr 3.0.0pre (Custom Build) | MIT
		*/
		'use strict';var aa=require("react"),l=require("fbjs/lib/ExecutionEnvironment"),B=require("object-assign"),C=require("fbjs/lib/emptyFunction"),ba=require("fbjs/lib/EventListener"),da=require("fbjs/lib/getActiveElement"),ea=require("fbjs/lib/shallowEqual"),fa=require("fbjs/lib/containsNode"),ia=require("fbjs/lib/focusNode"),D=require("fbjs/lib/emptyObject");
		function E(a){for(var b=arguments.length-1,c="Minified React error #"+a+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d"+a,d=0;d<b;d++)c+="\x26args[]\x3d"+encodeURIComponent(arguments[d+1]);b=Error(c+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name="Invariant Violation";b.framesToPop=1;throw b;}aa?void 0:E("227");
		var oa={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function pa(a,b){return(a&b)===b}
		var ta={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=ta,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){ua.hasOwnProperty(f)?E("48",f):void 0;var g=f.toLowerCase(),h=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:pa(h,b.MUST_USE_PROPERTY),
		hasBooleanValue:pa(h,b.HAS_BOOLEAN_VALUE),hasNumericValue:pa(h,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:pa(h,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:pa(h,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:pa(h,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:E("50",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);ua[f]=g}}},ua={};
		function va(a,b){if(oa.hasOwnProperty(a)||2<a.length&&("o"===a[0]||"O"===a[0])&&("n"===a[1]||"N"===a[1]))return!1;if(null===b)return!0;switch(typeof b){case "boolean":return oa.hasOwnProperty(a)?a=!0:(b=wa(a))?a=b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue:(a=a.toLowerCase().slice(0,5),a="data-"===a||"aria-"===a),a;case "undefined":case "number":case "string":case "object":return!0;default:return!1}}function wa(a){return ua.hasOwnProperty(a)?ua[a]:null}
		var xa=ta,ya=xa.MUST_USE_PROPERTY,K=xa.HAS_BOOLEAN_VALUE,za=xa.HAS_NUMERIC_VALUE,Aa=xa.HAS_POSITIVE_NUMERIC_VALUE,Ba=xa.HAS_OVERLOADED_BOOLEAN_VALUE,Ca=xa.HAS_STRING_BOOLEAN_VALUE,Da={Properties:{allowFullScreen:K,async:K,autoFocus:K,autoPlay:K,capture:Ba,checked:ya|K,cols:Aa,contentEditable:Ca,controls:K,"default":K,defer:K,disabled:K,download:Ba,draggable:Ca,formNoValidate:K,hidden:K,loop:K,multiple:ya|K,muted:ya|K,noValidate:K,open:K,playsInline:K,readOnly:K,required:K,reversed:K,rows:Aa,rowSpan:za,
		scoped:K,seamless:K,selected:ya|K,size:Aa,start:za,span:Aa,spellCheck:Ca,style:0,tabIndex:0,itemScope:K,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:Ca},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute("value");"number"!==a.type||!1===a.hasAttribute("value")?a.setAttribute("value",""+b):a.validity&&!a.validity.badInput&&a.ownerDocument.activeElement!==a&&
		a.setAttribute("value",""+b)}}},Ea=xa.HAS_STRING_BOOLEAN_VALUE,M={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},Ga={Properties:{autoReverse:Ea,externalResourcesRequired:Ea,preserveAlpha:Ea},DOMAttributeNames:{autoReverse:"autoReverse",externalResourcesRequired:"externalResourcesRequired",preserveAlpha:"preserveAlpha"},DOMAttributeNamespaces:{xlinkActuate:M.xlink,xlinkArcrole:M.xlink,xlinkHref:M.xlink,xlinkRole:M.xlink,xlinkShow:M.xlink,xlinkTitle:M.xlink,xlinkType:M.xlink,
		xmlBase:M.xml,xmlLang:M.xml,xmlSpace:M.xml}},Ha=/[\-\:]([a-z])/g;function Ia(a){return a[1].toUpperCase()}
		"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function(a){var b=a.replace(Ha,
		Ia);Ga.Properties[b]=0;Ga.DOMAttributeNames[b]=a});xa.injectDOMPropertyConfig(Da);xa.injectDOMPropertyConfig(Ga);
		var P={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){"function"!==typeof a.invokeGuardedCallback?E("197"):void 0;Ja=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){Ja.apply(P,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){P.invokeGuardedCallback.apply(this,arguments);if(P.hasCaughtError()){var q=P.clearCaughtError();P._hasRethrowError||(P._hasRethrowError=!0,P._rethrowError=
		q)}},rethrowCaughtError:function(){return Ka.apply(P,arguments)},hasCaughtError:function(){return P._hasCaughtError},clearCaughtError:function(){if(P._hasCaughtError){var a=P._caughtError;P._caughtError=null;P._hasCaughtError=!1;return a}E("198")}};function Ja(a,b,c,d,e,f,g,h,k){P._hasCaughtError=!1;P._caughtError=null;var q=Array.prototype.slice.call(arguments,3);try{b.apply(c,q)}catch(v){P._caughtError=v,P._hasCaughtError=!0}}
		function Ka(){if(P._hasRethrowError){var a=P._rethrowError;P._rethrowError=null;P._hasRethrowError=!1;throw a;}}var La=null,Ma={};
		function Na(){if(La)for(var a in Ma){var b=Ma[a],c=La.indexOf(a);-1<c?void 0:E("96",a);if(!Oa[c]){b.extractEvents?void 0:E("97",a);Oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;Pa.hasOwnProperty(h)?E("99",h):void 0;Pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&Qa(k[e],g,h);e=!0}else f.registrationName?(Qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:E("98",d,a)}}}}
		function Qa(a,b,c){Ra[a]?E("100",a):void 0;Ra[a]=b;Sa[a]=b.eventTypes[c].dependencies}var Oa=[],Pa={},Ra={},Sa={};function Ta(a){La?E("101"):void 0;La=Array.prototype.slice.call(a);Na()}function Ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];Ma.hasOwnProperty(c)&&Ma[c]===d||(Ma[c]?E("102",c):void 0,Ma[c]=d,b=!0)}b&&Na()}
		var Va=Object.freeze({plugins:Oa,eventNameDispatchConfigs:Pa,registrationNameModules:Ra,registrationNameDependencies:Sa,possibleRegistrationNames:null,injectEventPluginOrder:Ta,injectEventPluginsByName:Ua}),Wa=null,Xa=null,Ya=null;function Za(a,b,c,d){b=a.type||"unknown-event";a.currentTarget=Ya(d);P.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}
		function $a(a,b){null==b?E("30"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function ab(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var bb=null;
		function cb(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Za(a,b,c[e],d[e]);else c&&Za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function db(a){return cb(a,!0)}function gb(a){return cb(a,!1)}var hb={injectEventPluginOrder:Ta,injectEventPluginsByName:Ua};
		function ib(a,b){var c=a.stateNode;if(!c)return null;var d=Wa(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;c&&"function"!==typeof c?E("231",b,typeof c):void 0;
		return c}function jb(a,b,c,d){for(var e,f=0;f<Oa.length;f++){var g=Oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=$a(e,g))}return e}function kb(a){a&&(bb=$a(bb,a))}function lb(a){var b=bb;bb=null;b&&(a?ab(b,db):ab(b,gb),bb?E("95"):void 0,P.rethrowCaughtError())}var mb=Object.freeze({injection:hb,getListener:ib,extractEvents:jb,enqueueEvents:kb,processEventQueue:lb}),nb=Math.random().toString(36).slice(2),Q="__reactInternalInstance$"+nb,ob="__reactEventHandlers$"+nb;
		function pb(a){if(a[Q])return a[Q];for(var b=[];!a[Q];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=void 0,d=a[Q];if(5===d.tag||6===d.tag)return d;for(;a&&(d=a[Q]);a=b.pop())c=d;return c}function qb(a){if(5===a.tag||6===a.tag)return a.stateNode;E("33")}function rb(a){return a[ob]||null}
		var sb=Object.freeze({precacheFiberNode:function(a,b){b[Q]=a},getClosestInstanceFromNode:pb,getInstanceFromNode:function(a){a=a[Q];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:qb,getFiberCurrentPropsFromNode:rb,updateFiberProps:function(a,b){a[ob]=b}});function tb(a){do a=a["return"];while(a&&5!==a.tag);return a?a:null}function ub(a,b,c){for(var d=[];a;)d.push(a),a=tb(a);for(a=d.length;0<a--;)b(d[a],"captured",c);for(a=0;a<d.length;a++)b(d[a],"bubbled",c)}
		function vb(a,b,c){if(b=ib(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a)}function wb(a){a&&a.dispatchConfig.phasedRegistrationNames&&ub(a._targetInst,vb,a)}function xb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?tb(b):null;ub(b,vb,a)}}
		function yb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=ib(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a))}function zb(a){a&&a.dispatchConfig.registrationName&&yb(a._targetInst,null,a)}function Ab(a){ab(a,wb)}
		function Bb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=tb(h))g++;h=0;for(var k=f;k;k=tb(k))h++;for(;0<g-h;)e=tb(e),g--;for(;0<h-g;)f=tb(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=tb(e);f=tb(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=tb(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=tb(d)}for(d=0;d<e.length;d++)yb(e[d],"bubbled",a);for(a=c.length;0<a--;)yb(c[a],"captured",b)}
		var Cb=Object.freeze({accumulateTwoPhaseDispatches:Ab,accumulateTwoPhaseDispatchesSkipTarget:function(a){ab(a,xb)},accumulateEnterLeaveDispatches:Bb,accumulateDirectDispatches:function(a){ab(a,zb)}}),Db=null;function Eb(){!Db&&l.canUseDOM&&(Db="textContent"in document.documentElement?"textContent":"innerText");return Db}var S={_root:null,_startText:null,_fallbackText:null};
		function Fb(){if(S._fallbackText)return S._fallbackText;var a,b=S._startText,c=b.length,d,e=Gb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);S._fallbackText=e.slice(a,1<d?1-d:void 0);return S._fallbackText}function Gb(){return"value"in S._root?S._root.value:S._root[Eb()]}
		var Hb="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),Ib={type:null,target:null,currentTarget:C.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
		function T(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?C.thatReturnsTrue:C.thatReturnsFalse;this.isPropagationStopped=C.thatReturnsFalse;return this}
		B(T.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=C.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=C.thatReturnsTrue)},persist:function(){this.isPersistent=C.thatReturnsTrue},isPersistent:C.thatReturnsFalse,
		destructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Hb.length;a++)this[Hb[a]]=null}});T.Interface=Ib;T.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;B(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=B({},this.Interface,b);a.augmentClass=this.augmentClass;Jb(a)};Jb(T);function Kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}
		function Lb(a){a instanceof this?void 0:E("223");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Jb(a){a.eventPool=[];a.getPooled=Kb;a.release=Lb}function Mb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Mb,{data:null});function Nb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Nb,{data:null});var Pb=[9,13,27,32],Vb=l.canUseDOM&&"CompositionEvent"in window,Wb=null;l.canUseDOM&&"documentMode"in document&&(Wb=document.documentMode);var Xb;
		if(Xb=l.canUseDOM&&"TextEvent"in window&&!Wb){var Yb=window.opera;Xb=!("object"===typeof Yb&&"function"===typeof Yb.version&&12>=parseInt(Yb.version(),10))}
		var Zb=Xb,$b=l.canUseDOM&&(!Vb||Wb&&8<Wb&&11>=Wb),ac=String.fromCharCode(32),bc={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
		captured:"onCompositionStartCapture"},dependencies:"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")}},cc=!1;
		function dc(a,b){switch(a){case "topKeyUp":return-1!==Pb.indexOf(b.keyCode);case "topKeyDown":return 229!==b.keyCode;case "topKeyPress":case "topMouseDown":case "topBlur":return!0;default:return!1}}function ec(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var fc=!1;function gc(a,b){switch(a){case "topCompositionEnd":return ec(b);case "topKeyPress":if(32!==b.which)return null;cc=!0;return ac;case "topTextInput":return a=b.data,a===ac&&cc?null:a;default:return null}}
		function hc(a,b){if(fc)return"topCompositionEnd"===a||!Vb&&dc(a,b)?(a=Fb(),S._root=null,S._startText=null,S._fallbackText=null,fc=!1,a):null;switch(a){case "topPaste":return null;case "topKeyPress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "topCompositionEnd":return $b?null:b.data;default:return null}}
		var ic={eventTypes:bc,extractEvents:function(a,b,c,d){var e;if(Vb)b:{switch(a){case "topCompositionStart":var f=bc.compositionStart;break b;case "topCompositionEnd":f=bc.compositionEnd;break b;case "topCompositionUpdate":f=bc.compositionUpdate;break b}f=void 0}else fc?dc(a,c)&&(f=bc.compositionEnd):"topKeyDown"===a&&229===c.keyCode&&(f=bc.compositionStart);f?($b&&(fc||f!==bc.compositionStart?f===bc.compositionEnd&&fc&&(e=Fb()):(S._root=d,S._startText=Gb(),fc=!0)),f=Mb.getPooled(f,b,c,d),e?f.data=
		e:(e=ec(c),null!==e&&(f.data=e)),Ab(f),e=f):e=null;(a=Zb?gc(a,c):hc(a,c))?(b=Nb.getPooled(bc.beforeInput,b,c,d),b.data=a,Ab(b)):b=null;return[e,b]}},jc=null,kc=null,lc=null;function mc(a){if(a=Xa(a)){jc&&"function"===typeof jc.restoreControlledState?void 0:E("194");var b=Wa(a.stateNode);jc.restoreControlledState(a.stateNode,a.type,b)}}var nc={injectFiberControlledHostComponent:function(a){jc=a}};function oc(a){kc?lc?lc.push(a):lc=[a]:kc=a}
		function pc(){if(kc){var a=kc,b=lc;lc=kc=null;mc(a);if(b)for(a=0;a<b.length;a++)mc(b[a])}}var qc=Object.freeze({injection:nc,enqueueStateRestore:oc,restoreStateIfNeeded:pc});function rc(a,b){return a(b)}var sc=!1;function tc(a,b){if(sc)return rc(a,b);sc=!0;try{return rc(a,b)}finally{sc=!1,pc()}}var uc={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};
		function vc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!uc[a.type]:"textarea"===b?!0:!1}function wc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var xc;l.canUseDOM&&(xc=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("",""));
		function yc(a,b){if(!l.canUseDOM||b&&!("addEventListener"in document))return!1;b="on"+a;var c=b in document;c||(c=document.createElement("div"),c.setAttribute(b,"return;"),c="function"===typeof c[b]);!c&&xc&&"wheel"===a&&(c=document.implementation.hasFeature("Events.wheel","3.0"));return c}function zc(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
		function Ac(a){var b=zc(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"function"===typeof c.get&&"function"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=""+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}
		function Bc(a){a._valueTracker||(a._valueTracker=Ac(a))}function Cc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=zc(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Dc={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ")}};
		function Ec(a,b,c){a=T.getPooled(Dc.change,a,b,c);a.type="change";oc(c);Ab(a);return a}var Fc=null,Gc=null;function Hc(a){kb(a);lb(!1)}function Ic(a){var b=qb(a);if(Cc(b))return a}function Jc(a,b){if("topChange"===a)return b}var Kc=!1;l.canUseDOM&&(Kc=yc("input")&&(!document.documentMode||9<document.documentMode));function Lc(){Fc&&(Fc.detachEvent("onpropertychange",Mc),Gc=Fc=null)}function Mc(a){"value"===a.propertyName&&Ic(Gc)&&(a=Ec(Gc,a,wc(a)),tc(Hc,a))}
		function Nc(a,b,c){"topFocus"===a?(Lc(),Fc=b,Gc=c,Fc.attachEvent("onpropertychange",Mc)):"topBlur"===a&&Lc()}function Oc(a){if("topSelectionChange"===a||"topKeyUp"===a||"topKeyDown"===a)return Ic(Gc)}function Pc(a,b){if("topClick"===a)return Ic(b)}function $c(a,b){if("topInput"===a||"topChange"===a)return Ic(b)}
		var ad={eventTypes:Dc,_isInputEventSupported:Kc,extractEvents:function(a,b,c,d){var e=b?qb(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if("select"===f||"input"===f&&"file"===e.type)var g=Jc;else if(vc(e))if(Kc)g=$c;else{g=Oc;var h=Nc}else f=e.nodeName,!f||"input"!==f.toLowerCase()||"checkbox"!==e.type&&"radio"!==e.type||(g=Pc);if(g&&(g=g(a,b)))return Ec(g,c,d);h&&h(a,e,b);"topBlur"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&"number"===e.type&&(a=""+e.value,e.getAttribute("value")!==
		a&&e.setAttribute("value",a))}};function bd(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(bd,{view:null,detail:null});var cd={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}function fd(a,b,c,d){return T.call(this,a,b,c,d)}
		bd.augmentClass(fd,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});
		var gd={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},hd={eventTypes:gd,extractEvents:function(a,b,c,d){if("topMouseOver"===a&&(c.relatedTarget||c.fromElement)||"topMouseOut"!==a&&"topMouseOver"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;"topMouseOut"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?pb(b):null):a=null;if(a===
		b)return null;var f=null==a?e:qb(a);e=null==b?e:qb(b);var g=fd.getPooled(gd.mouseLeave,a,c,d);g.type="mouseleave";g.target=f;g.relatedTarget=e;c=fd.getPooled(gd.mouseEnter,b,c,d);c.type="mouseenter";c.target=e;c.relatedTarget=f;Bb(g,c,a,b);return[g,c]}},id=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function jd(a){a=a.type;return"string"===typeof a?a:"function"===typeof a?a.displayName||a.name:null}
		function kd(a){var b=a;if(a.alternate)for(;b["return"];)b=b["return"];else{if(0!==(b.effectTag&2))return 1;for(;b["return"];)if(b=b["return"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){return(a=a._reactInternalFiber)?2===kd(a):!1}function md(a){2!==kd(a)?E("188"):void 0}
		function nd(a){var b=a.alternate;if(!b)return b=kd(a),3===b?E("188"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c["return"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return md(e),a;if(g===d)return md(e),b;g=g.sibling}E("188")}if(c["return"]!==d["return"])c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?
		void 0:E("189")}}c.alternate!==d?E("190"):void 0}3!==c.tag?E("188"):void 0;return c.stateNode.current===c?a:b}function od(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child["return"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b["return"]||b["return"]===a)return null;b=b["return"]}b.sibling["return"]=b["return"];b=b.sibling}}return null}
		function pd(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child["return"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b["return"]||b["return"]===a)return null;b=b["return"]}b.sibling["return"]=b["return"];b=b.sibling}}return null}var qd=[];
		function rd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c["return"];)c=c["return"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=pb(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],sd(a.topLevelType,b,a.nativeEvent,wc(a.nativeEvent))}var td=!0,sd=void 0;function ud(a){td=!!a}function U(a,b,c){return c?ba.listen(c,b,vd.bind(null,a)):null}function wd(a,b,c){return c?ba.capture(c,b,vd.bind(null,a)):null}
		function vd(a,b){if(td){var c=wc(b);c=pb(c);null===c||"number"!==typeof c.tag||2===kd(c)||(c=null);if(qd.length){var d=qd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{tc(rd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>qd.length&&qd.push(a)}}}
		var xd=Object.freeze({get _enabled(){return td},get _handleTopLevel(){return sd},setHandleTopLevel:function(a){sd=a},setEnabled:ud,isEnabled:function(){return td},trapBubbledEvent:U,trapCapturedEvent:wd,dispatchEvent:vd});function yd(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;c["ms"+a]="MS"+b;c["O"+a]="o"+b.toLowerCase();return c}
		var zd={animationend:yd("Animation","AnimationEnd"),animationiteration:yd("Animation","AnimationIteration"),animationstart:yd("Animation","AnimationStart"),transitionend:yd("Transition","TransitionEnd")},Ad={},Bd={};l.canUseDOM&&(Bd=document.createElement("div").style,"AnimationEvent"in window||(delete zd.animationend.animation,delete zd.animationiteration.animation,delete zd.animationstart.animation),"TransitionEvent"in window||delete zd.transitionend.transition);
		function Cd(a){if(Ad[a])return Ad[a];if(!zd[a])return a;var b=zd[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Bd)return Ad[a]=b[c];return""}
		var Dd={topAbort:"abort",topAnimationEnd:Cd("animationend")||"animationend",topAnimationIteration:Cd("animationiteration")||"animationiteration",topAnimationStart:Cd("animationstart")||"animationstart",topBlur:"blur",topCancel:"cancel",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topClose:"close",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",
		topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoad:"load",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",
		topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topToggle:"toggle",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",
		topTouchStart:"touchstart",topTransitionEnd:Cd("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},Ed={},Fd=0,Gd="_reactListenersID"+(""+Math.random()).slice(2);function Hd(a){Object.prototype.hasOwnProperty.call(a,Gd)||(a[Gd]=Fd++,Ed[a[Gd]]={});return Ed[a[Gd]]}function Id(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
		function Jd(a,b){var c=Id(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Id(c)}}function Kd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&"text"===a.type||"textarea"===b||"true"===a.contentEditable)}
		var Ld=l.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Md={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ")}},Nd=null,Od=null,Pd=null,Qd=!1;
		function Rd(a,b){if(Qd||null==Nd||Nd!==da())return null;var c=Nd;"selectionStart"in c&&Kd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Pd&&ea(Pd,c)?null:(Pd=c,a=T.getPooled(Md.select,Od,a,b),a.type="select",a.target=Nd,Ab(a),a)}
		var Sd={eventTypes:Md,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Hd(e);f=Sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?qb(b):window;switch(a){case "topFocus":if(vc(e)||"true"===e.contentEditable)Nd=e,Od=b,Pd=null;break;case "topBlur":Pd=Od=Nd=null;break;case "topMouseDown":Qd=!0;break;case "topContextMenu":case "topMouseUp":return Qd=!1,Rd(c,d);case "topSelectionChange":if(Ld)break;
		case "topKeyDown":case "topKeyUp":return Rd(c,d)}return null}};function Td(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Td,{animationName:null,elapsedTime:null,pseudoElement:null});function Ud(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Ud,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}});function Vd(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(Vd,{relatedTarget:null});
		function Wd(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}
		var Xd={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Yd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
		116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};function Zd(a,b,c,d){return T.call(this,a,b,c,d)}
		bd.augmentClass(Zd,{key:function(a){if(a.key){var b=Xd[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=Wd(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Yd[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return"keypress"===a.type?Wd(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===
		a.type?Wd(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}});function $d(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass($d,{dataTransfer:null});function ae(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(ae,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed});function be(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(be,{propertyName:null,elapsedTime:null,pseudoElement:null});
		function ce(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass(ce,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var de={},ee={};
		"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel".split(" ").forEach(function(a){var b=a[0].toUpperCase()+
		a.slice(1),c="on"+b;b="top"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+"Capture"},dependencies:[b]};de[a]=c;ee[b]=c});
		var fe={eventTypes:de,extractEvents:function(a,b,c,d){var e=ee[a];if(!e)return null;switch(a){case "topKeyPress":if(0===Wd(c))return null;case "topKeyDown":case "topKeyUp":a=Zd;break;case "topBlur":case "topFocus":a=Vd;break;case "topClick":if(2===c.button)return null;case "topDoubleClick":case "topMouseDown":case "topMouseMove":case "topMouseUp":case "topMouseOut":case "topMouseOver":case "topContextMenu":a=fd;break;case "topDrag":case "topDragEnd":case "topDragEnter":case "topDragExit":case "topDragLeave":case "topDragOver":case "topDragStart":case "topDrop":a=
		$d;break;case "topTouchCancel":case "topTouchEnd":case "topTouchMove":case "topTouchStart":a=ae;break;case "topAnimationEnd":case "topAnimationIteration":case "topAnimationStart":a=Td;break;case "topTransitionEnd":a=be;break;case "topScroll":a=bd;break;case "topWheel":a=ce;break;case "topCopy":case "topCut":case "topPaste":a=Ud;break;default:a=T}b=a.getPooled(e,b,c,d);Ab(b);return b}};sd=function(a,b,c,d){a=jb(a,b,c,d);kb(a);lb(!1)};hb.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));
		Wa=sb.getFiberCurrentPropsFromNode;Xa=sb.getInstanceFromNode;Ya=sb.getNodeFromInstance;hb.injectEventPluginsByName({SimpleEventPlugin:fe,EnterLeaveEventPlugin:hd,ChangeEventPlugin:ad,SelectEventPlugin:Sd,BeforeInputEventPlugin:ic});var ge=[],he=-1;function V(a){0>he||(a.current=ge[he],ge[he]=null,he--)}function W(a,b){he++;ge[he]=a.current;a.current=b}new Set;var ie={current:D},X={current:!1},je=D;function ke(a){return le(a)?je:ie.current}
		function me(a,b){var c=a.type.contextTypes;if(!c)return D;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function le(a){return 2===a.tag&&null!=a.type.childContextTypes}function ne(a){le(a)&&(V(X,a),V(ie,a))}
		function oe(a,b,c){null!=ie.cursor?E("168"):void 0;W(ie,b,a);W(X,c,a)}function pe(a,b){var c=a.stateNode,d=a.type.childContextTypes;if("function"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:E("108",jd(a)||"Unknown",e);return B({},b,c)}function qe(a){if(!le(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||D;je=ie.current;W(ie,b,a);W(X,X.current,a);return!0}
		function re(a,b){var c=a.stateNode;c?void 0:E("169");if(b){var d=pe(a,je);c.__reactInternalMemoizedMergedChildContext=d;V(X,a);V(ie,a);W(ie,d,a)}else V(X,a);W(X,b,a)}
		function Y(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this["return"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}
		function se(a,b,c){var d=a.alternate;null===d?(d=new Y(a.tag,a.key,a.internalContextTag),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.pendingProps=b;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}
		function te(a,b,c){var d=void 0,e=a.type,f=a.key;"function"===typeof e?(d=e.prototype&&e.prototype.isReactComponent?new Y(2,f,b):new Y(0,f,b),d.type=e,d.pendingProps=a.props):"string"===typeof e?(d=new Y(5,f,b),d.type=e,d.pendingProps=a.props):"object"===typeof e&&null!==e&&"number"===typeof e.tag?(d=e,d.pendingProps=a.props):E("130",null==e?e:typeof e,"");d.expirationTime=c;return d}function ue(a,b,c,d){b=new Y(10,d,b);b.pendingProps=a;b.expirationTime=c;return b}
		function ve(a,b,c){b=new Y(6,null,b);b.pendingProps=a;b.expirationTime=c;return b}function we(a,b,c){b=new Y(7,a.key,b);b.type=a.handler;b.pendingProps=a;b.expirationTime=c;return b}function xe(a,b,c){a=new Y(9,null,b);a.expirationTime=c;return a}function ye(a,b,c){b=new Y(4,a.key,b);b.pendingProps=a.children||[];b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var ze=null,Ae=null;
		function Be(a){return function(b){try{return a(b)}catch(c){}}}function Ce(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);ze=Be(function(a){return b.onCommitFiberRoot(c,a)});Ae=Be(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function De(a){"function"===typeof ze&&ze(a)}function Ee(a){"function"===typeof Ae&&Ae(a)}
		function Fe(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function Ge(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}
		function He(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=Fe(null));null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=Fe(null))):a=null;a=a!==d?a:null;null===a?Ge(d,b):null===d.last||null===a.last?(Ge(d,b),Ge(a,b)):(Ge(d,b),a.last=b)}function Ie(a,b,c,d){a=a.partialState;return"function"===typeof a?a.call(b,c,d):a}
		function Je(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var g=!0,h=c.first,k=!1;null!==h;){var q=h.expirationTime;if(q>f){var v=c.expirationTime;if(0===v||v>q)c.expirationTime=q;k||(k=!0,c.baseState=a)}else{k||(c.first=h.next,null===
		c.first&&(c.last=null));if(h.isReplace)a=Ie(h,d,a,e),g=!0;else if(q=Ie(h,d,a,e))a=g?B({},a,q):B(a,q),g=!1;h.isForced&&(c.hasForceUpdate=!0);null!==h.callback&&(q=c.callbackList,null===q&&(q=c.callbackList=[]),q.push(h))}h=h.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||(b.updateQueue=null);k||(c.baseState=a);return a}
		function Ke(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;"function"!==typeof e?E("191",e):void 0;e.call(b)}}
		function Le(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;b._reactInternalFiber=a}var f={isMounted:ld,enqueueSetState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!1,isForced:!1,nextCallback:null,next:null});a(c,g)},enqueueReplaceState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!0,isForced:!1,nextCallback:null,next:null});
		a(c,g)},enqueueForceUpdate:function(c,d){c=c._reactInternalFiber;d=void 0===d?null:d;var e=b(c);He(c,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=ke(a),f=2===a.tag&&null!=a.type.contextTypes,g=f?me(a,d):D;b=new c(b,g);e(a,b);f&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=d,a.__reactInternalMemoizedMaskedChildContext=g);return b},mountClassInstance:function(a,
		b){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:E("158");var h=ke(a);d.props=g;d.state=a.memoizedState=e;d.refs=D;d.context=me(a,h);null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=1);"function"===typeof d.componentWillMount&&(e=d.state,d.componentWillMount(),e!==d.state&&f.enqueueReplaceState(d,d.state,null),e=a.updateQueue,null!==e&&(d.state=Je(c,a,e,d,g,b)));"function"===typeof d.componentDidMount&&(a.effectTag|=
		4)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var h=b.memoizedProps,k=b.pendingProps;k||(k=h,null==k?E("159"):void 0);var u=g.context,z=ke(b);z=me(b,z);"function"!==typeof g.componentWillReceiveProps||h===k&&u===z||(u=g.state,g.componentWillReceiveProps(k,z),g.state!==u&&f.enqueueReplaceState(g,g.state,null));u=b.memoizedState;e=null!==b.updateQueue?Je(a,b,b.updateQueue,g,k,e):u;if(!(h!==k||u!==e||X.current||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return"function"!==
		typeof g.componentDidUpdate||h===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),!1;var G=k;if(null===h||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)G=!0;else{var I=b.stateNode,L=b.type;G="function"===typeof I.shouldComponentUpdate?I.shouldComponentUpdate(G,e,z):L.prototype&&L.prototype.isPureReactComponent?!ea(h,G)||!ea(u,e):!0}G?("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(k,e,z),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4)):("function"!==typeof g.componentDidUpdate||
		h===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),c(b,k),d(b,e));g.props=k;g.state=e;g.context=z;return G}}}var Qe="function"===typeof Symbol&&Symbol["for"],Re=Qe?Symbol["for"]("react.element"):60103,Se=Qe?Symbol["for"]("react.call"):60104,Te=Qe?Symbol["for"]("react.return"):60105,Ue=Qe?Symbol["for"]("react.portal"):60106,Ve=Qe?Symbol["for"]("react.fragment"):60107,We="function"===typeof Symbol&&Symbol.iterator;
		function Xe(a){if(null===a||"undefined"===typeof a)return null;a=We&&a[We]||a["@@iterator"];return"function"===typeof a?a:null}var Ye=Array.isArray;
		function Ze(a,b){var c=b.ref;if(null!==c&&"function"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(2!==b.tag?E("110"):void 0,d=b.stateNode);d?void 0:E("147",c);var e=""+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===D?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}"string"!==typeof c?E("148"):void 0;b._owner?void 0:E("149",c)}return c}
		function $e(a,b){"textarea"!==a.type&&E("31","[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,"")}
		function af(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=se(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
		2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=ve(c,a.internalContextTag,d),b["return"]=a,b;b=e(b,c,d);b["return"]=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Ze(b,c),d["return"]=a,d;d=te(c,a.internalContextTag,d);d.ref=Ze(b,c);d["return"]=a;return d}function q(a,b,c,d){if(null===b||7!==b.tag)return b=we(c,a.internalContextTag,d),b["return"]=a,b;b=e(b,c,d);
		b["return"]=a;return b}function v(a,b,c,d){if(null===b||9!==b.tag)return b=xe(c,a.internalContextTag,d),b.type=c.value,b["return"]=a,b;b=e(b,null,d);b.type=c.value;b["return"]=a;return b}function y(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=ye(c,a.internalContextTag,d),b["return"]=a,b;b=e(b,c.children||[],d);b["return"]=a;return b}function u(a,b,c,d,f){if(null===b||10!==b.tag)return b=ue(c,a.internalContextTag,
		d,f),b["return"]=a,b;b=e(b,c,d);b["return"]=a;return b}function z(a,b,c){if("string"===typeof b||"number"===typeof b)return b=ve(""+b,a.internalContextTag,c),b["return"]=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Re:if(b.type===Ve)return b=ue(b.props.children,a.internalContextTag,c,b.key),b["return"]=a,b;c=te(b,a.internalContextTag,c);c.ref=Ze(null,b);c["return"]=a;return c;case Se:return b=we(b,a.internalContextTag,c),b["return"]=a,b;case Te:return c=xe(b,a.internalContextTag,
		c),c.type=b.value,c["return"]=a,c;case Ue:return b=ye(b,a.internalContextTag,c),b["return"]=a,b}if(Ye(b)||Xe(b))return b=ue(b,a.internalContextTag,c,null),b["return"]=a,b;$e(a,b)}return null}function G(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Re:return c.key===e?c.type===Ve?u(a,b,c.props.children,d,e):k(a,b,c,d):null;case Se:return c.key===e?q(a,b,c,d):null;case Te:return null===
		e?v(a,b,c,d):null;case Ue:return c.key===e?y(a,b,c,d):null}if(Ye(c)||Xe(c))return null!==e?null:u(a,b,c,d,null);$e(a,c)}return null}function I(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Re:return a=a.get(null===d.key?c:d.key)||null,d.type===Ve?u(b,a,d.props.children,e,d.key):k(b,a,d,e);case Se:return a=a.get(null===d.key?c:d.key)||null,q(b,a,d,e);case Te:return a=a.get(c)||null,v(b,a,d,e);case Ue:return a=
		a.get(null===d.key?c:d.key)||null,y(b,a,d,e)}if(Ye(d)||Xe(d))return a=a.get(c)||null,u(b,a,d,e,null);$e(b,d)}return null}function L(e,g,m,A){for(var h=null,r=null,n=g,w=g=0,k=null;null!==n&&w<m.length;w++){n.index>w?(k=n,n=null):k=n.sibling;var x=G(e,n,m[w],A);if(null===x){null===n&&(n=k);break}a&&n&&null===x.alternate&&b(e,n);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x;n=k}if(w===m.length)return c(e,n),h;if(null===n){for(;w<m.length;w++)if(n=z(e,m[w],A))g=f(n,g,w),null===r?h=n:r.sibling=n,r=n;return h}for(n=
		d(e,n);w<m.length;w++)if(k=I(n,e,w,m[w],A)){if(a&&null!==k.alternate)n["delete"](null===k.key?w:k.key);g=f(k,g,w);null===r?h=k:r.sibling=k;r=k}a&&n.forEach(function(a){return b(e,a)});return h}function N(e,g,m,A){var h=Xe(m);"function"!==typeof h?E("150"):void 0;m=h.call(m);null==m?E("151"):void 0;for(var r=h=null,n=g,w=g=0,k=null,x=m.next();null!==n&&!x.done;w++,x=m.next()){n.index>w?(k=n,n=null):k=n.sibling;var J=G(e,n,x.value,A);if(null===J){n||(n=k);break}a&&n&&null===J.alternate&&b(e,n);g=f(J,
		g,w);null===r?h=J:r.sibling=J;r=J;n=k}if(x.done)return c(e,n),h;if(null===n){for(;!x.done;w++,x=m.next())x=z(e,x.value,A),null!==x&&(g=f(x,g,w),null===r?h=x:r.sibling=x,r=x);return h}for(n=d(e,n);!x.done;w++,x=m.next())if(x=I(n,e,w,x.value,A),null!==x){if(a&&null!==x.alternate)n["delete"](null===x.key?w:x.key);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x}a&&n.forEach(function(a){return b(e,a)});return h}return function(a,d,f,h){"object"===typeof f&&null!==f&&f.type===Ve&&null===f.key&&(f=f.props.children);
		var m="object"===typeof f&&null!==f;if(m)switch(f.$$typeof){case Re:a:{var r=f.key;for(m=d;null!==m;){if(m.key===r)if(10===m.tag?f.type===Ve:m.type===f.type){c(a,m.sibling);d=e(m,f.type===Ve?f.props.children:f.props,h);d.ref=Ze(m,f);d["return"]=a;a=d;break a}else{c(a,m);break}else b(a,m);m=m.sibling}f.type===Ve?(d=ue(f.props.children,a.internalContextTag,h,f.key),d["return"]=a,a=d):(h=te(f,a.internalContextTag,h),h.ref=Ze(d,f),h["return"]=a,a=h)}return g(a);case Se:a:{for(m=f.key;null!==d;){if(d.key===
		m)if(7===d.tag){c(a,d.sibling);d=e(d,f,h);d["return"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=we(f,a.internalContextTag,h);d["return"]=a;a=d}return g(a);case Te:a:{if(null!==d)if(9===d.tag){c(a,d.sibling);d=e(d,null,h);d.type=f.value;d["return"]=a;a=d;break a}else c(a,d);d=xe(f,a.internalContextTag,h);d.type=f.value;d["return"]=a;a=d}return g(a);case Ue:a:{for(m=f.key;null!==d;){if(d.key===m)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===
		f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d["return"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ye(f,a.internalContextTag,h);d["return"]=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h)):(c(a,d),d=ve(f,a.internalContextTag,h)),d["return"]=a,a=d,g(a);if(Ye(f))return L(a,d,f,h);if(Xe(f))return N(a,d,f,h);m&&$e(a,f);if("undefined"===typeof f)switch(a.tag){case 2:case 1:h=a.type,E("152",h.displayName||
		h.name||"Component")}return c(a,d)}}var bf=af(!0),cf=af(!1);
		function df(a,b,c,d,e){function f(a,b,c){var d=b.expirationTime;b.child=null===a?cf(b,null,c,d):bf(b,a.child,c,d)}function g(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=128)}function h(a,b,c,d){g(a,b);if(!c)return d&&re(b,!1),q(a,b);c=b.stateNode;id.current=b;var e=c.render();b.effectTag|=1;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&re(b,!0);return b.child}function k(a){var b=a.stateNode;b.pendingContext?oe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&oe(a,
		b.context,!1);I(a,b.containerInfo)}function q(a,b){null!==a&&b.child!==a.child?E("153"):void 0;if(null!==b.child){a=b.child;var c=se(a,a.pendingProps,a.expirationTime);b.child=c;for(c["return"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=se(a,a.pendingProps,a.expirationTime),c["return"]=b;c.sibling=null}return b.child}function v(a,b){switch(b.tag){case 3:k(b);break;case 2:qe(b);break;case 4:I(b,b.stateNode.containerInfo)}return null}var y=a.shouldSetTextContent,u=a.useSyncScheduling,z=a.shouldDeprioritizeSubtree,
		G=b.pushHostContext,I=b.pushHostContainer,L=c.enterHydrationState,N=c.resetHydrationState,J=c.tryToClaimNextHydratableInstance;a=Le(d,e,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var w=a.adoptClassInstance,m=a.constructClassInstance,A=a.mountClassInstance,Ob=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c)return v(a,b);switch(b.tag){case 0:null!==a?E("155"):void 0;var d=b.type,e=b.pendingProps,r=ke(b);r=me(b,r);d=d(e,r);b.effectTag|=
		1;"object"===typeof d&&null!==d&&"function"===typeof d.render?(b.tag=2,e=qe(b),w(b,d),A(b,c),b=h(a,b,!0,e)):(b.tag=1,f(a,b,d),b.memoizedProps=e,b=b.child);return b;case 1:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(X.current)null===c&&(c=d);else if(null===c||d===c){b=q(a,b);break a}d=ke(b);d=me(b,d);e=e(c,d);b.effectTag|=1;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case 2:return e=qe(b),d=void 0,null===a?b.stateNode?E("153"):(m(b,b.pendingProps),A(b,c),d=!0):d=Ob(a,b,c),h(a,b,d,e);case 3:return k(b),
		e=b.updateQueue,null!==e?(d=b.memoizedState,e=Je(a,b,e,null,null,c),d===e?(N(),b=q(a,b)):(d=e.element,r=b.stateNode,(null===a||null===a.child)&&r.hydrate&&L(b)?(b.effectTag|=2,b.child=cf(b,null,d,c)):(N(),f(a,b,d)),b.memoizedState=e,b=b.child)):(N(),b=q(a,b)),b;case 5:G(b);null===a&&J(b);e=b.type;var n=b.memoizedProps;d=b.pendingProps;null===d&&(d=n,null===d?E("154"):void 0);r=null!==a?a.memoizedProps:null;X.current||null!==d&&n!==d?(n=d.children,y(e,d)?n=null:r&&y(e,r)&&(b.effectTag|=16),g(a,b),
		2147483647!==c&&!u&&z(e,d)?(b.expirationTime=2147483647,b=null):(f(a,b,n),b.memoizedProps=d,b=b.child)):b=q(a,b);return b;case 6:return null===a&&J(b),a=b.pendingProps,null===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case 8:b.tag=7;case 7:e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null===e?E("154"):void 0);else if(null===e||b.memoizedProps===e)e=b.memoizedProps;d=e.children;b.stateNode=null===a?cf(b,b.stateNode,d,c):bf(b,b.stateNode,d,c);b.memoizedProps=e;return b.stateNode;
		case 9:return null;case 4:a:{I(b,b.stateNode.containerInfo);e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null==e?E("154"):void 0);else if(null===e||b.memoizedProps===e){b=q(a,b);break a}null===a?b.child=bf(b,null,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case 10:a:{c=b.pendingProps;if(X.current)null===c&&(c=b.memoizedProps);else if(null===c||b.memoizedProps===c){b=q(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:E("156")}},beginFailedWork:function(a,b,
		c){switch(b.tag){case 2:qe(b);break;case 3:k(b);break;default:E("157")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return v(a,b);b.firstEffect=null;b.lastEffect=null;b.child=null===a?cf(b,null,null,c):bf(b,a.child,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}
		function ef(a,b,c){function d(a){a.effectTag|=4}var e=a.createInstance,f=a.createTextInstance,g=a.appendInitialChild,h=a.finalizeInitialChildren,k=a.prepareUpdate,q=a.persistence,v=b.getRootHostContainer,y=b.popHostContext,u=b.getHostContext,z=b.popHostContainer,G=c.prepareToHydrateHostInstance,I=c.prepareToHydrateHostTextInstance,L=c.popHydrationState,N=void 0,J=void 0,w=void 0;a.mutation?(N=function(){},J=function(a,b,c){(b.updateQueue=c)&&d(b)},w=function(a,b,c,e){c!==e&&d(b)}):q?E("235"):E("236");
		return{completeWork:function(a,b,c){var m=b.pendingProps;if(null===m)m=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===c)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return ne(b),null;case 3:z(b);V(X,b);V(ie,b);m=b.stateNode;m.pendingContext&&(m.context=m.pendingContext,m.pendingContext=null);if(null===a||null===a.child)L(b),b.effectTag&=-3;N(b);return null;case 5:y(b);c=v();var A=b.type;if(null!==a&&null!=b.stateNode){var p=a.memoizedProps,q=b.stateNode,x=u();q=
		k(q,A,p,m,c,x);J(a,b,q,A,p,m,c);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!m)return null===b.stateNode?E("166"):void 0,null;a=u();if(L(b))G(b,c,a)&&d(b);else{a=e(A,m,c,a,b);a:for(p=b.child;null!==p;){if(5===p.tag||6===p.tag)g(a,p.stateNode);else if(4!==p.tag&&null!==p.child){p.child["return"]=p;p=p.child;continue}if(p===b)break;for(;null===p.sibling;){if(null===p["return"]||p["return"]===b)break a;p=p["return"]}p.sibling["return"]=p["return"];p=p.sibling}h(a,A,m,c)&&d(b);b.stateNode=a}null!==b.ref&&
		(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)w(a,b,a.memoizedProps,m);else{if("string"!==typeof m)return null===b.stateNode?E("166"):void 0,null;a=v();c=u();L(b)?I(b)&&d(b):b.stateNode=f(m,a,c,b)}return null;case 7:(m=b.memoizedProps)?void 0:E("165");b.tag=8;A=[];a:for((p=b.stateNode)&&(p["return"]=b);null!==p;){if(5===p.tag||6===p.tag||4===p.tag)E("247");else if(9===p.tag)A.push(p.type);else if(null!==p.child){p.child["return"]=p;p=p.child;continue}for(;null===p.sibling;){if(null===
		p["return"]||p["return"]===b)break a;p=p["return"]}p.sibling["return"]=p["return"];p=p.sibling}p=m.handler;m=p(m.props,A);b.child=bf(b,null!==a?a.child:null,m,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return z(b),N(b),null;case 0:E("167");default:E("156")}}}}
		function ff(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(A){b(a,A)}}function d(a){"function"===typeof Ee&&Ee(a);switch(a.tag){case 2:c(a);var d=a.stateNode;if("function"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(A){b(a,A)}break;case 5:c(a);break;case 7:e(a.stateNode);break;case 4:k&&g(a)}}function e(a){for(var b=a;;)if(d(b),null===b.child||k&&4===b.tag){if(b===a)break;for(;null===b.sibling;){if(null===b["return"]||
		b["return"]===a)return;b=b["return"]}b.sibling["return"]=b["return"];b=b.sibling}else b.child["return"]=b,b=b.child}function f(a){return 5===a.tag||3===a.tag||4===a.tag}function g(a){for(var b=a,c=!1,f=void 0,g=void 0;;){if(!c){c=b["return"];a:for(;;){null===c?E("160"):void 0;switch(c.tag){case 5:f=c.stateNode;g=!1;break a;case 3:f=c.stateNode.containerInfo;g=!0;break a;case 4:f=c.stateNode.containerInfo;g=!0;break a}c=c["return"]}c=!0}if(5===b.tag||6===b.tag)e(b),g?J(f,b.stateNode):N(f,b.stateNode);
		else if(4===b.tag?f=b.stateNode.containerInfo:d(b),null!==b.child){b.child["return"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b["return"]||b["return"]===a)return;b=b["return"];4===b.tag&&(c=!1)}b.sibling["return"]=b["return"];b=b.sibling}}var h=a.getPublicInstance,k=a.mutation;a=a.persistence;k||(a?E("235"):E("236"));var q=k.commitMount,v=k.commitUpdate,y=k.resetTextContent,u=k.commitTextUpdate,z=k.appendChild,G=k.appendChildToContainer,I=k.insertBefore,L=k.insertInContainerBefore,
		N=k.removeChild,J=k.removeChildFromContainer;return{commitResetTextContent:function(a){y(a.stateNode)},commitPlacement:function(a){a:{for(var b=a["return"];null!==b;){if(f(b)){var c=b;break a}b=b["return"]}E("160");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:E("161")}c.effectTag&16&&(y(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c["return"]||f(c["return"])){c=
		null;break a}c=c["return"]}c.sibling["return"]=c["return"];for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child["return"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?L(b,e.stateNode,c):I(b,e.stateNode,c):d?G(b,e.stateNode):z(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child["return"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e["return"]||e["return"]===
		a)return;e=e["return"]}e.sibling["return"]=e["return"];e=e.sibling}},commitDeletion:function(a){g(a);a["return"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate["return"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&v(c,f,e,a,d,b)}break;case 6:null===b.stateNode?E("162"):void 0;c=b.memoizedProps;u(b.stateNode,null!==a?a.memoizedProps:
		c,c);break;case 3:break;default:E("163")}},commitLifeCycles:function(a,b){switch(b.tag){case 2:var c=b.stateNode;if(b.effectTag&4)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b=b.updateQueue;null!==b&&Ke(b,c);break;case 3:c=b.updateQueue;null!==c&&Ke(c,null!==b.child?b.child.stateNode:null);break;case 5:c=b.stateNode;null===a&&b.effectTag&4&&q(c,
		b.type,b.memoizedProps,b);break;case 6:break;case 4:break;default:E("163")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:b(h(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var gf={};
		function hf(a){function b(a){a===gf?E("174"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e={current:gf},f={current:gf},g={current:gf};return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){V(e,a);V(f,a);V(g,a)},popHostContext:function(a){f.current===a&&(V(e,a),V(f,a))},pushHostContainer:function(a,b){W(g,b,a);b=d(b);W(f,a,a);W(e,b,a)},pushHostContext:function(a){var d=b(g.current),h=b(e.current);
		d=c(h,a.type,d);h!==d&&(W(f,a,a),W(e,d,a))},resetHostContainer:function(){e.current=gf;g.current=gf}}}
		function jf(a){function b(a,b){var c=new Y(5,null,0);c.type="DELETED";c.stateNode=b;c["return"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=g(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a["return"];null!==a&&5!==a.tag&&3!==a.tag;)a=a["return"];y=a}var e=a.shouldSetTextContent;
		a=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){E("175")},prepareToHydrateHostTextInstance:function(){E("176")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,g=a.canHydrateTextInstance,h=a.getNextHydratableSibling,k=a.getFirstHydratableChild,q=a.hydrateInstance,v=a.hydrateTextInstance,y=null,u=null,z=!1;return{enterHydrationState:function(a){u=
		k(a.stateNode.containerInfo);y=a;return z=!0},resetHydrationState:function(){u=y=null;z=!1},tryToClaimNextHydratableInstance:function(a){if(z){var d=u;if(d){if(!c(a,d)){d=h(d);if(!d||!c(a,d)){a.effectTag|=2;z=!1;y=a;return}b(y,u)}y=a;u=k(d)}else a.effectTag|=2,z=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=q(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return v(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==
		y)return!1;if(!z)return d(a),z=!0,!1;var c=a.type;if(5!==a.tag||"head"!==c&&"body"!==c&&!e(c,a.memoizedProps))for(c=u;c;)b(a,c),c=h(c);d(a);u=y?h(a.stateNode):null;return!0}}}
		function kf(a){function b(a){Qb=ja=!0;var b=a.stateNode;b.current===a?E("177"):void 0;b.isReadyForCommit=!1;id.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;yg();for(t=c;null!==t;){var d=!1,e=void 0;try{for(;null!==t;){var f=t.effectTag;f&16&&zg(t);if(f&128){var g=t.alternate;null!==g&&Ag(g)}switch(f&-242){case 2:Ne(t);t.effectTag&=-3;break;case 6:Ne(t);t.effectTag&=-3;Oe(t.alternate,t);break;case 4:Oe(t.alternate,
		t);break;case 8:Sc=!0,Bg(t),Sc=!1}t=t.nextEffect}}catch(Tc){d=!0,e=Tc}d&&(null===t?E("178"):void 0,h(t,e),null!==t&&(t=t.nextEffect))}Cg();b.current=a;for(t=c;null!==t;){c=!1;d=void 0;try{for(;null!==t;){var k=t.effectTag;k&36&&Dg(t.alternate,t);k&128&&Eg(t);if(k&64)switch(e=t,f=void 0,null!==R&&(f=R.get(e),R["delete"](e),null==f&&null!==e.alternate&&(e=e.alternate,f=R.get(e),R["delete"](e))),null==f?E("184"):void 0,e.tag){case 2:e.stateNode.componentDidCatch(f.error,{componentStack:f.componentStack});
		break;case 3:null===ca&&(ca=f.error);break;default:E("157")}var Qc=t.nextEffect;t.nextEffect=null;t=Qc}}catch(Tc){c=!0,d=Tc}c&&(null===t?E("178"):void 0,h(t,d),null!==t&&(t=t.nextEffect))}ja=Qb=!1;"function"===typeof De&&De(a.stateNode);ha&&(ha.forEach(G),ha=null);null!==ca&&(a=ca,ca=null,Ob(a));b=b.current.expirationTime;0===b&&(qa=R=null);return b}function c(a){for(;;){var b=Fg(a.alternate,a,H),c=a["return"],d=a.sibling;var e=a;if(2147483647===H||2147483647!==e.expirationTime){if(2!==e.tag&&3!==
		e.tag)var f=0;else f=e.updateQueue,f=null===f?0:f.expirationTime;for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;
		if(null!==c)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=rg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function e(a){var b=Gg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function f(a){if(null!==R){if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=k(F)?e(F):d(F);else for(;null!==F&&!A();)F=k(F)?e(F):d(F)}else if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=d(F);else for(;null!==F&&!A();)F=d(F)}function g(a,b){ja?E("243"):void 0;ja=!0;a.isReadyForCommit=
		!1;if(a!==ra||b!==H||null===F){for(;-1<he;)ge[he]=null,he--;je=D;ie.current=D;X.current=!1;x();ra=a;H=b;F=se(ra.current,null,b)}var c=!1,d=null;try{f(b)}catch(Rc){c=!0,d=Rc}for(;c;){if(eb){ca=d;break}var g=F;if(null===g)eb=!0;else{var k=h(g,d);null===k?E("183"):void 0;if(!eb){try{c=k;d=b;for(k=c;null!==g;){switch(g.tag){case 2:ne(g);break;case 5:qg(g);break;case 3:p(g);break;case 4:p(g)}if(g===k||g.alternate===k)break;g=g["return"]}F=e(c);f(d)}catch(Rc){c=!0;d=Rc;continue}break}}}b=ca;eb=ja=!1;ca=
		null;null!==b&&Ob(b);return a.isReadyForCommit?a.current.alternate:null}function h(a,b){var c=id.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,q(a)&&(eb=!0);else for(var g=a["return"];null!==g&&null===c;){2===g.tag?"function"===typeof g.stateNode.componentDidCatch&&(d=!0,f=jd(g),c=g,e=!0):3===g.tag&&(c=g);if(q(g)){if(Sc||null!==ha&&(ha.has(g)||null!==g.alternate&&ha.has(g.alternate)))return null;c=null;e=!1}g=g["return"]}if(null!==c){null===qa&&(qa=new Set);qa.add(c);var h="";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var k=
		g._debugOwner,Qc=g._debugSource;var m=jd(g);var n=null;k&&(n=jd(k));k=Qc;m="\n    in "+(m||"Unknown")+(k?" (at "+k.fileName.replace(/^.*[\\\/]/,"")+":"+k.lineNumber+")":n?" (created by "+n+")":"");break a;default:m=""}h+=m;g=g["return"]}while(g);g=h;a=jd(a);null===R&&(R=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};R.set(c,b);try{var p=b.error;p&&p.suppressReactErrorLogging||console.error(p)}catch(Vc){Vc&&
		Vc.suppressReactErrorLogging||console.error(Vc)}Qb?(null===ha&&(ha=new Set),ha.add(c)):G(c);return c}null===ca&&(ca=b);return null}function k(a){return null!==R&&(R.has(a)||null!==a.alternate&&R.has(a.alternate))}function q(a){return null!==qa&&(qa.has(a)||null!==a.alternate&&qa.has(a.alternate))}function v(){return 20*(((I()+100)/20|0)+1)}function y(a){return 0!==ka?ka:ja?Qb?1:H:!Hg||a.internalContextTag&1?v():1}function u(a,b){return z(a,b,!1)}function z(a,b){for(;null!==a;){if(0===a.expirationTime||
		a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a["return"])if(3===a.tag){var c=a.stateNode;!ja&&c===ra&&b<H&&(F=ra=null,H=0);var d=c,e=b;Rb>Ig&&E("185");if(null===d.nextScheduledRoot)d.remainingExpirationTime=e,null===O?(sa=O=d,d.nextScheduledRoot=d):(O=O.nextScheduledRoot=d,O.nextScheduledRoot=sa);else{var f=d.remainingExpirationTime;if(0===f||e<f)d.remainingExpirationTime=e}Fa||(la?
		Sb&&(ma=d,na=1,m(ma,na)):1===e?w(1,null):L(e));!ja&&c===ra&&b<H&&(F=ra=null,H=0)}else break;a=a["return"]}}function G(a){z(a,1,!0)}function I(){return Uc=((Wc()-Pe)/10|0)+2}function L(a){if(0!==Tb){if(a>Tb)return;Jg(Xc)}var b=Wc()-Pe;Tb=a;Xc=Kg(J,{timeout:10*(a-2)-b})}function N(){var a=0,b=null;if(null!==O)for(var c=O,d=sa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===O?E("244"):void 0;if(d===d.nextScheduledRoot){sa=O=d.nextScheduledRoot=null;break}else if(d===sa)sa=e=d.nextScheduledRoot,
		O.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===O){O=c;O.nextScheduledRoot=sa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===O)break;c=d;d=d.nextScheduledRoot}}c=ma;null!==c&&c===b?Rb++:Rb=0;ma=b;na=a}function J(a){w(0,a)}function w(a,b){fb=b;for(N();null!==ma&&0!==na&&(0===a||na<=a)&&!Yc;)m(ma,na),N();null!==fb&&(Tb=0,Xc=-1);0!==na&&L(na);fb=null;Yc=!1;Rb=0;if(Ub)throw a=Zc,Zc=
		null,Ub=!1,a;}function m(a,c){Fa?E("245"):void 0;Fa=!0;if(c<=I()){var d=a.finishedWork;null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(a.remainingExpirationTime=b(d)))}else d=a.finishedWork,null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(A()?a.finishedWork=d:a.remainingExpirationTime=b(d)));Fa=!1}function A(){return null===fb||fb.timeRemaining()>Lg?!1:Yc=!0}function Ob(a){null===ma?E("246"):
		void 0;ma.remainingExpirationTime=0;Ub||(Ub=!0,Zc=a)}var r=hf(a),n=jf(a),p=r.popHostContainer,qg=r.popHostContext,x=r.resetHostContainer,Me=df(a,r,n,u,y),rg=Me.beginWork,Gg=Me.beginFailedWork,Fg=ef(a,r,n).completeWork;r=ff(a,h);var zg=r.commitResetTextContent,Ne=r.commitPlacement,Bg=r.commitDeletion,Oe=r.commitWork,Dg=r.commitLifeCycles,Eg=r.commitAttachRef,Ag=r.commitDetachRef,Wc=a.now,Kg=a.scheduleDeferredCallback,Jg=a.cancelDeferredCallback,Hg=a.useSyncScheduling,yg=a.prepareForCommit,Cg=a.resetAfterCommit,
		Pe=Wc(),Uc=2,ka=0,ja=!1,F=null,ra=null,H=0,t=null,R=null,qa=null,ha=null,ca=null,eb=!1,Qb=!1,Sc=!1,sa=null,O=null,Tb=0,Xc=-1,Fa=!1,ma=null,na=0,Yc=!1,Ub=!1,Zc=null,fb=null,la=!1,Sb=!1,Ig=1E3,Rb=0,Lg=1;return{computeAsyncExpiration:v,computeExpirationForFiber:y,scheduleWork:u,batchedUpdates:function(a,b){var c=la;la=!0;try{return a(b)}finally{(la=c)||Fa||w(1,null)}},unbatchedUpdates:function(a){if(la&&!Sb){Sb=!0;try{return a()}finally{Sb=!1}}return a()},flushSync:function(a){var b=la;la=!0;try{a:{var c=
		ka;ka=1;try{var d=a();break a}finally{ka=c}d=void 0}return d}finally{la=b,Fa?E("187"):void 0,w(1,null)}},deferredUpdates:function(a){var b=ka;ka=v();try{return a()}finally{ka=b}}}}
		function lf(a){function b(a){a=od(a);return null===a?null:a.stateNode}var c=a.getPublicInstance;a=kf(a);var d=a.computeAsyncExpiration,e=a.computeExpirationForFiber,f=a.scheduleWork;return{createContainer:function(a,b){var c=new Y(3,null,0);a={current:c,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return c.stateNode=a},updateContainer:function(a,b,c,q){var g=b.current;if(c){c=
		c._reactInternalFiber;var h;b:{2===kd(c)&&2===c.tag?void 0:E("170");for(h=c;3!==h.tag;){if(le(h)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}(h=h["return"])?void 0:E("171")}h=h.stateNode.context}c=le(c)?pe(c,h):h}else c=D;null===b.context?b.context=c:b.pendingContext=c;b=q;b=void 0===b?null:b;q=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():e(g);He(g,{expirationTime:q,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,
		nextCallback:null,next:null});f(g,q)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:b,findHostInstanceWithNoPortals:function(a){a=pd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var c=a.findFiberByHostInstance;return Ce(B({},
		a,{findHostInstanceByFiber:function(a){return b(a)},findFiberByHostInstance:function(a){return c?c(a):null}}))}}}var mf=Object.freeze({default:lf}),nf=mf&&lf||mf,of=nf["default"]?nf["default"]:nf;function pf(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ue,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}var qf="object"===typeof performance&&"function"===typeof performance.now,rf=void 0;rf=qf?function(){return performance.now()}:function(){return Date.now()};
		var sf=void 0,tf=void 0;
		if(l.canUseDOM)if("function"!==typeof requestIdleCallback||"function"!==typeof cancelIdleCallback){var uf=null,vf=!1,wf=-1,xf=!1,yf=0,zf=33,Af=33,Bf;Bf=qf?{didTimeout:!1,timeRemaining:function(){var a=yf-performance.now();return 0<a?a:0}}:{didTimeout:!1,timeRemaining:function(){var a=yf-Date.now();return 0<a?a:0}};var Cf="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(a){if(a.source===window&&a.data===Cf){vf=!1;a=rf();if(0>=yf-a)if(-1!==wf&&wf<=
		a)Bf.didTimeout=!0;else{xf||(xf=!0,requestAnimationFrame(Df));return}else Bf.didTimeout=!1;wf=-1;a=uf;uf=null;null!==a&&a(Bf)}},!1);var Df=function(a){xf=!1;var b=a-yf+Af;b<Af&&zf<Af?(8>b&&(b=8),Af=b<zf?zf:b):zf=b;yf=a+Af;vf||(vf=!0,window.postMessage(Cf,"*"))};sf=function(a,b){uf=a;null!=b&&"number"===typeof b.timeout&&(wf=rf()+b.timeout);xf||(xf=!0,requestAnimationFrame(Df));return 0};tf=function(){uf=null;vf=!1;wf=-1}}else sf=window.requestIdleCallback,tf=window.cancelIdleCallback;else sf=function(a){return setTimeout(function(){a({timeRemaining:function(){return Infinity}})})},
		tf=function(a){clearTimeout(a)};var Ef=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Ff={},Gf={};
		function Hf(a){if(Gf.hasOwnProperty(a))return!0;if(Ff.hasOwnProperty(a))return!1;if(Ef.test(a))return Gf[a]=!0;Ff[a]=!0;return!1}
		function If(a,b,c){var d=wa(b);if(d&&va(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?Jf(a,b):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,""+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,""):a.setAttribute(b,""+c))}else Kf(a,b,va(b,c)?c:null)}
		function Kf(a,b,c){Hf(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,""+c))}function Jf(a,b){var c=wa(b);c?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:"":a.removeAttribute(c.attributeName):a.removeAttribute(b)}
		function Lf(a,b){var c=b.value,d=b.checked;return B({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?d:a._wrapperState.initialChecked})}function Mf(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}
		function Nf(a,b){b=b.checked;null!=b&&If(a,"checked",b)}function Of(a,b){Nf(a,b);var c=b.value;if(null!=c)if(0===c&&""===a.value)a.value="0";else if("number"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==""+b.defaultValue&&(a.defaultValue=""+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
		function Pf(a,b){switch(b.type){case "submit":case "reset":break;case "color":case "date":case "datetime":case "datetime-local":case "month":case "time":case "week":a.value="";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;""!==b&&(a.name="");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;""!==b&&(a.name=b)}function Qf(a){var b="";aa.Children.forEach(a,function(a){null==a||"string"!==typeof a&&"number"!==typeof a||(b+=a)});return b}
		function Rf(a,b){a=B({children:void 0},b);if(b=Qf(b.children))a.children=b;return a}function Sf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
		function Tf(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Uf(a,b){null!=b.dangerouslySetInnerHTML?E("91"):void 0;return B({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Vf(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?E("92"):void 0,Array.isArray(b)&&(1>=b.length?void 0:E("93"),b=b[0]),c=""+b),null==c&&(c=""));a._wrapperState={initialValue:""+c}}
		function Wf(a,b){var c=b.value;null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Xf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Yf={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
		function Zf(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function $f(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Zf(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
		var ag=void 0,bg=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Yf.svg||"innerHTML"in a)a.innerHTML=b;else{ag=ag||document.createElement("div");ag.innerHTML="\x3csvg\x3e"+b+"\x3c/svg\x3e";for(b=ag.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
		function cg(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
		var dg={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,
		stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},eg=["Webkit","ms","Moz","O"];Object.keys(dg).forEach(function(a){eg.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);dg[b]=dg[a]})});
		function fg(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--");var e=c;var f=b[c];e=null==f||"boolean"===typeof f||""===f?"":d||"number"!==typeof f||0===f||dg.hasOwnProperty(e)&&dg[e]?(""+f).trim():f+"px";"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var gg=B({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
		function hg(a,b,c){b&&(gg[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?E("137",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?E("60"):void 0,"object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML?void 0:E("61")),null!=b.style&&"object"!==typeof b.style?E("62",c()):void 0)}
		function ig(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var jg=Yf.html,kg=C.thatReturns("");
		function lg(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Hd(a);b=Sa[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||("topScroll"===e?wd("topScroll","scroll",a):"topFocus"===e||"topBlur"===e?(wd("topFocus","focus",a),wd("topBlur","blur",a),c.topBlur=!0,c.topFocus=!0):"topCancel"===e?(yc("cancel",!0)&&wd("topCancel","cancel",a),c.topCancel=!0):"topClose"===e?(yc("close",!0)&&wd("topClose","close",a),c.topClose=!0):Dd.hasOwnProperty(e)&&U(e,Dd[e],a),c[e]=!0)}}
		var mg={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",
		topWaiting:"waiting"};function ng(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===jg&&(d=Zf(a));d===jg?"script"===a?(a=c.createElement("div"),a.innerHTML="\x3cscript\x3e\x3c/script\x3e",a=a.removeChild(a.firstChild)):a="string"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function og(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}
		function pg(a,b,c,d){var e=ig(b,c);switch(b){case "iframe":case "object":U("topLoad","load",a);var f=c;break;case "video":case "audio":for(f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);f=c;break;case "source":U("topError","error",a);f=c;break;case "img":case "image":U("topError","error",a);U("topLoad","load",a);f=c;break;case "form":U("topReset","reset",a);U("topSubmit","submit",a);f=c;break;case "details":U("topToggle","toggle",a);f=c;break;case "input":Mf(a,c);f=Lf(a,c);U("topInvalid","invalid",a);
		lg(d,"onChange");break;case "option":f=Rf(a,c);break;case "select":Tf(a,c);f=B({},c,{value:void 0});U("topInvalid","invalid",a);lg(d,"onChange");break;case "textarea":Vf(a,c);f=Uf(a,c);U("topInvalid","invalid",a);lg(d,"onChange");break;default:f=c}hg(b,f,kg);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];"style"===h?fg(a,k,kg):"dangerouslySetInnerHTML"===h?(k=k?k.__html:void 0,null!=k&&bg(a,k)):"children"===h?"string"===typeof k?("textarea"!==b||""!==k)&&cg(a,k):"number"===typeof k&&cg(a,
		""+k):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(Ra.hasOwnProperty(h)?null!=k&&lg(d,h):e?Kf(a,h,k):null!=k&&If(a,h,k))}switch(b){case "input":Bc(a);Pf(a,c);break;case "textarea":Bc(a);Xf(a,c);break;case "option":null!=c.value&&a.setAttribute("value",c.value);break;case "select":a.multiple=!!c.multiple;b=c.value;null!=b?Sf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Sf(a,!!c.multiple,c.defaultValue,!0);break;default:"function"===typeof f.onClick&&(a.onclick=
		C)}}
		function sg(a,b,c,d,e){var f=null;switch(b){case "input":c=Lf(a,c);d=Lf(a,d);f=[];break;case "option":c=Rf(a,c);d=Rf(a,d);f=[];break;case "select":c=B({},c,{value:void 0});d=B({},d,{value:void 0});f=[];break;case "textarea":c=Uf(a,c);d=Uf(a,d);f=[];break;default:"function"!==typeof c.onClick&&"function"===typeof d.onClick&&(a.onclick=C)}hg(b,d,kg);var g,h;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if("style"===g)for(h in b=c[g],b)b.hasOwnProperty(h)&&(a||(a={}),a[h]=
		"");else"dangerouslySetInnerHTML"!==g&&"children"!==g&&"suppressContentEditableWarning"!==g&&"suppressHydrationWarning"!==g&&"autoFocus"!==g&&(Ra.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var k=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&k!==b&&(null!=k||null!=b))if("style"===g)if(b){for(h in b)!b.hasOwnProperty(h)||k&&k.hasOwnProperty(h)||(a||(a={}),a[h]="");for(h in k)k.hasOwnProperty(h)&&b[h]!==k[h]&&(a||(a={}),a[h]=k[h])}else a||(f||(f=[]),f.push(g,a)),a=k;else"dangerouslySetInnerHTML"===
		g?(k=k?k.__html:void 0,b=b?b.__html:void 0,null!=k&&b!==k&&(f=f||[]).push(g,""+k)):"children"===g?b===k||"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(g,""+k):"suppressContentEditableWarning"!==g&&"suppressHydrationWarning"!==g&&(Ra.hasOwnProperty(g)?(null!=k&&lg(e,g),f||b===k||(f=[])):(f=f||[]).push(g,k))}a&&(f=f||[]).push("style",a);return f}
		function tg(a,b,c,d,e){"input"===c&&"radio"===e.type&&null!=e.name&&Nf(a,e);ig(c,d);d=ig(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];"style"===g?fg(a,h,kg):"dangerouslySetInnerHTML"===g?bg(a,h):"children"===g?cg(a,h):d?null!=h?Kf(a,g,h):a.removeAttribute(g):null!=h?If(a,g,h):Jf(a,g)}switch(c){case "input":Of(a,e);break;case "textarea":Wf(a,e);break;case "select":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Sf(a,
		!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?Sf(a,!!e.multiple,e.defaultValue,!0):Sf(a,!!e.multiple,e.multiple?[]:"",!1))}}
		function ug(a,b,c,d,e){switch(b){case "iframe":case "object":U("topLoad","load",a);break;case "video":case "audio":for(var f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);break;case "source":U("topError","error",a);break;case "img":case "image":U("topError","error",a);U("topLoad","load",a);break;case "form":U("topReset","reset",a);U("topSubmit","submit",a);break;case "details":U("topToggle","toggle",a);break;case "input":Mf(a,c);U("topInvalid","invalid",a);lg(e,"onChange");break;case "select":Tf(a,c);
		U("topInvalid","invalid",a);lg(e,"onChange");break;case "textarea":Vf(a,c),U("topInvalid","invalid",a),lg(e,"onChange")}hg(b,c,kg);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],"children"===g?"string"===typeof f?a.textContent!==f&&(d=["children",f]):"number"===typeof f&&a.textContent!==""+f&&(d=["children",""+f]):Ra.hasOwnProperty(g)&&null!=f&&lg(e,g));switch(b){case "input":Bc(a);Pf(a,c);break;case "textarea":Bc(a);Xf(a,c);break;case "select":case "option":break;default:"function"===typeof c.onClick&&
		(a.onclick=C)}return d}function vg(a,b){return a.nodeValue!==b}
		var wg=Object.freeze({createElement:ng,createTextNode:og,setInitialProperties:pg,diffProperties:sg,updateProperties:tg,diffHydratedProperties:ug,diffHydratedText:vg,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case "input":Of(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=
		c.parentNode;c=c.querySelectorAll("input[name\x3d"+JSON.stringify(""+b)+'][type\x3d"radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=rb(d);e?void 0:E("90");Cc(d);Of(d,e)}}}break;case "textarea":Wf(a,c);break;case "select":b=c.value,null!=b&&Sf(a,!!c.multiple,b,!1)}}});nc.injectFiberControlledHostComponent(wg);var xg=null,Mg=null;function Ng(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}
		function Og(a){a=a?9===a.nodeType?a.documentElement:a.firstChild:null;return!(!a||1!==a.nodeType||!a.hasAttribute("data-reactroot"))}
		var Z=of({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:$f(null,"");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=$f(a,b)}return a},getChildHostContext:function(a,b){return $f(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){xg=td;var a=da();if(Kd(a)){if("selectionStart"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();
		if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(z){b=null;break a}var f=0,g=-1,h=-1,k=0,q=0,v=a,y=null;b:for(;;){for(var u;;){v!==b||0!==d&&3!==v.nodeType||(g=f+d);v!==e||0!==c&&3!==v.nodeType||(h=f+c);3===v.nodeType&&(f+=v.nodeValue.length);if(null===(u=v.firstChild))break;y=v;v=u}for(;;){if(v===a)break b;y===b&&++k===d&&(g=f);y===e&&++q===c&&(h=f);if(null!==(u=v.nextSibling))break;v=y;y=v.parentNode}v=u}b=-1===g||-1===h?null:
		{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;Mg={focusedElem:a,selectionRange:b};ud(!1)},resetAfterCommit:function(){var a=Mg,b=da(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&fa(document.documentElement,c)){if(Kd(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[Eb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>
		d&&(e=d,d=a,a=e);e=Jd(c,a);var f=Jd(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var g=document.createRange();g.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(g),b.extend(f.node,f.offset)):(g.setEnd(f.node,f.offset),b.addRange(g))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ia(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=
		a.top}Mg=null;ud(xg);xg=null},createInstance:function(a,b,c,d,e){a=ng(a,b,c,d);a[Q]=e;a[ob]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){pg(a,b,c,d);a:{switch(b){case "button":case "input":case "select":case "textarea":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return sg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return"textarea"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===
		typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&"string"===typeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=og(a,b);a[Q]=d;return a},now:rf,mutation:{commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){a[ob]=e;tg(a,b,c,d,e)},resetTextContent:function(a){a.textContent=""},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,
		b){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,
		b){return""===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[Q]=f;a[ob]=c;return ug(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[Q]=c;return vg(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},
		didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:sf,cancelDeferredCallback:tf,useSyncScheduling:!0});rc=Z.batchedUpdates;
		function Pg(a,b,c,d,e){Ng(c)?void 0:E("200");var f=c._reactRootContainer;if(f)Z.updateContainer(b,f,a,e);else{d=d||Og(c);if(!d)for(f=void 0;f=c.lastChild;)c.removeChild(f);var g=Z.createContainer(c,d);f=c._reactRootContainer=g;Z.unbatchedUpdates(function(){Z.updateContainer(b,g,a,e)})}return Z.getPublicRootInstance(f)}function Qg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Ng(b)?void 0:E("200");return pf(a,b,null,c)}
		function Rg(a,b){this._reactRootContainer=Z.createContainer(a,b)}Rg.prototype.render=function(a,b){Z.updateContainer(a,this._reactRootContainer,null,b)};Rg.prototype.unmount=function(a){Z.updateContainer(null,this._reactRootContainer,null,a)};
		var Sg={createPortal:Qg,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(b)return Z.findHostInstance(b);"function"===typeof a.render?E("188"):E("213",Object.keys(a))},hydrate:function(a,b,c){return Pg(null,a,b,!0,c)},render:function(a,b,c){return Pg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?E("38"):void 0;return Pg(a,b,c,!1,d)},unmountComponentAtNode:function(a){Ng(a)?void 0:
		E("40");return a._reactRootContainer?(Z.unbatchedUpdates(function(){Pg(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:Qg,unstable_batchedUpdates:tc,unstable_deferredUpdates:Z.deferredUpdates,flushSync:Z.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:mb,EventPluginRegistry:Va,EventPropagators:Cb,ReactControlledComponent:qc,ReactDOMComponentTree:sb,ReactDOMEventListener:xd}};
		Z.injectIntoDevTools({findFiberByHostInstance:pb,bundleType:0,version:"16.2.0",rendererPackageName:"react-dom"});var Tg=Object.freeze({default:Sg}),Ug=Tg&&Sg||Tg;module.exports=Ug["default"]?Ug["default"]:Ug;

		},{"fbjs/lib/EventListener":665,"fbjs/lib/ExecutionEnvironment":666,"fbjs/lib/containsNode":669,"fbjs/lib/emptyFunction":670,"fbjs/lib/emptyObject":671,"fbjs/lib/focusNode":672,"fbjs/lib/getActiveElement":673,"fbjs/lib/shallowEqual":680,"object-assign":954,"react":1016}],971:[function(require,module,exports){
		(function (process){
		'use strict';

		function checkDCE() {
		  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
		  if (
		    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
		    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
		  ) {
		    return;
		  }
		  if (process.env.NODE_ENV !== 'production') {
		    // This branch is unreachable because this function is only called
		    // in production, but the condition is true only in development.
		    // Therefore if the branch is still here, dead code elimination wasn't
		    // properly applied.
		    // Don't change the message. React DevTools relies on it. Also make sure
		    // this message doesn't occur elsewhere in this function, or it will cause
		    // a false positive.
		    throw new Error('^_^');
		  }
		  try {
		    // Verify that the code above has been dead code eliminated (DCE'd).
		    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
		  } catch (err) {
		    // DevTools shouldn't crash React, no matter what.
		    // We should still report in case we break this code.
		    console.error(err);
		  }
		}

		if (process.env.NODE_ENV === 'production') {
		  // DCE check should happen before ReactDOM bundle executes so that
		  // DevTools can report bad minification during injection.
		  checkDCE();
		  module.exports = require('./cjs/react-dom.production.min.js');
		} else {
		  module.exports = require('./cjs/react-dom.development.js');
		}

		}).call(this,require('_process'))
		},{"./cjs/react-dom.development.js":969,"./cjs/react-dom.production.min.js":970,"_process":957}],972:[function(require,module,exports){
		(function (process){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _typeof2 = require('babel-runtime/helpers/typeof');

		var _typeof3 = _interopRequireDefault(_typeof2);

		var _keys = require('babel-runtime/core-js/object/keys');

		var _keys2 = _interopRequireDefault(_keys);

		var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

		var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

		var _assign = require('babel-runtime/core-js/object/assign');

		var _assign2 = _interopRequireDefault(_assign);

		exports.withOptions = withOptions;

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _shallowEqual = require('fbjs/lib/shallowEqual');

		var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

		var _warning = require('warning');

		var _warning2 = _interopRequireDefault(_warning);

		var _supports = require('./supports');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var defaultEventOptions = {
		  capture: false,
		  passive: false
		};

		function mergeDefaultEventOptions(options) {
		  return (0, _assign2.default)({}, defaultEventOptions, options);
		}

		function getEventListenerArgs(eventName, callback, options) {
		  var args = [eventName, callback];
		  args.push(_supports.passiveOption ? options : options.capture);
		  return args;
		}

		function on(target, eventName, callback, options) {
		  // eslint-disable-next-line prefer-spread
		  target.addEventListener.apply(target, getEventListenerArgs(eventName, callback, options));
		}

		function off(target, eventName, callback, options) {
		  // eslint-disable-next-line prefer-spread
		  target.removeEventListener.apply(target, getEventListenerArgs(eventName, callback, options));
		}

		function forEachListener(props, iteratee) {
		  var children = props.children,
		      target = props.target,
		      eventProps = (0, _objectWithoutProperties3.default)(props, ['children', 'target']);


		  (0, _keys2.default)(eventProps).forEach(function (name) {
		    if (name.substring(0, 2) !== 'on') {
		      return;
		    }

		    var prop = eventProps[name];
		    var type = typeof prop === 'undefined' ? 'undefined' : (0, _typeof3.default)(prop);
		    var isObject = type === 'object';
		    var isFunction = type === 'function';

		    if (!isObject && !isFunction) {
		      return;
		    }

		    var capture = name.substr(-7).toLowerCase() === 'capture';
		    var eventName = name.substring(2).toLowerCase();
		    eventName = capture ? eventName.substring(0, eventName.length - 7) : eventName;

		    if (isObject) {
		      iteratee(eventName, prop.handler, prop.options);
		    } else {
		      iteratee(eventName, prop, mergeDefaultEventOptions({ capture: capture }));
		    }
		  });
		}

		function withOptions(handler, options) {
		  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(options, 'react-event-listener: should be specified options in withOptions.') : void 0;

		  return {
		    handler: handler,
		    options: mergeDefaultEventOptions(options)
		  };
		}

		var EventListener = function (_React$Component) {
		  (0, _inherits3.default)(EventListener, _React$Component);

		  function EventListener() {
		    (0, _classCallCheck3.default)(this, EventListener);
		    return (0, _possibleConstructorReturn3.default)(this, (EventListener.__proto__ || (0, _getPrototypeOf2.default)(EventListener)).apply(this, arguments));
		  }

		  (0, _createClass3.default)(EventListener, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      this.addListeners();
		    }
		  }, {
		    key: 'shouldComponentUpdate',
		    value: function shouldComponentUpdate(nextProps) {
		      return !(0, _shallowEqual2.default)(this.props, nextProps);
		    }
		  }, {
		    key: 'componentWillUpdate',
		    value: function componentWillUpdate() {
		      this.removeListeners();
		    }
		  }, {
		    key: 'componentDidUpdate',
		    value: function componentDidUpdate() {
		      this.addListeners();
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      this.removeListeners();
		    }
		  }, {
		    key: 'addListeners',
		    value: function addListeners() {
		      this.applyListeners(on);
		    }
		  }, {
		    key: 'removeListeners',
		    value: function removeListeners() {
		      this.applyListeners(off);
		    }
		  }, {
		    key: 'applyListeners',
		    value: function applyListeners(onOrOff) {
		      var target = this.props.target;


		      if (target) {
		        var element = target;

		        if (typeof target === 'string') {
		          element = window[target];
		        }

		        forEachListener(this.props, onOrOff.bind(null, element));
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      return this.props.children || null;
		    }
		  }]);
		  return EventListener;
		}(_react2.default.Component);

		EventListener.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * You can provide a single child too.
		   */
		  children: _propTypes2.default.node,
		  /**
		   * The DOM target to listen to.
		   */
		  target: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]).isRequired
		} : {};

		exports.default = EventListener;
		}).call(this,require('_process'))
		},{"./supports":973,"_process":957,"babel-runtime/core-js/object/assign":510,"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/core-js/object/keys":514,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/objectWithoutProperties":523,"babel-runtime/helpers/possibleConstructorReturn":524,"babel-runtime/helpers/typeof":526,"fbjs/lib/shallowEqual":680,"prop-types":961,"react":1016,"warning":1054}],973:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.passiveOption = undefined;

		var _defineProperty = require('babel-runtime/core-js/object/define-property');

		var _defineProperty2 = _interopRequireDefault(_defineProperty);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function defineProperty(object, property, attr) {
		  return (0, _defineProperty2.default)(object, property, attr);
		}

		// Passive options
		// Inspired by https://github.com/Modernizr/Modernizr/blob/master/feature-detects/dom/passiveeventlisteners.js
		var passiveOption = exports.passiveOption = function () {
		  var cache = null;

		  return function () {
		    if (cache !== null) {
		      return cache;
		    }

		    var supportsPassiveOption = false;

		    try {
		      window.addEventListener('test', null, defineProperty({}, 'passive', {
		        get: function get() {
		          supportsPassiveOption = true;
		        }
		      }));
		    } catch (err) {
		      //
		    }

		    cache = supportsPassiveOption;

		    return supportsPassiveOption;
		  }();
		}();

		exports.default = {};
		},{"babel-runtime/core-js/object/define-property":512}],974:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _ns$jss$ns$sheetOptio;

		var _propTypes = require('prop-types');

		var _ns = require('./ns');

		var ns = _interopRequireWildcard(_ns);

		var _propTypes2 = require('./propTypes');

		var _propTypes3 = _interopRequireDefault(_propTypes2);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

		exports['default'] = (_ns$jss$ns$sheetOptio = {}, _defineProperty(_ns$jss$ns$sheetOptio, ns.jss, _propTypes3['default'].jss), _defineProperty(_ns$jss$ns$sheetOptio, ns.sheetOptions, _propTypes.object), _defineProperty(_ns$jss$ns$sheetOptio, ns.sheetsRegistry, _propTypes3['default'].registry), _defineProperty(_ns$jss$ns$sheetOptio, ns.managers, _propTypes.object), _ns$jss$ns$sheetOptio);
		},{"./ns":975,"./propTypes":976,"prop-types":961}],975:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		/**
		 * Namespaces to avoid conflicts on the context.
		 */
		var jss = exports.jss = '64a55d578f856d258dc345b094a2a2b3';
		var sheetsRegistry = exports.sheetsRegistry = 'd4bd0baacbc52bbd48bbb9eb24344ecd';
		var managers = exports.managers = 'b768b78919504fba9de2c03545c5cd3a';
		var sheetOptions = exports.sheetOptions = '6fc570d6bd61383819d0f9e7407c452d';
		},{}],976:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _propTypes = require('prop-types');

		exports['default'] = {
		  jss: (0, _propTypes.shape)({
		    options: (0, _propTypes.shape)({
		      createGenerateClassName: _propTypes.func.isRequired
		    }).isRequired,
		    createStyleSheet: _propTypes.func.isRequired,
		    removeStyleSheet: _propTypes.func.isRequired
		  }),
		  registry: (0, _propTypes.shape)({
		    add: _propTypes.func.isRequired,
		    toString: _propTypes.func.isRequired
		  })
		};
		},{"prop-types":961}],977:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

		var Arrow = function Arrow(props, context) {
		  var _props$component = props.component,
		      component = _props$component === undefined ? 'span' : _props$component,
		      innerRef = props.innerRef,
		      children = props.children,
		      restProps = _objectWithoutProperties(props, ['component', 'innerRef', 'children']);

		  var popper = context.popper;

		  var arrowRef = function arrowRef(node) {
		    popper.setArrowNode(node);
		    if (typeof innerRef === 'function') {
		      innerRef(node);
		    }
		  };
		  var arrowStyle = popper.getArrowStyle();

		  if (typeof children === 'function') {
		    var arrowProps = {
		      ref: arrowRef,
		      style: arrowStyle
		    };
		    return children({ arrowProps: arrowProps, restProps: restProps });
		  }

		  var componentProps = _extends({}, restProps, {
		    style: _extends({}, arrowStyle, restProps.style)
		  });

		  if (typeof component === 'string') {
		    componentProps.ref = arrowRef;
		  } else {
		    componentProps.innerRef = arrowRef;
		  }

		  return (0, _react.createElement)(component, componentProps, children);
		};

		Arrow.contextTypes = {
		  popper: _propTypes2.default.object.isRequired
		};

		Arrow.propTypes = {
		  component: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),
		  innerRef: _propTypes2.default.func,
		  children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func])
		};

		exports.default = Arrow;
		},{"prop-types":961,"react":1016}],978:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

		var Manager = function (_Component) {
		  _inherits(Manager, _Component);

		  function Manager() {
		    var _ref;

		    var _temp, _this, _ret;

		    _classCallCheck(this, Manager);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Manager.__proto__ || Object.getPrototypeOf(Manager)).call.apply(_ref, [this].concat(args))), _this), _this._setTargetNode = function (node) {
		      _this._targetNode = node;
		    }, _this._getTargetNode = function () {
		      return _this._targetNode;
		    }, _temp), _possibleConstructorReturn(_this, _ret);
		  }

		  _createClass(Manager, [{
		    key: 'getChildContext',
		    value: function getChildContext() {
		      return {
		        popperManager: {
		          setTargetNode: this._setTargetNode,
		          getTargetNode: this._getTargetNode
		        }
		      };
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          tag = _props.tag,
		          children = _props.children,
		          restProps = _objectWithoutProperties(_props, ['tag', 'children']);

		      if (tag !== false) {
		        return (0, _react.createElement)(tag, restProps, children);
		      } else {
		        return children;
		      }
		    }
		  }]);

		  return Manager;
		}(_react.Component);

		Manager.childContextTypes = {
		  popperManager: _propTypes2.default.object.isRequired
		};
		Manager.propTypes = {
		  tag: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool])
		};
		Manager.defaultProps = {
		  tag: 'div'
		};
		exports.default = Manager;
		},{"prop-types":961,"react":1016}],979:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _popper = require('popper.js');

		var _popper2 = _interopRequireDefault(_popper);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

		var Popper = function (_Component) {
		  _inherits(Popper, _Component);

		  function Popper() {
		    var _ref;

		    var _temp, _this, _ret;

		    _classCallCheck(this, Popper);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Popper.__proto__ || Object.getPrototypeOf(Popper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this._setArrowNode = function (node) {
		      _this._arrowNode = node;
		    }, _this._getTargetNode = function () {
		      return _this.context.popperManager.getTargetNode();
		    }, _this._getOffsets = function (data) {
		      return Object.keys(data.offsets).map(function (key) {
		        return data.offsets[key];
		      });
		    }, _this._isDataDirty = function (data) {
		      if (_this.state.data) {
		        return JSON.stringify(_this._getOffsets(_this.state.data)) !== JSON.stringify(_this._getOffsets(data));
		      } else {
		        return true;
		      }
		    }, _this._updateStateModifier = {
		      enabled: true,
		      order: 900,
		      fn: function fn(data) {
		        if (_this._isDataDirty(data)) {
		          _this.setState({ data: data });
		        }
		        return data;
		      }
		    }, _this._getPopperStyle = function () {
		      var data = _this.state.data;

		      // If Popper isn't instantiated, hide the popperElement
		      // to avoid flash of unstyled content

		      if (!data) {
		        return {
		          position: 'absolute',
		          pointerEvents: 'none',
		          opacity: 0
		        };
		      }

		      var _data$offsets$popper = data.offsets.popper,
		          top = _data$offsets$popper.top,
		          left = _data$offsets$popper.left,
		          position = _data$offsets$popper.position;


		      return _extends({
		        position: position
		      }, data.styles);
		    }, _this._getPopperPlacement = function () {
		      return _this.state.data ? _this.state.data.placement : undefined;
		    }, _this._getPopperHide = function () {
		      return !!_this.state.data && _this.state.data.hide ? '' : undefined;
		    }, _this._getArrowStyle = function () {
		      if (!_this.state.data || !_this.state.data.offsets.arrow) {
		        return {};
		      } else {
		        var _this$state$data$offs = _this.state.data.offsets.arrow,
		            top = _this$state$data$offs.top,
		            left = _this$state$data$offs.left;

		        return { top: top, left: left };
		      }
		    }, _temp), _possibleConstructorReturn(_this, _ret);
		  }

		  _createClass(Popper, [{
		    key: 'getChildContext',
		    value: function getChildContext() {
		      return {
		        popper: {
		          setArrowNode: this._setArrowNode,
		          getArrowStyle: this._getArrowStyle
		        }
		      };
		    }
		  }, {
		    key: 'componentDidUpdate',
		    value: function componentDidUpdate(lastProps) {
		      if (lastProps.placement !== this.props.placement || lastProps.eventsEnabled !== this.props.eventsEnabled) {
		        this._destroyPopper();
		        this._createPopper();
		      }

		      if (lastProps.children !== this.props.children) {
		        this._popper.scheduleUpdate();
		      }
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      this._destroyPopper();
		    }
		  }, {
		    key: '_createPopper',
		    value: function _createPopper() {
		      var _props = this.props,
		          placement = _props.placement,
		          eventsEnabled = _props.eventsEnabled;

		      var modifiers = _extends({}, this.props.modifiers, {
		        applyStyle: { enabled: false },
		        updateState: this._updateStateModifier
		      });

		      if (this._arrowNode) {
		        modifiers.arrow = {
		          element: this._arrowNode
		        };
		      }

		      this._popper = new _popper2.default(this._getTargetNode(), this._node, {
		        placement: placement,
		        eventsEnabled: eventsEnabled,
		        modifiers: modifiers
		      });

		      // schedule an update to make sure everything gets positioned correctly
		      // after being instantiated
		      this._popper.scheduleUpdate();
		    }
		  }, {
		    key: '_destroyPopper',
		    value: function _destroyPopper() {
		      if (this._popper) {
		        this._popper.destroy();
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this2 = this;

		      var _props2 = this.props,
		          component = _props2.component,
		          innerRef = _props2.innerRef,
		          placement = _props2.placement,
		          eventsEnabled = _props2.eventsEnabled,
		          modifiers = _props2.modifiers,
		          children = _props2.children,
		          restProps = _objectWithoutProperties(_props2, ['component', 'innerRef', 'placement', 'eventsEnabled', 'modifiers', 'children']);

		      var popperRef = function popperRef(node) {
		        _this2._node = node;
		        if (node) {
		          _this2._createPopper();
		        } else {
		          _this2._destroyPopper();
		        }
		        if (typeof innerRef === 'function') {
		          innerRef(node);
		        }
		      };
		      var popperStyle = this._getPopperStyle();
		      var popperPlacement = this._getPopperPlacement();
		      var popperHide = this._getPopperHide();

		      if (typeof children === 'function') {
		        var _popperProps;

		        var popperProps = (_popperProps = {
		          ref: popperRef,
		          style: popperStyle
		        }, _defineProperty(_popperProps, 'data-placement', popperPlacement), _defineProperty(_popperProps, 'data-x-out-of-boundaries', popperHide), _popperProps);

		        return children({
		          popperProps: popperProps,
		          restProps: restProps,
		          scheduleUpdate: function scheduleUpdate() {
		            // _createPopper will scheduleUpdate,
		            // so calling this before this._popper exists
		            // can be a noop.
		            _this2._popper && _this2._popper.scheduleUpdate();
		          }
		        });
		      }

		      var componentProps = _extends({}, restProps, {
		        style: _extends({}, restProps.style, popperStyle),
		        'data-placement': popperPlacement,
		        'data-x-out-of-boundaries': popperHide
		      });

		      if (typeof component === 'string') {
		        componentProps.ref = popperRef;
		      } else {
		        componentProps.innerRef = popperRef;
		      }

		      return (0, _react.createElement)(component, componentProps, children);
		    }
		  }]);

		  return Popper;
		}(_react.Component);

		Popper.contextTypes = {
		  popperManager: _propTypes2.default.object.isRequired
		};
		Popper.childContextTypes = {
		  popper: _propTypes2.default.object.isRequired
		};
		Popper.propTypes = {
		  component: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),
		  innerRef: _propTypes2.default.func,
		  placement: _propTypes2.default.oneOf(_popper2.default.placements),
		  eventsEnabled: _propTypes2.default.bool,
		  modifiers: _propTypes2.default.object,
		  children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func])
		};
		Popper.defaultProps = {
		  component: 'div',
		  placement: 'bottom',
		  eventsEnabled: true,
		  modifiers: {}
		};
		exports.default = Popper;
		},{"popper.js":955,"prop-types":961,"react":1016}],980:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

		var Target = function Target(props, context) {
		  var _props$component = props.component,
		      component = _props$component === undefined ? 'div' : _props$component,
		      innerRef = props.innerRef,
		      children = props.children,
		      restProps = _objectWithoutProperties(props, ['component', 'innerRef', 'children']);

		  var popperManager = context.popperManager;

		  var targetRef = function targetRef(node) {
		    popperManager.setTargetNode(node);
		    if (typeof innerRef === 'function') {
		      innerRef(node);
		    }
		  };

		  if (typeof children === 'function') {
		    var targetProps = { ref: targetRef };
		    return children({ targetProps: targetProps, restProps: restProps });
		  }

		  var componentProps = _extends({}, restProps);

		  if (typeof component === 'string') {
		    componentProps.ref = targetRef;
		  } else {
		    componentProps.innerRef = targetRef;
		  }

		  return (0, _react.createElement)(component, componentProps, children);
		};

		Target.contextTypes = {
		  popperManager: _propTypes2.default.object.isRequired
		};

		Target.propTypes = {
		  component: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),
		  innerRef: _propTypes2.default.func,
		  children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func])
		};

		exports.default = Target;
		},{"prop-types":961,"react":1016}],981:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.Arrow = exports.Popper = exports.Target = exports.Manager = undefined;

		var _Manager2 = require('./Manager');

		var _Manager3 = _interopRequireDefault(_Manager2);

		var _Target2 = require('./Target');

		var _Target3 = _interopRequireDefault(_Target2);

		var _Popper2 = require('./Popper');

		var _Popper3 = _interopRequireDefault(_Popper2);

		var _Arrow2 = require('./Arrow');

		var _Arrow3 = _interopRequireDefault(_Arrow2);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.Manager = _Manager3.default;
		exports.Target = _Target3.default;
		exports.Popper = _Popper3.default;
		exports.Arrow = _Arrow3.default;
		},{"./Arrow":977,"./Manager":978,"./Popper":979,"./Target":980}],982:[function(require,module,exports){
		(function (process){
		'use strict';

		exports.__esModule = true;
		exports.createProvider = createProvider;

		var _react = require('react');

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _PropTypes = require('../utils/PropTypes');

		var _warning = require('../utils/warning');

		var _warning2 = _interopRequireDefault(_warning);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

		var didWarnAboutReceivingStore = false;
		function warnAboutReceivingStore() {
		  if (didWarnAboutReceivingStore) {
		    return;
		  }
		  didWarnAboutReceivingStore = true;

		  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
		}

		function createProvider() {
		  var _Provider$childContex;

		  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';
		  var subKey = arguments[1];

		  var subscriptionKey = subKey || storeKey + 'Subscription';

		  var Provider = function (_Component) {
		    _inherits(Provider, _Component);

		    Provider.prototype.getChildContext = function getChildContext() {
		      var _ref;

		      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
		    };

		    function Provider(props, context) {
		      _classCallCheck(this, Provider);

		      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

		      _this[storeKey] = props.store;
		      return _this;
		    }

		    Provider.prototype.render = function render() {
		      return _react.Children.only(this.props.children);
		    };

		    return Provider;
		  }(_react.Component);

		  if (process.env.NODE_ENV !== 'production') {
		    Provider.prototype.componentWillReceiveProps = function (nextProps) {
		      if (this[storeKey] !== nextProps.store) {
		        warnAboutReceivingStore();
		      }
		    };
		  }

		  Provider.propTypes = {
		    store: _PropTypes.storeShape.isRequired,
		    children: _propTypes2.default.element.isRequired
		  };
		  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);

		  return Provider;
		}

		exports.default = createProvider();
		}).call(this,require('_process'))
		},{"../utils/PropTypes":992,"../utils/warning":996,"_process":957,"prop-types":961,"react":1016}],983:[function(require,module,exports){
		(function (process){
		'use strict';

		exports.__esModule = true;

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		exports.default = connectAdvanced;

		var _hoistNonReactStatics = require('hoist-non-react-statics');

		var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

		var _invariant = require('invariant');

		var _invariant2 = _interopRequireDefault(_invariant);

		var _react = require('react');

		var _Subscription = require('../utils/Subscription');

		var _Subscription2 = _interopRequireDefault(_Subscription);

		var _PropTypes = require('../utils/PropTypes');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

		var hotReloadingVersion = 0;
		var dummyState = {};
		function noop() {}
		function makeSelectorStateful(sourceSelector, store) {
		  // wrap the selector in an object that tracks its results between runs.
		  var selector = {
		    run: function runComponentSelector(props) {
		      try {
		        var nextProps = sourceSelector(store.getState(), props);
		        if (nextProps !== selector.props || selector.error) {
		          selector.shouldComponentUpdate = true;
		          selector.props = nextProps;
		          selector.error = null;
		        }
		      } catch (error) {
		        selector.shouldComponentUpdate = true;
		        selector.error = error;
		      }
		    }
		  };

		  return selector;
		}

		function connectAdvanced(
		/*
		  selectorFactory is a func that is responsible for returning the selector function used to
		  compute new props from state, props, and dispatch. For example:
		     export default connectAdvanced((dispatch, options) => (state, props) => ({
		      thing: state.things[props.thingId],
		      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
		    }))(YourComponent)
		   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
		  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
		  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
		   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
		  props. Do not use connectAdvanced directly without memoizing results between calls to your
		  selector, otherwise the Connect component will re-render on every state or props change.
		*/
		selectorFactory) {
		  var _contextTypes, _childContextTypes;

		  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
		      _ref$getDisplayName = _ref.getDisplayName,
		      getDisplayName = _ref$getDisplayName === undefined ? function (name) {
		    return 'ConnectAdvanced(' + name + ')';
		  } : _ref$getDisplayName,
		      _ref$methodName = _ref.methodName,
		      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
		      _ref$renderCountProp = _ref.renderCountProp,
		      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
		      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
		      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
		      _ref$storeKey = _ref.storeKey,
		      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
		      _ref$withRef = _ref.withRef,
		      withRef = _ref$withRef === undefined ? false : _ref$withRef,
		      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);

		  var subscriptionKey = storeKey + 'Subscription';
		  var version = hotReloadingVersion++;

		  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);
		  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);

		  return function wrapWithConnect(WrappedComponent) {
		    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + (methodName + '. Instead received ' + JSON.stringify(WrappedComponent)));

		    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';

		    var displayName = getDisplayName(wrappedComponentName);

		    var selectorFactoryOptions = _extends({}, connectOptions, {
		      getDisplayName: getDisplayName,
		      methodName: methodName,
		      renderCountProp: renderCountProp,
		      shouldHandleStateChanges: shouldHandleStateChanges,
		      storeKey: storeKey,
		      withRef: withRef,
		      displayName: displayName,
		      wrappedComponentName: wrappedComponentName,
		      WrappedComponent: WrappedComponent
		    });

		    var Connect = function (_Component) {
		      _inherits(Connect, _Component);

		      function Connect(props, context) {
		        _classCallCheck(this, Connect);

		        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

		        _this.version = version;
		        _this.state = {};
		        _this.renderCount = 0;
		        _this.store = props[storeKey] || context[storeKey];
		        _this.propsMode = Boolean(props[storeKey]);
		        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);

		        (0, _invariant2.default)(_this.store, 'Could not find "' + storeKey + '" in either the context or props of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));

		        _this.initSelector();
		        _this.initSubscription();
		        return _this;
		      }

		      Connect.prototype.getChildContext = function getChildContext() {
		        var _ref2;

		        // If this component received store from props, its subscription should be transparent
		        // to any descendants receiving store+subscription from context; it passes along
		        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
		        // Connect to control ordering of notifications to flow top-down.
		        var subscription = this.propsMode ? null : this.subscription;
		        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;
		      };

		      Connect.prototype.componentDidMount = function componentDidMount() {
		        if (!shouldHandleStateChanges) return;

		        // componentWillMount fires during server side rendering, but componentDidMount and
		        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
		        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
		        // To handle the case where a child component may have triggered a state change by
		        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
		        // re-render.
		        this.subscription.trySubscribe();
		        this.selector.run(this.props);
		        if (this.selector.shouldComponentUpdate) this.forceUpdate();
		      };

		      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		        this.selector.run(nextProps);
		      };

		      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
		        return this.selector.shouldComponentUpdate;
		      };

		      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
		        if (this.subscription) this.subscription.tryUnsubscribe();
		        this.subscription = null;
		        this.notifyNestedSubs = noop;
		        this.store = null;
		        this.selector.run = noop;
		        this.selector.shouldComponentUpdate = false;
		      };

		      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
		        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
		        return this.wrappedInstance;
		      };

		      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
		        this.wrappedInstance = ref;
		      };

		      Connect.prototype.initSelector = function initSelector() {
		        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
		        this.selector = makeSelectorStateful(sourceSelector, this.store);
		        this.selector.run(this.props);
		      };

		      Connect.prototype.initSubscription = function initSubscription() {
		        if (!shouldHandleStateChanges) return;

		        // parentSub's source should match where store came from: props vs. context. A component
		        // connected to the store via props shouldn't use subscription from context, or vice versa.
		        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
		        this.subscription = new _Subscription2.default(this.store, parentSub, this.onStateChange.bind(this));

		        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in
		        // the middle of the notification loop, where `this.subscription` will then be null. An
		        // extra null check every change can be avoided by copying the method onto `this` and then
		        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
		        // listeners logic is changed to not call listeners that have been unsubscribed in the
		        // middle of the notification loop.
		        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
		      };

		      Connect.prototype.onStateChange = function onStateChange() {
		        this.selector.run(this.props);

		        if (!this.selector.shouldComponentUpdate) {
		          this.notifyNestedSubs();
		        } else {
		          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
		          this.setState(dummyState);
		        }
		      };

		      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
		        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
		        // needs to notify nested subs. Once called, it unimplements itself until further state
		        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does
		        // a boolean check every time avoids an extra method call most of the time, resulting
		        // in some perf boost.
		        this.componentDidUpdate = undefined;
		        this.notifyNestedSubs();
		      };

		      Connect.prototype.isSubscribed = function isSubscribed() {
		        return Boolean(this.subscription) && this.subscription.isSubscribed();
		      };

		      Connect.prototype.addExtraProps = function addExtraProps(props) {
		        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;
		        // make a shallow copy so that fields added don't leak to the original selector.
		        // this is especially important for 'ref' since that's a reference back to the component
		        // instance. a singleton memoized selector would then be holding a reference to the
		        // instance, preventing the instance from being garbage collected, and that would be bad
		        var withExtras = _extends({}, props);
		        if (withRef) withExtras.ref = this.setWrappedInstance;
		        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
		        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
		        return withExtras;
		      };

		      Connect.prototype.render = function render() {
		        var selector = this.selector;
		        selector.shouldComponentUpdate = false;

		        if (selector.error) {
		          throw selector.error;
		        } else {
		          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
		        }
		      };

		      return Connect;
		    }(_react.Component);

		    Connect.WrappedComponent = WrappedComponent;
		    Connect.displayName = displayName;
		    Connect.childContextTypes = childContextTypes;
		    Connect.contextTypes = contextTypes;
		    Connect.propTypes = contextTypes;

		    if (process.env.NODE_ENV !== 'production') {
		      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
		        var _this2 = this;

		        // We are hot reloading!
		        if (this.version !== version) {
		          this.version = version;
		          this.initSelector();

		          // If any connected descendants don't hot reload (and resubscribe in the process), their
		          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all
		          // listeners, this does mean that the old versions of connected descendants will still be
		          // notified of state changes; however, their onStateChange function is a no-op so this
		          // isn't a huge deal.
		          var oldListeners = [];

		          if (this.subscription) {
		            oldListeners = this.subscription.listeners.get();
		            this.subscription.tryUnsubscribe();
		          }
		          this.initSubscription();
		          if (shouldHandleStateChanges) {
		            this.subscription.trySubscribe();
		            oldListeners.forEach(function (listener) {
		              return _this2.subscription.listeners.subscribe(listener);
		            });
		          }
		        }
		      };
		    }

		    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);
		  };
		}
		}).call(this,require('_process'))
		},{"../utils/PropTypes":992,"../utils/Subscription":993,"_process":957,"hoist-non-react-statics":683,"invariant":687,"react":1016}],984:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		exports.createConnect = createConnect;

		var _connectAdvanced = require('../components/connectAdvanced');

		var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);

		var _shallowEqual = require('../utils/shallowEqual');

		var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

		var _mapDispatchToProps = require('./mapDispatchToProps');

		var _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);

		var _mapStateToProps = require('./mapStateToProps');

		var _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);

		var _mergeProps = require('./mergeProps');

		var _mergeProps2 = _interopRequireDefault(_mergeProps);

		var _selectorFactory = require('./selectorFactory');

		var _selectorFactory2 = _interopRequireDefault(_selectorFactory);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

		/*
		  connect is a facade over connectAdvanced. It turns its args into a compatible
		  selectorFactory, which has the signature:

		    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
		  
		  connect passes its args to connectAdvanced as options, which will in turn pass them to
		  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

		  selectorFactory returns a final props selector from its mapStateToProps,
		  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
		  mergePropsFactories, and pure args.

		  The resulting final props selector is called by the Connect component instance whenever
		  it receives new props or store state.
		 */

		function match(arg, factories, name) {
		  for (var i = factories.length - 1; i >= 0; i--) {
		    var result = factories[i](arg);
		    if (result) return result;
		  }

		  return function (dispatch, options) {
		    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
		  };
		}

		function strictEqual(a, b) {
		  return a === b;
		}

		// createConnect with default args builds the 'official' connect behavior. Calling it with
		// different options opens up some testing and extensibility scenarios
		function createConnect() {
		  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
		      _ref$connectHOC = _ref.connectHOC,
		      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,
		      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
		      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,
		      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
		      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,
		      _ref$mergePropsFactor = _ref.mergePropsFactories,
		      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,
		      _ref$selectorFactory = _ref.selectorFactory,
		      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;

		  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
		    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
		        _ref2$pure = _ref2.pure,
		        pure = _ref2$pure === undefined ? true : _ref2$pure,
		        _ref2$areStatesEqual = _ref2.areStatesEqual,
		        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
		        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
		        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,
		        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
		        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,
		        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
		        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,
		        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);

		    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
		    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
		    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');

		    return connectHOC(selectorFactory, _extends({
		      // used in error messages
		      methodName: 'connect',

		      // used to compute Connect's displayName from the wrapped component's displayName.
		      getDisplayName: function getDisplayName(name) {
		        return 'Connect(' + name + ')';
		      },

		      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
		      shouldHandleStateChanges: Boolean(mapStateToProps),

		      // passed through to selectorFactory
		      initMapStateToProps: initMapStateToProps,
		      initMapDispatchToProps: initMapDispatchToProps,
		      initMergeProps: initMergeProps,
		      pure: pure,
		      areStatesEqual: areStatesEqual,
		      areOwnPropsEqual: areOwnPropsEqual,
		      areStatePropsEqual: areStatePropsEqual,
		      areMergedPropsEqual: areMergedPropsEqual

		    }, extraOptions));
		  };
		}

		exports.default = createConnect();
		},{"../components/connectAdvanced":983,"../utils/shallowEqual":994,"./mapDispatchToProps":985,"./mapStateToProps":986,"./mergeProps":987,"./selectorFactory":988}],985:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
		exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
		exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;

		var _redux = require('redux');

		var _wrapMapToProps = require('./wrapMapToProps');

		function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
		  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
		}

		function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
		  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
		    return { dispatch: dispatch };
		  }) : undefined;
		}

		function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
		  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
		    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
		  }) : undefined;
		}

		exports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];
		},{"./wrapMapToProps":990,"redux":1042}],986:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
		exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;

		var _wrapMapToProps = require('./wrapMapToProps');

		function whenMapStateToPropsIsFunction(mapStateToProps) {
		  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
		}

		function whenMapStateToPropsIsMissing(mapStateToProps) {
		  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
		    return {};
		  }) : undefined;
		}

		exports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];
		},{"./wrapMapToProps":990}],987:[function(require,module,exports){
		(function (process){
		'use strict';

		exports.__esModule = true;

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		exports.defaultMergeProps = defaultMergeProps;
		exports.wrapMergePropsFunc = wrapMergePropsFunc;
		exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
		exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;

		var _verifyPlainObject = require('../utils/verifyPlainObject');

		var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function defaultMergeProps(stateProps, dispatchProps, ownProps) {
		  return _extends({}, ownProps, stateProps, dispatchProps);
		}

		function wrapMergePropsFunc(mergeProps) {
		  return function initMergePropsProxy(dispatch, _ref) {
		    var displayName = _ref.displayName,
		        pure = _ref.pure,
		        areMergedPropsEqual = _ref.areMergedPropsEqual;

		    var hasRunOnce = false;
		    var mergedProps = void 0;

		    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
		      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

		      if (hasRunOnce) {
		        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
		      } else {
		        hasRunOnce = true;
		        mergedProps = nextMergedProps;

		        if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');
		      }

		      return mergedProps;
		    };
		  };
		}

		function whenMergePropsIsFunction(mergeProps) {
		  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
		}

		function whenMergePropsIsOmitted(mergeProps) {
		  return !mergeProps ? function () {
		    return defaultMergeProps;
		  } : undefined;
		}

		exports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];
		}).call(this,require('_process'))
		},{"../utils/verifyPlainObject":995,"_process":957}],988:[function(require,module,exports){
		(function (process){
		'use strict';

		exports.__esModule = true;
		exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
		exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
		exports.default = finalPropsSelectorFactory;

		var _verifySubselectors = require('./verifySubselectors');

		var _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

		function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
		  return function impureFinalPropsSelector(state, ownProps) {
		    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
		  };
		}

		function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
		  var areStatesEqual = _ref.areStatesEqual,
		      areOwnPropsEqual = _ref.areOwnPropsEqual,
		      areStatePropsEqual = _ref.areStatePropsEqual;

		  var hasRunAtLeastOnce = false;
		  var state = void 0;
		  var ownProps = void 0;
		  var stateProps = void 0;
		  var dispatchProps = void 0;
		  var mergedProps = void 0;

		  function handleFirstCall(firstState, firstOwnProps) {
		    state = firstState;
		    ownProps = firstOwnProps;
		    stateProps = mapStateToProps(state, ownProps);
		    dispatchProps = mapDispatchToProps(dispatch, ownProps);
		    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
		    hasRunAtLeastOnce = true;
		    return mergedProps;
		  }

		  function handleNewPropsAndNewState() {
		    stateProps = mapStateToProps(state, ownProps);

		    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

		    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
		    return mergedProps;
		  }

		  function handleNewProps() {
		    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);

		    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

		    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
		    return mergedProps;
		  }

		  function handleNewState() {
		    var nextStateProps = mapStateToProps(state, ownProps);
		    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
		    stateProps = nextStateProps;

		    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);

		    return mergedProps;
		  }

		  function handleSubsequentCalls(nextState, nextOwnProps) {
		    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
		    var stateChanged = !areStatesEqual(nextState, state);
		    state = nextState;
		    ownProps = nextOwnProps;

		    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
		    if (propsChanged) return handleNewProps();
		    if (stateChanged) return handleNewState();
		    return mergedProps;
		  }

		  return function pureFinalPropsSelector(nextState, nextOwnProps) {
		    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
		  };
		}

		// TODO: Add more comments

		// If pure is true, the selector returned by selectorFactory will memoize its results,
		// allowing connectAdvanced's shouldComponentUpdate to return false if final
		// props have not changed. If false, the selector will always return a new
		// object and shouldComponentUpdate will always return true.

		function finalPropsSelectorFactory(dispatch, _ref2) {
		  var initMapStateToProps = _ref2.initMapStateToProps,
		      initMapDispatchToProps = _ref2.initMapDispatchToProps,
		      initMergeProps = _ref2.initMergeProps,
		      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);

		  var mapStateToProps = initMapStateToProps(dispatch, options);
		  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
		  var mergeProps = initMergeProps(dispatch, options);

		  if (process.env.NODE_ENV !== 'production') {
		    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
		  }

		  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;

		  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
		}
		}).call(this,require('_process'))
		},{"./verifySubselectors":989,"_process":957}],989:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports.default = verifySubselectors;

		var _warning = require('../utils/warning');

		var _warning2 = _interopRequireDefault(_warning);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function verify(selector, methodName, displayName) {
		  if (!selector) {
		    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
		  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
		    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
		      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
		    }
		  }
		}

		function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
		  verify(mapStateToProps, 'mapStateToProps', displayName);
		  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
		  verify(mergeProps, 'mergeProps', displayName);
		}
		},{"../utils/warning":996}],990:[function(require,module,exports){
		(function (process){
		'use strict';

		exports.__esModule = true;
		exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
		exports.getDependsOnOwnProps = getDependsOnOwnProps;
		exports.wrapMapToPropsFunc = wrapMapToPropsFunc;

		var _verifyPlainObject = require('../utils/verifyPlainObject');

		var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function wrapMapToPropsConstant(getConstant) {
		  return function initConstantSelector(dispatch, options) {
		    var constant = getConstant(dispatch, options);

		    function constantSelector() {
		      return constant;
		    }
		    constantSelector.dependsOnOwnProps = false;
		    return constantSelector;
		  };
		}

		// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
		// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
		// whether mapToProps needs to be invoked when props have changed.
		// 
		// A length of one signals that mapToProps does not depend on props from the parent component.
		// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
		// therefore not reporting its length accurately..
		function getDependsOnOwnProps(mapToProps) {
		  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
		}

		// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
		// this function wraps mapToProps in a proxy function which does several things:
		// 
		//  * Detects whether the mapToProps function being called depends on props, which
//		    is used by selectorFactory to decide if it should reinvoke on props changes.
		//    
		//  * On first call, handles mapToProps if returns another function, and treats that
//		    new function as the true mapToProps for subsequent calls.
		//    
		//  * On first call, verifies the first result is a plain object, in order to warn
//		    the developer that their mapToProps function is not returning a valid result.
		//    
		function wrapMapToPropsFunc(mapToProps, methodName) {
		  return function initProxySelector(dispatch, _ref) {
		    var displayName = _ref.displayName;

		    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
		      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
		    };

		    // allow detectFactoryAndVerify to get ownProps
		    proxy.dependsOnOwnProps = true;

		    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
		      proxy.mapToProps = mapToProps;
		      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
		      var props = proxy(stateOrDispatch, ownProps);

		      if (typeof props === 'function') {
		        proxy.mapToProps = props;
		        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
		        props = proxy(stateOrDispatch, ownProps);
		      }

		      if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(props, displayName, methodName);

		      return props;
		    };

		    return proxy;
		  };
		}
		}).call(this,require('_process'))
		},{"../utils/verifyPlainObject":995,"_process":957}],991:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports.connect = exports.connectAdvanced = exports.createProvider = exports.Provider = undefined;

		var _Provider = require('./components/Provider');

		var _Provider2 = _interopRequireDefault(_Provider);

		var _connectAdvanced = require('./components/connectAdvanced');

		var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);

		var _connect = require('./connect/connect');

		var _connect2 = _interopRequireDefault(_connect);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.Provider = _Provider2.default;
		exports.createProvider = _Provider.createProvider;
		exports.connectAdvanced = _connectAdvanced2.default;
		exports.connect = _connect2.default;
		},{"./components/Provider":982,"./components/connectAdvanced":983,"./connect/connect":984}],992:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports.storeShape = exports.subscriptionShape = undefined;

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var subscriptionShape = exports.subscriptionShape = _propTypes2.default.shape({
		  trySubscribe: _propTypes2.default.func.isRequired,
		  tryUnsubscribe: _propTypes2.default.func.isRequired,
		  notifyNestedSubs: _propTypes2.default.func.isRequired,
		  isSubscribed: _propTypes2.default.func.isRequired
		});

		var storeShape = exports.storeShape = _propTypes2.default.shape({
		  subscribe: _propTypes2.default.func.isRequired,
		  dispatch: _propTypes2.default.func.isRequired,
		  getState: _propTypes2.default.func.isRequired
		});
		},{"prop-types":961}],993:[function(require,module,exports){
		"use strict";

		exports.__esModule = true;

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		// encapsulates the subscription logic for connecting a component to the redux store, as
		// well as nesting subscriptions of descendant components, so that we can ensure the
		// ancestor components re-render before descendants

		var CLEARED = null;
		var nullListeners = {
		  notify: function notify() {}
		};

		function createListenerCollection() {
		  // the current/next pattern is copied from redux's createStore code.
		  // TODO: refactor+expose that code to be reusable here?
		  var current = [];
		  var next = [];

		  return {
		    clear: function clear() {
		      next = CLEARED;
		      current = CLEARED;
		    },
		    notify: function notify() {
		      var listeners = current = next;
		      for (var i = 0; i < listeners.length; i++) {
		        listeners[i]();
		      }
		    },
		    get: function get() {
		      return next;
		    },
		    subscribe: function subscribe(listener) {
		      var isSubscribed = true;
		      if (next === current) next = current.slice();
		      next.push(listener);

		      return function unsubscribe() {
		        if (!isSubscribed || current === CLEARED) return;
		        isSubscribed = false;

		        if (next === current) next = current.slice();
		        next.splice(next.indexOf(listener), 1);
		      };
		    }
		  };
		}

		var Subscription = function () {
		  function Subscription(store, parentSub, onStateChange) {
		    _classCallCheck(this, Subscription);

		    this.store = store;
		    this.parentSub = parentSub;
		    this.onStateChange = onStateChange;
		    this.unsubscribe = null;
		    this.listeners = nullListeners;
		  }

		  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
		    this.trySubscribe();
		    return this.listeners.subscribe(listener);
		  };

		  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
		    this.listeners.notify();
		  };

		  Subscription.prototype.isSubscribed = function isSubscribed() {
		    return Boolean(this.unsubscribe);
		  };

		  Subscription.prototype.trySubscribe = function trySubscribe() {
		    if (!this.unsubscribe) {
		      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);

		      this.listeners = createListenerCollection();
		    }
		  };

		  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
		    if (this.unsubscribe) {
		      this.unsubscribe();
		      this.unsubscribe = null;
		      this.listeners.clear();
		      this.listeners = nullListeners;
		    }
		  };

		  return Subscription;
		}();

		exports.default = Subscription;
		},{}],994:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports.default = shallowEqual;
		var hasOwn = Object.prototype.hasOwnProperty;

		function is(x, y) {
		  if (x === y) {
		    return x !== 0 || y !== 0 || 1 / x === 1 / y;
		  } else {
		    return x !== x && y !== y;
		  }
		}

		function shallowEqual(objA, objB) {
		  if (is(objA, objB)) return true;

		  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
		    return false;
		  }

		  var keysA = Object.keys(objA);
		  var keysB = Object.keys(objB);

		  if (keysA.length !== keysB.length) return false;

		  for (var i = 0; i < keysA.length; i++) {
		    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
		      return false;
		    }
		  }

		  return true;
		}
		},{}],995:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports.default = verifyPlainObject;

		var _isPlainObject = require('lodash/isPlainObject');

		var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

		var _warning = require('./warning');

		var _warning2 = _interopRequireDefault(_warning);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function verifyPlainObject(value, displayName, methodName) {
		  if (!(0, _isPlainObject2.default)(value)) {
		    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
		  }
		}
		},{"./warning":996,"lodash/isPlainObject":1006}],996:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports.default = warning;
		/**
		 * Prints a warning in the console if it exists.
		 *
		 * @param {String} message The warning message.
		 * @returns {void}
		 */
		function warning(message) {
		  /* eslint-disable no-console */
		  if (typeof console !== 'undefined' && typeof console.error === 'function') {
		    console.error(message);
		  }
		  /* eslint-enable no-console */
		  try {
		    // This error was thrown as a convenience so that if you enable
		    // "break on all exceptions" in your console,
		    // it would pause the execution at this line.
		    throw new Error(message);
		    /* eslint-disable no-empty */
		  } catch (e) {}
		  /* eslint-enable no-empty */
		}
		},{}],997:[function(require,module,exports){
		arguments[4][732][0].apply(exports,arguments)
		},{"./_root":1004,"dup":732}],998:[function(require,module,exports){
		arguments[4][733][0].apply(exports,arguments)
		},{"./_Symbol":997,"./_getRawTag":1001,"./_objectToString":1002,"dup":733}],999:[function(require,module,exports){
		arguments[4][734][0].apply(exports,arguments)
		},{"dup":734}],1000:[function(require,module,exports){
		arguments[4][735][0].apply(exports,arguments)
		},{"./_overArg":1003,"dup":735}],1001:[function(require,module,exports){
		arguments[4][736][0].apply(exports,arguments)
		},{"./_Symbol":997,"dup":736}],1002:[function(require,module,exports){
		arguments[4][737][0].apply(exports,arguments)
		},{"dup":737}],1003:[function(require,module,exports){
		arguments[4][738][0].apply(exports,arguments)
		},{"dup":738}],1004:[function(require,module,exports){
		arguments[4][739][0].apply(exports,arguments)
		},{"./_freeGlobal":999,"dup":739}],1005:[function(require,module,exports){
		arguments[4][742][0].apply(exports,arguments)
		},{"dup":742}],1006:[function(require,module,exports){
		arguments[4][743][0].apply(exports,arguments)
		},{"./_baseGetTag":998,"./_getPrototype":1000,"./isObjectLike":1005,"dup":743}],1007:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
			value: true
		});

		var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

		var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

		var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

		var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

		var _createClass2 = require('babel-runtime/helpers/createClass');

		var _createClass3 = _interopRequireDefault(_createClass2);

		var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

		var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

		var _inherits2 = require('babel-runtime/helpers/inherits');

		var _inherits3 = _interopRequireDefault(_inherits2);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _reactEventListener = require('react-event-listener');

		var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

		var _stifle = require('stifle');

		var _stifle2 = _interopRequireDefault(_stifle);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var styles = {
			width: '100px',
			height: '100px',
			position: 'absolute',
			top: '-100000px',
			overflow: 'scroll',
			msOverflowStyle: 'scrollbar'
		};

		var ScrollbarSize = function (_Component) {
			(0, _inherits3.default)(ScrollbarSize, _Component);

			function ScrollbarSize() {
				var _ref;

				var _temp, _this, _ret;

				(0, _classCallCheck3.default)(this, ScrollbarSize);

				for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
					args[_key] = arguments[_key];
				}

				return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ScrollbarSize.__proto__ || (0, _getPrototypeOf2.default)(ScrollbarSize)).call.apply(_ref, [this].concat(args))), _this), _this.setMeasurements = function () {
					_this.scrollbarHeight = _this.node.offsetHeight - _this.node.clientHeight;
					_this.scrollbarWidth = _this.node.offsetWidth - _this.node.clientWidth;
				}, _this.handleResize = (0, _stifle2.default)(function () {
					var onChange = _this.props.onChange;


					var prevHeight = _this.scrollbarHeight;
					var prevWidth = _this.scrollbarWidth;
					_this.setMeasurements();
					if (prevHeight !== _this.scrollbarHeight || prevWidth !== _this.scrollbarWidth) {
						onChange({ scrollbarHeight: _this.scrollbarHeight, scrollbarWidth: _this.scrollbarWidth });
					}
				}, 166), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
			}

			(0, _createClass3.default)(ScrollbarSize, [{
				key: 'componentDidMount',
				value: function componentDidMount() {
					var onLoad = this.props.onLoad;


					if (onLoad) {
						this.setMeasurements();
						onLoad({ scrollbarHeight: this.scrollbarHeight, scrollbarWidth: this.scrollbarWidth });
					}
				}
			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					this.handleResize.cancel();
				}
			}, {
				key: 'render',
				// Corresponds to 10 frames at 60 Hz.

				value: function render() {
					var _this2 = this;

					var onChange = this.props.onChange;


					return _react2.default.createElement(
						'div',
						null,
						onChange ? _react2.default.createElement(_reactEventListener2.default, { target: 'window', onResize: this.handleResize }) : null,
						_react2.default.createElement('div', {
							style: styles,
							ref: function ref(node) {
								_this2.node = node;
							}
						})
					);
				}
			}]);
			return ScrollbarSize;
		}(_react.Component);

		ScrollbarSize.defaultProps = {
			onLoad: null,
			onChange: null
		};
		exports.default = ScrollbarSize;
		},{"babel-runtime/core-js/object/get-prototype-of":513,"babel-runtime/helpers/classCallCheck":518,"babel-runtime/helpers/createClass":519,"babel-runtime/helpers/inherits":522,"babel-runtime/helpers/possibleConstructorReturn":524,"prop-types":961,"react":1016,"react-event-listener":972,"stifle":1046}],1008:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _ScrollbarSize = require('./ScrollbarSize');

		var _ScrollbarSize2 = _interopRequireDefault(_ScrollbarSize);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.default = _ScrollbarSize2.default;
		},{"./ScrollbarSize":1007}],1009:[function(require,module,exports){
		(function (process){
		'use strict';

		exports.__esModule = true;

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		var _propTypes = require('prop-types');

		var PropTypes = _interopRequireWildcard(_propTypes);

		var _addClass = require('dom-helpers/class/addClass');

		var _addClass2 = _interopRequireDefault(_addClass);

		var _removeClass = require('dom-helpers/class/removeClass');

		var _removeClass2 = _interopRequireDefault(_removeClass);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _Transition = require('./Transition');

		var _Transition2 = _interopRequireDefault(_Transition);

		var _PropTypes = require('./utils/PropTypes');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

		var addClass = function addClass(node, classes) {
		  return node && classes && classes.split(' ').forEach(function (c) {
		    return (0, _addClass2.default)(node, c);
		  });
		};
		var removeClass = function removeClass(node, classes) {
		  return node && classes && classes.split(' ').forEach(function (c) {
		    return (0, _removeClass2.default)(node, c);
		  });
		};

		var propTypes = _extends({}, _Transition2.default.propTypes, {

		  /**
		   * The animation classNames applied to the component as it enters, exits or has finished the transition.
		   * A single name can be provided and it will be suffixed for each stage: e.g.
		   *
		   * `classNames="fade"` applies `fade-enter`, `fade-enter-active`, `fade-enter-done`,
		   * `fade-exit`, `fade-exit-active`, `fade-exit-done`, `fade-appear`, and `fade-appear-active`.
		   * Each individual classNames can also be specified independently like:
		   *
		   * ```js
		   * classNames={{
		   *  appear: 'my-appear',
		   *  appearActive: 'my-active-appear',
		   *  enter: 'my-enter',
		   *  enterActive: 'my-active-enter',
		   *  enterDone: 'my-done-enter,
		   *  exit: 'my-exit',
		   *  exitActive: 'my-active-exit',
		   *  exitDone: 'my-done-exit,
		   * }}
		   * ```
		   *
		   * @type {string | {
		   *  appear?: string,
		   *  appearActive?: string,
		   *  enter?: string,
		   *  enterActive?: string,
		   *  enterDone?: string,
		   *  exit?: string,
		   *  exitActive?: string,
		   *  exitDone?: string,
		   * }}
		   */
		  classNames: _PropTypes.classNamesShape,

		  /**
		   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
		   * applied.
		   *
		   * @type Function(node: HtmlElement, isAppearing: bool)
		   */
		  onEnter: PropTypes.func,

		  /**
		   * A `<Transition>` callback fired immediately after the 'enter-active' or
		   * 'appear-active' class is applied.
		   *
		   * @type Function(node: HtmlElement, isAppearing: bool)
		   */
		  onEntering: PropTypes.func,

		  /**
		   * A `<Transition>` callback fired immediately after the 'enter' or
		   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
		   *
		   * @type Function(node: HtmlElement, isAppearing: bool)
		   */
		  onEntered: PropTypes.func,

		  /**
		   * A `<Transition>` callback fired immediately after the 'exit' class is
		   * applied.
		   *
		   * @type Function(node: HtmlElement)
		   */
		  onExit: PropTypes.func,

		  /**
		   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
		   *
		   * @type Function(node: HtmlElement
		   */
		  onExiting: PropTypes.func,

		  /**
		   * A `<Transition>` callback fired immediately after the 'exit' classes
		   * are **removed** and the `exit-done` class is added to the DOM node.
		   *
		   * @type Function(node: HtmlElement)
		   */
		  onExited: PropTypes.func
		});

		/**
		 * A `Transition` component using CSS transitions and animations.
		 * It's inspired by the excellent [ng-animate](http://www.nganimate.org/) library.
		 *
		 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
		 * and `exit` stages of the transition. The first class is applied and then a
		 * second "active" class in order to activate the css animation. After the animation,
		 * matching `done` class names are applied to persist the animation state.
		 *
		 * When the `in` prop is toggled to `true` the Component will get
		 * the `example-enter` CSS class and the `example-enter-active` CSS class
		 * added in the next tick. This is a convention based on the `classNames` prop.
		 *
		 * ## Example
		 *
		 * <iframe src="https://codesandbox.io/embed/m77l2vp00x?fontsize=14" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>
		 */

		var CSSTransition = function (_React$Component) {
		  _inherits(CSSTransition, _React$Component);

		  function CSSTransition() {
		    var _temp, _this, _ret;

		    _classCallCheck(this, CSSTransition);

		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }

		    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onEnter = function (node, appearing) {
		      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),
		          className = _this$getClassNames.className;

		      _this.removeClasses(node, 'exit');
		      addClass(node, className);

		      if (_this.props.onEnter) {
		        _this.props.onEnter(node);
		      }
		    }, _this.onEntering = function (node, appearing) {
		      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),
		          activeClassName = _this$getClassNames2.activeClassName;

		      _this.reflowAndAddClass(node, activeClassName);

		      if (_this.props.onEntering) {
		        _this.props.onEntering(node);
		      }
		    }, _this.onEntered = function (node, appearing) {
		      var _this$getClassNames3 = _this.getClassNames('enter'),
		          doneClassName = _this$getClassNames3.doneClassName;

		      _this.removeClasses(node, appearing ? 'appear' : 'enter');
		      addClass(node, doneClassName);

		      if (_this.props.onEntered) {
		        _this.props.onEntered(node);
		      }
		    }, _this.onExit = function (node) {
		      var _this$getClassNames4 = _this.getClassNames('exit'),
		          className = _this$getClassNames4.className;

		      _this.removeClasses(node, 'appear');
		      _this.removeClasses(node, 'enter');
		      addClass(node, className);

		      if (_this.props.onExit) {
		        _this.props.onExit(node);
		      }
		    }, _this.onExiting = function (node) {
		      var _this$getClassNames5 = _this.getClassNames('exit'),
		          activeClassName = _this$getClassNames5.activeClassName;

		      _this.reflowAndAddClass(node, activeClassName);

		      if (_this.props.onExiting) {
		        _this.props.onExiting(node);
		      }
		    }, _this.onExited = function (node) {
		      var _this$getClassNames6 = _this.getClassNames('exit'),
		          doneClassName = _this$getClassNames6.doneClassName;

		      _this.removeClasses(node, 'exit');
		      addClass(node, doneClassName);

		      if (_this.props.onExited) {
		        _this.props.onExited(node);
		      }
		    }, _this.getClassNames = function (type) {
		      var classNames = _this.props.classNames;


		      var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;

		      var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';

		      var doneClassName = typeof classNames !== 'string' ? classNames[type + 'Done'] : className + '-done';

		      return {
		        className: className,
		        activeClassName: activeClassName,
		        doneClassName: doneClassName
		      };
		    }, _temp), _possibleConstructorReturn(_this, _ret);
		  }

		  CSSTransition.prototype.removeClasses = function removeClasses(node, type) {
		    var _getClassNames = this.getClassNames(type),
		        className = _getClassNames.className,
		        activeClassName = _getClassNames.activeClassName,
		        doneClassName = _getClassNames.doneClassName;

		    className && removeClass(node, className);
		    activeClassName && removeClass(node, activeClassName);
		    doneClassName && removeClass(node, doneClassName);
		  };

		  CSSTransition.prototype.reflowAndAddClass = function reflowAndAddClass(node, className) {
		    // This is for to force a repaint,
		    // which is necessary in order to transition styles when adding a class name.
		    /* eslint-disable no-unused-expressions */
		    node && node.scrollTop;
		    /* eslint-enable no-unused-expressions */
		    addClass(node, className);
		  };

		  CSSTransition.prototype.render = function render() {
		    var props = _extends({}, this.props);

		    delete props.classNames;

		    return _react2.default.createElement(_Transition2.default, _extends({}, props, {
		      onEnter: this.onEnter,
		      onEntered: this.onEntered,
		      onEntering: this.onEntering,
		      onExit: this.onExit,
		      onExiting: this.onExiting,
		      onExited: this.onExited
		    }));
		  };

		  return CSSTransition;
		}(_react2.default.Component);

		CSSTransition.propTypes = process.env.NODE_ENV !== "production" ? propTypes : {};

		exports.default = CSSTransition;
		module.exports = exports['default'];
		}).call(this,require('_process'))
		},{"./Transition":1010,"./utils/PropTypes":1013,"_process":957,"dom-helpers/class/addClass":654,"dom-helpers/class/removeClass":656,"prop-types":961,"react":1016}],1010:[function(require,module,exports){
		(function (process){
		'use strict';

		exports.__esModule = true;
		exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;

		var _propTypes = require('prop-types');

		var PropTypes = _interopRequireWildcard(_propTypes);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _reactDom = require('react-dom');

		var _reactDom2 = _interopRequireDefault(_reactDom);

		var _PropTypes = require('./utils/PropTypes');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

		var UNMOUNTED = exports.UNMOUNTED = 'unmounted';
		var EXITED = exports.EXITED = 'exited';
		var ENTERING = exports.ENTERING = 'entering';
		var ENTERED = exports.ENTERED = 'entered';
		var EXITING = exports.EXITING = 'exiting';

		/**
		 * The Transition component lets you describe a transition from one component
		 * state to another _over time_ with a simple declarative API. Most commonly
		 * it's used to animate the mounting and unmounting of a component, but can also
		 * be used to describe in-place transition states as well.
		 *
		 * By default the `Transition` component does not alter the behavior of the
		 * component it renders, it only tracks "enter" and "exit" states for the components.
		 * It's up to you to give meaning and effect to those states. For example we can
		 * add styles to a component when it enters or exits:
		 *
		 * ```jsx
		 * import Transition from 'react-transition-group/Transition';
		 *
		 * const duration = 300;
		 *
		 * const defaultStyle = {
		 *   transition: `opacity ${duration}ms ease-in-out`,
		 *   opacity: 0,
		 * }
		 *
		 * const transitionStyles = {
		 *   entering: { opacity: 0 },
		 *   entered:  { opacity: 1 },
		 * };
		 *
		 * const Fade = ({ in: inProp }) => (
		 *   <Transition in={inProp} timeout={duration}>
		 *     {(state) => (
		 *       <div style={{
		 *         ...defaultStyle,
		 *         ...transitionStyles[state]
		 *       }}>
		 *         I'm a fade Transition!
		 *       </div>
		 *     )}
		 *   </Transition>
		 * );
		 * ```
		 *
		 * As noted the `Transition` component doesn't _do_ anything by itself to its child component.
		 * What it does do is track transition states over time so you can update the
		 * component (such as by adding styles or classes) when it changes states.
		 *
		 * There are 4 main states a Transition can be in:
		 *  - `entering`
		 *  - `entered`
		 *  - `exiting`
		 *  - `exited`
		 *
		 * Transition state is toggled via the `in` prop. When `true` the component begins the
		 * "Enter" stage. During this stage, the component will shift from its current transition state,
		 * to `'entering'` for the duration of the transition and then to the `'entered'` stage once
		 * it's complete. Let's take the following example:
		 *
		 * ```jsx
		 * state= { in: false };
		 *
		 * toggleEnterState = () => {
		 *   this.setState({ in: true });
		 * }
		 *
		 * render() {
		 *   return (
		 *     <div>
		 *       <Transition in={this.state.in} timeout={500} />
		 *       <button onClick={this.toggleEnterState}>Click to Enter</button>
		 *     </div>
		 *   );
		 * }
		 * ```
		 *
		 * When the button is clicked the component will shift to the `'entering'` state and
		 * stay there for 500ms (the value of `timeout`) before it finally switches to `'entered'`.
		 *
		 * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.
		 *
		 * > **Note**: For simpler transitions the `Transition` component might be enough, but
		 * > take into account that it's platform-agnostic, while the `CSSTransition` component
		 * > [forces reflows](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
		 * > in order to make more complex transitions more predictable. For example, even though
		 * > classes `example-enter` and `example-enter-active` are applied immediately one after
		 * > another, you can still transition from one to the other because of the forced reflow
		 * > (read [this issue](https://github.com/reactjs/react-transition-group/issues/159#issuecomment-322761171)
		 * > for more info). Take this into account when choosing between `Transition` and
		 * > `CSSTransition`.
		 *
		 * ## Example
		 *
		 * <iframe src="https://codesandbox.io/embed/741op4mmj0?fontsize=14" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>
		 *
		 */

		var Transition = function (_React$Component) {
		  _inherits(Transition, _React$Component);

		  function Transition(props, context) {
		    _classCallCheck(this, Transition);

		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

		    var parentGroup = context.transitionGroup;
		    // In the context of a TransitionGroup all enters are really appears
		    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;

		    var initialStatus = void 0;
		    _this.nextStatus = null;

		    if (props.in) {
		      if (appear) {
		        initialStatus = EXITED;
		        _this.nextStatus = ENTERING;
		      } else {
		        initialStatus = ENTERED;
		      }
		    } else {
		      if (props.unmountOnExit || props.mountOnEnter) {
		        initialStatus = UNMOUNTED;
		      } else {
		        initialStatus = EXITED;
		      }
		    }

		    _this.state = { status: initialStatus };

		    _this.nextCallback = null;
		    return _this;
		  }

		  Transition.prototype.getChildContext = function getChildContext() {
		    return { transitionGroup: null }; // allows for nested Transitions
		  };

		  Transition.prototype.componentDidMount = function componentDidMount() {
		    this.updateStatus(true);
		  };

		  Transition.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    var _ref = this.pendingState || this.state,
		        status = _ref.status;

		    if (nextProps.in) {
		      if (status === UNMOUNTED) {
		        this.setState({ status: EXITED });
		      }
		      if (status !== ENTERING && status !== ENTERED) {
		        this.nextStatus = ENTERING;
		      }
		    } else {
		      if (status === ENTERING || status === ENTERED) {
		        this.nextStatus = EXITING;
		      }
		    }
		  };

		  Transition.prototype.componentDidUpdate = function componentDidUpdate() {
		    this.updateStatus();
		  };

		  Transition.prototype.componentWillUnmount = function componentWillUnmount() {
		    this.cancelNextCallback();
		  };

		  Transition.prototype.getTimeouts = function getTimeouts() {
		    var timeout = this.props.timeout;

		    var exit = void 0,
		        enter = void 0,
		        appear = void 0;

		    exit = enter = appear = timeout;

		    if (timeout != null && typeof timeout !== 'number') {
		      exit = timeout.exit;
		      enter = timeout.enter;
		      appear = timeout.appear;
		    }
		    return { exit: exit, enter: enter, appear: appear };
		  };

		  Transition.prototype.updateStatus = function updateStatus() {
		    var mounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

		    var nextStatus = this.nextStatus;

		    if (nextStatus !== null) {
		      this.nextStatus = null;
		      // nextStatus will always be ENTERING or EXITING.
		      this.cancelNextCallback();
		      var node = _reactDom2.default.findDOMNode(this);

		      if (nextStatus === ENTERING) {
		        this.performEnter(node, mounting);
		      } else {
		        this.performExit(node);
		      }
		    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
		      this.setState({ status: UNMOUNTED });
		    }
		  };

		  Transition.prototype.performEnter = function performEnter(node, mounting) {
		    var _this2 = this;

		    var enter = this.props.enter;

		    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;

		    var timeouts = this.getTimeouts();

		    // no enter animation skip right to ENTERED
		    // if we are mounting and running this it means appear _must_ be set
		    if (!mounting && !enter) {
		      this.safeSetState({ status: ENTERED }, function () {
		        _this2.props.onEntered(node);
		      });
		      return;
		    }

		    this.props.onEnter(node, appearing);

		    this.safeSetState({ status: ENTERING }, function () {
		      _this2.props.onEntering(node, appearing);

		      // FIXME: appear timeout?
		      _this2.onTransitionEnd(node, timeouts.enter, function () {
		        _this2.safeSetState({ status: ENTERED }, function () {
		          _this2.props.onEntered(node, appearing);
		        });
		      });
		    });
		  };

		  Transition.prototype.performExit = function performExit(node) {
		    var _this3 = this;

		    var exit = this.props.exit;

		    var timeouts = this.getTimeouts();

		    // no exit animation skip right to EXITED
		    if (!exit) {
		      this.safeSetState({ status: EXITED }, function () {
		        _this3.props.onExited(node);
		      });
		      return;
		    }
		    this.props.onExit(node);

		    this.safeSetState({ status: EXITING }, function () {
		      _this3.props.onExiting(node);

		      _this3.onTransitionEnd(node, timeouts.exit, function () {
		        _this3.safeSetState({ status: EXITED }, function () {
		          _this3.props.onExited(node);
		        });
		      });
		    });
		  };

		  Transition.prototype.cancelNextCallback = function cancelNextCallback() {
		    if (this.nextCallback !== null) {
		      this.nextCallback.cancel();
		      this.nextCallback = null;
		    }
		  };

		  Transition.prototype.safeSetState = function safeSetState(nextState, callback) {
		    var _this4 = this;

		    // We need to track pending updates for instances where a cWRP fires quickly
		    // after cDM and before the state flushes, which would double trigger a
		    // transition
		    this.pendingState = nextState;

		    // This shouldn't be necessary, but there are weird race conditions with
		    // setState callbacks and unmounting in testing, so always make sure that
		    // we can cancel any pending setState callbacks after we unmount.
		    callback = this.setNextCallback(callback);
		    this.setState(nextState, function () {
		      _this4.pendingState = null;
		      callback();
		    });
		  };

		  Transition.prototype.setNextCallback = function setNextCallback(callback) {
		    var _this5 = this;

		    var active = true;

		    this.nextCallback = function (event) {
		      if (active) {
		        active = false;
		        _this5.nextCallback = null;

		        callback(event);
		      }
		    };

		    this.nextCallback.cancel = function () {
		      active = false;
		    };

		    return this.nextCallback;
		  };

		  Transition.prototype.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
		    this.setNextCallback(handler);

		    if (node) {
		      if (this.props.addEndListener) {
		        this.props.addEndListener(node, this.nextCallback);
		      }
		      if (timeout != null) {
		        setTimeout(this.nextCallback, timeout);
		      }
		    } else {
		      setTimeout(this.nextCallback, 0);
		    }
		  };

		  Transition.prototype.render = function render() {
		    var status = this.state.status;
		    if (status === UNMOUNTED) {
		      return null;
		    }

		    var _props = this.props,
		        children = _props.children,
		        childProps = _objectWithoutProperties(_props, ['children']);
		    // filter props for Transtition


		    delete childProps.in;
		    delete childProps.mountOnEnter;
		    delete childProps.unmountOnExit;
		    delete childProps.appear;
		    delete childProps.enter;
		    delete childProps.exit;
		    delete childProps.timeout;
		    delete childProps.addEndListener;
		    delete childProps.onEnter;
		    delete childProps.onEntering;
		    delete childProps.onEntered;
		    delete childProps.onExit;
		    delete childProps.onExiting;
		    delete childProps.onExited;

		    if (typeof children === 'function') {
		      return children(status, childProps);
		    }

		    var child = _react2.default.Children.only(children);
		    return _react2.default.cloneElement(child, childProps);
		  };

		  return Transition;
		}(_react2.default.Component);

		Transition.contextTypes = {
		  transitionGroup: PropTypes.object
		};
		Transition.childContextTypes = {
		  transitionGroup: function transitionGroup() {}
		};


		Transition.propTypes = process.env.NODE_ENV !== "production" ? {
		  /**
		   * A `function` child can be used instead of a React element.
		   * This function is called with the current transition status
		   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can be used
		   * to apply context specific props to a component.
		   *
		   * ```jsx
		   * <Transition timeout={150}>
		   *   {(status) => (
		   *     <MyComponent className={`fade fade-${status}`} />
		   *   )}
		   * </Transition>
		   * ```
		   */
		  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,

		  /**
		   * Show the component; triggers the enter or exit states
		   */
		  in: PropTypes.bool,

		  /**
		   * By default the child component is mounted immediately along with
		   * the parent `Transition` component. If you want to "lazy mount" the component on the
		   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
		   * mounted, even on "exited", unless you also specify `unmountOnExit`.
		   */
		  mountOnEnter: PropTypes.bool,

		  /**
		   * By default the child component stays mounted after it reaches the `'exited'` state.
		   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
		   */
		  unmountOnExit: PropTypes.bool,

		  /**
		   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
		   * If you want to transition on the first mount set `appear` to `true`, and the
		   * component will transition in as soon as the `<Transition>` mounts.
		   *
		   * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
		   */
		  appear: PropTypes.bool,

		  /**
		   * Enable or disable enter transitions.
		   */
		  enter: PropTypes.bool,

		  /**
		   * Enable or disable exit transitions.
		   */
		  exit: PropTypes.bool,

		  /**
		   * The duration of the transition, in milliseconds.
		   * Required unless `addEndListener` is provided
		   *
		   * You may specify a single timeout for all transitions like: `timeout={500}`,
		   * or individually like:
		   *
		   * ```jsx
		   * timeout={{
		   *  enter: 300,
		   *  exit: 500,
		   * }}
		   * ```
		   *
		   * @type {number | { enter?: number, exit?: number }}
		   */
		  timeout: function timeout(props) {
		    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		      args[_key - 1] = arguments[_key];
		    }

		    var pt = _PropTypes.timeoutsShape;
		    if (!props.addEndListener) pt = pt.isRequired;
		    return pt.apply(undefined, [props].concat(args));
		  },

		  /**
		   * Add a custom transition end trigger. Called with the transitioning
		   * DOM node and a `done` callback. Allows for more fine grained transition end
		   * logic. **Note:** Timeouts are still used as a fallback if provided.
		   *
		   * ```jsx
		   * addEndListener={(node, done) => {
		   *   // use the css transitionend event to mark the finish of a transition
		   *   node.addEventListener('transitionend', done, false);
		   * }}
		   * ```
		   */
		  addEndListener: PropTypes.func,

		  /**
		   * Callback fired before the "entering" status is applied. An extra parameter
		   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
		   *
		   * @type Function(node: HtmlElement, isAppearing: bool) -> void
		   */
		  onEnter: PropTypes.func,

		  /**
		   * Callback fired after the "entering" status is applied. An extra parameter
		   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
		   *
		   * @type Function(node: HtmlElement, isAppearing: bool)
		   */
		  onEntering: PropTypes.func,

		  /**
		   * Callback fired after the "entered" status is applied. An extra parameter
		   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
		   *
		   * @type Function(node: HtmlElement, isAppearing: bool) -> void
		   */
		  onEntered: PropTypes.func,

		  /**
		   * Callback fired before the "exiting" status is applied.
		   *
		   * @type Function(node: HtmlElement) -> void
		   */
		  onExit: PropTypes.func,

		  /**
		   * Callback fired after the "exiting" status is applied.
		   *
		   * @type Function(node: HtmlElement) -> void
		   */
		  onExiting: PropTypes.func,

		  /**
		   * Callback fired after the "exited" status is applied.
		   *
		   * @type Function(node: HtmlElement) -> void
		   */
		  onExited: PropTypes.func
		} : {};

		// Name the function so it is clearer in the documentation
		function noop() {}

		Transition.defaultProps = {
		  in: false,
		  mountOnEnter: false,
		  unmountOnExit: false,
		  appear: false,
		  enter: true,
		  exit: true,

		  onEnter: noop,
		  onEntering: noop,
		  onEntered: noop,

		  onExit: noop,
		  onExiting: noop,
		  onExited: noop
		};

		Transition.UNMOUNTED = 0;
		Transition.EXITED = 1;
		Transition.ENTERING = 2;
		Transition.ENTERED = 3;
		Transition.EXITING = 4;

		exports.default = Transition;
		}).call(this,require('_process'))
		},{"./utils/PropTypes":1013,"_process":957,"prop-types":961,"react":1016,"react-dom":971}],1011:[function(require,module,exports){
		(function (process){
		'use strict';

		exports.__esModule = true;

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		var _react = require('react');

		var _react2 = _interopRequireDefault(_react);

		var _ChildMapping = require('./utils/ChildMapping');

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

		var values = Object.values || function (obj) {
		  return Object.keys(obj).map(function (k) {
		    return obj[k];
		  });
		};

		var propTypes = {
		  /**
		   * `<TransitionGroup>` renders a `<div>` by default. You can change this
		   * behavior by providing a `component` prop.
		   * If you use React v16+ and would like to avoid a wrapping `<div>` element
		   * you can pass in `component={null}`. This is useful if the wrapping div
		   * borks your css styles.
		   */
		  component: _propTypes2.default.any,
		  /**
		   * A set of `<Transition>` components, that are toggled `in` and out as they
		   * leave. the `<TransitionGroup>` will inject specific transition props, so
		   * remember to spread them through if you are wrapping the `<Transition>` as
		   * with our `<Fade>` example.
		   */
		  children: _propTypes2.default.node,

		  /**
		   * A convenience prop that enables or disables appear animations
		   * for all children. Note that specifying this will override any defaults set
		   * on individual children Transitions.
		   */
		  appear: _propTypes2.default.bool,
		  /**
		   * A convenience prop that enables or disables enter animations
		   * for all children. Note that specifying this will override any defaults set
		   * on individual children Transitions.
		   */
		  enter: _propTypes2.default.bool,
		  /**
		    * A convenience prop that enables or disables exit animations
		    * for all children. Note that specifying this will override any defaults set
		    * on individual children Transitions.
		    */
		  exit: _propTypes2.default.bool,

		  /**
		   * You may need to apply reactive updates to a child as it is exiting.
		   * This is generally done by using `cloneElement` however in the case of an exiting
		   * child the element has already been removed and not accessible to the consumer.
		   *
		   * If you do need to update a child as it leaves you can provide a `childFactory`
		   * to wrap every child, even the ones that are leaving.
		   *
		   * @type Function(child: ReactElement) -> ReactElement
		   */
		  childFactory: _propTypes2.default.func
		};

		var defaultProps = {
		  component: 'div',
		  childFactory: function childFactory(child) {
		    return child;
		  }
		};

		/**
		 * The `<TransitionGroup>` component manages a set of `<Transition>` components
		 * in a list. Like with the `<Transition>` component, `<TransitionGroup>`, is a
		 * state machine for managing the mounting and unmounting of components over
		 * time.
		 *
		 * Consider the example below using the `Fade` CSS transition from before.
		 * As items are removed or added to the TodoList the `in` prop is toggled
		 * automatically by the `<TransitionGroup>`. You can use _any_ `<Transition>`
		 * component in a `<TransitionGroup>`, not just css.
		 *
		 * ## Example
		 *
		 * <iframe src="https://codesandbox.io/embed/00rqyo26kn?fontsize=14" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>
		 *
		 * Note that `<TransitionGroup>`  does not define any animation behavior!
		 * Exactly _how_ a list item animates is up to the individual `<Transition>`
		 * components. This means you can mix and match animations across different
		 * list items.
		 */

		var TransitionGroup = function (_React$Component) {
		  _inherits(TransitionGroup, _React$Component);

		  function TransitionGroup(props, context) {
		    _classCallCheck(this, TransitionGroup);

		    // Initial children should all be entering, dependent on appear
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

		    _this.state = {
		      children: (0, _ChildMapping.getChildMapping)(props.children, function (child) {
		        return (0, _react.cloneElement)(child, {
		          onExited: _this.handleExited.bind(_this, child),
		          in: true,
		          appear: _this.getProp(child, 'appear'),
		          enter: _this.getProp(child, 'enter'),
		          exit: _this.getProp(child, 'exit')
		        });
		      })
		    };
		    return _this;
		  }

		  TransitionGroup.prototype.getChildContext = function getChildContext() {
		    return {
		      transitionGroup: { isMounting: !this.appeared }
		    };
		  };
		  // use child config unless explictly set by the Group


		  TransitionGroup.prototype.getProp = function getProp(child, prop) {
		    var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.props;

		    return props[prop] != null ? props[prop] : child.props[prop];
		  };

		  TransitionGroup.prototype.componentDidMount = function componentDidMount() {
		    this.appeared = true;
		  };

		  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    var _this2 = this;

		    var prevChildMapping = this.state.children;
		    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);

		    var children = (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping);

		    Object.keys(children).forEach(function (key) {
		      var child = children[key];

		      if (!(0, _react.isValidElement)(child)) return;

		      var hasPrev = key in prevChildMapping;
		      var hasNext = key in nextChildMapping;

		      var prevChild = prevChildMapping[key];
		      var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in;

		      // item is new (entering)
		      if (hasNext && (!hasPrev || isLeaving)) {
		        // console.log('entering', key)
		        children[key] = (0, _react.cloneElement)(child, {
		          onExited: _this2.handleExited.bind(_this2, child),
		          in: true,
		          exit: _this2.getProp(child, 'exit', nextProps),
		          enter: _this2.getProp(child, 'enter', nextProps)
		        });
		      }
		      // item is old (exiting)
		      else if (!hasNext && hasPrev && !isLeaving) {
		          // console.log('leaving', key)
		          children[key] = (0, _react.cloneElement)(child, { in: false });
		        }
		        // item hasn't changed transition states
		        // copy over the last transition props;
		        else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
		            // console.log('unchanged', key)
		            children[key] = (0, _react.cloneElement)(child, {
		              onExited: _this2.handleExited.bind(_this2, child),
		              in: prevChild.props.in,
		              exit: _this2.getProp(child, 'exit', nextProps),
		              enter: _this2.getProp(child, 'enter', nextProps)
		            });
		          }
		    });

		    this.setState({ children: children });
		  };

		  TransitionGroup.prototype.handleExited = function handleExited(child, node) {
		    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);

		    if (child.key in currentChildMapping) return;

		    if (child.props.onExited) {
		      child.props.onExited(node);
		    }

		    this.setState(function (state) {
		      var children = _extends({}, state.children);

		      delete children[child.key];
		      return { children: children };
		    });
		  };

		  TransitionGroup.prototype.render = function render() {
		    var _props = this.props,
		        Component = _props.component,
		        childFactory = _props.childFactory,
		        props = _objectWithoutProperties(_props, ['component', 'childFactory']);

		    var children = values(this.state.children).map(childFactory);

		    delete props.appear;
		    delete props.enter;
		    delete props.exit;

		    if (Component === null) {
		      return children;
		    }
		    return _react2.default.createElement(
		      Component,
		      props,
		      children
		    );
		  };

		  return TransitionGroup;
		}(_react2.default.Component);

		TransitionGroup.childContextTypes = {
		  transitionGroup: _propTypes2.default.object.isRequired
		};


		TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? propTypes : {};
		TransitionGroup.defaultProps = defaultProps;

		exports.default = TransitionGroup;
		module.exports = exports['default'];
		}).call(this,require('_process'))
		},{"./utils/ChildMapping":1012,"_process":957,"prop-types":961,"react":1016}],1012:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports.getChildMapping = getChildMapping;
		exports.mergeChildMappings = mergeChildMappings;

		var _react = require('react');

		/**
		 * Given `this.props.children`, return an object mapping key to child.
		 *
		 * @param {*} children `this.props.children`
		 * @return {object} Mapping of key to child
		 */
		function getChildMapping(children, mapFn) {
		  var mapper = function mapper(child) {
		    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
		  };

		  var result = Object.create(null);
		  if (children) _react.Children.map(children, function (c) {
		    return c;
		  }).forEach(function (child) {
		    // run the map function here instead so that the key is the computed one
		    result[child.key] = mapper(child);
		  });
		  return result;
		}

		/**
		 * When you're adding or removing children some may be added or removed in the
		 * same render pass. We want to show *both* since we want to simultaneously
		 * animate elements in and out. This function takes a previous set of keys
		 * and a new set of keys and merges them with its best guess of the correct
		 * ordering. In the future we may expose some of the utilities in
		 * ReactMultiChild to make this easy, but for now React itself does not
		 * directly have this concept of the union of prevChildren and nextChildren
		 * so we implement it here.
		 *
		 * @param {object} prev prev children as returned from
		 * `ReactTransitionChildMapping.getChildMapping()`.
		 * @param {object} next next children as returned from
		 * `ReactTransitionChildMapping.getChildMapping()`.
		 * @return {object} a key set that contains all keys in `prev` and all keys
		 * in `next` in a reasonable order.
		 */
		function mergeChildMappings(prev, next) {
		  prev = prev || {};
		  next = next || {};

		  function getValueForKey(key) {
		    return key in next ? next[key] : prev[key];
		  }

		  // For each key of `next`, the list of keys to insert before that key in
		  // the combined list
		  var nextKeysPending = Object.create(null);

		  var pendingKeys = [];
		  for (var prevKey in prev) {
		    if (prevKey in next) {
		      if (pendingKeys.length) {
		        nextKeysPending[prevKey] = pendingKeys;
		        pendingKeys = [];
		      }
		    } else {
		      pendingKeys.push(prevKey);
		    }
		  }

		  var i = void 0;
		  var childMapping = {};
		  for (var nextKey in next) {
		    if (nextKeysPending[nextKey]) {
		      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
		        var pendingNextKey = nextKeysPending[nextKey][i];
		        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
		      }
		    }
		    childMapping[nextKey] = getValueForKey(nextKey);
		  }

		  // Finally, add the keys which didn't appear before any key in `next`
		  for (i = 0; i < pendingKeys.length; i++) {
		    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
		  }

		  return childMapping;
		}
		},{"react":1016}],1013:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports.classNamesShape = exports.timeoutsShape = undefined;
		exports.transitionTimeout = transitionTimeout;

		var _propTypes = require('prop-types');

		var _propTypes2 = _interopRequireDefault(_propTypes);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function transitionTimeout(transitionType) {
		  var timeoutPropName = 'transition' + transitionType + 'Timeout';
		  var enabledPropName = 'transition' + transitionType;

		  return function (props) {
		    // If the transition is enabled
		    if (props[enabledPropName]) {
		      // If no timeout duration is provided
		      if (props[timeoutPropName] == null) {
		        return new Error(timeoutPropName + ' wasn\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');

		        // If the duration isn't a number
		      } else if (typeof props[timeoutPropName] !== 'number') {
		        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
		      }
		    }

		    return null;
		  };
		}

		var timeoutsShape = exports.timeoutsShape = _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({
		  enter: _propTypes2.default.number,
		  exit: _propTypes2.default.number
		}).isRequired]);

		var classNamesShape = exports.classNamesShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
		  enter: _propTypes2.default.string,
		  exit: _propTypes2.default.string,
		  active: _propTypes2.default.string
		}), _propTypes2.default.shape({
		  enter: _propTypes2.default.string,
		  enterDone: _propTypes2.default.string,
		  enterActive: _propTypes2.default.string,
		  exit: _propTypes2.default.string,
		  exitDone: _propTypes2.default.string,
		  exitActive: _propTypes2.default.string
		})]);
		},{"prop-types":961}],1014:[function(require,module,exports){
		arguments[4][124][0].apply(exports,arguments)
		},{"_process":957,"dup":124,"fbjs/lib/emptyFunction":670,"fbjs/lib/emptyObject":671,"fbjs/lib/invariant":676,"fbjs/lib/warning":681,"object-assign":954,"prop-types/checkPropTypes":958}],1015:[function(require,module,exports){
		arguments[4][125][0].apply(exports,arguments)
		},{"dup":125,"fbjs/lib/emptyFunction":670,"fbjs/lib/emptyObject":671,"object-assign":954}],1016:[function(require,module,exports){
		arguments[4][126][0].apply(exports,arguments)
		},{"./cjs/react.development.js":1014,"./cjs/react.production.min.js":1015,"_process":957,"dup":126}],1017:[function(require,module,exports){
		module.exports = require('./lib/_stream_duplex.js');

		},{"./lib/_stream_duplex.js":1018}],1018:[function(require,module,exports){
		// Copyright Joyent, Inc. and other Node contributors.
		//
		// Permission is hereby granted, free of charge, to any person obtaining a
		// copy of this software and associated documentation files (the
		// "Software"), to deal in the Software without restriction, including
		// without limitation the rights to use, copy, modify, merge, publish,
		// distribute, sublicense, and/or sell copies of the Software, and to permit
		// persons to whom the Software is furnished to do so, subject to the
		// following conditions:
		//
		// The above copyright notice and this permission notice shall be included
		// in all copies or substantial portions of the Software.
		//
		// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
		// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
		// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
		// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
		// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
		// USE OR OTHER DEALINGS IN THE SOFTWARE.

		// a duplex stream is just a stream that is both readable and writable.
		// Since JS doesn't have multiple prototypal inheritance, this class
		// prototypally inherits from Readable, and then parasitically from
		// Writable.

		'use strict';

		/*<replacement>*/

		var pna = require('process-nextick-args');
		/*</replacement>*/

		/*<replacement>*/
		var objectKeys = Object.keys || function (obj) {
		  var keys = [];
		  for (var key in obj) {
		    keys.push(key);
		  }return keys;
		};
		/*</replacement>*/

		module.exports = Duplex;

		/*<replacement>*/
		var util = require('core-util-is');
		util.inherits = require('inherits');
		/*</replacement>*/

		var Readable = require('./_stream_readable');
		var Writable = require('./_stream_writable');

		util.inherits(Duplex, Readable);

		var keys = objectKeys(Writable.prototype);
		for (var v = 0; v < keys.length; v++) {
		  var method = keys[v];
		  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
		}

		function Duplex(options) {
		  if (!(this instanceof Duplex)) return new Duplex(options);

		  Readable.call(this, options);
		  Writable.call(this, options);

		  if (options && options.readable === false) this.readable = false;

		  if (options && options.writable === false) this.writable = false;

		  this.allowHalfOpen = true;
		  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

		  this.once('end', onend);
		}

		// the no-half-open enforcer
		function onend() {
		  // if we allow half-open state, or if the writable side ended,
		  // then we're ok.
		  if (this.allowHalfOpen || this._writableState.ended) return;

		  // no more data can be written.
		  // But allow more writes to happen in this tick.
		  pna.nextTick(onEndNT, this);
		}

		function onEndNT(self) {
		  self.end();
		}

		Object.defineProperty(Duplex.prototype, 'destroyed', {
		  get: function () {
		    if (this._readableState === undefined || this._writableState === undefined) {
		      return false;
		    }
		    return this._readableState.destroyed && this._writableState.destroyed;
		  },
		  set: function (value) {
		    // we ignore the value if the stream
		    // has not been initialized yet
		    if (this._readableState === undefined || this._writableState === undefined) {
		      return;
		    }

		    // backward compatibility, the user is explicitly
		    // managing destroyed
		    this._readableState.destroyed = value;
		    this._writableState.destroyed = value;
		  }
		});

		Duplex.prototype._destroy = function (err, cb) {
		  this.push(null);
		  this.end();

		  pna.nextTick(cb, err);
		};

		function forEach(xs, f) {
		  for (var i = 0, l = xs.length; i < l; i++) {
		    f(xs[i], i);
		  }
		}
		},{"./_stream_readable":1020,"./_stream_writable":1022,"core-util-is":644,"inherits":686,"process-nextick-args":956}],1019:[function(require,module,exports){
		// Copyright Joyent, Inc. and other Node contributors.
		//
		// Permission is hereby granted, free of charge, to any person obtaining a
		// copy of this software and associated documentation files (the
		// "Software"), to deal in the Software without restriction, including
		// without limitation the rights to use, copy, modify, merge, publish,
		// distribute, sublicense, and/or sell copies of the Software, and to permit
		// persons to whom the Software is furnished to do so, subject to the
		// following conditions:
		//
		// The above copyright notice and this permission notice shall be included
		// in all copies or substantial portions of the Software.
		//
		// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
		// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
		// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
		// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
		// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
		// USE OR OTHER DEALINGS IN THE SOFTWARE.

		// a passthrough stream.
		// basically just the most minimal sort of Transform stream.
		// Every written chunk gets output as-is.

		'use strict';

		module.exports = PassThrough;

		var Transform = require('./_stream_transform');

		/*<replacement>*/
		var util = require('core-util-is');
		util.inherits = require('inherits');
		/*</replacement>*/

		util.inherits(PassThrough, Transform);

		function PassThrough(options) {
		  if (!(this instanceof PassThrough)) return new PassThrough(options);

		  Transform.call(this, options);
		}

		PassThrough.prototype._transform = function (chunk, encoding, cb) {
		  cb(null, chunk);
		};
		},{"./_stream_transform":1021,"core-util-is":644,"inherits":686}],1020:[function(require,module,exports){
		(function (process,global){
		// Copyright Joyent, Inc. and other Node contributors.
		//
		// Permission is hereby granted, free of charge, to any person obtaining a
		// copy of this software and associated documentation files (the
		// "Software"), to deal in the Software without restriction, including
		// without limitation the rights to use, copy, modify, merge, publish,
		// distribute, sublicense, and/or sell copies of the Software, and to permit
		// persons to whom the Software is furnished to do so, subject to the
		// following conditions:
		//
		// The above copyright notice and this permission notice shall be included
		// in all copies or substantial portions of the Software.
		//
		// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
		// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
		// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
		// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
		// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
		// USE OR OTHER DEALINGS IN THE SOFTWARE.

		'use strict';

		/*<replacement>*/

		var pna = require('process-nextick-args');
		/*</replacement>*/

		module.exports = Readable;

		/*<replacement>*/
		var isArray = require('isarray');
		/*</replacement>*/

		/*<replacement>*/
		var Duplex;
		/*</replacement>*/

		Readable.ReadableState = ReadableState;

		/*<replacement>*/
		var EE = require('events').EventEmitter;

		var EElistenerCount = function (emitter, type) {
		  return emitter.listeners(type).length;
		};
		/*</replacement>*/

		/*<replacement>*/
		var Stream = require('./internal/streams/stream');
		/*</replacement>*/

		/*<replacement>*/

		var Buffer = require('safe-buffer').Buffer;
		var OurUint8Array = global.Uint8Array || function () {};
		function _uint8ArrayToBuffer(chunk) {
		  return Buffer.from(chunk);
		}
		function _isUint8Array(obj) {
		  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
		}

		/*</replacement>*/

		/*<replacement>*/
		var util = require('core-util-is');
		util.inherits = require('inherits');
		/*</replacement>*/

		/*<replacement>*/
		var debugUtil = require('util');
		var debug = void 0;
		if (debugUtil && debugUtil.debuglog) {
		  debug = debugUtil.debuglog('stream');
		} else {
		  debug = function () {};
		}
		/*</replacement>*/

		var BufferList = require('./internal/streams/BufferList');
		var destroyImpl = require('./internal/streams/destroy');
		var StringDecoder;

		util.inherits(Readable, Stream);

		var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

		function prependListener(emitter, event, fn) {
		  // Sadly this is not cacheable as some libraries bundle their own
		  // event emitter implementation with them.
		  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

		  // This is a hack to make sure that our error handler is attached before any
		  // userland ones.  NEVER DO THIS. This is here only because this code needs
		  // to continue to work with older versions of Node.js that do not include
		  // the prependListener() method. The goal is to eventually remove this hack.
		  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
		}

		function ReadableState(options, stream) {
		  Duplex = Duplex || require('./_stream_duplex');

		  options = options || {};

		  // Duplex streams are both readable and writable, but share
		  // the same options object.
		  // However, some cases require setting options to different
		  // values for the readable and the writable sides of the duplex stream.
		  // These options can be provided separately as readableXXX and writableXXX.
		  var isDuplex = stream instanceof Duplex;

		  // object stream flag. Used to make read(n) ignore n and to
		  // make all the buffer merging and length checks go away
		  this.objectMode = !!options.objectMode;

		  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

		  // the point at which it stops calling _read() to fill the buffer
		  // Note: 0 is a valid value, means "don't call _read preemptively ever"
		  var hwm = options.highWaterMark;
		  var readableHwm = options.readableHighWaterMark;
		  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

		  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

		  // cast to ints.
		  this.highWaterMark = Math.floor(this.highWaterMark);

		  // A linked list is used to store data chunks instead of an array because the
		  // linked list can remove elements from the beginning faster than
		  // array.shift()
		  this.buffer = new BufferList();
		  this.length = 0;
		  this.pipes = null;
		  this.pipesCount = 0;
		  this.flowing = null;
		  this.ended = false;
		  this.endEmitted = false;
		  this.reading = false;

		  // a flag to be able to tell if the event 'readable'/'data' is emitted
		  // immediately, or on a later tick.  We set this to true at first, because
		  // any actions that shouldn't happen until "later" should generally also
		  // not happen before the first read call.
		  this.sync = true;

		  // whenever we return null, then we set a flag to say
		  // that we're awaiting a 'readable' event emission.
		  this.needReadable = false;
		  this.emittedReadable = false;
		  this.readableListening = false;
		  this.resumeScheduled = false;

		  // has it been destroyed
		  this.destroyed = false;

		  // Crypto is kind of old and crusty.  Historically, its default string
		  // encoding is 'binary' so we have to make this configurable.
		  // Everything else in the universe uses 'utf8', though.
		  this.defaultEncoding = options.defaultEncoding || 'utf8';

		  // the number of writers that are awaiting a drain event in .pipe()s
		  this.awaitDrain = 0;

		  // if true, a maybeReadMore has been scheduled
		  this.readingMore = false;

		  this.decoder = null;
		  this.encoding = null;
		  if (options.encoding) {
		    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
		    this.decoder = new StringDecoder(options.encoding);
		    this.encoding = options.encoding;
		  }
		}

		function Readable(options) {
		  Duplex = Duplex || require('./_stream_duplex');

		  if (!(this instanceof Readable)) return new Readable(options);

		  this._readableState = new ReadableState(options, this);

		  // legacy
		  this.readable = true;

		  if (options) {
		    if (typeof options.read === 'function') this._read = options.read;

		    if (typeof options.destroy === 'function') this._destroy = options.destroy;
		  }

		  Stream.call(this);
		}

		Object.defineProperty(Readable.prototype, 'destroyed', {
		  get: function () {
		    if (this._readableState === undefined) {
		      return false;
		    }
		    return this._readableState.destroyed;
		  },
		  set: function (value) {
		    // we ignore the value if the stream
		    // has not been initialized yet
		    if (!this._readableState) {
		      return;
		    }

		    // backward compatibility, the user is explicitly
		    // managing destroyed
		    this._readableState.destroyed = value;
		  }
		});

		Readable.prototype.destroy = destroyImpl.destroy;
		Readable.prototype._undestroy = destroyImpl.undestroy;
		Readable.prototype._destroy = function (err, cb) {
		  this.push(null);
		  cb(err);
		};

		// Manually shove something into the read() buffer.
		// This returns true if the highWaterMark has not been hit yet,
		// similar to how Writable.write() returns true if you should
		// write() some more.
		Readable.prototype.push = function (chunk, encoding) {
		  var state = this._readableState;
		  var skipChunkCheck;

		  if (!state.objectMode) {
		    if (typeof chunk === 'string') {
		      encoding = encoding || state.defaultEncoding;
		      if (encoding !== state.encoding) {
		        chunk = Buffer.from(chunk, encoding);
		        encoding = '';
		      }
		      skipChunkCheck = true;
		    }
		  } else {
		    skipChunkCheck = true;
		  }

		  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
		};

		// Unshift should *always* be something directly out of read()
		Readable.prototype.unshift = function (chunk) {
		  return readableAddChunk(this, chunk, null, true, false);
		};

		function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
		  var state = stream._readableState;
		  if (chunk === null) {
		    state.reading = false;
		    onEofChunk(stream, state);
		  } else {
		    var er;
		    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
		    if (er) {
		      stream.emit('error', er);
		    } else if (state.objectMode || chunk && chunk.length > 0) {
		      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
		        chunk = _uint8ArrayToBuffer(chunk);
		      }

		      if (addToFront) {
		        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
		      } else if (state.ended) {
		        stream.emit('error', new Error('stream.push() after EOF'));
		      } else {
		        state.reading = false;
		        if (state.decoder && !encoding) {
		          chunk = state.decoder.write(chunk);
		          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
		        } else {
		          addChunk(stream, state, chunk, false);
		        }
		      }
		    } else if (!addToFront) {
		      state.reading = false;
		    }
		  }

		  return needMoreData(state);
		}

		function addChunk(stream, state, chunk, addToFront) {
		  if (state.flowing && state.length === 0 && !state.sync) {
		    stream.emit('data', chunk);
		    stream.read(0);
		  } else {
		    // update the buffer info.
		    state.length += state.objectMode ? 1 : chunk.length;
		    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

		    if (state.needReadable) emitReadable(stream);
		  }
		  maybeReadMore(stream, state);
		}

		function chunkInvalid(state, chunk) {
		  var er;
		  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
		    er = new TypeError('Invalid non-string/buffer chunk');
		  }
		  return er;
		}

		// if it's past the high water mark, we can push in some more.
		// Also, if we have no data yet, we can stand some
		// more bytes.  This is to work around cases where hwm=0,
		// such as the repl.  Also, if the push() triggered a
		// readable event, and the user called read(largeNumber) such that
		// needReadable was set, then we ought to push more, so that another
		// 'readable' event will be triggered.
		function needMoreData(state) {
		  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
		}

		Readable.prototype.isPaused = function () {
		  return this._readableState.flowing === false;
		};

		// backwards compatibility.
		Readable.prototype.setEncoding = function (enc) {
		  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
		  this._readableState.decoder = new StringDecoder(enc);
		  this._readableState.encoding = enc;
		  return this;
		};

		// Don't raise the hwm > 8MB
		var MAX_HWM = 0x800000;
		function computeNewHighWaterMark(n) {
		  if (n >= MAX_HWM) {
		    n = MAX_HWM;
		  } else {
		    // Get the next highest power of 2 to prevent increasing hwm excessively in
		    // tiny amounts
		    n--;
		    n |= n >>> 1;
		    n |= n >>> 2;
		    n |= n >>> 4;
		    n |= n >>> 8;
		    n |= n >>> 16;
		    n++;
		  }
		  return n;
		}

		// This function is designed to be inlinable, so please take care when making
		// changes to the function body.
		function howMuchToRead(n, state) {
		  if (n <= 0 || state.length === 0 && state.ended) return 0;
		  if (state.objectMode) return 1;
		  if (n !== n) {
		    // Only flow one buffer at a time
		    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
		  }
		  // If we're asking for more than the current hwm, then raise the hwm.
		  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
		  if (n <= state.length) return n;
		  // Don't have enough
		  if (!state.ended) {
		    state.needReadable = true;
		    return 0;
		  }
		  return state.length;
		}

		// you can override either this method, or the async _read(n) below.
		Readable.prototype.read = function (n) {
		  debug('read', n);
		  n = parseInt(n, 10);
		  var state = this._readableState;
		  var nOrig = n;

		  if (n !== 0) state.emittedReadable = false;

		  // if we're doing read(0) to trigger a readable event, but we
		  // already have a bunch of data in the buffer, then just trigger
		  // the 'readable' event and move on.
		  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
		    debug('read: emitReadable', state.length, state.ended);
		    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
		    return null;
		  }

		  n = howMuchToRead(n, state);

		  // if we've ended, and we're now clear, then finish it up.
		  if (n === 0 && state.ended) {
		    if (state.length === 0) endReadable(this);
		    return null;
		  }

		  // All the actual chunk generation logic needs to be
		  // *below* the call to _read.  The reason is that in certain
		  // synthetic stream cases, such as passthrough streams, _read
		  // may be a completely synchronous operation which may change
		  // the state of the read buffer, providing enough data when
		  // before there was *not* enough.
		  //
		  // So, the steps are:
		  // 1. Figure out what the state of things will be after we do
		  // a read from the buffer.
		  //
		  // 2. If that resulting state will trigger a _read, then call _read.
		  // Note that this may be asynchronous, or synchronous.  Yes, it is
		  // deeply ugly to write APIs this way, but that still doesn't mean
		  // that the Readable class should behave improperly, as streams are
		  // designed to be sync/async agnostic.
		  // Take note if the _read call is sync or async (ie, if the read call
		  // has returned yet), so that we know whether or not it's safe to emit
		  // 'readable' etc.
		  //
		  // 3. Actually pull the requested chunks out of the buffer and return.

		  // if we need a readable event, then we need to do some reading.
		  var doRead = state.needReadable;
		  debug('need readable', doRead);

		  // if we currently have less than the highWaterMark, then also read some
		  if (state.length === 0 || state.length - n < state.highWaterMark) {
		    doRead = true;
		    debug('length less than watermark', doRead);
		  }

		  // however, if we've ended, then there's no point, and if we're already
		  // reading, then it's unnecessary.
		  if (state.ended || state.reading) {
		    doRead = false;
		    debug('reading or ended', doRead);
		  } else if (doRead) {
		    debug('do read');
		    state.reading = true;
		    state.sync = true;
		    // if the length is currently zero, then we *need* a readable event.
		    if (state.length === 0) state.needReadable = true;
		    // call internal read method
		    this._read(state.highWaterMark);
		    state.sync = false;
		    // If _read pushed data synchronously, then `reading` will be false,
		    // and we need to re-evaluate how much data we can return to the user.
		    if (!state.reading) n = howMuchToRead(nOrig, state);
		  }

		  var ret;
		  if (n > 0) ret = fromList(n, state);else ret = null;

		  if (ret === null) {
		    state.needReadable = true;
		    n = 0;
		  } else {
		    state.length -= n;
		  }

		  if (state.length === 0) {
		    // If we have nothing in the buffer, then we want to know
		    // as soon as we *do* get something into the buffer.
		    if (!state.ended) state.needReadable = true;

		    // If we tried to read() past the EOF, then emit end on the next tick.
		    if (nOrig !== n && state.ended) endReadable(this);
		  }

		  if (ret !== null) this.emit('data', ret);

		  return ret;
		};

		function onEofChunk(stream, state) {
		  if (state.ended) return;
		  if (state.decoder) {
		    var chunk = state.decoder.end();
		    if (chunk && chunk.length) {
		      state.buffer.push(chunk);
		      state.length += state.objectMode ? 1 : chunk.length;
		    }
		  }
		  state.ended = true;

		  // emit 'readable' now to make sure it gets picked up.
		  emitReadable(stream);
		}

		// Don't emit readable right away in sync mode, because this can trigger
		// another read() call => stack overflow.  This way, it might trigger
		// a nextTick recursion warning, but that's not so bad.
		function emitReadable(stream) {
		  var state = stream._readableState;
		  state.needReadable = false;
		  if (!state.emittedReadable) {
		    debug('emitReadable', state.flowing);
		    state.emittedReadable = true;
		    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
		  }
		}

		function emitReadable_(stream) {
		  debug('emit readable');
		  stream.emit('readable');
		  flow(stream);
		}

		// at this point, the user has presumably seen the 'readable' event,
		// and called read() to consume some data.  that may have triggered
		// in turn another _read(n) call, in which case reading = true if
		// it's in progress.
		// However, if we're not ended, or reading, and the length < hwm,
		// then go ahead and try to read some more preemptively.
		function maybeReadMore(stream, state) {
		  if (!state.readingMore) {
		    state.readingMore = true;
		    pna.nextTick(maybeReadMore_, stream, state);
		  }
		}

		function maybeReadMore_(stream, state) {
		  var len = state.length;
		  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
		    debug('maybeReadMore read 0');
		    stream.read(0);
		    if (len === state.length)
		      // didn't get any data, stop spinning.
		      break;else len = state.length;
		  }
		  state.readingMore = false;
		}

		// abstract method.  to be overridden in specific implementation classes.
		// call cb(er, data) where data is <= n in length.
		// for virtual (non-string, non-buffer) streams, "length" is somewhat
		// arbitrary, and perhaps not very meaningful.
		Readable.prototype._read = function (n) {
		  this.emit('error', new Error('_read() is not implemented'));
		};

		Readable.prototype.pipe = function (dest, pipeOpts) {
		  var src = this;
		  var state = this._readableState;

		  switch (state.pipesCount) {
		    case 0:
		      state.pipes = dest;
		      break;
		    case 1:
		      state.pipes = [state.pipes, dest];
		      break;
		    default:
		      state.pipes.push(dest);
		      break;
		  }
		  state.pipesCount += 1;
		  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

		  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

		  var endFn = doEnd ? onend : unpipe;
		  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

		  dest.on('unpipe', onunpipe);
		  function onunpipe(readable, unpipeInfo) {
		    debug('onunpipe');
		    if (readable === src) {
		      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
		        unpipeInfo.hasUnpiped = true;
		        cleanup();
		      }
		    }
		  }

		  function onend() {
		    debug('onend');
		    dest.end();
		  }

		  // when the dest drains, it reduces the awaitDrain counter
		  // on the source.  This would be more elegant with a .once()
		  // handler in flow(), but adding and removing repeatedly is
		  // too slow.
		  var ondrain = pipeOnDrain(src);
		  dest.on('drain', ondrain);

		  var cleanedUp = false;
		  function cleanup() {
		    debug('cleanup');
		    // cleanup event handlers once the pipe is broken
		    dest.removeListener('close', onclose);
		    dest.removeListener('finish', onfinish);
		    dest.removeListener('drain', ondrain);
		    dest.removeListener('error', onerror);
		    dest.removeListener('unpipe', onunpipe);
		    src.removeListener('end', onend);
		    src.removeListener('end', unpipe);
		    src.removeListener('data', ondata);

		    cleanedUp = true;

		    // if the reader is waiting for a drain event from this
		    // specific writer, then it would cause it to never start
		    // flowing again.
		    // So, if this is awaiting a drain, then we just call it now.
		    // If we don't know, then assume that we are waiting for one.
		    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
		  }

		  // If the user pushes more data while we're writing to dest then we'll end up
		  // in ondata again. However, we only want to increase awaitDrain once because
		  // dest will only emit one 'drain' event for the multiple writes.
		  // => Introduce a guard on increasing awaitDrain.
		  var increasedAwaitDrain = false;
		  src.on('data', ondata);
		  function ondata(chunk) {
		    debug('ondata');
		    increasedAwaitDrain = false;
		    var ret = dest.write(chunk);
		    if (false === ret && !increasedAwaitDrain) {
		      // If the user unpiped during `dest.write()`, it is possible
		      // to get stuck in a permanently paused state if that write
		      // also returned false.
		      // => Check whether `dest` is still a piping destination.
		      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
		        debug('false write response, pause', src._readableState.awaitDrain);
		        src._readableState.awaitDrain++;
		        increasedAwaitDrain = true;
		      }
		      src.pause();
		    }
		  }

		  // if the dest has an error, then stop piping into it.
		  // however, don't suppress the throwing behavior for this.
		  function onerror(er) {
		    debug('onerror', er);
		    unpipe();
		    dest.removeListener('error', onerror);
		    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
		  }

		  // Make sure our error handler is attached before userland ones.
		  prependListener(dest, 'error', onerror);

		  // Both close and finish should trigger unpipe, but only once.
		  function onclose() {
		    dest.removeListener('finish', onfinish);
		    unpipe();
		  }
		  dest.once('close', onclose);
		  function onfinish() {
		    debug('onfinish');
		    dest.removeListener('close', onclose);
		    unpipe();
		  }
		  dest.once('finish', onfinish);

		  function unpipe() {
		    debug('unpipe');
		    src.unpipe(dest);
		  }

		  // tell the dest that it's being piped to
		  dest.emit('pipe', src);

		  // start the flow if it hasn't been started already.
		  if (!state.flowing) {
		    debug('pipe resume');
		    src.resume();
		  }

		  return dest;
		};

		function pipeOnDrain(src) {
		  return function () {
		    var state = src._readableState;
		    debug('pipeOnDrain', state.awaitDrain);
		    if (state.awaitDrain) state.awaitDrain--;
		    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
		      state.flowing = true;
		      flow(src);
		    }
		  };
		}

		Readable.prototype.unpipe = function (dest) {
		  var state = this._readableState;
		  var unpipeInfo = { hasUnpiped: false };

		  // if we're not piping anywhere, then do nothing.
		  if (state.pipesCount === 0) return this;

		  // just one destination.  most common case.
		  if (state.pipesCount === 1) {
		    // passed in one, but it's not the right one.
		    if (dest && dest !== state.pipes) return this;

		    if (!dest) dest = state.pipes;

		    // got a match.
		    state.pipes = null;
		    state.pipesCount = 0;
		    state.flowing = false;
		    if (dest) dest.emit('unpipe', this, unpipeInfo);
		    return this;
		  }

		  // slow case. multiple pipe destinations.

		  if (!dest) {
		    // remove all.
		    var dests = state.pipes;
		    var len = state.pipesCount;
		    state.pipes = null;
		    state.pipesCount = 0;
		    state.flowing = false;

		    for (var i = 0; i < len; i++) {
		      dests[i].emit('unpipe', this, unpipeInfo);
		    }return this;
		  }

		  // try to find the right one.
		  var index = indexOf(state.pipes, dest);
		  if (index === -1) return this;

		  state.pipes.splice(index, 1);
		  state.pipesCount -= 1;
		  if (state.pipesCount === 1) state.pipes = state.pipes[0];

		  dest.emit('unpipe', this, unpipeInfo);

		  return this;
		};

		// set up data events if they are asked for
		// Ensure readable listeners eventually get something
		Readable.prototype.on = function (ev, fn) {
		  var res = Stream.prototype.on.call(this, ev, fn);

		  if (ev === 'data') {
		    // Start flowing on next tick if stream isn't explicitly paused
		    if (this._readableState.flowing !== false) this.resume();
		  } else if (ev === 'readable') {
		    var state = this._readableState;
		    if (!state.endEmitted && !state.readableListening) {
		      state.readableListening = state.needReadable = true;
		      state.emittedReadable = false;
		      if (!state.reading) {
		        pna.nextTick(nReadingNextTick, this);
		      } else if (state.length) {
		        emitReadable(this);
		      }
		    }
		  }

		  return res;
		};
		Readable.prototype.addListener = Readable.prototype.on;

		function nReadingNextTick(self) {
		  debug('readable nexttick read 0');
		  self.read(0);
		}

		// pause() and resume() are remnants of the legacy readable stream API
		// If the user uses them, then switch into old mode.
		Readable.prototype.resume = function () {
		  var state = this._readableState;
		  if (!state.flowing) {
		    debug('resume');
		    state.flowing = true;
		    resume(this, state);
		  }
		  return this;
		};

		function resume(stream, state) {
		  if (!state.resumeScheduled) {
		    state.resumeScheduled = true;
		    pna.nextTick(resume_, stream, state);
		  }
		}

		function resume_(stream, state) {
		  if (!state.reading) {
		    debug('resume read 0');
		    stream.read(0);
		  }

		  state.resumeScheduled = false;
		  state.awaitDrain = 0;
		  stream.emit('resume');
		  flow(stream);
		  if (state.flowing && !state.reading) stream.read(0);
		}

		Readable.prototype.pause = function () {
		  debug('call pause flowing=%j', this._readableState.flowing);
		  if (false !== this._readableState.flowing) {
		    debug('pause');
		    this._readableState.flowing = false;
		    this.emit('pause');
		  }
		  return this;
		};

		function flow(stream) {
		  var state = stream._readableState;
		  debug('flow', state.flowing);
		  while (state.flowing && stream.read() !== null) {}
		}

		// wrap an old-style stream as the async data source.
		// This is *not* part of the readable stream interface.
		// It is an ugly unfortunate mess of history.
		Readable.prototype.wrap = function (stream) {
		  var _this = this;

		  var state = this._readableState;
		  var paused = false;

		  stream.on('end', function () {
		    debug('wrapped end');
		    if (state.decoder && !state.ended) {
		      var chunk = state.decoder.end();
		      if (chunk && chunk.length) _this.push(chunk);
		    }

		    _this.push(null);
		  });

		  stream.on('data', function (chunk) {
		    debug('wrapped data');
		    if (state.decoder) chunk = state.decoder.write(chunk);

		    // don't skip over falsy values in objectMode
		    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

		    var ret = _this.push(chunk);
		    if (!ret) {
		      paused = true;
		      stream.pause();
		    }
		  });

		  // proxy all the other methods.
		  // important when wrapping filters and duplexes.
		  for (var i in stream) {
		    if (this[i] === undefined && typeof stream[i] === 'function') {
		      this[i] = function (method) {
		        return function () {
		          return stream[method].apply(stream, arguments);
		        };
		      }(i);
		    }
		  }

		  // proxy certain important events.
		  for (var n = 0; n < kProxyEvents.length; n++) {
		    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
		  }

		  // when we try to consume some more bytes, simply unpause the
		  // underlying stream.
		  this._read = function (n) {
		    debug('wrapped _read', n);
		    if (paused) {
		      paused = false;
		      stream.resume();
		    }
		  };

		  return this;
		};

		// exposed for testing purposes only.
		Readable._fromList = fromList;

		// Pluck off n bytes from an array of buffers.
		// Length is the combined lengths of all the buffers in the list.
		// This function is designed to be inlinable, so please take care when making
		// changes to the function body.
		function fromList(n, state) {
		  // nothing buffered
		  if (state.length === 0) return null;

		  var ret;
		  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
		    // read it all, truncate the list
		    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
		    state.buffer.clear();
		  } else {
		    // read part of list
		    ret = fromListPartial(n, state.buffer, state.decoder);
		  }

		  return ret;
		}

		// Extracts only enough buffered data to satisfy the amount requested.
		// This function is designed to be inlinable, so please take care when making
		// changes to the function body.
		function fromListPartial(n, list, hasStrings) {
		  var ret;
		  if (n < list.head.data.length) {
		    // slice is the same for buffers and strings
		    ret = list.head.data.slice(0, n);
		    list.head.data = list.head.data.slice(n);
		  } else if (n === list.head.data.length) {
		    // first chunk is a perfect match
		    ret = list.shift();
		  } else {
		    // result spans more than one buffer
		    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
		  }
		  return ret;
		}

		// Copies a specified amount of characters from the list of buffered data
		// chunks.
		// This function is designed to be inlinable, so please take care when making
		// changes to the function body.
		function copyFromBufferString(n, list) {
		  var p = list.head;
		  var c = 1;
		  var ret = p.data;
		  n -= ret.length;
		  while (p = p.next) {
		    var str = p.data;
		    var nb = n > str.length ? str.length : n;
		    if (nb === str.length) ret += str;else ret += str.slice(0, n);
		    n -= nb;
		    if (n === 0) {
		      if (nb === str.length) {
		        ++c;
		        if (p.next) list.head = p.next;else list.head = list.tail = null;
		      } else {
		        list.head = p;
		        p.data = str.slice(nb);
		      }
		      break;
		    }
		    ++c;
		  }
		  list.length -= c;
		  return ret;
		}

		// Copies a specified amount of bytes from the list of buffered data chunks.
		// This function is designed to be inlinable, so please take care when making
		// changes to the function body.
		function copyFromBuffer(n, list) {
		  var ret = Buffer.allocUnsafe(n);
		  var p = list.head;
		  var c = 1;
		  p.data.copy(ret);
		  n -= p.data.length;
		  while (p = p.next) {
		    var buf = p.data;
		    var nb = n > buf.length ? buf.length : n;
		    buf.copy(ret, ret.length - n, 0, nb);
		    n -= nb;
		    if (n === 0) {
		      if (nb === buf.length) {
		        ++c;
		        if (p.next) list.head = p.next;else list.head = list.tail = null;
		      } else {
		        list.head = p;
		        p.data = buf.slice(nb);
		      }
		      break;
		    }
		    ++c;
		  }
		  list.length -= c;
		  return ret;
		}

		function endReadable(stream) {
		  var state = stream._readableState;

		  // If we get here before consuming all the bytes, then that is a
		  // bug in node.  Should never happen.
		  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

		  if (!state.endEmitted) {
		    state.ended = true;
		    pna.nextTick(endReadableNT, state, stream);
		  }
		}

		function endReadableNT(state, stream) {
		  // Check that we didn't get one last unshift.
		  if (!state.endEmitted && state.length === 0) {
		    state.endEmitted = true;
		    stream.readable = false;
		    stream.emit('end');
		  }
		}

		function forEach(xs, f) {
		  for (var i = 0, l = xs.length; i < l; i++) {
		    f(xs[i], i);
		  }
		}

		function indexOf(xs, x) {
		  for (var i = 0, l = xs.length; i < l; i++) {
		    if (xs[i] === x) return i;
		  }
		  return -1;
		}
		}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"./_stream_duplex":1018,"./internal/streams/BufferList":1023,"./internal/streams/destroy":1024,"./internal/streams/stream":1025,"_process":957,"core-util-is":644,"events":664,"inherits":686,"isarray":690,"process-nextick-args":956,"safe-buffer":1044,"string_decoder/":1048,"util":640}],1021:[function(require,module,exports){
		// Copyright Joyent, Inc. and other Node contributors.
		//
		// Permission is hereby granted, free of charge, to any person obtaining a
		// copy of this software and associated documentation files (the
		// "Software"), to deal in the Software without restriction, including
		// without limitation the rights to use, copy, modify, merge, publish,
		// distribute, sublicense, and/or sell copies of the Software, and to permit
		// persons to whom the Software is furnished to do so, subject to the
		// following conditions:
		//
		// The above copyright notice and this permission notice shall be included
		// in all copies or substantial portions of the Software.
		//
		// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
		// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
		// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
		// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
		// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
		// USE OR OTHER DEALINGS IN THE SOFTWARE.

		// a transform stream is a readable/writable stream where you do
		// something with the data.  Sometimes it's called a "filter",
		// but that's not a great name for it, since that implies a thing where
		// some bits pass through, and others are simply ignored.  (That would
		// be a valid example of a transform, of course.)
		//
		// While the output is causally related to the input, it's not a
		// necessarily symmetric or synchronous transformation.  For example,
		// a zlib stream might take multiple plain-text writes(), and then
		// emit a single compressed chunk some time in the future.
		//
		// Here's how this works:
		//
		// The Transform stream has all the aspects of the readable and writable
		// stream classes.  When you write(chunk), that calls _write(chunk,cb)
		// internally, and returns false if there's a lot of pending writes
		// buffered up.  When you call read(), that calls _read(n) until
		// there's enough pending readable data buffered up.
		//
		// In a transform stream, the written data is placed in a buffer.  When
		// _read(n) is called, it transforms the queued up data, calling the
		// buffered _write cb's as it consumes chunks.  If consuming a single
		// written chunk would result in multiple output chunks, then the first
		// outputted bit calls the readcb, and subsequent chunks just go into
		// the read buffer, and will cause it to emit 'readable' if necessary.
		//
		// This way, back-pressure is actually determined by the reading side,
		// since _read has to be called to start processing a new chunk.  However,
		// a pathological inflate type of transform can cause excessive buffering
		// here.  For example, imagine a stream where every byte of input is
		// interpreted as an integer from 0-255, and then results in that many
		// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
		// 1kb of data being output.  In this case, you could write a very small
		// amount of input, and end up with a very large amount of output.  In
		// such a pathological inflating mechanism, there'd be no way to tell
		// the system to stop doing the transform.  A single 4MB write could
		// cause the system to run out of memory.
		//
		// However, even in such a pathological case, only a single written chunk
		// would be consumed, and then the rest would wait (un-transformed) until
		// the results of the previous transformed chunk were consumed.

		'use strict';

		module.exports = Transform;

		var Duplex = require('./_stream_duplex');

		/*<replacement>*/
		var util = require('core-util-is');
		util.inherits = require('inherits');
		/*</replacement>*/

		util.inherits(Transform, Duplex);

		function afterTransform(er, data) {
		  var ts = this._transformState;
		  ts.transforming = false;

		  var cb = ts.writecb;

		  if (!cb) {
		    return this.emit('error', new Error('write callback called multiple times'));
		  }

		  ts.writechunk = null;
		  ts.writecb = null;

		  if (data != null) // single equals check for both `null` and `undefined`
		    this.push(data);

		  cb(er);

		  var rs = this._readableState;
		  rs.reading = false;
		  if (rs.needReadable || rs.length < rs.highWaterMark) {
		    this._read(rs.highWaterMark);
		  }
		}

		function Transform(options) {
		  if (!(this instanceof Transform)) return new Transform(options);

		  Duplex.call(this, options);

		  this._transformState = {
		    afterTransform: afterTransform.bind(this),
		    needTransform: false,
		    transforming: false,
		    writecb: null,
		    writechunk: null,
		    writeencoding: null
		  };

		  // start out asking for a readable event once data is transformed.
		  this._readableState.needReadable = true;

		  // we have implemented the _read method, and done the other things
		  // that Readable wants before the first _read call, so unset the
		  // sync guard flag.
		  this._readableState.sync = false;

		  if (options) {
		    if (typeof options.transform === 'function') this._transform = options.transform;

		    if (typeof options.flush === 'function') this._flush = options.flush;
		  }

		  // When the writable side finishes, then flush out anything remaining.
		  this.on('prefinish', prefinish);
		}

		function prefinish() {
		  var _this = this;

		  if (typeof this._flush === 'function') {
		    this._flush(function (er, data) {
		      done(_this, er, data);
		    });
		  } else {
		    done(this, null, null);
		  }
		}

		Transform.prototype.push = function (chunk, encoding) {
		  this._transformState.needTransform = false;
		  return Duplex.prototype.push.call(this, chunk, encoding);
		};

		// This is the part where you do stuff!
		// override this function in implementation classes.
		// 'chunk' is an input chunk.
		//
		// Call `push(newChunk)` to pass along transformed output
		// to the readable side.  You may call 'push' zero or more times.
		//
		// Call `cb(err)` when you are done with this chunk.  If you pass
		// an error, then that'll put the hurt on the whole operation.  If you
		// never call cb(), then you'll never get another chunk.
		Transform.prototype._transform = function (chunk, encoding, cb) {
		  throw new Error('_transform() is not implemented');
		};

		Transform.prototype._write = function (chunk, encoding, cb) {
		  var ts = this._transformState;
		  ts.writecb = cb;
		  ts.writechunk = chunk;
		  ts.writeencoding = encoding;
		  if (!ts.transforming) {
		    var rs = this._readableState;
		    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
		  }
		};

		// Doesn't matter what the args are here.
		// _transform does all the work.
		// That we got here means that the readable side wants more data.
		Transform.prototype._read = function (n) {
		  var ts = this._transformState;

		  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
		    ts.transforming = true;
		    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
		  } else {
		    // mark that we need a transform, so that any data that comes in
		    // will get processed, now that we've asked for it.
		    ts.needTransform = true;
		  }
		};

		Transform.prototype._destroy = function (err, cb) {
		  var _this2 = this;

		  Duplex.prototype._destroy.call(this, err, function (err2) {
		    cb(err2);
		    _this2.emit('close');
		  });
		};

		function done(stream, er, data) {
		  if (er) return stream.emit('error', er);

		  if (data != null) // single equals check for both `null` and `undefined`
		    stream.push(data);

		  // if there's nothing in the write buffer, then that means
		  // that nothing more will ever be provided
		  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

		  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

		  return stream.push(null);
		}
		},{"./_stream_duplex":1018,"core-util-is":644,"inherits":686}],1022:[function(require,module,exports){
		(function (process,global){
		// Copyright Joyent, Inc. and other Node contributors.
		//
		// Permission is hereby granted, free of charge, to any person obtaining a
		// copy of this software and associated documentation files (the
		// "Software"), to deal in the Software without restriction, including
		// without limitation the rights to use, copy, modify, merge, publish,
		// distribute, sublicense, and/or sell copies of the Software, and to permit
		// persons to whom the Software is furnished to do so, subject to the
		// following conditions:
		//
		// The above copyright notice and this permission notice shall be included
		// in all copies or substantial portions of the Software.
		//
		// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
		// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
		// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
		// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
		// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
		// USE OR OTHER DEALINGS IN THE SOFTWARE.

		// A bit simpler than readable streams.
		// Implement an async ._write(chunk, encoding, cb), and it'll handle all
		// the drain event emission and buffering.

		'use strict';

		/*<replacement>*/

		var pna = require('process-nextick-args');
		/*</replacement>*/

		module.exports = Writable;

		/* <replacement> */
		function WriteReq(chunk, encoding, cb) {
		  this.chunk = chunk;
		  this.encoding = encoding;
		  this.callback = cb;
		  this.next = null;
		}

		// It seems a linked list but it is not
		// there will be only 2 of these for each stream
		function CorkedRequest(state) {
		  var _this = this;

		  this.next = null;
		  this.entry = null;
		  this.finish = function () {
		    onCorkedFinish(_this, state);
		  };
		}
		/* </replacement> */

		/*<replacement>*/
		var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
		/*</replacement>*/

		/*<replacement>*/
		var Duplex;
		/*</replacement>*/

		Writable.WritableState = WritableState;

		/*<replacement>*/
		var util = require('core-util-is');
		util.inherits = require('inherits');
		/*</replacement>*/

		/*<replacement>*/
		var internalUtil = {
		  deprecate: require('util-deprecate')
		};
		/*</replacement>*/

		/*<replacement>*/
		var Stream = require('./internal/streams/stream');
		/*</replacement>*/

		/*<replacement>*/

		var Buffer = require('safe-buffer').Buffer;
		var OurUint8Array = global.Uint8Array || function () {};
		function _uint8ArrayToBuffer(chunk) {
		  return Buffer.from(chunk);
		}
		function _isUint8Array(obj) {
		  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
		}

		/*</replacement>*/

		var destroyImpl = require('./internal/streams/destroy');

		util.inherits(Writable, Stream);

		function nop() {}

		function WritableState(options, stream) {
		  Duplex = Duplex || require('./_stream_duplex');

		  options = options || {};

		  // Duplex streams are both readable and writable, but share
		  // the same options object.
		  // However, some cases require setting options to different
		  // values for the readable and the writable sides of the duplex stream.
		  // These options can be provided separately as readableXXX and writableXXX.
		  var isDuplex = stream instanceof Duplex;

		  // object stream flag to indicate whether or not this stream
		  // contains buffers or objects.
		  this.objectMode = !!options.objectMode;

		  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

		  // the point at which write() starts returning false
		  // Note: 0 is a valid value, means that we always return false if
		  // the entire buffer is not flushed immediately on write()
		  var hwm = options.highWaterMark;
		  var writableHwm = options.writableHighWaterMark;
		  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

		  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

		  // cast to ints.
		  this.highWaterMark = Math.floor(this.highWaterMark);

		  // if _final has been called
		  this.finalCalled = false;

		  // drain event flag.
		  this.needDrain = false;
		  // at the start of calling end()
		  this.ending = false;
		  // when end() has been called, and returned
		  this.ended = false;
		  // when 'finish' is emitted
		  this.finished = false;

		  // has it been destroyed
		  this.destroyed = false;

		  // should we decode strings into buffers before passing to _write?
		  // this is here so that some node-core streams can optimize string
		  // handling at a lower level.
		  var noDecode = options.decodeStrings === false;
		  this.decodeStrings = !noDecode;

		  // Crypto is kind of old and crusty.  Historically, its default string
		  // encoding is 'binary' so we have to make this configurable.
		  // Everything else in the universe uses 'utf8', though.
		  this.defaultEncoding = options.defaultEncoding || 'utf8';

		  // not an actual buffer we keep track of, but a measurement
		  // of how much we're waiting to get pushed to some underlying
		  // socket or file.
		  this.length = 0;

		  // a flag to see when we're in the middle of a write.
		  this.writing = false;

		  // when true all writes will be buffered until .uncork() call
		  this.corked = 0;

		  // a flag to be able to tell if the onwrite cb is called immediately,
		  // or on a later tick.  We set this to true at first, because any
		  // actions that shouldn't happen until "later" should generally also
		  // not happen before the first write call.
		  this.sync = true;

		  // a flag to know if we're processing previously buffered items, which
		  // may call the _write() callback in the same tick, so that we don't
		  // end up in an overlapped onwrite situation.
		  this.bufferProcessing = false;

		  // the callback that's passed to _write(chunk,cb)
		  this.onwrite = function (er) {
		    onwrite(stream, er);
		  };

		  // the callback that the user supplies to write(chunk,encoding,cb)
		  this.writecb = null;

		  // the amount that is being written when _write is called.
		  this.writelen = 0;

		  this.bufferedRequest = null;
		  this.lastBufferedRequest = null;

		  // number of pending user-supplied write callbacks
		  // this must be 0 before 'finish' can be emitted
		  this.pendingcb = 0;

		  // emit prefinish if the only thing we're waiting for is _write cbs
		  // This is relevant for synchronous Transform streams
		  this.prefinished = false;

		  // True if the error was already emitted and should not be thrown again
		  this.errorEmitted = false;

		  // count buffered requests
		  this.bufferedRequestCount = 0;

		  // allocate the first CorkedRequest, there is always
		  // one allocated and free to use, and we maintain at most two
		  this.corkedRequestsFree = new CorkedRequest(this);
		}

		WritableState.prototype.getBuffer = function getBuffer() {
		  var current = this.bufferedRequest;
		  var out = [];
		  while (current) {
		    out.push(current);
		    current = current.next;
		  }
		  return out;
		};

		(function () {
		  try {
		    Object.defineProperty(WritableState.prototype, 'buffer', {
		      get: internalUtil.deprecate(function () {
		        return this.getBuffer();
		      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
		    });
		  } catch (_) {}
		})();

		// Test _writableState for inheritance to account for Duplex streams,
		// whose prototype chain only points to Readable.
		var realHasInstance;
		if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
		  realHasInstance = Function.prototype[Symbol.hasInstance];
		  Object.defineProperty(Writable, Symbol.hasInstance, {
		    value: function (object) {
		      if (realHasInstance.call(this, object)) return true;
		      if (this !== Writable) return false;

		      return object && object._writableState instanceof WritableState;
		    }
		  });
		} else {
		  realHasInstance = function (object) {
		    return object instanceof this;
		  };
		}

		function Writable(options) {
		  Duplex = Duplex || require('./_stream_duplex');

		  // Writable ctor is applied to Duplexes, too.
		  // `realHasInstance` is necessary because using plain `instanceof`
		  // would return false, as no `_writableState` property is attached.

		  // Trying to use the custom `instanceof` for Writable here will also break the
		  // Node.js LazyTransform implementation, which has a non-trivial getter for
		  // `_writableState` that would lead to infinite recursion.
		  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
		    return new Writable(options);
		  }

		  this._writableState = new WritableState(options, this);

		  // legacy.
		  this.writable = true;

		  if (options) {
		    if (typeof options.write === 'function') this._write = options.write;

		    if (typeof options.writev === 'function') this._writev = options.writev;

		    if (typeof options.destroy === 'function') this._destroy = options.destroy;

		    if (typeof options.final === 'function') this._final = options.final;
		  }

		  Stream.call(this);
		}

		// Otherwise people can pipe Writable streams, which is just wrong.
		Writable.prototype.pipe = function () {
		  this.emit('error', new Error('Cannot pipe, not readable'));
		};

		function writeAfterEnd(stream, cb) {
		  var er = new Error('write after end');
		  // TODO: defer error events consistently everywhere, not just the cb
		  stream.emit('error', er);
		  pna.nextTick(cb, er);
		}

		// Checks that a user-supplied chunk is valid, especially for the particular
		// mode the stream is in. Currently this means that `null` is never accepted
		// and undefined/non-string values are only allowed in object mode.
		function validChunk(stream, state, chunk, cb) {
		  var valid = true;
		  var er = false;

		  if (chunk === null) {
		    er = new TypeError('May not write null values to stream');
		  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
		    er = new TypeError('Invalid non-string/buffer chunk');
		  }
		  if (er) {
		    stream.emit('error', er);
		    pna.nextTick(cb, er);
		    valid = false;
		  }
		  return valid;
		}

		Writable.prototype.write = function (chunk, encoding, cb) {
		  var state = this._writableState;
		  var ret = false;
		  var isBuf = !state.objectMode && _isUint8Array(chunk);

		  if (isBuf && !Buffer.isBuffer(chunk)) {
		    chunk = _uint8ArrayToBuffer(chunk);
		  }

		  if (typeof encoding === 'function') {
		    cb = encoding;
		    encoding = null;
		  }

		  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

		  if (typeof cb !== 'function') cb = nop;

		  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
		    state.pendingcb++;
		    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
		  }

		  return ret;
		};

		Writable.prototype.cork = function () {
		  var state = this._writableState;

		  state.corked++;
		};

		Writable.prototype.uncork = function () {
		  var state = this._writableState;

		  if (state.corked) {
		    state.corked--;

		    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
		  }
		};

		Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
		  // node::ParseEncoding() requires lower case.
		  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
		  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
		  this._writableState.defaultEncoding = encoding;
		  return this;
		};

		function decodeChunk(state, chunk, encoding) {
		  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
		    chunk = Buffer.from(chunk, encoding);
		  }
		  return chunk;
		}

		// if we're already writing something, then just put this
		// in the queue, and wait our turn.  Otherwise, call _write
		// If we return false, then we need a drain event, so set that flag.
		function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
		  if (!isBuf) {
		    var newChunk = decodeChunk(state, chunk, encoding);
		    if (chunk !== newChunk) {
		      isBuf = true;
		      encoding = 'buffer';
		      chunk = newChunk;
		    }
		  }
		  var len = state.objectMode ? 1 : chunk.length;

		  state.length += len;

		  var ret = state.length < state.highWaterMark;
		  // we must ensure that previous needDrain will not be reset to false.
		  if (!ret) state.needDrain = true;

		  if (state.writing || state.corked) {
		    var last = state.lastBufferedRequest;
		    state.lastBufferedRequest = {
		      chunk: chunk,
		      encoding: encoding,
		      isBuf: isBuf,
		      callback: cb,
		      next: null
		    };
		    if (last) {
		      last.next = state.lastBufferedRequest;
		    } else {
		      state.bufferedRequest = state.lastBufferedRequest;
		    }
		    state.bufferedRequestCount += 1;
		  } else {
		    doWrite(stream, state, false, len, chunk, encoding, cb);
		  }

		  return ret;
		}

		function doWrite(stream, state, writev, len, chunk, encoding, cb) {
		  state.writelen = len;
		  state.writecb = cb;
		  state.writing = true;
		  state.sync = true;
		  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
		  state.sync = false;
		}

		function onwriteError(stream, state, sync, er, cb) {
		  --state.pendingcb;

		  if (sync) {
		    // defer the callback if we are being called synchronously
		    // to avoid piling up things on the stack
		    pna.nextTick(cb, er);
		    // this can emit finish, and it will always happen
		    // after error
		    pna.nextTick(finishMaybe, stream, state);
		    stream._writableState.errorEmitted = true;
		    stream.emit('error', er);
		  } else {
		    // the caller expect this to happen before if
		    // it is async
		    cb(er);
		    stream._writableState.errorEmitted = true;
		    stream.emit('error', er);
		    // this can emit finish, but finish must
		    // always follow error
		    finishMaybe(stream, state);
		  }
		}

		function onwriteStateUpdate(state) {
		  state.writing = false;
		  state.writecb = null;
		  state.length -= state.writelen;
		  state.writelen = 0;
		}

		function onwrite(stream, er) {
		  var state = stream._writableState;
		  var sync = state.sync;
		  var cb = state.writecb;

		  onwriteStateUpdate(state);

		  if (er) onwriteError(stream, state, sync, er, cb);else {
		    // Check if we're actually ready to finish, but don't emit yet
		    var finished = needFinish(state);

		    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
		      clearBuffer(stream, state);
		    }

		    if (sync) {
		      /*<replacement>*/
		      asyncWrite(afterWrite, stream, state, finished, cb);
		      /*</replacement>*/
		    } else {
		      afterWrite(stream, state, finished, cb);
		    }
		  }
		}

		function afterWrite(stream, state, finished, cb) {
		  if (!finished) onwriteDrain(stream, state);
		  state.pendingcb--;
		  cb();
		  finishMaybe(stream, state);
		}

		// Must force callback to be called on nextTick, so that we don't
		// emit 'drain' before the write() consumer gets the 'false' return
		// value, and has a chance to attach a 'drain' listener.
		function onwriteDrain(stream, state) {
		  if (state.length === 0 && state.needDrain) {
		    state.needDrain = false;
		    stream.emit('drain');
		  }
		}

		// if there's something in the buffer waiting, then process it
		function clearBuffer(stream, state) {
		  state.bufferProcessing = true;
		  var entry = state.bufferedRequest;

		  if (stream._writev && entry && entry.next) {
		    // Fast case, write everything using _writev()
		    var l = state.bufferedRequestCount;
		    var buffer = new Array(l);
		    var holder = state.corkedRequestsFree;
		    holder.entry = entry;

		    var count = 0;
		    var allBuffers = true;
		    while (entry) {
		      buffer[count] = entry;
		      if (!entry.isBuf) allBuffers = false;
		      entry = entry.next;
		      count += 1;
		    }
		    buffer.allBuffers = allBuffers;

		    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

		    // doWrite is almost always async, defer these to save a bit of time
		    // as the hot path ends with doWrite
		    state.pendingcb++;
		    state.lastBufferedRequest = null;
		    if (holder.next) {
		      state.corkedRequestsFree = holder.next;
		      holder.next = null;
		    } else {
		      state.corkedRequestsFree = new CorkedRequest(state);
		    }
		    state.bufferedRequestCount = 0;
		  } else {
		    // Slow case, write chunks one-by-one
		    while (entry) {
		      var chunk = entry.chunk;
		      var encoding = entry.encoding;
		      var cb = entry.callback;
		      var len = state.objectMode ? 1 : chunk.length;

		      doWrite(stream, state, false, len, chunk, encoding, cb);
		      entry = entry.next;
		      state.bufferedRequestCount--;
		      // if we didn't call the onwrite immediately, then
		      // it means that we need to wait until it does.
		      // also, that means that the chunk and cb are currently
		      // being processed, so move the buffer counter past them.
		      if (state.writing) {
		        break;
		      }
		    }

		    if (entry === null) state.lastBufferedRequest = null;
		  }

		  state.bufferedRequest = entry;
		  state.bufferProcessing = false;
		}

		Writable.prototype._write = function (chunk, encoding, cb) {
		  cb(new Error('_write() is not implemented'));
		};

		Writable.prototype._writev = null;

		Writable.prototype.end = function (chunk, encoding, cb) {
		  var state = this._writableState;

		  if (typeof chunk === 'function') {
		    cb = chunk;
		    chunk = null;
		    encoding = null;
		  } else if (typeof encoding === 'function') {
		    cb = encoding;
		    encoding = null;
		  }

		  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

		  // .end() fully uncorks
		  if (state.corked) {
		    state.corked = 1;
		    this.uncork();
		  }

		  // ignore unnecessary end() calls.
		  if (!state.ending && !state.finished) endWritable(this, state, cb);
		};

		function needFinish(state) {
		  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
		}
		function callFinal(stream, state) {
		  stream._final(function (err) {
		    state.pendingcb--;
		    if (err) {
		      stream.emit('error', err);
		    }
		    state.prefinished = true;
		    stream.emit('prefinish');
		    finishMaybe(stream, state);
		  });
		}
		function prefinish(stream, state) {
		  if (!state.prefinished && !state.finalCalled) {
		    if (typeof stream._final === 'function') {
		      state.pendingcb++;
		      state.finalCalled = true;
		      pna.nextTick(callFinal, stream, state);
		    } else {
		      state.prefinished = true;
		      stream.emit('prefinish');
		    }
		  }
		}

		function finishMaybe(stream, state) {
		  var need = needFinish(state);
		  if (need) {
		    prefinish(stream, state);
		    if (state.pendingcb === 0) {
		      state.finished = true;
		      stream.emit('finish');
		    }
		  }
		  return need;
		}

		function endWritable(stream, state, cb) {
		  state.ending = true;
		  finishMaybe(stream, state);
		  if (cb) {
		    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
		  }
		  state.ended = true;
		  stream.writable = false;
		}

		function onCorkedFinish(corkReq, state, err) {
		  var entry = corkReq.entry;
		  corkReq.entry = null;
		  while (entry) {
		    var cb = entry.callback;
		    state.pendingcb--;
		    cb(err);
		    entry = entry.next;
		  }
		  if (state.corkedRequestsFree) {
		    state.corkedRequestsFree.next = corkReq;
		  } else {
		    state.corkedRequestsFree = corkReq;
		  }
		}

		Object.defineProperty(Writable.prototype, 'destroyed', {
		  get: function () {
		    if (this._writableState === undefined) {
		      return false;
		    }
		    return this._writableState.destroyed;
		  },
		  set: function (value) {
		    // we ignore the value if the stream
		    // has not been initialized yet
		    if (!this._writableState) {
		      return;
		    }

		    // backward compatibility, the user is explicitly
		    // managing destroyed
		    this._writableState.destroyed = value;
		  }
		});

		Writable.prototype.destroy = destroyImpl.destroy;
		Writable.prototype._undestroy = destroyImpl.undestroy;
		Writable.prototype._destroy = function (err, cb) {
		  this.end();
		  cb(err);
		};
		}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"./_stream_duplex":1018,"./internal/streams/destroy":1024,"./internal/streams/stream":1025,"_process":957,"core-util-is":644,"inherits":686,"process-nextick-args":956,"safe-buffer":1044,"util-deprecate":1053}],1023:[function(require,module,exports){
		'use strict';

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		var Buffer = require('safe-buffer').Buffer;
		var util = require('util');

		function copyBuffer(src, target, offset) {
		  src.copy(target, offset);
		}

		module.exports = function () {
		  function BufferList() {
		    _classCallCheck(this, BufferList);

		    this.head = null;
		    this.tail = null;
		    this.length = 0;
		  }

		  BufferList.prototype.push = function push(v) {
		    var entry = { data: v, next: null };
		    if (this.length > 0) this.tail.next = entry;else this.head = entry;
		    this.tail = entry;
		    ++this.length;
		  };

		  BufferList.prototype.unshift = function unshift(v) {
		    var entry = { data: v, next: this.head };
		    if (this.length === 0) this.tail = entry;
		    this.head = entry;
		    ++this.length;
		  };

		  BufferList.prototype.shift = function shift() {
		    if (this.length === 0) return;
		    var ret = this.head.data;
		    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
		    --this.length;
		    return ret;
		  };

		  BufferList.prototype.clear = function clear() {
		    this.head = this.tail = null;
		    this.length = 0;
		  };

		  BufferList.prototype.join = function join(s) {
		    if (this.length === 0) return '';
		    var p = this.head;
		    var ret = '' + p.data;
		    while (p = p.next) {
		      ret += s + p.data;
		    }return ret;
		  };

		  BufferList.prototype.concat = function concat(n) {
		    if (this.length === 0) return Buffer.alloc(0);
		    if (this.length === 1) return this.head.data;
		    var ret = Buffer.allocUnsafe(n >>> 0);
		    var p = this.head;
		    var i = 0;
		    while (p) {
		      copyBuffer(p.data, ret, i);
		      i += p.data.length;
		      p = p.next;
		    }
		    return ret;
		  };

		  return BufferList;
		}();

		if (util && util.inspect && util.inspect.custom) {
		  module.exports.prototype[util.inspect.custom] = function () {
		    var obj = util.inspect({ length: this.length });
		    return this.constructor.name + ' ' + obj;
		  };
		}
		},{"safe-buffer":1044,"util":640}],1024:[function(require,module,exports){
		'use strict';

		/*<replacement>*/

		var pna = require('process-nextick-args');
		/*</replacement>*/

		// undocumented cb() API, needed for core, not for public API
		function destroy(err, cb) {
		  var _this = this;

		  var readableDestroyed = this._readableState && this._readableState.destroyed;
		  var writableDestroyed = this._writableState && this._writableState.destroyed;

		  if (readableDestroyed || writableDestroyed) {
		    if (cb) {
		      cb(err);
		    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
		      pna.nextTick(emitErrorNT, this, err);
		    }
		    return this;
		  }

		  // we set destroyed to true before firing error callbacks in order
		  // to make it re-entrance safe in case destroy() is called within callbacks

		  if (this._readableState) {
		    this._readableState.destroyed = true;
		  }

		  // if this is a duplex stream mark the writable part as destroyed as well
		  if (this._writableState) {
		    this._writableState.destroyed = true;
		  }

		  this._destroy(err || null, function (err) {
		    if (!cb && err) {
		      pna.nextTick(emitErrorNT, _this, err);
		      if (_this._writableState) {
		        _this._writableState.errorEmitted = true;
		      }
		    } else if (cb) {
		      cb(err);
		    }
		  });

		  return this;
		}

		function undestroy() {
		  if (this._readableState) {
		    this._readableState.destroyed = false;
		    this._readableState.reading = false;
		    this._readableState.ended = false;
		    this._readableState.endEmitted = false;
		  }

		  if (this._writableState) {
		    this._writableState.destroyed = false;
		    this._writableState.ended = false;
		    this._writableState.ending = false;
		    this._writableState.finished = false;
		    this._writableState.errorEmitted = false;
		  }
		}

		function emitErrorNT(self, err) {
		  self.emit('error', err);
		}

		module.exports = {
		  destroy: destroy,
		  undestroy: undestroy
		};
		},{"process-nextick-args":956}],1025:[function(require,module,exports){
		module.exports = require('events').EventEmitter;

		},{"events":664}],1026:[function(require,module,exports){
		module.exports = require('./readable').PassThrough

		},{"./readable":1027}],1027:[function(require,module,exports){
		exports = module.exports = require('./lib/_stream_readable.js');
		exports.Stream = exports;
		exports.Readable = exports;
		exports.Writable = require('./lib/_stream_writable.js');
		exports.Duplex = require('./lib/_stream_duplex.js');
		exports.Transform = require('./lib/_stream_transform.js');
		exports.PassThrough = require('./lib/_stream_passthrough.js');

		},{"./lib/_stream_duplex.js":1018,"./lib/_stream_passthrough.js":1019,"./lib/_stream_readable.js":1020,"./lib/_stream_transform.js":1021,"./lib/_stream_writable.js":1022}],1028:[function(require,module,exports){
		module.exports = require('./readable').Transform

		},{"./readable":1027}],1029:[function(require,module,exports){
		module.exports = require('./lib/_stream_writable.js');

		},{"./lib/_stream_writable.js":1022}],1030:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		var getDisplayName = function getDisplayName(Component) {
		  if (typeof Component === 'string') {
		    return Component;
		  }

		  if (!Component) {
		    return undefined;
		  }

		  return Component.displayName || Component.name || 'Component';
		};

		exports.default = getDisplayName;
		},{}],1031:[function(require,module,exports){
		(function (process){
		'use strict';

		exports.__esModule = true;

		var _shouldUpdate = require('./shouldUpdate');

		var _shouldUpdate2 = _interopRequireDefault(_shouldUpdate);

		var _shallowEqual = require('./shallowEqual');

		var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

		var _setDisplayName = require('./setDisplayName');

		var _setDisplayName2 = _interopRequireDefault(_setDisplayName);

		var _wrapDisplayName = require('./wrapDisplayName');

		var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var pure = function pure(BaseComponent) {
		  var hoc = (0, _shouldUpdate2.default)(function (props, nextProps) {
		    return !(0, _shallowEqual2.default)(props, nextProps);
		  });

		  if (process.env.NODE_ENV !== 'production') {
		    return (0, _setDisplayName2.default)((0, _wrapDisplayName2.default)(BaseComponent, 'pure'))(hoc(BaseComponent));
		  }

		  return hoc(BaseComponent);
		};

		exports.default = pure;
		}).call(this,require('_process'))
		},{"./setDisplayName":1032,"./shallowEqual":1034,"./shouldUpdate":1035,"./wrapDisplayName":1036,"_process":957}],1032:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;

		var _setStatic = require('./setStatic');

		var _setStatic2 = _interopRequireDefault(_setStatic);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var setDisplayName = function setDisplayName(displayName) {
		  return (0, _setStatic2.default)('displayName', displayName);
		};

		exports.default = setDisplayName;
		},{"./setStatic":1033}],1033:[function(require,module,exports){
		"use strict";

		exports.__esModule = true;
		var setStatic = function setStatic(key, value) {
		  return function (BaseComponent) {
		    /* eslint-disable no-param-reassign */
		    BaseComponent[key] = value;
		    /* eslint-enable no-param-reassign */
		    return BaseComponent;
		  };
		};

		exports.default = setStatic;
		},{}],1034:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;

		var _shallowEqual = require('fbjs/lib/shallowEqual');

		var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.default = _shallowEqual2.default;
		},{"fbjs/lib/shallowEqual":680}],1035:[function(require,module,exports){
		(function (process){
		'use strict';

		exports.__esModule = true;

		var _react = require('react');

		var _setDisplayName = require('./setDisplayName');

		var _setDisplayName2 = _interopRequireDefault(_setDisplayName);

		var _wrapDisplayName = require('./wrapDisplayName');

		var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

		var shouldUpdate = function shouldUpdate(test) {
		  return function (BaseComponent) {
		    var factory = (0, _react.createFactory)(BaseComponent);

		    var ShouldUpdate = function (_Component) {
		      _inherits(ShouldUpdate, _Component);

		      function ShouldUpdate() {
		        _classCallCheck(this, ShouldUpdate);

		        return _possibleConstructorReturn(this, _Component.apply(this, arguments));
		      }

		      ShouldUpdate.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
		        return test(this.props, nextProps);
		      };

		      ShouldUpdate.prototype.render = function render() {
		        return factory(this.props);
		      };

		      return ShouldUpdate;
		    }(_react.Component);

		    if (process.env.NODE_ENV !== 'production') {
		      return (0, _setDisplayName2.default)((0, _wrapDisplayName2.default)(BaseComponent, 'shouldUpdate'))(ShouldUpdate);
		    }
		    return ShouldUpdate;
		  };
		};

		exports.default = shouldUpdate;
		}).call(this,require('_process'))
		},{"./setDisplayName":1032,"./wrapDisplayName":1036,"_process":957,"react":1016}],1036:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;

		var _getDisplayName = require('./getDisplayName');

		var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {
		  return hocName + '(' + (0, _getDisplayName2.default)(BaseComponent) + ')';
		};

		exports.default = wrapDisplayName;
		},{"./getDisplayName":1030}],1037:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;

		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

		exports['default'] = applyMiddleware;

		var _compose = require('./compose');

		var _compose2 = _interopRequireDefault(_compose);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		/**
		 * Creates a store enhancer that applies middleware to the dispatch method
		 * of the Redux store. This is handy for a variety of tasks, such as expressing
		 * asynchronous actions in a concise manner, or logging every action payload.
		 *
		 * See `redux-thunk` package as an example of the Redux middleware.
		 *
		 * Because middleware is potentially asynchronous, this should be the first
		 * store enhancer in the composition chain.
		 *
		 * Note that each middleware will be given the `dispatch` and `getState` functions
		 * as named arguments.
		 *
		 * @param {...Function} middlewares The middleware chain to be applied.
		 * @returns {Function} A store enhancer applying the middleware.
		 */
		function applyMiddleware() {
		  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
		    middlewares[_key] = arguments[_key];
		  }

		  return function (createStore) {
		    return function (reducer, preloadedState, enhancer) {
		      var store = createStore(reducer, preloadedState, enhancer);
		      var _dispatch = store.dispatch;
		      var chain = [];

		      var middlewareAPI = {
		        getState: store.getState,
		        dispatch: function dispatch(action) {
		          return _dispatch(action);
		        }
		      };
		      chain = middlewares.map(function (middleware) {
		        return middleware(middlewareAPI);
		      });
		      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);

		      return _extends({}, store, {
		        dispatch: _dispatch
		      });
		    };
		  };
		}
		},{"./compose":1040}],1038:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports['default'] = bindActionCreators;
		function bindActionCreator(actionCreator, dispatch) {
		  return function () {
		    return dispatch(actionCreator.apply(undefined, arguments));
		  };
		}

		/**
		 * Turns an object whose values are action creators, into an object with the
		 * same keys, but with every function wrapped into a `dispatch` call so they
		 * may be invoked directly. This is just a convenience method, as you can call
		 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
		 *
		 * For convenience, you can also pass a single function as the first argument,
		 * and get a function in return.
		 *
		 * @param {Function|Object} actionCreators An object whose values are action
		 * creator functions. One handy way to obtain it is to use ES6 `import * as`
		 * syntax. You may also pass a single function.
		 *
		 * @param {Function} dispatch The `dispatch` function available on your Redux
		 * store.
		 *
		 * @returns {Function|Object} The object mimicking the original object, but with
		 * every action creator wrapped into the `dispatch` call. If you passed a
		 * function as `actionCreators`, the return value will also be a single
		 * function.
		 */
		function bindActionCreators(actionCreators, dispatch) {
		  if (typeof actionCreators === 'function') {
		    return bindActionCreator(actionCreators, dispatch);
		  }

		  if (typeof actionCreators !== 'object' || actionCreators === null) {
		    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
		  }

		  var keys = Object.keys(actionCreators);
		  var boundActionCreators = {};
		  for (var i = 0; i < keys.length; i++) {
		    var key = keys[i];
		    var actionCreator = actionCreators[key];
		    if (typeof actionCreator === 'function') {
		      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
		    }
		  }
		  return boundActionCreators;
		}
		},{}],1039:[function(require,module,exports){
		(function (process){
		'use strict';

		exports.__esModule = true;
		exports['default'] = combineReducers;

		var _createStore = require('./createStore');

		var _isPlainObject = require('lodash/isPlainObject');

		var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

		var _warning = require('./utils/warning');

		var _warning2 = _interopRequireDefault(_warning);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		function getUndefinedStateErrorMessage(key, action) {
		  var actionType = action && action.type;
		  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

		  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
		}

		function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
		  var reducerKeys = Object.keys(reducers);
		  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

		  if (reducerKeys.length === 0) {
		    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
		  }

		  if (!(0, _isPlainObject2['default'])(inputState)) {
		    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
		  }

		  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
		    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
		  });

		  unexpectedKeys.forEach(function (key) {
		    unexpectedKeyCache[key] = true;
		  });

		  if (unexpectedKeys.length > 0) {
		    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
		  }
		}

		function assertReducerShape(reducers) {
		  Object.keys(reducers).forEach(function (key) {
		    var reducer = reducers[key];
		    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

		    if (typeof initialState === 'undefined') {
		      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
		    }

		    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
		    if (typeof reducer(undefined, { type: type }) === 'undefined') {
		      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
		    }
		  });
		}

		/**
		 * Turns an object whose values are different reducer functions, into a single
		 * reducer function. It will call every child reducer, and gather their results
		 * into a single state object, whose keys correspond to the keys of the passed
		 * reducer functions.
		 *
		 * @param {Object} reducers An object whose values correspond to different
		 * reducer functions that need to be combined into one. One handy way to obtain
		 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
		 * undefined for any action. Instead, they should return their initial state
		 * if the state passed to them was undefined, and the current state for any
		 * unrecognized action.
		 *
		 * @returns {Function} A reducer function that invokes every reducer inside the
		 * passed object, and builds a state object with the same shape.
		 */
		function combineReducers(reducers) {
		  var reducerKeys = Object.keys(reducers);
		  var finalReducers = {};
		  for (var i = 0; i < reducerKeys.length; i++) {
		    var key = reducerKeys[i];

		    if (process.env.NODE_ENV !== 'production') {
		      if (typeof reducers[key] === 'undefined') {
		        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
		      }
		    }

		    if (typeof reducers[key] === 'function') {
		      finalReducers[key] = reducers[key];
		    }
		  }
		  var finalReducerKeys = Object.keys(finalReducers);

		  var unexpectedKeyCache = void 0;
		  if (process.env.NODE_ENV !== 'production') {
		    unexpectedKeyCache = {};
		  }

		  var shapeAssertionError = void 0;
		  try {
		    assertReducerShape(finalReducers);
		  } catch (e) {
		    shapeAssertionError = e;
		  }

		  return function combination() {
		    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		    var action = arguments[1];

		    if (shapeAssertionError) {
		      throw shapeAssertionError;
		    }

		    if (process.env.NODE_ENV !== 'production') {
		      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
		      if (warningMessage) {
		        (0, _warning2['default'])(warningMessage);
		      }
		    }

		    var hasChanged = false;
		    var nextState = {};
		    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
		      var _key = finalReducerKeys[_i];
		      var reducer = finalReducers[_key];
		      var previousStateForKey = state[_key];
		      var nextStateForKey = reducer(previousStateForKey, action);
		      if (typeof nextStateForKey === 'undefined') {
		        var errorMessage = getUndefinedStateErrorMessage(_key, action);
		        throw new Error(errorMessage);
		      }
		      nextState[_key] = nextStateForKey;
		      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
		    }
		    return hasChanged ? nextState : state;
		  };
		}
		}).call(this,require('_process'))
		},{"./createStore":1041,"./utils/warning":1043,"_process":957,"lodash/isPlainObject":743}],1040:[function(require,module,exports){
		"use strict";

		exports.__esModule = true;
		exports["default"] = compose;
		/**
		 * Composes single-argument functions from right to left. The rightmost
		 * function can take multiple arguments as it provides the signature for
		 * the resulting composite function.
		 *
		 * @param {...Function} funcs The functions to compose.
		 * @returns {Function} A function obtained by composing the argument functions
		 * from right to left. For example, compose(f, g, h) is identical to doing
		 * (...args) => f(g(h(...args))).
		 */

		function compose() {
		  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
		    funcs[_key] = arguments[_key];
		  }

		  if (funcs.length === 0) {
		    return function (arg) {
		      return arg;
		    };
		  }

		  if (funcs.length === 1) {
		    return funcs[0];
		  }

		  return funcs.reduce(function (a, b) {
		    return function () {
		      return a(b.apply(undefined, arguments));
		    };
		  });
		}
		},{}],1041:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports.ActionTypes = undefined;
		exports['default'] = createStore;

		var _isPlainObject = require('lodash/isPlainObject');

		var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

		var _symbolObservable = require('symbol-observable');

		var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		/**
		 * These are private action types reserved by Redux.
		 * For any unknown actions, you must return the current state.
		 * If the current state is undefined, you must return the initial state.
		 * Do not reference these action types directly in your code.
		 */
		var ActionTypes = exports.ActionTypes = {
		  INIT: '@@redux/INIT'

		  /**
		   * Creates a Redux store that holds the state tree.
		   * The only way to change the data in the store is to call `dispatch()` on it.
		   *
		   * There should only be a single store in your app. To specify how different
		   * parts of the state tree respond to actions, you may combine several reducers
		   * into a single reducer function by using `combineReducers`.
		   *
		   * @param {Function} reducer A function that returns the next state tree, given
		   * the current state tree and the action to handle.
		   *
		   * @param {any} [preloadedState] The initial state. You may optionally specify it
		   * to hydrate the state from the server in universal apps, or to restore a
		   * previously serialized user session.
		   * If you use `combineReducers` to produce the root reducer function, this must be
		   * an object with the same shape as `combineReducers` keys.
		   *
		   * @param {Function} [enhancer] The store enhancer. You may optionally specify it
		   * to enhance the store with third-party capabilities such as middleware,
		   * time travel, persistence, etc. The only store enhancer that ships with Redux
		   * is `applyMiddleware()`.
		   *
		   * @returns {Store} A Redux store that lets you read the state, dispatch actions
		   * and subscribe to changes.
		   */
		};function createStore(reducer, preloadedState, enhancer) {
		  var _ref2;

		  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
		    enhancer = preloadedState;
		    preloadedState = undefined;
		  }

		  if (typeof enhancer !== 'undefined') {
		    if (typeof enhancer !== 'function') {
		      throw new Error('Expected the enhancer to be a function.');
		    }

		    return enhancer(createStore)(reducer, preloadedState);
		  }

		  if (typeof reducer !== 'function') {
		    throw new Error('Expected the reducer to be a function.');
		  }

		  var currentReducer = reducer;
		  var currentState = preloadedState;
		  var currentListeners = [];
		  var nextListeners = currentListeners;
		  var isDispatching = false;

		  function ensureCanMutateNextListeners() {
		    if (nextListeners === currentListeners) {
		      nextListeners = currentListeners.slice();
		    }
		  }

		  /**
		   * Reads the state tree managed by the store.
		   *
		   * @returns {any} The current state tree of your application.
		   */
		  function getState() {
		    return currentState;
		  }

		  /**
		   * Adds a change listener. It will be called any time an action is dispatched,
		   * and some part of the state tree may potentially have changed. You may then
		   * call `getState()` to read the current state tree inside the callback.
		   *
		   * You may call `dispatch()` from a change listener, with the following
		   * caveats:
		   *
		   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
		   * If you subscribe or unsubscribe while the listeners are being invoked, this
		   * will not have any effect on the `dispatch()` that is currently in progress.
		   * However, the next `dispatch()` call, whether nested or not, will use a more
		   * recent snapshot of the subscription list.
		   *
		   * 2. The listener should not expect to see all state changes, as the state
		   * might have been updated multiple times during a nested `dispatch()` before
		   * the listener is called. It is, however, guaranteed that all subscribers
		   * registered before the `dispatch()` started will be called with the latest
		   * state by the time it exits.
		   *
		   * @param {Function} listener A callback to be invoked on every dispatch.
		   * @returns {Function} A function to remove this change listener.
		   */
		  function subscribe(listener) {
		    if (typeof listener !== 'function') {
		      throw new Error('Expected listener to be a function.');
		    }

		    var isSubscribed = true;

		    ensureCanMutateNextListeners();
		    nextListeners.push(listener);

		    return function unsubscribe() {
		      if (!isSubscribed) {
		        return;
		      }

		      isSubscribed = false;

		      ensureCanMutateNextListeners();
		      var index = nextListeners.indexOf(listener);
		      nextListeners.splice(index, 1);
		    };
		  }

		  /**
		   * Dispatches an action. It is the only way to trigger a state change.
		   *
		   * The `reducer` function, used to create the store, will be called with the
		   * current state tree and the given `action`. Its return value will
		   * be considered the **next** state of the tree, and the change listeners
		   * will be notified.
		   *
		   * The base implementation only supports plain object actions. If you want to
		   * dispatch a Promise, an Observable, a thunk, or something else, you need to
		   * wrap your store creating function into the corresponding middleware. For
		   * example, see the documentation for the `redux-thunk` package. Even the
		   * middleware will eventually dispatch plain object actions using this method.
		   *
		   * @param {Object} action A plain object representing “what changed”. It is
		   * a good idea to keep actions serializable so you can record and replay user
		   * sessions, or use the time travelling `redux-devtools`. An action must have
		   * a `type` property which may not be `undefined`. It is a good idea to use
		   * string constants for action types.
		   *
		   * @returns {Object} For convenience, the same action object you dispatched.
		   *
		   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
		   * return something else (for example, a Promise you can await).
		   */
		  function dispatch(action) {
		    if (!(0, _isPlainObject2['default'])(action)) {
		      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
		    }

		    if (typeof action.type === 'undefined') {
		      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
		    }

		    if (isDispatching) {
		      throw new Error('Reducers may not dispatch actions.');
		    }

		    try {
		      isDispatching = true;
		      currentState = currentReducer(currentState, action);
		    } finally {
		      isDispatching = false;
		    }

		    var listeners = currentListeners = nextListeners;
		    for (var i = 0; i < listeners.length; i++) {
		      var listener = listeners[i];
		      listener();
		    }

		    return action;
		  }

		  /**
		   * Replaces the reducer currently used by the store to calculate the state.
		   *
		   * You might need this if your app implements code splitting and you want to
		   * load some of the reducers dynamically. You might also need this if you
		   * implement a hot reloading mechanism for Redux.
		   *
		   * @param {Function} nextReducer The reducer for the store to use instead.
		   * @returns {void}
		   */
		  function replaceReducer(nextReducer) {
		    if (typeof nextReducer !== 'function') {
		      throw new Error('Expected the nextReducer to be a function.');
		    }

		    currentReducer = nextReducer;
		    dispatch({ type: ActionTypes.INIT });
		  }

		  /**
		   * Interoperability point for observable/reactive libraries.
		   * @returns {observable} A minimal observable of state changes.
		   * For more information, see the observable proposal:
		   * https://github.com/tc39/proposal-observable
		   */
		  function observable() {
		    var _ref;

		    var outerSubscribe = subscribe;
		    return _ref = {
		      /**
		       * The minimal observable subscription method.
		       * @param {Object} observer Any object that can be used as an observer.
		       * The observer object should have a `next` method.
		       * @returns {subscription} An object with an `unsubscribe` method that can
		       * be used to unsubscribe the observable from the store, and prevent further
		       * emission of values from the observable.
		       */
		      subscribe: function subscribe(observer) {
		        if (typeof observer !== 'object') {
		          throw new TypeError('Expected the observer to be an object.');
		        }

		        function observeState() {
		          if (observer.next) {
		            observer.next(getState());
		          }
		        }

		        observeState();
		        var unsubscribe = outerSubscribe(observeState);
		        return { unsubscribe: unsubscribe };
		      }
		    }, _ref[_symbolObservable2['default']] = function () {
		      return this;
		    }, _ref;
		  }

		  // When a store is created, an "INIT" action is dispatched so that every
		  // reducer returns their initial state. This effectively populates
		  // the initial state tree.
		  dispatch({ type: ActionTypes.INIT });

		  return _ref2 = {
		    dispatch: dispatch,
		    subscribe: subscribe,
		    getState: getState,
		    replaceReducer: replaceReducer
		  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
		}
		},{"lodash/isPlainObject":743,"symbol-observable":1049}],1042:[function(require,module,exports){
		(function (process){
		'use strict';

		exports.__esModule = true;
		exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

		var _createStore = require('./createStore');

		var _createStore2 = _interopRequireDefault(_createStore);

		var _combineReducers = require('./combineReducers');

		var _combineReducers2 = _interopRequireDefault(_combineReducers);

		var _bindActionCreators = require('./bindActionCreators');

		var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

		var _applyMiddleware = require('./applyMiddleware');

		var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

		var _compose = require('./compose');

		var _compose2 = _interopRequireDefault(_compose);

		var _warning = require('./utils/warning');

		var _warning2 = _interopRequireDefault(_warning);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		/*
		* This is a dummy function to check if the function name has been altered by minification.
		* If the function has been minified and NODE_ENV !== 'production', warn the user.
		*/
		function isCrushed() {}

		if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
		  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
		}

		exports.createStore = _createStore2['default'];
		exports.combineReducers = _combineReducers2['default'];
		exports.bindActionCreators = _bindActionCreators2['default'];
		exports.applyMiddleware = _applyMiddleware2['default'];
		exports.compose = _compose2['default'];
		}).call(this,require('_process'))
		},{"./applyMiddleware":1037,"./bindActionCreators":1038,"./combineReducers":1039,"./compose":1040,"./createStore":1041,"./utils/warning":1043,"_process":957}],1043:[function(require,module,exports){
		'use strict';

		exports.__esModule = true;
		exports['default'] = warning;
		/**
		 * Prints a warning in the console if it exists.
		 *
		 * @param {String} message The warning message.
		 * @returns {void}
		 */
		function warning(message) {
		  /* eslint-disable no-console */
		  if (typeof console !== 'undefined' && typeof console.error === 'function') {
		    console.error(message);
		  }
		  /* eslint-enable no-console */
		  try {
		    // This error was thrown as a convenience so that if you enable
		    // "break on all exceptions" in your console,
		    // it would pause the execution at this line.
		    throw new Error(message);
		    /* eslint-disable no-empty */
		  } catch (e) {}
		  /* eslint-enable no-empty */
		}
		},{}],1044:[function(require,module,exports){
		/* eslint-disable node/no-deprecated-api */
		var buffer = require('buffer')
		var Buffer = buffer.Buffer

		// alternative to using Object.keys for old browsers
		function copyProps (src, dst) {
		  for (var key in src) {
		    dst[key] = src[key]
		  }
		}
		if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
		  module.exports = buffer
		} else {
		  // Copy properties from require('buffer')
		  copyProps(buffer, exports)
		  exports.Buffer = SafeBuffer
		}

		function SafeBuffer (arg, encodingOrOffset, length) {
		  return Buffer(arg, encodingOrOffset, length)
		}

		// Copy static methods from Buffer
		copyProps(Buffer, SafeBuffer)

		SafeBuffer.from = function (arg, encodingOrOffset, length) {
		  if (typeof arg === 'number') {
		    throw new TypeError('Argument must not be a number')
		  }
		  return Buffer(arg, encodingOrOffset, length)
		}

		SafeBuffer.alloc = function (size, fill, encoding) {
		  if (typeof size !== 'number') {
		    throw new TypeError('Argument must be a number')
		  }
		  var buf = Buffer(size)
		  if (fill !== undefined) {
		    if (typeof encoding === 'string') {
		      buf.fill(fill, encoding)
		    } else {
		      buf.fill(fill)
		    }
		  } else {
		    buf.fill(0)
		  }
		  return buf
		}

		SafeBuffer.allocUnsafe = function (size) {
		  if (typeof size !== 'number') {
		    throw new TypeError('Argument must be a number')
		  }
		  return Buffer(size)
		}

		SafeBuffer.allocUnsafeSlow = function (size) {
		  if (typeof size !== 'number') {
		    throw new TypeError('Argument must be a number')
		  }
		  return buffer.SlowBuffer(size)
		}

		},{"buffer":641}],1045:[function(require,module,exports){
		var raf = require('rafl')
		var E_NOSCROLL = new Error('Element already at target scroll position')
		var E_CANCELLED = new Error('Scroll cancelled')
		var min = Math.min

		module.exports = {
		  left: make('scrollLeft'),
		  top: make('scrollTop')
		}

		function make (prop) {
		  return function scroll (el, to, opts, cb) {
		    opts = opts || {}

		    if (typeof opts == 'function') cb = opts, opts = {}
		    if (typeof cb != 'function') cb = noop

		    var start = +new Date
		    var from = el[prop]
		    var ease = opts.ease || inOutSine
		    var duration = !isNaN(opts.duration) ? +opts.duration : 350
		    var cancelled = false

		    return from === to ?
		      cb(E_NOSCROLL, el[prop]) :
		      raf(animate), cancel

		    function cancel () {
		      cancelled = true
		    }

		    function animate (timestamp) {
		      if (cancelled) return cb(E_CANCELLED, el[prop])

		      var now = +new Date
		      var time = min(1, ((now - start) / duration))
		      var eased = ease(time)

		      el[prop] = (eased * (to - from)) + from

		      time < 1 ? raf(animate) : raf(function () {
		        cb(null, el[prop])
		      })
		    }
		  }
		}

		function inOutSine (n) {
		  return 0.5 * (1 - Math.cos(Math.PI * n))
		}

		function noop () {}

		},{"rafl":966}],1046:[function(require,module,exports){
		module.exports = stifle;


		function stifle (fn, wait) {
		  if (typeof fn !== 'function' || typeof wait !== 'number') {
		    throw new Error('stifle(fn, wait) -- expected a function and number of milliseconds, got (' + typeof fn + ', ' + typeof wait + ')');
		  }

		  var timer;    // Timer to fire after `wait` has elapsed
		  var called;   // Keep track if it gets called during the `wait`

		  var wrapper = function () {

		    // Check if still "cooling down" from a previous call
		    if (timer) {
		      called = true;
		    } else {
		      // Start a timer to fire after the `wait` is over
		      timer = setTimeout(afterWait, wait);
		      // And call the wrapped function
		      fn();
		    }
		  }

		  // Add a cancel method, to kill and pending calls
		  wrapper.cancel = function () {
		    // Clear the called flag, or it would fire twice when called again later
		    called = false;

		    // Turn off the timer, so it won't fire after the wait expires
		    if (timer) {
		      clearTimeout(timer);
		      timer = undefined;
		    }
		  }

		  function afterWait() {
		    // Empty out the timer
		    timer = undefined;

		    // If it was called during the `wait`, fire it again
		    if (called) {
		      called = false;
		      wrapper();
		    }
		  }

		  return wrapper;
		}

		},{}],1047:[function(require,module,exports){
		// Copyright Joyent, Inc. and other Node contributors.
		//
		// Permission is hereby granted, free of charge, to any person obtaining a
		// copy of this software and associated documentation files (the
		// "Software"), to deal in the Software without restriction, including
		// without limitation the rights to use, copy, modify, merge, publish,
		// distribute, sublicense, and/or sell copies of the Software, and to permit
		// persons to whom the Software is furnished to do so, subject to the
		// following conditions:
		//
		// The above copyright notice and this permission notice shall be included
		// in all copies or substantial portions of the Software.
		//
		// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
		// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
		// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
		// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
		// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
		// USE OR OTHER DEALINGS IN THE SOFTWARE.

		module.exports = Stream;

		var EE = require('events').EventEmitter;
		var inherits = require('inherits');

		inherits(Stream, EE);
		Stream.Readable = require('readable-stream/readable.js');
		Stream.Writable = require('readable-stream/writable.js');
		Stream.Duplex = require('readable-stream/duplex.js');
		Stream.Transform = require('readable-stream/transform.js');
		Stream.PassThrough = require('readable-stream/passthrough.js');

		// Backwards-compat with node 0.4.x
		Stream.Stream = Stream;



		// old-style streams.  Note that the pipe method (the only relevant
		// part of this class) is overridden in the Readable class.

		function Stream() {
		  EE.call(this);
		}

		Stream.prototype.pipe = function(dest, options) {
		  var source = this;

		  function ondata(chunk) {
		    if (dest.writable) {
		      if (false === dest.write(chunk) && source.pause) {
		        source.pause();
		      }
		    }
		  }

		  source.on('data', ondata);

		  function ondrain() {
		    if (source.readable && source.resume) {
		      source.resume();
		    }
		  }

		  dest.on('drain', ondrain);

		  // If the 'end' option is not supplied, dest.end() will be called when
		  // source gets the 'end' or 'close' events.  Only dest.end() once.
		  if (!dest._isStdio && (!options || options.end !== false)) {
		    source.on('end', onend);
		    source.on('close', onclose);
		  }

		  var didOnEnd = false;
		  function onend() {
		    if (didOnEnd) return;
		    didOnEnd = true;

		    dest.end();
		  }


		  function onclose() {
		    if (didOnEnd) return;
		    didOnEnd = true;

		    if (typeof dest.destroy === 'function') dest.destroy();
		  }

		  // don't leave dangling pipes when there are errors.
		  function onerror(er) {
		    cleanup();
		    if (EE.listenerCount(this, 'error') === 0) {
		      throw er; // Unhandled stream error in pipe.
		    }
		  }

		  source.on('error', onerror);
		  dest.on('error', onerror);

		  // remove all the event listeners that were added.
		  function cleanup() {
		    source.removeListener('data', ondata);
		    dest.removeListener('drain', ondrain);

		    source.removeListener('end', onend);
		    source.removeListener('close', onclose);

		    source.removeListener('error', onerror);
		    dest.removeListener('error', onerror);

		    source.removeListener('end', cleanup);
		    source.removeListener('close', cleanup);

		    dest.removeListener('close', cleanup);
		  }

		  source.on('end', cleanup);
		  source.on('close', cleanup);

		  dest.on('close', cleanup);

		  dest.emit('pipe', source);

		  // Allow for unix-like usage: A.pipe(B).pipe(C)
		  return dest;
		};

		},{"events":664,"inherits":686,"readable-stream/duplex.js":1017,"readable-stream/passthrough.js":1026,"readable-stream/readable.js":1027,"readable-stream/transform.js":1028,"readable-stream/writable.js":1029}],1048:[function(require,module,exports){
		'use strict';

		var Buffer = require('safe-buffer').Buffer;

		var isEncoding = Buffer.isEncoding || function (encoding) {
		  encoding = '' + encoding;
		  switch (encoding && encoding.toLowerCase()) {
		    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
		      return true;
		    default:
		      return false;
		  }
		};

		function _normalizeEncoding(enc) {
		  if (!enc) return 'utf8';
		  var retried;
		  while (true) {
		    switch (enc) {
		      case 'utf8':
		      case 'utf-8':
		        return 'utf8';
		      case 'ucs2':
		      case 'ucs-2':
		      case 'utf16le':
		      case 'utf-16le':
		        return 'utf16le';
		      case 'latin1':
		      case 'binary':
		        return 'latin1';
		      case 'base64':
		      case 'ascii':
		      case 'hex':
		        return enc;
		      default:
		        if (retried) return; // undefined
		        enc = ('' + enc).toLowerCase();
		        retried = true;
		    }
		  }
		};

		// Do not cache `Buffer.isEncoding` when checking encoding names as some
		// modules monkey-patch it to support additional encodings
		function normalizeEncoding(enc) {
		  var nenc = _normalizeEncoding(enc);
		  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
		  return nenc || enc;
		}

		// StringDecoder provides an interface for efficiently splitting a series of
		// buffers into a series of JS strings without breaking apart multi-byte
		// characters.
		exports.StringDecoder = StringDecoder;
		function StringDecoder(encoding) {
		  this.encoding = normalizeEncoding(encoding);
		  var nb;
		  switch (this.encoding) {
		    case 'utf16le':
		      this.text = utf16Text;
		      this.end = utf16End;
		      nb = 4;
		      break;
		    case 'utf8':
		      this.fillLast = utf8FillLast;
		      nb = 4;
		      break;
		    case 'base64':
		      this.text = base64Text;
		      this.end = base64End;
		      nb = 3;
		      break;
		    default:
		      this.write = simpleWrite;
		      this.end = simpleEnd;
		      return;
		  }
		  this.lastNeed = 0;
		  this.lastTotal = 0;
		  this.lastChar = Buffer.allocUnsafe(nb);
		}

		StringDecoder.prototype.write = function (buf) {
		  if (buf.length === 0) return '';
		  var r;
		  var i;
		  if (this.lastNeed) {
		    r = this.fillLast(buf);
		    if (r === undefined) return '';
		    i = this.lastNeed;
		    this.lastNeed = 0;
		  } else {
		    i = 0;
		  }
		  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
		  return r || '';
		};

		StringDecoder.prototype.end = utf8End;

		// Returns only complete characters in a Buffer
		StringDecoder.prototype.text = utf8Text;

		// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
		StringDecoder.prototype.fillLast = function (buf) {
		  if (this.lastNeed <= buf.length) {
		    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
		    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
		  }
		  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
		  this.lastNeed -= buf.length;
		};

		// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
		// continuation byte.
		function utf8CheckByte(byte) {
		  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
		  return -1;
		}

		// Checks at most 3 bytes at the end of a Buffer in order to detect an
		// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
		// needed to complete the UTF-8 character (if applicable) are returned.
		function utf8CheckIncomplete(self, buf, i) {
		  var j = buf.length - 1;
		  if (j < i) return 0;
		  var nb = utf8CheckByte(buf[j]);
		  if (nb >= 0) {
		    if (nb > 0) self.lastNeed = nb - 1;
		    return nb;
		  }
		  if (--j < i) return 0;
		  nb = utf8CheckByte(buf[j]);
		  if (nb >= 0) {
		    if (nb > 0) self.lastNeed = nb - 2;
		    return nb;
		  }
		  if (--j < i) return 0;
		  nb = utf8CheckByte(buf[j]);
		  if (nb >= 0) {
		    if (nb > 0) {
		      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
		    }
		    return nb;
		  }
		  return 0;
		}

		// Validates as many continuation bytes for a multi-byte UTF-8 character as
		// needed or are available. If we see a non-continuation byte where we expect
		// one, we "replace" the validated continuation bytes we've seen so far with
		// UTF-8 replacement characters ('\ufffd'), to match v8's UTF-8 decoding
		// behavior. The continuation byte check is included three times in the case
		// where all of the continuation bytes for a character exist in the same buffer.
		// It is also done this way as a slight performance increase instead of using a
		// loop.
		function utf8CheckExtraBytes(self, buf, p) {
		  if ((buf[0] & 0xC0) !== 0x80) {
		    self.lastNeed = 0;
		    return '\ufffd'.repeat(p);
		  }
		  if (self.lastNeed > 1 && buf.length > 1) {
		    if ((buf[1] & 0xC0) !== 0x80) {
		      self.lastNeed = 1;
		      return '\ufffd'.repeat(p + 1);
		    }
		    if (self.lastNeed > 2 && buf.length > 2) {
		      if ((buf[2] & 0xC0) !== 0x80) {
		        self.lastNeed = 2;
		        return '\ufffd'.repeat(p + 2);
		      }
		    }
		  }
		}

		// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
		function utf8FillLast(buf) {
		  var p = this.lastTotal - this.lastNeed;
		  var r = utf8CheckExtraBytes(this, buf, p);
		  if (r !== undefined) return r;
		  if (this.lastNeed <= buf.length) {
		    buf.copy(this.lastChar, p, 0, this.lastNeed);
		    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
		  }
		  buf.copy(this.lastChar, p, 0, buf.length);
		  this.lastNeed -= buf.length;
		}

		// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
		// partial character, the character's bytes are buffered until the required
		// number of bytes are available.
		function utf8Text(buf, i) {
		  var total = utf8CheckIncomplete(this, buf, i);
		  if (!this.lastNeed) return buf.toString('utf8', i);
		  this.lastTotal = total;
		  var end = buf.length - (total - this.lastNeed);
		  buf.copy(this.lastChar, 0, end);
		  return buf.toString('utf8', i, end);
		}

		// For UTF-8, a replacement character for each buffered byte of a (partial)
		// character needs to be added to the output.
		function utf8End(buf) {
		  var r = buf && buf.length ? this.write(buf) : '';
		  if (this.lastNeed) return r + '\ufffd'.repeat(this.lastTotal - this.lastNeed);
		  return r;
		}

		// UTF-16LE typically needs two bytes per character, but even if we have an even
		// number of bytes available, we need to check if we end on a leading/high
		// surrogate. In that case, we need to wait for the next two bytes in order to
		// decode the last character properly.
		function utf16Text(buf, i) {
		  if ((buf.length - i) % 2 === 0) {
		    var r = buf.toString('utf16le', i);
		    if (r) {
		      var c = r.charCodeAt(r.length - 1);
		      if (c >= 0xD800 && c <= 0xDBFF) {
		        this.lastNeed = 2;
		        this.lastTotal = 4;
		        this.lastChar[0] = buf[buf.length - 2];
		        this.lastChar[1] = buf[buf.length - 1];
		        return r.slice(0, -1);
		      }
		    }
		    return r;
		  }
		  this.lastNeed = 1;
		  this.lastTotal = 2;
		  this.lastChar[0] = buf[buf.length - 1];
		  return buf.toString('utf16le', i, buf.length - 1);
		}

		// For UTF-16LE we do not explicitly append special replacement characters if we
		// end on a partial character, we simply let v8 handle that.
		function utf16End(buf) {
		  var r = buf && buf.length ? this.write(buf) : '';
		  if (this.lastNeed) {
		    var end = this.lastTotal - this.lastNeed;
		    return r + this.lastChar.toString('utf16le', 0, end);
		  }
		  return r;
		}

		function base64Text(buf, i) {
		  var n = (buf.length - i) % 3;
		  if (n === 0) return buf.toString('base64', i);
		  this.lastNeed = 3 - n;
		  this.lastTotal = 3;
		  if (n === 1) {
		    this.lastChar[0] = buf[buf.length - 1];
		  } else {
		    this.lastChar[0] = buf[buf.length - 2];
		    this.lastChar[1] = buf[buf.length - 1];
		  }
		  return buf.toString('base64', i, buf.length - n);
		}

		function base64End(buf) {
		  var r = buf && buf.length ? this.write(buf) : '';
		  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
		  return r;
		}

		// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
		function simpleWrite(buf) {
		  return buf.toString(this.encoding);
		}

		function simpleEnd(buf) {
		  return buf && buf.length ? this.write(buf) : '';
		}
		},{"safe-buffer":1044}],1049:[function(require,module,exports){
		(function (global){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _ponyfill = require('./ponyfill.js');

		var _ponyfill2 = _interopRequireDefault(_ponyfill);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		var root; /* global window */


		if (typeof self !== 'undefined') {
		  root = self;
		} else if (typeof window !== 'undefined') {
		  root = window;
		} else if (typeof global !== 'undefined') {
		  root = global;
		} else if (typeof module !== 'undefined') {
		  root = module;
		} else {
		  root = Function('return this')();
		}

		var result = (0, _ponyfill2['default'])(root);
		exports['default'] = result;
		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{"./ponyfill.js":1050}],1050:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
			value: true
		});
		exports['default'] = symbolObservablePonyfill;
		function symbolObservablePonyfill(root) {
			var result;
			var _Symbol = root.Symbol;

			if (typeof _Symbol === 'function') {
				if (_Symbol.observable) {
					result = _Symbol.observable;
				} else {
					result = _Symbol('observable');
					_Symbol.observable = result;
				}
			} else {
				result = '@@observable';
			}

			return result;
		};
		},{}],1051:[function(require,module,exports){
		// Copyright Joyent, Inc. and other Node contributors.
		//
		// Permission is hereby granted, free of charge, to any person obtaining a
		// copy of this software and associated documentation files (the
		// "Software"), to deal in the Software without restriction, including
		// without limitation the rights to use, copy, modify, merge, publish,
		// distribute, sublicense, and/or sell copies of the Software, and to permit
		// persons to whom the Software is furnished to do so, subject to the
		// following conditions:
		//
		// The above copyright notice and this permission notice shall be included
		// in all copies or substantial portions of the Software.
		//
		// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
		// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
		// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
		// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
		// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
		// USE OR OTHER DEALINGS IN THE SOFTWARE.

		'use strict';

		var punycode = window.punycode;
		var util = require('./util');

		exports.parse = urlParse;
		exports.resolve = urlResolve;
		exports.resolveObject = urlResolveObject;
		exports.format = urlFormat;

		exports.Url = Url;

		function Url() {
		  this.protocol = null;
		  this.slashes = null;
		  this.auth = null;
		  this.host = null;
		  this.port = null;
		  this.hostname = null;
		  this.hash = null;
		  this.search = null;
		  this.query = null;
		  this.pathname = null;
		  this.path = null;
		  this.href = null;
		}

		// Reference: RFC 3986, RFC 1808, RFC 2396

		// define these here so at least they only have to be
		// compiled once on the first module load.
		var protocolPattern = /^([a-z0-9.+-]+:)/i,
		    portPattern = /:[0-9]*$/,

		    // Special case for a simple path URL
		    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

		    // RFC 2396: characters reserved for delimiting URLs.
		    // We actually just auto-escape these.
		    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

		    // RFC 2396: characters not allowed for various reasons.
		    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

		    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
		    autoEscape = ['\''].concat(unwise),
		    // Characters that are never ever allowed in a hostname.
		    // Note that any invalid chars are also handled, but these
		    // are the ones that are *expected* to be seen, so we fast-path
		    // them.
		    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
		    hostEndingChars = ['/', '?', '#'],
		    hostnameMaxLen = 255,
		    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
		    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
		    // protocols that can allow "unsafe" and "unwise" chars.
		    unsafeProtocol = {
		      'javascript': true,
		      'javascript:': true
		    },
		    // protocols that never have a hostname.
		    hostlessProtocol = {
		      'javascript': true,
		      'javascript:': true
		    },
		    // protocols that always contain a // bit.
		    slashedProtocol = {
		      'http': true,
		      'https': true,
		      'ftp': true,
		      'gopher': true,
		      'file': true,
		      'http:': true,
		      'https:': true,
		      'ftp:': true,
		      'gopher:': true,
		      'file:': true
		    },
		    querystring = require('querystring');

		function urlParse(url, parseQueryString, slashesDenoteHost) {
		  if (url && util.isObject(url) && url instanceof Url) return url;

		  var u = new Url;
		  u.parse(url, parseQueryString, slashesDenoteHost);
		  return u;
		}

		Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
		  if (!util.isString(url)) {
		    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
		  }

		  // Copy chrome, IE, opera backslash-handling behavior.
		  // Back slashes before the query string get converted to forward slashes
		  // See: https://code.google.com/p/chromium/issues/detail?id=25916
		  var queryIndex = url.indexOf('?'),
		      splitter =
		          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
		      uSplit = url.split(splitter),
		      slashRegex = /\\/g;
		  uSplit[0] = uSplit[0].replace(slashRegex, '/');
		  url = uSplit.join(splitter);

		  var rest = url;

		  // trim before proceeding.
		  // This is to support parse stuff like "  http://foo.com  \n"
		  rest = rest.trim();

		  if (!slashesDenoteHost && url.split('#').length === 1) {
		    // Try fast path regexp
		    var simplePath = simplePathPattern.exec(rest);
		    if (simplePath) {
		      this.path = rest;
		      this.href = rest;
		      this.pathname = simplePath[1];
		      if (simplePath[2]) {
		        this.search = simplePath[2];
		        if (parseQueryString) {
		          this.query = querystring.parse(this.search.substr(1));
		        } else {
		          this.query = this.search.substr(1);
		        }
		      } else if (parseQueryString) {
		        this.search = '';
		        this.query = {};
		      }
		      return this;
		    }
		  }

		  var proto = protocolPattern.exec(rest);
		  if (proto) {
		    proto = proto[0];
		    var lowerProto = proto.toLowerCase();
		    this.protocol = lowerProto;
		    rest = rest.substr(proto.length);
		  }

		  // figure out if it's got a host
		  // user@server is *always* interpreted as a hostname, and url
		  // resolution will treat //foo/bar as host=foo,path=bar because that's
		  // how the browser resolves relative URLs.
		  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
		    var slashes = rest.substr(0, 2) === '//';
		    if (slashes && !(proto && hostlessProtocol[proto])) {
		      rest = rest.substr(2);
		      this.slashes = true;
		    }
		  }

		  if (!hostlessProtocol[proto] &&
		      (slashes || (proto && !slashedProtocol[proto]))) {

		    // there's a hostname.
		    // the first instance of /, ?, ;, or # ends the host.
		    //
		    // If there is an @ in the hostname, then non-host chars *are* allowed
		    // to the left of the last @ sign, unless some host-ending character
		    // comes *before* the @-sign.
		    // URLs are obnoxious.
		    //
		    // ex:
		    // http://a@b@c/ => user:a@b host:c
		    // http://a@b?@c => user:a host:c path:/?@c

		    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
		    // Review our test case against browsers more comprehensively.

		    // find the first instance of any hostEndingChars
		    var hostEnd = -1;
		    for (var i = 0; i < hostEndingChars.length; i++) {
		      var hec = rest.indexOf(hostEndingChars[i]);
		      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
		        hostEnd = hec;
		    }

		    // at this point, either we have an explicit point where the
		    // auth portion cannot go past, or the last @ char is the decider.
		    var auth, atSign;
		    if (hostEnd === -1) {
		      // atSign can be anywhere.
		      atSign = rest.lastIndexOf('@');
		    } else {
		      // atSign must be in auth portion.
		      // http://a@b/c@d => host:b auth:a path:/c@d
		      atSign = rest.lastIndexOf('@', hostEnd);
		    }

		    // Now we have a portion which is definitely the auth.
		    // Pull that off.
		    if (atSign !== -1) {
		      auth = rest.slice(0, atSign);
		      rest = rest.slice(atSign + 1);
		      this.auth = decodeURIComponent(auth);
		    }

		    // the host is the remaining to the left of the first non-host char
		    hostEnd = -1;
		    for (var i = 0; i < nonHostChars.length; i++) {
		      var hec = rest.indexOf(nonHostChars[i]);
		      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
		        hostEnd = hec;
		    }
		    // if we still have not hit it, then the entire thing is a host.
		    if (hostEnd === -1)
		      hostEnd = rest.length;

		    this.host = rest.slice(0, hostEnd);
		    rest = rest.slice(hostEnd);

		    // pull out port.
		    this.parseHost();

		    // we've indicated that there is a hostname,
		    // so even if it's empty, it has to be present.
		    this.hostname = this.hostname || '';

		    // if hostname begins with [ and ends with ]
		    // assume that it's an IPv6 address.
		    var ipv6Hostname = this.hostname[0] === '[' &&
		        this.hostname[this.hostname.length - 1] === ']';

		    // validate a little.
		    if (!ipv6Hostname) {
		      var hostparts = this.hostname.split(/\./);
		      for (var i = 0, l = hostparts.length; i < l; i++) {
		        var part = hostparts[i];
		        if (!part) continue;
		        if (!part.match(hostnamePartPattern)) {
		          var newpart = '';
		          for (var j = 0, k = part.length; j < k; j++) {
		            if (part.charCodeAt(j) > 127) {
		              // we replace non-ASCII char with a temporary placeholder
		              // we need this to make sure size of hostname is not
		              // broken by replacing non-ASCII by nothing
		              newpart += 'x';
		            } else {
		              newpart += part[j];
		            }
		          }
		          // we test again with ASCII char only
		          if (!newpart.match(hostnamePartPattern)) {
		            var validParts = hostparts.slice(0, i);
		            var notHost = hostparts.slice(i + 1);
		            var bit = part.match(hostnamePartStart);
		            if (bit) {
		              validParts.push(bit[1]);
		              notHost.unshift(bit[2]);
		            }
		            if (notHost.length) {
		              rest = '/' + notHost.join('.') + rest;
		            }
		            this.hostname = validParts.join('.');
		            break;
		          }
		        }
		      }
		    }

		    if (this.hostname.length > hostnameMaxLen) {
		      this.hostname = '';
		    } else {
		      // hostnames are always lower case.
		      this.hostname = this.hostname.toLowerCase();
		    }

		    if (!ipv6Hostname) {
		      // IDNA Support: Returns a punycoded representation of "domain".
		      // It only converts parts of the domain name that
		      // have non-ASCII characters, i.e. it doesn't matter if
		      // you call it with a domain that already is ASCII-only.
		      this.hostname = punycode.toASCII(this.hostname);
		    }

		    var p = this.port ? ':' + this.port : '';
		    var h = this.hostname || '';
		    this.host = h + p;
		    this.href += this.host;

		    // strip [ and ] from the hostname
		    // the host field still retains them, though
		    if (ipv6Hostname) {
		      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
		      if (rest[0] !== '/') {
		        rest = '/' + rest;
		      }
		    }
		  }

		  // now rest is set to the post-host stuff.
		  // chop off any delim chars.
		  if (!unsafeProtocol[lowerProto]) {

		    // First, make 100% sure that any "autoEscape" chars get
		    // escaped, even if encodeURIComponent doesn't think they
		    // need to be.
		    for (var i = 0, l = autoEscape.length; i < l; i++) {
		      var ae = autoEscape[i];
		      if (rest.indexOf(ae) === -1)
		        continue;
		      var esc = encodeURIComponent(ae);
		      if (esc === ae) {
		        esc = escape(ae);
		      }
		      rest = rest.split(ae).join(esc);
		    }
		  }


		  // chop off from the tail first.
		  var hash = rest.indexOf('#');
		  if (hash !== -1) {
		    // got a fragment string.
		    this.hash = rest.substr(hash);
		    rest = rest.slice(0, hash);
		  }
		  var qm = rest.indexOf('?');
		  if (qm !== -1) {
		    this.search = rest.substr(qm);
		    this.query = rest.substr(qm + 1);
		    if (parseQueryString) {
		      this.query = querystring.parse(this.query);
		    }
		    rest = rest.slice(0, qm);
		  } else if (parseQueryString) {
		    // no query string, but parseQueryString still requested
		    this.search = '';
		    this.query = {};
		  }
		  if (rest) this.pathname = rest;
		  if (slashedProtocol[lowerProto] &&
		      this.hostname && !this.pathname) {
		    this.pathname = '/';
		  }

		  //to support http.request
		  if (this.pathname || this.search) {
		    var p = this.pathname || '';
		    var s = this.search || '';
		    this.path = p + s;
		  }

		  // finally, reconstruct the href based on what has been validated.
		  this.href = this.format();
		  return this;
		};

		// format a parsed object into a url string
		function urlFormat(obj) {
		  // ensure it's an object, and not a string url.
		  // If it's an obj, this is a no-op.
		  // this way, you can call url_format() on strings
		  // to clean up potentially wonky urls.
		  if (util.isString(obj)) obj = urlParse(obj);
		  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
		  return obj.format();
		}

		Url.prototype.format = function() {
		  var auth = this.auth || '';
		  if (auth) {
		    auth = encodeURIComponent(auth);
		    auth = auth.replace(/%3A/i, ':');
		    auth += '@';
		  }

		  var protocol = this.protocol || '',
		      pathname = this.pathname || '',
		      hash = this.hash || '',
		      host = false,
		      query = '';

		  if (this.host) {
		    host = auth + this.host;
		  } else if (this.hostname) {
		    host = auth + (this.hostname.indexOf(':') === -1 ?
		        this.hostname :
		        '[' + this.hostname + ']');
		    if (this.port) {
		      host += ':' + this.port;
		    }
		  }

		  if (this.query &&
		      util.isObject(this.query) &&
		      Object.keys(this.query).length) {
		    query = querystring.stringify(this.query);
		  }

		  var search = this.search || (query && ('?' + query)) || '';

		  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

		  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
		  // unless they had them to begin with.
		  if (this.slashes ||
		      (!protocol || slashedProtocol[protocol]) && host !== false) {
		    host = '//' + (host || '');
		    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
		  } else if (!host) {
		    host = '';
		  }

		  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
		  if (search && search.charAt(0) !== '?') search = '?' + search;

		  pathname = pathname.replace(/[?#]/g, function(match) {
		    return encodeURIComponent(match);
		  });
		  search = search.replace('#', '%23');

		  return protocol + host + pathname + search + hash;
		};

		function urlResolve(source, relative) {
		  return urlParse(source, false, true).resolve(relative);
		}

		Url.prototype.resolve = function(relative) {
		  return this.resolveObject(urlParse(relative, false, true)).format();
		};

		function urlResolveObject(source, relative) {
		  if (!source) return relative;
		  return urlParse(source, false, true).resolveObject(relative);
		}

		Url.prototype.resolveObject = function(relative) {
		  if (util.isString(relative)) {
		    var rel = new Url();
		    rel.parse(relative, false, true);
		    relative = rel;
		  }

		  var result = new Url();
		  var tkeys = Object.keys(this);
		  for (var tk = 0; tk < tkeys.length; tk++) {
		    var tkey = tkeys[tk];
		    result[tkey] = this[tkey];
		  }

		  // hash is always overridden, no matter what.
		  // even href="" will remove it.
		  result.hash = relative.hash;

		  // if the relative url is empty, then there's nothing left to do here.
		  if (relative.href === '') {
		    result.href = result.format();
		    return result;
		  }

		  // hrefs like //foo/bar always cut to the protocol.
		  if (relative.slashes && !relative.protocol) {
		    // take everything except the protocol from relative
		    var rkeys = Object.keys(relative);
		    for (var rk = 0; rk < rkeys.length; rk++) {
		      var rkey = rkeys[rk];
		      if (rkey !== 'protocol')
		        result[rkey] = relative[rkey];
		    }

		    //urlParse appends trailing / to urls like http://www.example.com
		    if (slashedProtocol[result.protocol] &&
		        result.hostname && !result.pathname) {
		      result.path = result.pathname = '/';
		    }

		    result.href = result.format();
		    return result;
		  }

		  if (relative.protocol && relative.protocol !== result.protocol) {
		    // if it's a known url protocol, then changing
		    // the protocol does weird things
		    // first, if it's not file:, then we MUST have a host,
		    // and if there was a path
		    // to begin with, then we MUST have a path.
		    // if it is file:, then the host is dropped,
		    // because that's known to be hostless.
		    // anything else is assumed to be absolute.
		    if (!slashedProtocol[relative.protocol]) {
		      var keys = Object.keys(relative);
		      for (var v = 0; v < keys.length; v++) {
		        var k = keys[v];
		        result[k] = relative[k];
		      }
		      result.href = result.format();
		      return result;
		    }

		    result.protocol = relative.protocol;
		    if (!relative.host && !hostlessProtocol[relative.protocol]) {
		      var relPath = (relative.pathname || '').split('/');
		      while (relPath.length && !(relative.host = relPath.shift()));
		      if (!relative.host) relative.host = '';
		      if (!relative.hostname) relative.hostname = '';
		      if (relPath[0] !== '') relPath.unshift('');
		      if (relPath.length < 2) relPath.unshift('');
		      result.pathname = relPath.join('/');
		    } else {
		      result.pathname = relative.pathname;
		    }
		    result.search = relative.search;
		    result.query = relative.query;
		    result.host = relative.host || '';
		    result.auth = relative.auth;
		    result.hostname = relative.hostname || relative.host;
		    result.port = relative.port;
		    // to support http.request
		    if (result.pathname || result.search) {
		      var p = result.pathname || '';
		      var s = result.search || '';
		      result.path = p + s;
		    }
		    result.slashes = result.slashes || relative.slashes;
		    result.href = result.format();
		    return result;
		  }

		  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
		      isRelAbs = (
		          relative.host ||
		          relative.pathname && relative.pathname.charAt(0) === '/'
		      ),
		      mustEndAbs = (isRelAbs || isSourceAbs ||
		                    (result.host && relative.pathname)),
		      removeAllDots = mustEndAbs,
		      srcPath = result.pathname && result.pathname.split('/') || [],
		      relPath = relative.pathname && relative.pathname.split('/') || [],
		      psychotic = result.protocol && !slashedProtocol[result.protocol];

		  // if the url is a non-slashed url, then relative
		  // links like ../.. should be able
		  // to crawl up to the hostname, as well.  This is strange.
		  // result.protocol has already been set by now.
		  // Later on, put the first path part into the host field.
		  if (psychotic) {
		    result.hostname = '';
		    result.port = null;
		    if (result.host) {
		      if (srcPath[0] === '') srcPath[0] = result.host;
		      else srcPath.unshift(result.host);
		    }
		    result.host = '';
		    if (relative.protocol) {
		      relative.hostname = null;
		      relative.port = null;
		      if (relative.host) {
		        if (relPath[0] === '') relPath[0] = relative.host;
		        else relPath.unshift(relative.host);
		      }
		      relative.host = null;
		    }
		    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
		  }

		  if (isRelAbs) {
		    // it's absolute.
		    result.host = (relative.host || relative.host === '') ?
		                  relative.host : result.host;
		    result.hostname = (relative.hostname || relative.hostname === '') ?
		                      relative.hostname : result.hostname;
		    result.search = relative.search;
		    result.query = relative.query;
		    srcPath = relPath;
		    // fall through to the dot-handling below.
		  } else if (relPath.length) {
		    // it's relative
		    // throw away the existing file, and take the new path instead.
		    if (!srcPath) srcPath = [];
		    srcPath.pop();
		    srcPath = srcPath.concat(relPath);
		    result.search = relative.search;
		    result.query = relative.query;
		  } else if (!util.isNullOrUndefined(relative.search)) {
		    // just pull out the search.
		    // like href='?foo'.
		    // Put this after the other two cases because it simplifies the booleans
		    if (psychotic) {
		      result.hostname = result.host = srcPath.shift();
		      //occationaly the auth can get stuck only in host
		      //this especially happens in cases like
		      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
		      var authInHost = result.host && result.host.indexOf('@') > 0 ?
		                       result.host.split('@') : false;
		      if (authInHost) {
		        result.auth = authInHost.shift();
		        result.host = result.hostname = authInHost.shift();
		      }
		    }
		    result.search = relative.search;
		    result.query = relative.query;
		    //to support http.request
		    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
		      result.path = (result.pathname ? result.pathname : '') +
		                    (result.search ? result.search : '');
		    }
		    result.href = result.format();
		    return result;
		  }

		  if (!srcPath.length) {
		    // no path at all.  easy.
		    // we've already handled the other stuff above.
		    result.pathname = null;
		    //to support http.request
		    if (result.search) {
		      result.path = '/' + result.search;
		    } else {
		      result.path = null;
		    }
		    result.href = result.format();
		    return result;
		  }

		  // if a url ENDs in . or .., then it must get a trailing slash.
		  // however, if it ends in anything else non-slashy,
		  // then it must NOT get a trailing slash.
		  var last = srcPath.slice(-1)[0];
		  var hasTrailingSlash = (
		      (result.host || relative.host || srcPath.length > 1) &&
		      (last === '.' || last === '..') || last === '');

		  // strip single dots, resolve double dots to parent dir
		  // if the path tries to go above the root, `up` ends up > 0
		  var up = 0;
		  for (var i = srcPath.length; i >= 0; i--) {
		    last = srcPath[i];
		    if (last === '.') {
		      srcPath.splice(i, 1);
		    } else if (last === '..') {
		      srcPath.splice(i, 1);
		      up++;
		    } else if (up) {
		      srcPath.splice(i, 1);
		      up--;
		    }
		  }

		  // if the path is allowed to go above the root, restore leading ..s
		  if (!mustEndAbs && !removeAllDots) {
		    for (; up--; up) {
		      srcPath.unshift('..');
		    }
		  }

		  if (mustEndAbs && srcPath[0] !== '' &&
		      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
		    srcPath.unshift('');
		  }

		  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
		    srcPath.push('');
		  }

		  var isAbsolute = srcPath[0] === '' ||
		      (srcPath[0] && srcPath[0].charAt(0) === '/');

		  // put the host back
		  if (psychotic) {
		    result.hostname = result.host = isAbsolute ? '' :
		                                    srcPath.length ? srcPath.shift() : '';
		    //occationaly the auth can get stuck only in host
		    //this especially happens in cases like
		    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
		    var authInHost = result.host && result.host.indexOf('@') > 0 ?
		                     result.host.split('@') : false;
		    if (authInHost) {
		      result.auth = authInHost.shift();
		      result.host = result.hostname = authInHost.shift();
		    }
		  }

		  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

		  if (mustEndAbs && !isAbsolute) {
		    srcPath.unshift('');
		  }

		  if (!srcPath.length) {
		    result.pathname = null;
		    result.path = null;
		  } else {
		    result.pathname = srcPath.join('/');
		  }

		  //to support request.http
		  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
		    result.path = (result.pathname ? result.pathname : '') +
		                  (result.search ? result.search : '');
		  }
		  result.auth = relative.auth || result.auth;
		  result.slashes = result.slashes || relative.slashes;
		  result.href = result.format();
		  return result;
		};

		Url.prototype.parseHost = function() {
		  var host = this.host;
		  var port = portPattern.exec(host);
		  if (port) {
		    port = port[0];
		    if (port !== ':') {
		      this.port = port.substr(1);
		    }
		    host = host.substr(0, host.length - port.length);
		  }
		  if (host) this.hostname = host;
		};

		},{"./util":1052,"querystring":965}],1052:[function(require,module,exports){
		'use strict';

		module.exports = {
		  isString: function(arg) {
		    return typeof(arg) === 'string';
		  },
		  isObject: function(arg) {
		    return typeof(arg) === 'object' && arg !== null;
		  },
		  isNull: function(arg) {
		    return arg === null;
		  },
		  isNullOrUndefined: function(arg) {
		    return arg == null;
		  }
		};

		},{}],1053:[function(require,module,exports){
		(function (global){

		/**
		 * Module exports.
		 */

		module.exports = deprecate;

		/**
		 * Mark that a method should not be used.
		 * Returns a modified function which warns once by default.
		 *
		 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
		 *
		 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
		 * will throw an Error when invoked.
		 *
		 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
		 * will invoke `console.trace()` instead of `console.error()`.
		 *
		 * @param {Function} fn - the function to deprecate
		 * @param {String} msg - the string to print to the console when `fn` is invoked
		 * @returns {Function} a new "deprecated" version of `fn`
		 * @api public
		 */

		function deprecate (fn, msg) {
		  if (config('noDeprecation')) {
		    return fn;
		  }

		  var warned = false;
		  function deprecated() {
		    if (!warned) {
		      if (config('throwDeprecation')) {
		        throw new Error(msg);
		      } else if (config('traceDeprecation')) {
		        console.trace(msg);
		      } else {
		        console.warn(msg);
		      }
		      warned = true;
		    }
		    return fn.apply(this, arguments);
		  }

		  return deprecated;
		}

		/**
		 * Checks `localStorage` for boolean values for the given `name`.
		 *
		 * @param {String} name
		 * @returns {Boolean}
		 * @api private
		 */

		function config (name) {
		  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
		  try {
		    if (!global.localStorage) return false;
		  } catch (_) {
		    return false;
		  }
		  var val = global.localStorage[name];
		  if (null == val) return false;
		  return String(val).toLowerCase() === 'true';
		}

		}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
		},{}],1054:[function(require,module,exports){
		(function (process){
		/**
		 * Copyright 2014-2015, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 */

		'use strict';

		/**
		 * Similar to invariant but only logs a warning if the condition is not met.
		 * This can be used to log issues in development environments in critical
		 * paths. Removing the logging code for production environments will keep the
		 * same logic and follow the same code paths.
		 */

		var warning = function() {};

		if (process.env.NODE_ENV !== 'production') {
		  warning = function(condition, format, args) {
		    var len = arguments.length;
		    args = new Array(len > 2 ? len - 2 : 0);
		    for (var key = 2; key < len; key++) {
		      args[key - 2] = arguments[key];
		    }
		    if (format === undefined) {
		      throw new Error(
		        '`warning(condition, format, ...args)` requires a warning ' +
		        'message argument'
		      );
		    }

		    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
		      throw new Error(
		        'The warning format should be able to uniquely identify this ' +
		        'warning. Please, use a more descriptive format than: ' + format
		      );
		    }

		    if (!condition) {
		      var argIndex = 0;
		      var message = 'Warning: ' +
		        format.replace(/%s/g, function() {
		          return args[argIndex++];
		        });
		      if (typeof console !== 'undefined') {
		        console.error(message);
		      }
		      try {
		        // This error was thrown as a convenience so that you can use this stack
		        // to find the callsite that caused this warning to fire.
		        throw new Error(message);
		      } catch(x) {}
		    }
		  };
		}

		module.exports = warning;

		}).call(this,require('_process'))
		},{"_process":957}],1055:[function(require,module,exports){
		'use strict';

		Object.defineProperty(exports, "__esModule", {
		  value: true
		});

		var _core = require('@jsonforms/core');

		exports.default = (0, _core.rankWith)(Number.MAX_VALUE, (0, _core.scopeEndsWith)('rating'));
		},{"@jsonforms/core":52}]},{},[46]);

}