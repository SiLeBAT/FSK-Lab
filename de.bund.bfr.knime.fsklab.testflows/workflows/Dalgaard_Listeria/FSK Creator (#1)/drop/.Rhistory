#                                                           #
#     QRAM : Estimation of Salmonella cases in humans       #
#                 (parameters) - Moez Sanaa                 #
#                                                           #
#############################################################
#############################
# Time (hours):
#############################
# Farm before collect:
minD1=2
modeD1=6
maxD1=13
# Calibrage:
minD4=1
modeD4=2
maxD4=4
# Transport:
minD5=7
modeD5=48
maxD5=72
# Storage (wholesaler):
minD6=1
modeD6=5
maxD6=24
# Sell:
minD8=1
modeD8=24
maxD8=72
# Home:
minD10=1
modeD10=24
maxD10=336
#############################
# Temperature (°C):
#############################
# Farm before collect:
minT1=29
modeT1=30
maxT1=35
# Calibrage
minT4=25
modeT4=27
maxT4=30
# Transport
minT5=28
modeT5=30
maxT5=33
# Storage:
minT6=25
modeT6=27
maxT6=30
# Sell:
minT8=20
modeT8=25
maxT8=30
# Home:
minT10=6
modeT10=15
maxT10=30
# Final parameters:
minD=c(minD1,minD4,minD5,minD6,minD8,minD10)
maxD=c(maxD1,maxD4,maxD5,maxD6,maxD8,maxD10)
modeD=c(modeD1,modeD4,modeD5,modeD6,modeD8,modeD10)
minT=c(minT1,minT4,minT5,minT6,minT8,minT10)
maxT=c(maxT1,maxT4,maxT5,maxT6,maxT8,maxT10)
modeT=c(modeT1,modeT4,modeT5,modeT6,modeT8,modeT10)
#############################
# simulation parameters:
#############################
# Iteration number
sim=2000 # min=1000,max=10000,step=1000
# Prevalence of egg contamination
prevalence=0.1 # min=0,max=1
# Frequency of thoroughly cooking of eggs
freqcuisson=0.9 # min=0,max=1
#############################################################
#                                                           #
#     QRAM : Estimation of Salmonella cases in humans       #
#                 (parameters) - Moez Sanaa                 #
#                                                           #
#############################################################
#############################
# Time (hours):
#############################
# Farm before collect:
minD1=2
modeD1=6
maxD1=13
# Calibrage:
minD4=1
modeD4=2
maxD4=4
# Transport:
minD5=7
modeD5=48
maxD5=72
# Storage (wholesaler):
minD6=1
modeD6=5
maxD6=24
# Sell:
minD8=1
modeD8=24
maxD8=72
# Home:
minD10=1
modeD10=24
maxD10=336
#############################
# Temperature (°C):
#############################
# Farm before collect:
minT1=29
modeT1=30
maxT1=35
# Calibrage
minT4=25
modeT4=27
maxT4=30
# Transport
minT5=28
modeT5=30
maxT5=33
# Storage:
minT6=25
modeT6=27
maxT6=30
# Sell:
minT8=20
modeT8=25
maxT8=30
# Home:
minT10=6
modeT10=15
maxT10=30
# Final parameters:
minD=c(minD1,minD4,minD5,minD6,minD8,minD10)
maxD=c(maxD1,maxD4,maxD5,maxD6,maxD8,maxD10)
modeD=c(modeD1,modeD4,modeD5,modeD6,modeD8,modeD10)
minT=c(minT1,minT4,minT5,minT6,minT8,minT10)
maxT=c(maxT1,maxT4,maxT5,maxT6,maxT8,maxT10)
modeT=c(modeT1,modeT4,modeT5,modeT6,modeT8,modeT10)
#############################
# simulation parameters:
#############################
# Iteration number
sim=2000 # min=1000,max=10000,step=1000
# Prevalence of egg contamination
prevalence=0.1 # min=0,max=1
# Frequency of thoroughly cooking of eggs
freqcuisson=0.9 # min=0,max=1
library(mvtnorm)
#############################################################
#                                                           #
#     QRAM : Estimation of Salmonella cases in humans       #
#                   (model) - Moez Sanaa                    #
#                                                           #
#############################################################
# The risk to consumers posed by Salmonella Enteritidis, the bacteria responsible for causing the
#highest number of egg-borne outbreaks in EU.
# This program allows us to estimate :
#   - S. Enteritidis cases (per millions of eggs consumption occasion) according to cooking (thoroughly or not)
#   - probability of S. Enteritidis prensence inside eggs according to
library(mvtnorm)
library(mc2d)
install.packages("plotly")
library(plotly)
parm=cbind(minD,modeD,maxD,minT,modeT,maxT)
res=matrix(rep(0,3*sim),ncol=3)
for (j in 1:sim) {
T=41.2 # temperature
for (i in 1:nrow(parm)) {
Ti=T[length(T)]
Ts=rpert(1,min=minT[i],mode=modeT[i],max=maxT[i])
times=floor(rpert(1,min=minD[i],mode=modeD[i],max=maxD[i]))
krs<-ifelse(i==1,rpert(1,min=0.8,mode=0.9,max=1),
ifelse(i==2,rpert(1,min=25,mode=27,max=30),
rpert(1,min=0.066,mode=0.1,max=0.134)))
# permet de tenir compte de la baisse de la temperature interne de l'oeuf
T=c(T,Ts+(Ti-Ts)*exp(-krs*(1:times)))
} #fin de for de i
a=2.0872
b=-0.042579
Tmin=6.29
Topt=40.11
Tmax=43.46
kopt=1.6
ft=cumsum(1/((10^(a+b*T))*24)) # somme des inverses de TRVM / heure
gammaT = ((T - Tmax) * (T - Tmin) ^ 2) /
((Topt - Tmin) * ((Topt - Tmin) * (T - Topt) - (Topt - Tmax) * (Topt + Tmin - 2 * T)))
NCD=sum((ft>=1)*gammaT*kopt) # nombre croissant décimal pour chaque oeuf
TRMV=which(ft>=1)[1] # donne TRVM=1 si rupture (ft>=1)
matres=cbind(min(NCD,9),TRMV,round(length(T)/24,1))
res[j,]<-matres
} #fin de for de j
c0=1+rpois(sim,7)
dosecru=c0*(10^res[,1])
doselcuit=c0*(10^res[,1])*(10^(-rnorm(sim,2,0.5)))
dosebcuit=c0*(10^res[,1])*(10^(-rnorm(sim,12,1)))
beta=53.33348955
alpha=0.134586035
probacru=1-(1+dosecru/beta)^(-alpha)
probalcuit=1-(1+doselcuit/beta)^(-alpha)
probabcuit=1-(1+dosebcuit/beta)^(-alpha)
data=data.frame(res,c0,dosecru,probacru,probalcuit,probabcuit)
names(data)<-c("NCD","TRMV","AGE","CI","CC","Pcru","Plcuit","Pbcuit")
out=data
#head(out)
#tail(out)
install.packages("plotly")
#############################################################
#                                                           #
#     QRAM : Estimation of Salmonella cases in humans       #
#                     (outputs) - Moez Sanaa                #
#                                                           #
#############################################################
# Barplot risk salmo
Rlcuit=(1-freqcuisson)*prevalence*round(1E6*(mean(out[,7])),2)
Rbcuit=freqcuisson*prevalence*round(1E6*(mean(out[,8])),2)
x_hbar <- list(title = "Cooking")
y_hbar <- list(title = "Salmonella case per million of eggs")
plot_ly(
x = c("Slightly cooked", "Thoroughly cooked"),
y = c(Rlcuit,Rbcuit),
name = "Salmonella risk",
type = "bar") %>% layout(xaxis=x_hbar,yaxis=y_hbar)
#barplot(c(Rlcuit,Rbcuit),names.arg=c("Légèrement cuit","Bien cuit"),xlab="Cuisson",
#        ylab="Cas de Salmonellose par million d'oeufs",ylim=c(0,250),axes = T,col="royalblue",tck=1,
#       col.line="grey")
# color plot
Rlcuit_1=prevalence*out[,7]
Rbcuit_1=prevalence*out[,8]
Risque=freqcuisson*Rbcuit_1+(1-freqcuisson)*Rlcuit_1
Age_oeuf=out[,3]
x_plot <- list(title = "Egg age (day)")
y_plot <- list(title = "Salmonalla risk per egg")
plot_ly(x = Age_oeuf, y = Risque, mode = "markers", color = Age_oeuf, type="scatter", size = Age_oeuf)%>%layout(xaxis=x_plot,yaxis=y_plot)
dev.off()
options(device='png')
png('C:/Users/de/Desktop/virginie/plot.png')
plot_ly(
x = c("Slightly cooked", "Thoroughly cooked"),
y = c(Rlcuit,Rbcuit),
name = "Salmonella risk",
type = "bar") %>% layout(xaxis=x_hbar,yaxis=y_hbar)
dev.off()
export(file = "C:/Users/de/Desktop/virginie/plot.png")
install.packages('webshot')
export(file = "C:/Users/de/Desktop/virginie/plot.png")
webshot::install_phantomjs(
)
export(file = "C:/Users/de/Desktop/virginie/plot.png")
options(device='png')
png('C:/Users/de/Desktop/virginie/plot.png')
plot_ly(x = Age_oeuf, y = Risque, mode = "markers", color = Age_oeuf, type="scatter", size = Age_oeuf)%>%layout(xaxis=x_plot,yaxis=y_plot)
dev.off()
export(file = "C:/Users/de/Desktop/virginie/plot.png")
install.packages(c("boot", "curl", "data.table", "dplyr", "Matrix", "mgcv", "Rcpp", "tidyr", "tidyselect", "webshot"))
load("C:\Users\de\Desktop/workspace.r")
load("C:/Users/de/Desktop/workspace.r")
source('D:/FSK-LabWS/new_nodes/init_flocks_params.R')
source('D:/FSK-LabWS/new_nodes/initialize_parents_flocks.R')
View(initialize_parents_flocks)
View(initialize_parents_flocks)
View(initialize_parents_flocks)
View(initialize_parents_flocks)
View(initialize_parents_flocks)
View(initialize_parents_flocks)
result
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
install.packages("rtweet", lib = "C:/Users/de/AppData/Local/Temp/knime_Workflow Manage85569/knime_tc_6abier21yb9z")
source('~/.active-rstudio-document')
faulty <- 'C:\Users\de\AppData\Local\Temp\knime_Workflow Manage85569\knime_tc_6abier21yb9z'
faulty <- "C:\Users\de\AppData\Local\Temp\knime_Workflow Manage85569\knime_tc_6abier21yb9z"
source('C:/Users/de/Desktop/michal_code.r')
remove.packages('deSolve')
remove.packages(deSolve)
.libPaths()
remove.packages(deSolve, 'D:/Apps/R/R-3.4.1/library/')
remove.packages('deSolve', 'D:/Apps/R/R-3.4.1/library/')
.libPaths()
.libPaths(c(.libPaths(), "C:/Users/de/Desktop/"))
.libPaths()
help(.libPaths)
.libPaths("C:/Users/de/Desktop")
.libPaths()
.libPaths("C:/Users/de/")
.libPaths()
.libPaths("C:/Users/de/")
.libPaths()
.libPaths("C:/Users/de/Desktop/1")
.libPaths()
.libPaths("C:/Users/de/Desktop/2")
.libPaths()
.Library.site
.libPaths()
.libPaths(.Library)
.libPaths()
.Library
.libPaths()
library(deSolve)
library(miniCRAN)
checkVersions(c('deSolve'), 'C:/Users/de/AppData/Local/Temp/knime_NOiso64301/repo64304', type = 'win.binary', Rversion = '3.0')
checkVersions(c('deSolve'), 'C:/Users/de/AppData/Local/Temp/knime_NOiso64301/repo64304', type = 'win.binary', Rversion = '3.0')
name <- 'Miguel'
save.image("C:/Users/de/Desktop/workspace.rdata.RData")
library(deSolve)
install.packages('deSolve')
library(deSolve)
.libPaths()
.Library.site
.libPaths9)
.libPaths()
site <- .Library.site
site
print(site)
print(.Library.site)
paste(.Library.site)
.Library
.libPaths()[1:]
.libPaths()[1:1]
.libPaths()[1,]
.libPaths()[2]
.libPaths()[-1]
.libPaths()
.libPaths('c:/Users/de/Desktop/')
.libPaths()
.libPaths('c:/Users/de/Desktop/Neuer Ordner/')
.libPaths()
.libPaths('c:/Users/de/Desktop/Neuer Ordner/', .libPaths())
help(.libPaths())
help(.libPaths)
.libPaths(new = 'C:/Users/de/Desktop/Neuer Ordner/')
.libPaths()
.libPaths(c('C:/Users/de/Desktop/Neuer Ordner/', .libPaths()))
.libPaths()
.libPaths()
.libPaths()
.libPaths(c('C:/Users/de/Desktop/Neuer Ordner/', .libPaths()))
.libPaths()
.libPaths()
.libPaths(c("c:/Users/de/Desktop/Neuer Ordner/", .libPaths()))
.libPaths()
.libPaths()
.libPaths("c:/Users/de/")
.libPaths()
p <- .libPaths()
p
p <- c('c:/Users/de/Netzwerkumgebung/', .libPaths())
p
.libPaths(p)
.libPaths()
.libPaths()
p <- c('c:/Users/de/Desktop/Neuer Ordner/', .libPaths())/
p <- c('c:/Users/de/Desktop/Neuer Ordner/', .libPaths())
p
.libPaths(p)
.libPaths()
p <- c("C:/Users/de/Desktop/Neuer Ordner", .libPaths())
p
.libPaths(p)
.libPaths()
p <- c('C:/Users/de/Desktop/Neuer Ordner', .libPaths())
p
.libPaths(p)
.libPaths()
.libPaths(.libPaths()[-1])
.libPaths()
.libPaths(p)
.libPaths()
remove.packages(mvtnorm)
remove.packages(mc2d)
.libPaths()
library(mvtnorm)
remove.packages(mvtnorm, lib = .libPaths())
p <- .libPaths()
p
remove.packages(mvtnorm, lib = p[1])
remove.packages(mvtnorm, lib = p[2])
library(utils)
remove.packages(mvtnorm, lib = p[2])
remove.packages(mvtnorm,)
remove.packages(mvtnorm)
source('~/.active-rstudio-document')
install.packages('mc2d')
source('~/.active-rstudio-document')
NumbUncert <- 1001
NumbVar <- 101
VirusInSerumMEAN <- 6.4
VirusInSerumSD <- 1.3
SerumInBlood <- 0.59
BloodInMeatMIN <- 2
BloodInMeatMAX <- 9
MassofMeat <- 0.5
tempRangeMIN <- 4
tempRangeMAX <- 30
timeMIN <- 18
timeMAX <- 90
halfLifeZeroCelsius <- 243.54
decayRateHalfLife <- 0.109
#ProbEntry <- as.data.frame(matrix(c(rbeta(NumbVar*NumbUncert,12,130)),nrow=NumbVar,ncol=NumbUncert))
# replicates the exposure assessment of Brookes 2014 Paper
# Replicates risk assessment of Brookes 2014:
# Import risk assessment incorporating a dose-response model: introduction of
# highly pathogenic porcine reproductive and respiratory syndrome into Australia via
# illegally imported raw pork. Published in Preventive Veterinary Medicine 113 (2014), p. 565-579)
# author: Guido Correia Carreira, Federal Institute for Risk Assessment, Germany, 2015
# model independent variable(s) - start
# NumbUncert, NumbVar
# VirusInSerumMEAN, VirusInSerumSD,
# SerumInBlood,
# BloodInMeatMIN, BloodInMeatMAX,
# MassofMeat,
# tempRangeMIN, tempRangeMAX,
# timeMIN, timeMAX,
# halfLifeZeroCelsius, decayRateHalfLife,
# model independent variable(s) - end
# model dependent variable(s) - start
# VirusAfterDecay
# model independent variable(s) - end
library(mc2d)
expoassess <- function(NumbUncert, NumbVar, VirusInSerumMEAN, VirusInSerumSD, SerumInBlood, BloodInMeatMIN, BloodInMeatMAX, MassofMeat, tempRangeMIN, tempRangeMAX, timeMIN, timeMAX, halfLifeZeroCelsius, decayRateHalfLife){
ndunc(NumbUncert)
ndvar(NumbVar)
########  Viral decay model gives amount of virus in meat when eaten by pigs
#################################
# FIRST STEP (initial conditions): calculate amount of virus in meat immediately post-slaughter (=VirusSlaughter)
# Basic Idea:  VirusSlaughter = concentration_of_virus_in_serum MULTIPLIED BY amount_of_serum_in_meat MULTIPLIED BY weight_of_meat
# we will call concentration_of_virus_in_serum =: VirusInSerum  given in log_10 TCID_50/ml
# we will call amount_of_serum_in_meat =: SerumInMeat  given in ml
# weight_of_meat =: MassMeat  given in kg
VirusInSerum <- mcstoc(rnorm, type = "V", mean = VirusInSerumMEAN , sd = VirusInSerumSD)
# since 6.4 alias 4.9 and 1.3 are log_10 values, i.e. exponents, we have to calculate 10^(x)
# to get values of the number of virus to calculate VirusSlaugther later on
VirusInSerum <- 10^VirusInSerum
SerumInMeat  <-  SerumInBlood * mcstoc(runif, type="VU", min=BloodInMeatMIN, max=BloodInMeatMAX)
MassMeat <-  MassofMeat
VirusSlaughter <-  VirusInSerum * SerumInMeat * MassMeat
tempRange <-  mcstoc(runif,type = "V", min = tempRangeMIN, max = tempRangeMAX)
time <-  mcstoc(runif, type="V",min=timeMIN,max=timeMAX)
halfLife <-  halfLifeZeroCelsius * exp(-decayRateHalfLife * tempRange)
VirusAfterDecay <-  VirusSlaughter * exp(-time/halfLife)
ListExpoAssess <- list("VirusAfterDecay" = VirusAfterDecay)
return(ListExpoAssess)
}
ListExpoAsses <- expoassess(NumbUncert, NumbVar,VirusInSerumMEAN, VirusInSerumSD, SerumInBlood, BloodInMeatMIN, BloodInMeatMAX, MassofMeat, tempRangeMIN, tempRangeMAX, timeMIN, timeMAX, halfLifeZeroCelsius, decayRateHalfLife)
VirusAfterDecay <- mc(ListExpoAsses$VirusAfterDecay)
#hist(VirusAfterDecay)
#hist(VirusAfterDecay,breaks=55,include.lowest=T)
library(mc2d)
hist(VirusAfterDecay)
load("C:\Users\de\AppData\Local\Temp\knime_create and run73158\workspace8131699130263531375.R")
load("C:/Users/de/AppData/Local/Temp/knime_create and run73158/workspace8131699130263531375.R")
hist(VirusAfterDecay)
library(mc2d)
install.packages('mc2d')
install.packages("mc2d")
library(mc2d)
hist(VirusAfterDecay)
setwd("D:/FSK-LabWS/RAKIP_20171129/FSK modules/Vertical_transmi_flocks/drop")
source('D:/FSK-LabWS/RAKIP_20171129/FSK modules/Vertical_transmi_flocks/drop/vertical_transmi_flocks_params.R')
source('D:/FSK-LabWS/RAKIP_20171129/FSK modules/Vertical_transmi_flocks/drop/vertical_transmi_flocks.R')
source('D:/FSK-LabWS/RAKIP_20171129/FSK modules/Vertical_transmi_flocks/drop/vertical_transmi_flocks_visual.R')
install.packages('triangle')
source('D:/FSK-LabWS/RAKIP_20171129/FSK modules/Vertical_transmi_flocks/drop/vertical_transmi_flocks.R')
source('D:/FSK-LabWS/RAKIP_20171129/FSK modules/Vertical_transmi_flocks/drop/vertical_transmi_flocks_visual.R')
seq(from = 2,to = 25, by= 0.5)
setwd("D:/FSK-LabWS/RAKIP_20171129/Duarte_2015")
setwd("D:/FSK-LabWS/RAKIP_20171129/Duarte_2015/drop")
source("Lmonocytogenes_Dalgaard_cardinal parameter parameter script.R")
source("Lmonocytogenes_Dalgaard_cardinal parameter model script.R")
source("Lmonocytogenes_Dalgaard_cardinal parameter model_visualization script.R")
source("Lmonocytogenes_Dalgaard_cardinal parameter parameter script.R")
source("Lmonocytogenes_Dalgaard_cardinal parameter model_visualization script.R")
source('D:/FSK-LabWS/RAKIP_20171129/Duarte_2015/drop/Duarte_ParamScript.R')
source("Lmonocytogenes_Dalgaard_cardinal parameter model script.R")
source('D:/FSK-LabWS/RAKIP_20171129/Duarte_2015/drop/Duarte.R')
source('D:/FSK-LabWS/RAKIP_20171129/Duarte_2015/drop/Duarte_VisualizationScript.R')
source('D:/FSK-LabWS/RAKIP_20171129/Duarte_2015/drop/Duarte_ParamScript.R')
source('D:/FSK-LabWS/RAKIP_20171129/Duarte_2015/drop/Duarte.R')
source('D:/FSK-LabWS/RAKIP_20171129/Duarte_2015/drop/Duarte.R')
source('D:/FSK-LabWS/RAKIP_20171129/Duarte_2015/drop/Duarte.R')
setwd("D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop")
seq(from = 2,to = 25, by= 0.5)
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter parameter script.R')
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter model_visualization script.R', encoding = 'UTF-8')
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter model script.R', encoding = 'UTF-8')
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter model_visualization script.R', encoding = 'UTF-8')
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter parameter script.R')
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter model script.R')
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter model_visualization script.R', encoding = 'UTF-8')
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter model script.R')
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter model script.R')
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter parameter script.R')
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter model script.R')
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter model_visualization script.R', encoding = 'UTF-8')
Temp
Temp <- 1
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter model script.R')
source('D:/FSK-LabWS/RAKIP_20171129/Dalgaard_Listeria/drop/Lmonocytogenes_Dalgaard_cardinal parameter model_visualization script.R', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('C:/Users/de/Desktop/non_working_example.r', encoding = 'UTF-8')
source('C:/Users/de/Desktop/non_working_example.r', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/de/Desktop/non_working_example.r', encoding = 'UTF-8')
source('C:/Users/de/Desktop/non_working_example.r')
source('C:/Users/de/Desktop/non_working_example.r', encoding = 'UTF-8')
source('C:/Users/de/Desktop/non_working_example.r', encoding = 'UTF-8')
source('C:/Users/de/Desktop/non_working_example.r', encoding = 'UTF-8')
source('C:/Users/de/Desktop/non_working_example.r', encoding = 'UTF-8')
source('C:/Users/de/Desktop/non_working_example.r', encoding = 'UTF-8')
