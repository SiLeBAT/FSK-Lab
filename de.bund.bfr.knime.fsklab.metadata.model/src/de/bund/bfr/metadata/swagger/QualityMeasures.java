/*
 * RAKIP Generic model
 * TODO
 *
 * OpenAPI spec version: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.bund.bfr.metadata.swagger;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * QualityMeasures
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-26T06:49:42.862Z")
public class QualityMeasures {
  @SerializedName("sse")
  private BigDecimal sse = null;

  @SerializedName("mse")
  private BigDecimal mse = null;

  @SerializedName("rmse")
  private BigDecimal rmse = null;

  @SerializedName("rsquared")
  private BigDecimal rsquared = null;

  @SerializedName("aic")
  private BigDecimal aic = null;

  @SerializedName("bic")
  private BigDecimal bic = null;

  @SerializedName("sensitivityAnalysis")
  private String sensitivityAnalysis = null;

  public QualityMeasures sse(BigDecimal sse) {
    this.sse = sse;
    return this;
  }

   /**
   * Statistical values calculated to describe the performance of the model fitting procedure
   * @return sse
  **/
  @ApiModelProperty(value = "Statistical values calculated to describe the performance of the model fitting procedure")
  public BigDecimal getSse() {
    return sse;
  }

  public void setSse(BigDecimal sse) {
    this.sse = sse;
  }

  public QualityMeasures mse(BigDecimal mse) {
    this.mse = mse;
    return this;
  }

   /**
   * Statistical values calculated to describe the performance of the model fitting procedure
   * @return mse
  **/
  @ApiModelProperty(value = "Statistical values calculated to describe the performance of the model fitting procedure")
  public BigDecimal getMse() {
    return mse;
  }

  public void setMse(BigDecimal mse) {
    this.mse = mse;
  }

  public QualityMeasures rmse(BigDecimal rmse) {
    this.rmse = rmse;
    return this;
  }

   /**
   * Statistical values calculated to describe the performance of the model fitting procedure
   * @return rmse
  **/
  @ApiModelProperty(value = "Statistical values calculated to describe the performance of the model fitting procedure")
  public BigDecimal getRmse() {
    return rmse;
  }

  public void setRmse(BigDecimal rmse) {
    this.rmse = rmse;
  }

  public QualityMeasures rsquared(BigDecimal rsquared) {
    this.rsquared = rsquared;
    return this;
  }

   /**
   * Statistical values calculated to describe the performance of the model fitting procedure
   * @return rsquared
  **/
  @ApiModelProperty(value = "Statistical values calculated to describe the performance of the model fitting procedure")
  public BigDecimal getRsquared() {
    return rsquared;
  }

  public void setRsquared(BigDecimal rsquared) {
    this.rsquared = rsquared;
  }

  public QualityMeasures aic(BigDecimal aic) {
    this.aic = aic;
    return this;
  }

   /**
   * Statistical values calculated to describe the performance of the model fitting procedure
   * @return aic
  **/
  @ApiModelProperty(value = "Statistical values calculated to describe the performance of the model fitting procedure")
  public BigDecimal getAic() {
    return aic;
  }

  public void setAic(BigDecimal aic) {
    this.aic = aic;
  }

  public QualityMeasures bic(BigDecimal bic) {
    this.bic = bic;
    return this;
  }

   /**
   * Statistical values calculated to describe the performance of the model fitting procedure
   * @return bic
  **/
  @ApiModelProperty(value = "Statistical values calculated to describe the performance of the model fitting procedure")
  public BigDecimal getBic() {
    return bic;
  }

  public void setBic(BigDecimal bic) {
    this.bic = bic;
  }

  public QualityMeasures sensitivityAnalysis(String sensitivityAnalysis) {
    this.sensitivityAnalysis = sensitivityAnalysis;
    return this;
  }

   /**
   * Description of the results of an sensitivity analysis, i.e. how independence assumptions are met or how variables will affect the output of model
   * @return sensitivityAnalysis
  **/
  @ApiModelProperty(value = "Description of the results of an sensitivity analysis, i.e. how independence assumptions are met or how variables will affect the output of model")
  public String getSensitivityAnalysis() {
    return sensitivityAnalysis;
  }

  public void setSensitivityAnalysis(String sensitivityAnalysis) {
    this.sensitivityAnalysis = sensitivityAnalysis;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QualityMeasures qualityMeasures = (QualityMeasures) o;
    return Objects.equals(this.sse, qualityMeasures.sse) &&
        Objects.equals(this.mse, qualityMeasures.mse) &&
        Objects.equals(this.rmse, qualityMeasures.rmse) &&
        Objects.equals(this.rsquared, qualityMeasures.rsquared) &&
        Objects.equals(this.aic, qualityMeasures.aic) &&
        Objects.equals(this.bic, qualityMeasures.bic) &&
        Objects.equals(this.sensitivityAnalysis, qualityMeasures.sensitivityAnalysis);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sse, mse, rmse, rsquared, aic, bic, sensitivityAnalysis);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QualityMeasures {\n");
    
    sb.append("    sse: ").append(toIndentedString(sse)).append("\n");
    sb.append("    mse: ").append(toIndentedString(mse)).append("\n");
    sb.append("    rmse: ").append(toIndentedString(rmse)).append("\n");
    sb.append("    rsquared: ").append(toIndentedString(rsquared)).append("\n");
    sb.append("    aic: ").append(toIndentedString(aic)).append("\n");
    sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
    sb.append("    sensitivityAnalysis: ").append(toIndentedString(sensitivityAnalysis)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

