/*
 * RAKIP Generic model
 * TODO
 *
 * OpenAPI spec version: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.bund.bfr.metadata.swagger;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * PopulationGroup
 */
@jakarta.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-02T16:22:48.194+02:00")
public class PopulationGroup {
  @SerializedName("name")
  private String name = null;

  @SerializedName("targetPopulation")
  private String targetPopulation = null;

  @SerializedName("populationSpan")
  private List<String> populationSpan = null;

  @SerializedName("populationDescription")
  private List<String> populationDescription = null;

  @SerializedName("populationAge")
  private List<String> populationAge = null;

  @SerializedName("populationGender")
  private String populationGender = null;

  @SerializedName("bmi")
  private List<String> bmi = null;

  @SerializedName("specialDietGroups")
  private List<String> specialDietGroups = null;

  @SerializedName("patternConsumption")
  private List<String> patternConsumption = null;

  @SerializedName("region")
  private List<String> region = null;

  @SerializedName("country")
  private List<String> country = null;

  @SerializedName("populationRiskFactor")
  private List<String> populationRiskFactor = null;

  @SerializedName("season")
  private List<String> season = null;

  public PopulationGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the population for which the model or data applies
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the population for which the model or data applies")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PopulationGroup targetPopulation(String targetPopulation) {
    this.targetPopulation = targetPopulation;
    return this;
  }

   /**
   * Population of individual that we are interested in describing and making statistical inferences about
   * @return targetPopulation
  **/
  @ApiModelProperty(value = "Population of individual that we are interested in describing and making statistical inferences about")
  public String getTargetPopulation() {
    return targetPopulation;
  }

  public void setTargetPopulation(String targetPopulation) {
    this.targetPopulation = targetPopulation;
  }

  public PopulationGroup populationSpan(List<String> populationSpan) {
    this.populationSpan = populationSpan;
    return this;
  }

  public PopulationGroup addPopulationSpanItem(String populationSpanItem) {
    if (this.populationSpan == null) {
      this.populationSpan = new ArrayList<String>();
    }
    this.populationSpan.add(populationSpanItem);
    return this;
  }

   /**
   * Get populationSpan
   * @return populationSpan
  **/
  @ApiModelProperty(value = "")
  public List<String> getPopulationSpan() {
    return populationSpan;
  }

  public void setPopulationSpan(List<String> populationSpan) {
    this.populationSpan = populationSpan;
  }

  public PopulationGroup populationDescription(List<String> populationDescription) {
    this.populationDescription = populationDescription;
    return this;
  }

  public PopulationGroup addPopulationDescriptionItem(String populationDescriptionItem) {
    if (this.populationDescription == null) {
      this.populationDescription = new ArrayList<String>();
    }
    this.populationDescription.add(populationDescriptionItem);
    return this;
  }

   /**
   * Get populationDescription
   * @return populationDescription
  **/
  @ApiModelProperty(value = "")
  public List<String> getPopulationDescription() {
    return populationDescription;
  }

  public void setPopulationDescription(List<String> populationDescription) {
    this.populationDescription = populationDescription;
  }

  public PopulationGroup populationAge(List<String> populationAge) {
    this.populationAge = populationAge;
    return this;
  }

  public PopulationGroup addPopulationAgeItem(String populationAgeItem) {
    if (this.populationAge == null) {
      this.populationAge = new ArrayList<String>();
    }
    this.populationAge.add(populationAgeItem);
    return this;
  }

   /**
   * Get populationAge
   * @return populationAge
  **/
  @ApiModelProperty(value = "")
  public List<String> getPopulationAge() {
    return populationAge;
  }

  public void setPopulationAge(List<String> populationAge) {
    this.populationAge = populationAge;
  }

  public PopulationGroup populationGender(String populationGender) {
    this.populationGender = populationGender;
    return this;
  }

   /**
   * Description of the percentage of gender
   * @return populationGender
  **/
  @ApiModelProperty(value = "Description of the percentage of gender")
  public String getPopulationGender() {
    return populationGender;
  }

  public void setPopulationGender(String populationGender) {
    this.populationGender = populationGender;
  }

  public PopulationGroup bmi(List<String> bmi) {
    this.bmi = bmi;
    return this;
  }

  public PopulationGroup addBmiItem(String bmiItem) {
    if (this.bmi == null) {
      this.bmi = new ArrayList<String>();
    }
    this.bmi.add(bmiItem);
    return this;
  }

   /**
   * Get bmi
   * @return bmi
  **/
  @ApiModelProperty(value = "")
  public List<String> getBmi() {
    return bmi;
  }

  public void setBmi(List<String> bmi) {
    this.bmi = bmi;
  }

  public PopulationGroup specialDietGroups(List<String> specialDietGroups) {
    this.specialDietGroups = specialDietGroups;
    return this;
  }

  public PopulationGroup addSpecialDietGroupsItem(String specialDietGroupsItem) {
    if (this.specialDietGroups == null) {
      this.specialDietGroups = new ArrayList<String>();
    }
    this.specialDietGroups.add(specialDietGroupsItem);
    return this;
  }

   /**
   * Get specialDietGroups
   * @return specialDietGroups
  **/
  @ApiModelProperty(value = "")
  public List<String> getSpecialDietGroups() {
    return specialDietGroups;
  }

  public void setSpecialDietGroups(List<String> specialDietGroups) {
    this.specialDietGroups = specialDietGroups;
  }

  public PopulationGroup patternConsumption(List<String> patternConsumption) {
    this.patternConsumption = patternConsumption;
    return this;
  }

  public PopulationGroup addPatternConsumptionItem(String patternConsumptionItem) {
    if (this.patternConsumption == null) {
      this.patternConsumption = new ArrayList<String>();
    }
    this.patternConsumption.add(patternConsumptionItem);
    return this;
  }

   /**
   * Get patternConsumption
   * @return patternConsumption
  **/
  @ApiModelProperty(value = "")
  public List<String> getPatternConsumption() {
    return patternConsumption;
  }

  public void setPatternConsumption(List<String> patternConsumption) {
    this.patternConsumption = patternConsumption;
  }

  public PopulationGroup region(List<String> region) {
    this.region = region;
    return this;
  }

  public PopulationGroup addRegionItem(String regionItem) {
    if (this.region == null) {
      this.region = new ArrayList<String>();
    }
    this.region.add(regionItem);
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @ApiModelProperty(value = "")
  public List<String> getRegion() {
    return region;
  }

  public void setRegion(List<String> region) {
    this.region = region;
  }

  public PopulationGroup country(List<String> country) {
    this.country = country;
    return this;
  }

  public PopulationGroup addCountryItem(String countryItem) {
    if (this.country == null) {
      this.country = new ArrayList<String>();
    }
    this.country.add(countryItem);
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @ApiModelProperty(value = "")
  public List<String> getCountry() {
    return country;
  }

  public void setCountry(List<String> country) {
    this.country = country;
  }

  public PopulationGroup populationRiskFactor(List<String> populationRiskFactor) {
    this.populationRiskFactor = populationRiskFactor;
    return this;
  }

  public PopulationGroup addPopulationRiskFactorItem(String populationRiskFactorItem) {
    if (this.populationRiskFactor == null) {
      this.populationRiskFactor = new ArrayList<String>();
    }
    this.populationRiskFactor.add(populationRiskFactorItem);
    return this;
  }

   /**
   * Get populationRiskFactor
   * @return populationRiskFactor
  **/
  @ApiModelProperty(value = "")
  public List<String> getPopulationRiskFactor() {
    return populationRiskFactor;
  }

  public void setPopulationRiskFactor(List<String> populationRiskFactor) {
    this.populationRiskFactor = populationRiskFactor;
  }

  public PopulationGroup season(List<String> season) {
    this.season = season;
    return this;
  }

  public PopulationGroup addSeasonItem(String seasonItem) {
    if (this.season == null) {
      this.season = new ArrayList<String>();
    }
    this.season.add(seasonItem);
    return this;
  }

   /**
   * Get season
   * @return season
  **/
  @ApiModelProperty(value = "")
  public List<String> getSeason() {
    return season;
  }

  public void setSeason(List<String> season) {
    this.season = season;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PopulationGroup populationGroup = (PopulationGroup) o;
    return Objects.equals(this.name, populationGroup.name) &&
        Objects.equals(this.targetPopulation, populationGroup.targetPopulation) &&
        Objects.equals(this.populationSpan, populationGroup.populationSpan) &&
        Objects.equals(this.populationDescription, populationGroup.populationDescription) &&
        Objects.equals(this.populationAge, populationGroup.populationAge) &&
        Objects.equals(this.populationGender, populationGroup.populationGender) &&
        Objects.equals(this.bmi, populationGroup.bmi) &&
        Objects.equals(this.specialDietGroups, populationGroup.specialDietGroups) &&
        Objects.equals(this.patternConsumption, populationGroup.patternConsumption) &&
        Objects.equals(this.region, populationGroup.region) &&
        Objects.equals(this.country, populationGroup.country) &&
        Objects.equals(this.populationRiskFactor, populationGroup.populationRiskFactor) &&
        Objects.equals(this.season, populationGroup.season);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, targetPopulation, populationSpan, populationDescription, populationAge, populationGender, bmi, specialDietGroups, patternConsumption, region, country, populationRiskFactor, season);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PopulationGroup {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    targetPopulation: ").append(toIndentedString(targetPopulation)).append("\n");
    sb.append("    populationSpan: ").append(toIndentedString(populationSpan)).append("\n");
    sb.append("    populationDescription: ").append(toIndentedString(populationDescription)).append("\n");
    sb.append("    populationAge: ").append(toIndentedString(populationAge)).append("\n");
    sb.append("    populationGender: ").append(toIndentedString(populationGender)).append("\n");
    sb.append("    bmi: ").append(toIndentedString(bmi)).append("\n");
    sb.append("    specialDietGroups: ").append(toIndentedString(specialDietGroups)).append("\n");
    sb.append("    patternConsumption: ").append(toIndentedString(patternConsumption)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    populationRiskFactor: ").append(toIndentedString(populationRiskFactor)).append("\n");
    sb.append("    season: ").append(toIndentedString(season)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

